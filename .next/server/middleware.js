/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["middleware"],{

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:async_hooks");

/***/ }),

/***/ "buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ "?599d":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CTihomir%5CDesktop%5Cvachev%5CVachev-NextjsTest%5Cmiddleware.ts&page=%2Fmiddleware&rootDir=C%3A%5CUsers%5CTihomir%5CDesktop%5Cvachev%5CVachev-NextjsTest&matchers=&preferredRegion=&middlewareConfig=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CTihomir%5CDesktop%5Cvachev%5CVachev-NextjsTest%5Cmiddleware.ts&page=%2Fmiddleware&rootDir=C%3A%5CUsers%5CTihomir%5CDesktop%5Cvachev%5CVachev-NextjsTest&matchers=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nHandler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/globals */ \"(middleware)/./node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var next_dist_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/web/adapter */ \"(middleware)/./node_modules/next/dist/esm/server/web/adapter.js\");\n/* harmony import */ var _middleware_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./middleware.ts */ \"(middleware)/./middleware.ts\");\n\n\n// Import the userland code.\n\nconst mod = {\n    ..._middleware_ts__WEBPACK_IMPORTED_MODULE_2__\n};\nconst handler = mod.middleware || mod.default;\nconst page = \"/middleware\";\nif (typeof handler !== \"function\") {\n    throw new Error(`The Middleware \"${page}\" must export a \\`middleware\\` or a \\`default\\` function`);\n}\nfunction nHandler(opts) {\n    return (0,next_dist_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__.adapter)({\n        ...opts,\n        page,\n        handler\n    });\n}\n\n//# sourceMappingURL=middleware.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1taWRkbGV3YXJlLWxvYWRlci5qcz9hYnNvbHV0ZVBhZ2VQYXRoPUMlM0ElNUNVc2VycyU1Q1RpaG9taXIlNUNEZXNrdG9wJTVDdmFjaGV2JTVDVmFjaGV2LU5leHRqc1Rlc3QlNUNtaWRkbGV3YXJlLnRzJnBhZ2U9JTJGbWlkZGxld2FyZSZyb290RGlyPUMlM0ElNUNVc2VycyU1Q1RpaG9taXIlNUNEZXNrdG9wJTVDdmFjaGV2JTVDVmFjaGV2LU5leHRqc1Rlc3QmbWF0Y2hlcnM9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBc0M7QUFDaUI7QUFDdkQ7QUFDd0M7QUFDeEM7QUFDQSxPQUFPLDJDQUFJO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsS0FBSztBQUM1QztBQUNlO0FBQ2YsV0FBVyxxRUFBTztBQUNsQjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz9lZWE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIm5leHQvZGlzdC9zZXJ2ZXIvd2ViL2dsb2JhbHNcIjtcbmltcG9ydCB7IGFkYXB0ZXIgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci93ZWIvYWRhcHRlclwiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgX21vZCBmcm9tIFwiLi9taWRkbGV3YXJlLnRzXCI7XG5jb25zdCBtb2QgPSB7XG4gICAgLi4uX21vZFxufTtcbmNvbnN0IGhhbmRsZXIgPSBtb2QubWlkZGxld2FyZSB8fCBtb2QuZGVmYXVsdDtcbmNvbnN0IHBhZ2UgPSBcIi9taWRkbGV3YXJlXCI7XG5pZiAodHlwZW9mIGhhbmRsZXIgIT09IFwiZnVuY3Rpb25cIikge1xuICAgIHRocm93IG5ldyBFcnJvcihgVGhlIE1pZGRsZXdhcmUgXCIke3BhZ2V9XCIgbXVzdCBleHBvcnQgYSBcXGBtaWRkbGV3YXJlXFxgIG9yIGEgXFxgZGVmYXVsdFxcYCBmdW5jdGlvbmApO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbkhhbmRsZXIob3B0cykge1xuICAgIHJldHVybiBhZGFwdGVyKHtcbiAgICAgICAgLi4ub3B0cyxcbiAgICAgICAgcGFnZSxcbiAgICAgICAgaGFuZGxlclxuICAgIH0pO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1taWRkbGV3YXJlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CTihomir%5CDesktop%5Cvachev%5CVachev-NextjsTest%5Cmiddleware.ts&page=%2Fmiddleware&rootDir=C%3A%5CUsers%5CTihomir%5CDesktop%5Cvachev%5CVachev-NextjsTest&matchers=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/index.js\");\n\nconst isProtectedRoute = (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_0__.createRouteMatcher)([\n    \"/dashboard(.*)\",\n    \"/forum(.*)\"\n]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_0__.clerkMiddleware)((auth, req)=>{\n    if (isProtectedRoute(req)) auth().protect();\n}));\nconst config = {\n    matcher: [\n        \"/((?!.*\\\\..*|_next).*)\",\n        \"/\",\n        \"/(api|trpc)(.*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFHNkI7QUFFN0IsTUFBTUUsbUJBQW1CRCx3RUFBa0JBLENBQUM7SUFDMUM7SUFDQTtDQUNEO0FBRUQsaUVBQWVELHFFQUFlQSxDQUFDLENBQUNHLE1BQU1DO0lBQ3BDLElBQUlGLGlCQUFpQkUsTUFBTUQsT0FBT0UsT0FBTztBQUMzQyxFQUFFO0FBRUssTUFBTUMsU0FBUztJQUNwQkMsU0FBUztRQUFDO1FBQTBCO1FBQUs7S0FBaUI7QUFDNUQsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9taWRkbGV3YXJlLnRzPzQyMmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBjbGVya01pZGRsZXdhcmUsXHJcbiAgY3JlYXRlUm91dGVNYXRjaGVyXHJcbn0gZnJvbSAnQGNsZXJrL25leHRqcy9zZXJ2ZXInO1xyXG5cclxuY29uc3QgaXNQcm90ZWN0ZWRSb3V0ZSA9IGNyZWF0ZVJvdXRlTWF0Y2hlcihbXHJcbiAgJy9kYXNoYm9hcmQoLiopJyxcclxuICAnL2ZvcnVtKC4qKScsXHJcbl0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xlcmtNaWRkbGV3YXJlKChhdXRoLCByZXEpID0+IHtcclxuICBpZiAoaXNQcm90ZWN0ZWRSb3V0ZShyZXEpKSBhdXRoKCkucHJvdGVjdCgpO1xyXG59KTtcclxuXHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgbWF0Y2hlcjogWycvKCg/IS4qXFxcXC4uKnxfbmV4dCkuKiknLCAnLycsICcvKGFwaXx0cnBjKSguKiknXSxcclxufTsiXSwibmFtZXMiOlsiY2xlcmtNaWRkbGV3YXJlIiwiY3JlYXRlUm91dGVNYXRjaGVyIiwiaXNQcm90ZWN0ZWRSb3V0ZSIsImF1dGgiLCJyZXEiLCJwcm90ZWN0IiwiY29uZmlnIiwibWF0Y2hlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   initialState: () => (/* binding */ initialState)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation */ \"(middleware)/./node_modules/next/dist/esm/api/navigation.js\");\n/* harmony import */ var _server_buildClerkProps__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../server/buildClerkProps */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js\");\n/* harmony import */ var _server_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../server/constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n/* harmony import */ var _server_createGetAuth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../server/createGetAuth */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js\");\n/* harmony import */ var _server_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../server/errors */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errors.js\");\n/* harmony import */ var _server_protect__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../server/protect */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/protect.js\");\n/* harmony import */ var _server_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../server/utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/utils.js\");\n\n\n\n\n\n\n\n\n\nconst auth = () => {\n  const request = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.buildRequestLike)();\n  const authObject = (0,_server_createGetAuth__WEBPACK_IMPORTED_MODULE_3__.createGetAuth)({\n    debugLoggerName: \"auth()\",\n    noAuthStatusMessage: (0,_server_errors__WEBPACK_IMPORTED_MODULE_4__.authAuthHeaderMissing)()\n  })(request);\n  const clerkUrl = (0,_server_utils__WEBPACK_IMPORTED_MODULE_5__.getAuthKeyFromRequest)(request, \"ClerkUrl\");\n  const redirectToSignIn = (opts = {}) => {\n    return (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.createRedirect)({\n      redirectAdapter: next_navigation__WEBPACK_IMPORTED_MODULE_1__.redirect,\n      baseUrl: (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.createClerkRequest)(request).clerkUrl.toString(),\n      // TODO: Support runtime-value configuration of these options\n      // via setting and reading headers from clerkMiddleware\n      publishableKey: _server_constants__WEBPACK_IMPORTED_MODULE_6__.PUBLISHABLE_KEY,\n      signInUrl: _server_constants__WEBPACK_IMPORTED_MODULE_6__.SIGN_IN_URL,\n      signUpUrl: _server_constants__WEBPACK_IMPORTED_MODULE_6__.SIGN_UP_URL\n    }).redirectToSignIn({\n      returnBackUrl: opts.returnBackUrl === null ? \"\" : opts.returnBackUrl || (clerkUrl == null ? void 0 : clerkUrl.toString())\n    });\n  };\n  const protect = (0,_server_protect__WEBPACK_IMPORTED_MODULE_7__.createProtect)({\n    request,\n    authObject,\n    redirectToSignIn,\n    notFound: next_navigation__WEBPACK_IMPORTED_MODULE_1__.notFound,\n    redirect: next_navigation__WEBPACK_IMPORTED_MODULE_1__.redirect\n  });\n  return Object.assign(authObject, {\n    protect,\n    redirectToSignIn\n  });\n};\nconst initialState = () => {\n  return (0,_server_buildClerkProps__WEBPACK_IMPORTED_MODULE_8__.buildClerkProps)((0,_utils__WEBPACK_IMPORTED_MODULE_2__.buildRequestLike)());\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vYXBwLXJvdXRlci9zZXJ2ZXIvYXV0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUE2RTtBQUN4QjtBQUNVO0FBQ29CO0FBQ3hCO0FBQ0M7QUFDUDtBQUNNO0FBQ2hCO0FBQzNDLE1BQU1hLElBQUksR0FBR0EsQ0FBQSxLQUFNO0VBQ2pCLE1BQU1DLE9BQU8sR0FBR0Ysd0RBQWdCLENBQUMsQ0FBQztFQUNsQyxNQUFNRyxVQUFVLEdBQUdQLG9FQUFhLENBQUM7SUFDL0JRLGVBQWUsRUFBRSxRQUFRO0lBQ3pCQyxtQkFBbUIsRUFBRVIscUVBQXFCLENBQUM7RUFDN0MsQ0FBQyxDQUFDLENBQUNLLE9BQU8sQ0FBQztFQUNYLE1BQU1JLFFBQVEsR0FBR1Asb0VBQXFCLENBQUNHLE9BQU8sRUFBRSxVQUFVLENBQUM7RUFDM0QsTUFBTUssZ0JBQWdCLEdBQUdBLENBQUNDLElBQUksR0FBRyxDQUFDLENBQUMsS0FBSztJQUN0QyxPQUFPbkIsdUVBQWMsQ0FBQztNQUNwQm9CLGVBQWUsRUFBRWxCLHFEQUFRO01BQ3pCbUIsT0FBTyxFQUFFdEIsMkVBQWtCLENBQUNjLE9BQU8sQ0FBQyxDQUFDSSxRQUFRLENBQUNLLFFBQVEsQ0FBQyxDQUFDO01BQ3hEO01BQ0E7TUFDQUMsY0FBYyxFQUFFbkIsOERBQWU7TUFDL0JvQixTQUFTLEVBQUVuQiwwREFBVztNQUN0Qm9CLFNBQVMsRUFBRW5CLDBEQUFXQTtJQUN4QixDQUFDLENBQUMsQ0FBQ1ksZ0JBQWdCLENBQUM7TUFDbEJRLGFBQWEsRUFBRVAsSUFBSSxDQUFDTyxhQUFhLEtBQUssSUFBSSxHQUFHLEVBQUUsR0FBR1AsSUFBSSxDQUFDTyxhQUFhLEtBQUtULFFBQVEsSUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUdBLFFBQVEsQ0FBQ0ssUUFBUSxDQUFDLENBQUM7SUFDMUgsQ0FBQyxDQUFDO0VBQ0osQ0FBQztFQUNELE1BQU1LLE9BQU8sR0FBR2xCLDhEQUFhLENBQUM7SUFBRUksT0FBTztJQUFFQyxVQUFVO0lBQUVJLGdCQUFnQjtJQUFFakIsUUFBUTtJQUFFQyxRQUFRQSx1REFBQUE7RUFBQyxDQUFDLENBQUM7RUFDNUYsT0FBTzBCLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDZixVQUFVLEVBQUU7SUFBRWEsT0FBTztJQUFFVDtFQUFpQixDQUFDLENBQUM7QUFDakUsQ0FBQztBQUNELE1BQU1ZLFlBQVksR0FBR0EsQ0FBQSxLQUFNO0VBQ3pCLE9BQU8zQix3RUFBZSxDQUFDUSx3REFBZ0IsQ0FBQyxDQUFDLENBQUM7QUFDNUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9hcHAtcm91dGVyL3NlcnZlci9hdXRoLmpzP2E2OGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xlcmtSZXF1ZXN0LCBjcmVhdGVSZWRpcmVjdCB9IGZyb20gXCJAY2xlcmsvYmFja2VuZC9pbnRlcm5hbFwiO1xuaW1wb3J0IHsgbm90Rm91bmQsIHJlZGlyZWN0IH0gZnJvbSBcIm5leHQvbmF2aWdhdGlvblwiO1xuaW1wb3J0IHsgYnVpbGRDbGVya1Byb3BzIH0gZnJvbSBcIi4uLy4uL3NlcnZlci9idWlsZENsZXJrUHJvcHNcIjtcbmltcG9ydCB7IFBVQkxJU0hBQkxFX0tFWSwgU0lHTl9JTl9VUkwsIFNJR05fVVBfVVJMIH0gZnJvbSBcIi4uLy4uL3NlcnZlci9jb25zdGFudHNcIjtcbmltcG9ydCB7IGNyZWF0ZUdldEF1dGggfSBmcm9tIFwiLi4vLi4vc2VydmVyL2NyZWF0ZUdldEF1dGhcIjtcbmltcG9ydCB7IGF1dGhBdXRoSGVhZGVyTWlzc2luZyB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvZXJyb3JzXCI7XG5pbXBvcnQgeyBjcmVhdGVQcm90ZWN0IH0gZnJvbSBcIi4uLy4uL3NlcnZlci9wcm90ZWN0XCI7XG5pbXBvcnQgeyBnZXRBdXRoS2V5RnJvbVJlcXVlc3QgfSBmcm9tIFwiLi4vLi4vc2VydmVyL3V0aWxzXCI7XG5pbXBvcnQgeyBidWlsZFJlcXVlc3RMaWtlIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmNvbnN0IGF1dGggPSAoKSA9PiB7XG4gIGNvbnN0IHJlcXVlc3QgPSBidWlsZFJlcXVlc3RMaWtlKCk7XG4gIGNvbnN0IGF1dGhPYmplY3QgPSBjcmVhdGVHZXRBdXRoKHtcbiAgICBkZWJ1Z0xvZ2dlck5hbWU6IFwiYXV0aCgpXCIsXG4gICAgbm9BdXRoU3RhdHVzTWVzc2FnZTogYXV0aEF1dGhIZWFkZXJNaXNzaW5nKClcbiAgfSkocmVxdWVzdCk7XG4gIGNvbnN0IGNsZXJrVXJsID0gZ2V0QXV0aEtleUZyb21SZXF1ZXN0KHJlcXVlc3QsIFwiQ2xlcmtVcmxcIik7XG4gIGNvbnN0IHJlZGlyZWN0VG9TaWduSW4gPSAob3B0cyA9IHt9KSA9PiB7XG4gICAgcmV0dXJuIGNyZWF0ZVJlZGlyZWN0KHtcbiAgICAgIHJlZGlyZWN0QWRhcHRlcjogcmVkaXJlY3QsXG4gICAgICBiYXNlVXJsOiBjcmVhdGVDbGVya1JlcXVlc3QocmVxdWVzdCkuY2xlcmtVcmwudG9TdHJpbmcoKSxcbiAgICAgIC8vIFRPRE86IFN1cHBvcnQgcnVudGltZS12YWx1ZSBjb25maWd1cmF0aW9uIG9mIHRoZXNlIG9wdGlvbnNcbiAgICAgIC8vIHZpYSBzZXR0aW5nIGFuZCByZWFkaW5nIGhlYWRlcnMgZnJvbSBjbGVya01pZGRsZXdhcmVcbiAgICAgIHB1Ymxpc2hhYmxlS2V5OiBQVUJMSVNIQUJMRV9LRVksXG4gICAgICBzaWduSW5Vcmw6IFNJR05fSU5fVVJMLFxuICAgICAgc2lnblVwVXJsOiBTSUdOX1VQX1VSTFxuICAgIH0pLnJlZGlyZWN0VG9TaWduSW4oe1xuICAgICAgcmV0dXJuQmFja1VybDogb3B0cy5yZXR1cm5CYWNrVXJsID09PSBudWxsID8gXCJcIiA6IG9wdHMucmV0dXJuQmFja1VybCB8fCAoY2xlcmtVcmwgPT0gbnVsbCA/IHZvaWQgMCA6IGNsZXJrVXJsLnRvU3RyaW5nKCkpXG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IHByb3RlY3QgPSBjcmVhdGVQcm90ZWN0KHsgcmVxdWVzdCwgYXV0aE9iamVjdCwgcmVkaXJlY3RUb1NpZ25Jbiwgbm90Rm91bmQsIHJlZGlyZWN0IH0pO1xuICByZXR1cm4gT2JqZWN0LmFzc2lnbihhdXRoT2JqZWN0LCB7IHByb3RlY3QsIHJlZGlyZWN0VG9TaWduSW4gfSk7XG59O1xuY29uc3QgaW5pdGlhbFN0YXRlID0gKCkgPT4ge1xuICByZXR1cm4gYnVpbGRDbGVya1Byb3BzKGJ1aWxkUmVxdWVzdExpa2UoKSk7XG59O1xuZXhwb3J0IHtcbiAgYXV0aCxcbiAgaW5pdGlhbFN0YXRlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aC5qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlQ2xlcmtSZXF1ZXN0IiwiY3JlYXRlUmVkaXJlY3QiLCJub3RGb3VuZCIsInJlZGlyZWN0IiwiYnVpbGRDbGVya1Byb3BzIiwiUFVCTElTSEFCTEVfS0VZIiwiU0lHTl9JTl9VUkwiLCJTSUdOX1VQX1VSTCIsImNyZWF0ZUdldEF1dGgiLCJhdXRoQXV0aEhlYWRlck1pc3NpbmciLCJjcmVhdGVQcm90ZWN0IiwiZ2V0QXV0aEtleUZyb21SZXF1ZXN0IiwiYnVpbGRSZXF1ZXN0TGlrZSIsImF1dGgiLCJyZXF1ZXN0IiwiYXV0aE9iamVjdCIsImRlYnVnTG9nZ2VyTmFtZSIsIm5vQXV0aFN0YXR1c01lc3NhZ2UiLCJjbGVya1VybCIsInJlZGlyZWN0VG9TaWduSW4iLCJvcHRzIiwicmVkaXJlY3RBZGFwdGVyIiwiYmFzZVVybCIsInRvU3RyaW5nIiwicHVibGlzaGFibGVLZXkiLCJzaWduSW5VcmwiLCJzaWduVXBVcmwiLCJyZXR1cm5CYWNrVXJsIiwicHJvdGVjdCIsIk9iamVjdCIsImFzc2lnbiIsImluaXRpYWxTdGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   currentUser: () => (/* binding */ currentUser)\n/* harmony export */ });\n/* harmony import */ var _server_clerkClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../server/clerkClient */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\");\n\n\nasync function currentUser() {\n  const {\n    userId\n  } = (0,_auth__WEBPACK_IMPORTED_MODULE_0__.auth)();\n  if (!userId) return null;\n  return _server_clerkClient__WEBPACK_IMPORTED_MODULE_1__.clerkClient.users.getUser(userId);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vYXBwLXJvdXRlci9zZXJ2ZXIvY3VycmVudFVzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVEO0FBQ3pCO0FBQzlCLGVBQWVFLFdBQVdBLENBQUEsRUFBRztFQUMzQixNQUFNO0lBQUVDO0VBQU8sQ0FBQyxHQUFHRiwyQ0FBSSxDQUFDLENBQUM7RUFDekIsSUFBSSxDQUFDRSxNQUFNLEVBQ1QsT0FBTyxJQUFJO0VBQ2IsT0FBT0gsNERBQVcsQ0FBQ0ksS0FBSyxDQUFDQyxPQUFPLENBQUNGLE1BQU0sQ0FBQztBQUMxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9hcHAtcm91dGVyL3NlcnZlci9jdXJyZW50VXNlci5qcz8yZjNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNsZXJrQ2xpZW50IH0gZnJvbSBcIi4uLy4uL3NlcnZlci9jbGVya0NsaWVudFwiO1xuaW1wb3J0IHsgYXV0aCB9IGZyb20gXCIuL2F1dGhcIjtcbmFzeW5jIGZ1bmN0aW9uIGN1cnJlbnRVc2VyKCkge1xuICBjb25zdCB7IHVzZXJJZCB9ID0gYXV0aCgpO1xuICBpZiAoIXVzZXJJZClcbiAgICByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIGNsZXJrQ2xpZW50LnVzZXJzLmdldFVzZXIodXNlcklkKTtcbn1cbmV4cG9ydCB7XG4gIGN1cnJlbnRVc2VyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3VycmVudFVzZXIuanMubWFwIl0sIm5hbWVzIjpbImNsZXJrQ2xpZW50IiwiYXV0aCIsImN1cnJlbnRVc2VyIiwidXNlcklkIiwidXNlcnMiLCJnZXRVc2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/utils.js":
/*!************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/app-router/server/utils.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildRequestLike: () => (/* binding */ buildRequestLike)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\nconst buildRequestLike = () => {\n  try {\n    const {\n      headers\n    } = __webpack_require__(/*! next/headers */ \"(middleware)/./node_modules/next/dist/esm/api/headers.js\");\n    return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextRequest(\"https://placeholder.com\", {\n      headers: headers()\n    });\n  } catch (e) {\n    if (e && \"message\" in e && typeof e.message === \"string\" && (e.message.toLowerCase().includes(\"Dynamic server usage\".toLowerCase()) || e.message.toLowerCase().includes(\"This page needs to bail out of prerendering\".toLowerCase()))) {\n      throw e;\n    }\n    throw new Error(`Clerk: auth() and currentUser() are only supported in App Router (/app directory).\nIf you're using /pages, try getAuth() instead.\nOriginal error: ${e}`);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vYXBwLXJvdXRlci9zZXJ2ZXIvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFDMUMsTUFBTUMsZ0JBQWdCLEdBQUdBLENBQUEsS0FBTTtFQUM3QixJQUFJO0lBQ0YsTUFBTTtNQUFFQztJQUFRLENBQUMsR0FBR0MsbUJBQU8sQ0FBQyw4RUFBYyxDQUFDO0lBQzNDLE9BQU8sSUFBSUgsb0RBQVcsQ0FBQyx5QkFBeUIsRUFBRTtNQUFFRSxPQUFPLEVBQUVBLE9BQU8sQ0FBQztJQUFFLENBQUMsQ0FBQztFQUMzRSxDQUFDLENBQUMsT0FBT0UsQ0FBQyxFQUFFO0lBQ1YsSUFBSUEsQ0FBQyxJQUFJLFNBQVMsSUFBSUEsQ0FBQyxJQUFJLE9BQU9BLENBQUMsQ0FBQ0MsT0FBTyxLQUFLLFFBQVEsS0FBS0QsQ0FBQyxDQUFDQyxPQUFPLENBQUNDLFdBQVcsQ0FBQyxDQUFDLENBQUNDLFFBQVEsQ0FBQyxzQkFBc0IsQ0FBQ0QsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJRixDQUFDLENBQUNDLE9BQU8sQ0FBQ0MsV0FBVyxDQUFDLENBQUMsQ0FBQ0MsUUFBUSxDQUFDLDZDQUE2QyxDQUFDRCxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtNQUNyTyxNQUFNRixDQUFDO0lBQ1Q7SUFDQSxNQUFNLElBQUlJLEtBQUssQ0FDWjtBQUNQO0FBQ0Esa0JBQWtCSixDQUFFLEVBQ2hCLENBQUM7RUFDSDtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vYXBwLXJvdXRlci9zZXJ2ZXIvdXRpbHMuanM/NGFlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuY29uc3QgYnVpbGRSZXF1ZXN0TGlrZSA9ICgpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGhlYWRlcnMgfSA9IHJlcXVpcmUoXCJuZXh0L2hlYWRlcnNcIik7XG4gICAgcmV0dXJuIG5ldyBOZXh0UmVxdWVzdChcImh0dHBzOi8vcGxhY2Vob2xkZXIuY29tXCIsIHsgaGVhZGVyczogaGVhZGVycygpIH0pO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgJiYgXCJtZXNzYWdlXCIgaW4gZSAmJiB0eXBlb2YgZS5tZXNzYWdlID09PSBcInN0cmluZ1wiICYmIChlLm1lc3NhZ2UudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhcIkR5bmFtaWMgc2VydmVyIHVzYWdlXCIudG9Mb3dlckNhc2UoKSkgfHwgZS5tZXNzYWdlLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoXCJUaGlzIHBhZ2UgbmVlZHMgdG8gYmFpbCBvdXQgb2YgcHJlcmVuZGVyaW5nXCIudG9Mb3dlckNhc2UoKSkpKSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgQ2xlcms6IGF1dGgoKSBhbmQgY3VycmVudFVzZXIoKSBhcmUgb25seSBzdXBwb3J0ZWQgaW4gQXBwIFJvdXRlciAoL2FwcCBkaXJlY3RvcnkpLlxuSWYgeW91J3JlIHVzaW5nIC9wYWdlcywgdHJ5IGdldEF1dGgoKSBpbnN0ZWFkLlxuT3JpZ2luYWwgZXJyb3I6ICR7ZX1gXG4gICAgKTtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIGJ1aWxkUmVxdWVzdExpa2Vcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiTmV4dFJlcXVlc3QiLCJidWlsZFJlcXVlc3RMaWtlIiwiaGVhZGVycyIsInJlcXVpcmUiLCJlIiwibWVzc2FnZSIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/constants.js":
/*!**********************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/constants.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constants: () => (/* binding */ constants)\n/* harmony export */ });\nconst Headers = {\n  NextRewrite: \"x-middleware-rewrite\",\n  NextResume: \"x-middleware-next\",\n  NextRedirect: \"Location\",\n  // Used by next to identify internal navigation for app router\n  NextUrl: \"next-url\",\n  NextAction: \"next-action\",\n  // Used by next to identify internal navigation for pages router\n  NextjsData: \"x-nextjs-data\"\n};\nconst constants = {\n  Headers\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxPQUFPLEdBQUc7RUFDZEMsV0FBVyxFQUFFLHNCQUFzQjtFQUNuQ0MsVUFBVSxFQUFFLG1CQUFtQjtFQUMvQkMsWUFBWSxFQUFFLFVBQVU7RUFDeEI7RUFDQUMsT0FBTyxFQUFFLFVBQVU7RUFDbkJDLFVBQVUsRUFBRSxhQUFhO0VBQ3pCO0VBQ0FDLFVBQVUsRUFBRTtBQUNkLENBQUM7QUFDRCxNQUFNQyxTQUFTLEdBQUc7RUFDaEJQO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9jb25zdGFudHMuanM/MDc2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBIZWFkZXJzID0ge1xuICBOZXh0UmV3cml0ZTogXCJ4LW1pZGRsZXdhcmUtcmV3cml0ZVwiLFxuICBOZXh0UmVzdW1lOiBcIngtbWlkZGxld2FyZS1uZXh0XCIsXG4gIE5leHRSZWRpcmVjdDogXCJMb2NhdGlvblwiLFxuICAvLyBVc2VkIGJ5IG5leHQgdG8gaWRlbnRpZnkgaW50ZXJuYWwgbmF2aWdhdGlvbiBmb3IgYXBwIHJvdXRlclxuICBOZXh0VXJsOiBcIm5leHQtdXJsXCIsXG4gIE5leHRBY3Rpb246IFwibmV4dC1hY3Rpb25cIixcbiAgLy8gVXNlZCBieSBuZXh0IHRvIGlkZW50aWZ5IGludGVybmFsIG5hdmlnYXRpb24gZm9yIHBhZ2VzIHJvdXRlclxuICBOZXh0anNEYXRhOiBcIngtbmV4dGpzLWRhdGFcIlxufTtcbmNvbnN0IGNvbnN0YW50cyA9IHtcbiAgSGVhZGVyc1xufTtcbmV4cG9ydCB7XG4gIGNvbnN0YW50c1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiSGVhZGVycyIsIk5leHRSZXdyaXRlIiwiTmV4dFJlc3VtZSIsIk5leHRSZWRpcmVjdCIsIk5leHRVcmwiLCJOZXh0QWN0aW9uIiwiTmV4dGpzRGF0YSIsImNvbnN0YW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/authMiddleware.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/authMiddleware.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_API_ROUTES: () => (/* binding */ DEFAULT_API_ROUTES),\n/* harmony export */   DEFAULT_CONFIG_MATCHER: () => (/* binding */ DEFAULT_CONFIG_MATCHER),\n/* harmony export */   DEFAULT_IGNORED_ROUTES: () => (/* binding */ DEFAULT_IGNORED_ROUTES),\n/* harmony export */   authMiddleware: () => (/* binding */ authMiddleware)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/keys */ \"(middleware)/./node_modules/@clerk/shared/dist/keys.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(middleware)/./node_modules/@clerk/shared/dist/telemetry.mjs\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/index.js\");\n/* harmony import */ var _utils_debugLogger__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/debugLogger */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js\");\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _clerkMiddleware__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./clerkMiddleware */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkMiddleware.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./errors */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errors.js\");\n/* harmony import */ var _errorThrower__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./errorThrower */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js\");\n/* harmony import */ var _routeMatcher__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./routeMatcher */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/routeMatcher.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst DEFAULT_CONFIG_MATCHER = [\"/((?!.+\\\\.[\\\\w]+$|_next).*)\", \"/\", \"/(api|trpc)(.*)\"];\nconst DEFAULT_IGNORED_ROUTES = [`/((?!api|trpc))(_next.*|.+\\\\.[\\\\w]+$)`];\nconst DEFAULT_API_ROUTES = [\"/api/(.*)\", \"/trpc/(.*)\"];\nconst authMiddleware = (...args) => {\n  const [params = {}] = args;\n  const publishableKey = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.assertKey)(params.publishableKey || _constants__WEBPACK_IMPORTED_MODULE_5__.PUBLISHABLE_KEY, () => _errorThrower__WEBPACK_IMPORTED_MODULE_6__.errorThrower.throwMissingPublishableKeyError());\n  const secretKey = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.assertKey)(params.secretKey || _constants__WEBPACK_IMPORTED_MODULE_5__.SECRET_KEY, () => _errorThrower__WEBPACK_IMPORTED_MODULE_6__.errorThrower.throwMissingPublishableKeyError());\n  const signInUrl = params.signInUrl || _constants__WEBPACK_IMPORTED_MODULE_5__.SIGN_IN_URL;\n  const signUpUrl = params.signUpUrl || _constants__WEBPACK_IMPORTED_MODULE_5__.SIGN_UP_URL;\n  const options = _objectSpread(_objectSpread({}, params), {}, {\n    publishableKey,\n    secretKey,\n    signInUrl,\n    signUpUrl\n  });\n  const isIgnoredRoute = (0,_routeMatcher__WEBPACK_IMPORTED_MODULE_7__.createRouteMatcher)(options.ignoredRoutes || DEFAULT_IGNORED_ROUTES);\n  const isPublicRoute = (0,_routeMatcher__WEBPACK_IMPORTED_MODULE_7__.createRouteMatcher)(withDefaultPublicRoutes(options.publicRoutes));\n  const isApiRoute = createApiRoutes(options.apiRoutes);\n  const defaultAfterAuth = createDefaultAfterAuth(isPublicRoute, isApiRoute, options);\n  _clerkClient__WEBPACK_IMPORTED_MODULE_8__.clerkClient.telemetry.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_2__.eventMethodCalled)(\"authMiddleware\", {\n    publicRoutes: Boolean(options.publicRoutes),\n    ignoredRoutes: Boolean(options.ignoredRoutes),\n    beforeAuth: Boolean(options.beforeAuth),\n    afterAuth: Boolean(options.afterAuth)\n  }));\n  return (0,_utils_debugLogger__WEBPACK_IMPORTED_MODULE_9__.withLogger)(\"authMiddleware\", logger => async (_req, evt) => {\n    if (options.debug) {\n      logger.enable();\n    }\n    const clerkRequest = (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.createClerkRequest)(_req);\n    const nextRequest = withNormalizedClerkUrl(clerkRequest, _req);\n    logger.debug(\"URL debug\", {\n      url: nextRequest.nextUrl.href,\n      method: nextRequest.method,\n      headers: (0,_utils__WEBPACK_IMPORTED_MODULE_10__.stringifyHeaders)(nextRequest.headers),\n      nextUrl: nextRequest.nextUrl.href,\n      clerkUrl: nextRequest.experimental_clerkUrl.href\n    });\n    logger.debug(\"Options debug\", _objectSpread(_objectSpread({}, options), {}, {\n      beforeAuth: !!options.beforeAuth,\n      afterAuth: !!options.afterAuth\n    }));\n    if (isIgnoredRoute(nextRequest)) {\n      logger.debug({\n        isIgnoredRoute: true\n      });\n      if ((0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_1__.isDevelopmentFromSecretKey)(options.secretKey) && !options.ignoredRoutes) {\n        console.warn((0,_errors__WEBPACK_IMPORTED_MODULE_11__.receivedRequestForIgnoredRoute)(nextRequest.experimental_clerkUrl.href, JSON.stringify(DEFAULT_CONFIG_MATCHER)));\n      }\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_10__.setHeader)(next_server__WEBPACK_IMPORTED_MODULE_3__.NextResponse.next(), _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, \"ignored-route\");\n    }\n    const beforeAuthRes = await (options.beforeAuth && options.beforeAuth(nextRequest, evt));\n    if (beforeAuthRes === false) {\n      logger.debug(\"Before auth returned false, skipping\");\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_10__.setHeader)(next_server__WEBPACK_IMPORTED_MODULE_3__.NextResponse.next(), _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, \"skip\");\n    } else if (beforeAuthRes && (0,_utils__WEBPACK_IMPORTED_MODULE_10__.isRedirect)(beforeAuthRes)) {\n      logger.debug(\"Before auth returned redirect, following redirect\");\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_10__.setHeader)(beforeAuthRes, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, \"before-auth-redirect\");\n    }\n    const requestState = await _clerkClient__WEBPACK_IMPORTED_MODULE_8__.clerkClient.authenticateRequest(clerkRequest, (0,_clerkMiddleware__WEBPACK_IMPORTED_MODULE_12__.createAuthenticateRequestOptions)(clerkRequest, options));\n    const locationHeader = requestState.headers.get(\"location\");\n    if (locationHeader) {\n      return new Response(null, {\n        status: 307,\n        headers: requestState.headers\n      });\n    }\n    if (requestState.status === _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.AuthStatus.Handshake) {\n      throw new Error(\"Clerk: unexpected handshake without redirect\");\n    }\n    const auth = Object.assign(requestState.toAuth(), {\n      isPublicRoute: isPublicRoute(nextRequest),\n      isApiRoute: isApiRoute(nextRequest)\n    });\n    logger.debug(() => ({\n      auth: JSON.stringify(auth),\n      debug: auth.debug()\n    }));\n    const afterAuthRes = await (options.afterAuth || defaultAfterAuth)(auth, nextRequest, evt);\n    const finalRes = (0,_utils__WEBPACK_IMPORTED_MODULE_10__.mergeResponses)(beforeAuthRes, afterAuthRes) || next_server__WEBPACK_IMPORTED_MODULE_3__.NextResponse.next();\n    logger.debug(() => ({\n      mergedHeaders: (0,_utils__WEBPACK_IMPORTED_MODULE_10__.stringifyHeaders)(finalRes.headers)\n    }));\n    if ((0,_utils__WEBPACK_IMPORTED_MODULE_10__.isRedirect)(finalRes)) {\n      logger.debug(\"Final response is redirect, following redirect\");\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_10__.serverRedirectWithAuth)(clerkRequest, finalRes, options);\n    }\n    if (options.debug) {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_4__.setRequestHeadersOnNextResponse)(finalRes, nextRequest, {\n        [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.EnableDebug]: \"true\"\n      });\n      logger.debug(`Added ${_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.EnableDebug} on request`);\n    }\n    const result = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decorateRequest)(clerkRequest, finalRes, requestState, secretKey) || next_server__WEBPACK_IMPORTED_MODULE_3__.NextResponse.next();\n    if (requestState.headers) {\n      requestState.headers.forEach((value, key) => {\n        result.headers.append(key, value);\n      });\n    }\n    return result;\n  });\n};\nconst createDefaultAfterAuth = (isPublicRoute, isApiRoute, options) => {\n  return (auth, req) => {\n    if (!auth.userId && !isPublicRoute(req)) {\n      if (isApiRoute(req)) {\n        informAboutProtectedRoute(req.experimental_clerkUrl.pathname, options, true);\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.apiEndpointUnauthorizedNextResponse)();\n      } else {\n        informAboutProtectedRoute(req.experimental_clerkUrl.pathname, options, false);\n      }\n      return (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.createRedirect)({\n        redirectAdapter: _utils__WEBPACK_IMPORTED_MODULE_4__.redirectAdapter,\n        signInUrl: options.signInUrl,\n        signUpUrl: options.signUpUrl,\n        publishableKey: options.publishableKey,\n        // We're setting baseUrl to '' here as we want to keep the legacy behavior of\n        // the redirectToSignIn, redirectToSignUp helpers in the backend package.\n        baseUrl: \"\"\n      }).redirectToSignIn({\n        returnBackUrl: req.experimental_clerkUrl.href\n      });\n    }\n    return next_server__WEBPACK_IMPORTED_MODULE_3__.NextResponse.next();\n  };\n};\nconst matchRoutesStartingWith = path => {\n  path = path.replace(/\\/$/, \"\");\n  return new RegExp(`^${path}(/.*)?$`);\n};\nconst withDefaultPublicRoutes = publicRoutes => {\n  if (typeof publicRoutes === \"function\") {\n    return publicRoutes;\n  }\n  const routes = [publicRoutes || \"\"].flat().filter(Boolean);\n  const signInUrl = process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || \"\";\n  if (signInUrl) {\n    routes.push(matchRoutesStartingWith(signInUrl));\n  }\n  const signUpUrl = process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || \"\";\n  if (signUpUrl) {\n    routes.push(matchRoutesStartingWith(signUpUrl));\n  }\n  return routes;\n};\nconst createApiRoutes = apiRoutes => {\n  if (apiRoutes) {\n    return (0,_routeMatcher__WEBPACK_IMPORTED_MODULE_7__.createRouteMatcher)(apiRoutes);\n  }\n  const isDefaultApiRoute = (0,_routeMatcher__WEBPACK_IMPORTED_MODULE_7__.createRouteMatcher)(DEFAULT_API_ROUTES);\n  return req => isDefaultApiRoute(req) || isRequestMethodIndicatingApiRoute(req) || isRequestContentTypeJson(req);\n};\nconst isRequestContentTypeJson = req => {\n  const requestContentType = req.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ContentType);\n  return requestContentType === _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.ContentTypes.Json;\n};\nconst isRequestMethodIndicatingApiRoute = req => {\n  const requestMethod = req.method.toLowerCase();\n  return ![\"get\", \"head\", \"options\"].includes(requestMethod);\n};\nconst withNormalizedClerkUrl = (clerkRequest, nextRequest) => {\n  const res = nextRequest.nextUrl.clone();\n  res.port = clerkRequest.clerkUrl.port;\n  res.protocol = clerkRequest.clerkUrl.protocol;\n  res.host = clerkRequest.clerkUrl.host;\n  return Object.assign(nextRequest, {\n    experimental_clerkUrl: res\n  });\n};\nconst informAboutProtectedRoute = (path, options, isApiRoute) => {\n  if (options.debug || (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_1__.isDevelopmentFromSecretKey)(options.secretKey)) {\n    console.warn((0,_errors__WEBPACK_IMPORTED_MODULE_11__.informAboutProtectedRouteInfo)(path, !!options.publicRoutes, !!options.ignoredRoutes, isApiRoute, DEFAULT_IGNORED_ROUTES));\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/authMiddleware.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildClerkProps: () => (/* binding */ buildClerkProps)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _clerk_backend_jwt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/backend/jwt */ \"(middleware)/./node_modules/@clerk/backend/dist/jwt/index.mjs\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\nconst buildClerkProps = (req, initState = {}) => {\n  const authStatus = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getAuthKeyFromRequest)(req, \"AuthStatus\");\n  const authToken = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getAuthKeyFromRequest)(req, \"AuthToken\");\n  const authMessage = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getAuthKeyFromRequest)(req, \"AuthMessage\");\n  const authReason = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getAuthKeyFromRequest)(req, \"AuthReason\");\n  const options = {\n    secretKey: _constants__WEBPACK_IMPORTED_MODULE_3__.SECRET_KEY,\n    apiUrl: _constants__WEBPACK_IMPORTED_MODULE_3__.API_URL,\n    apiVersion: _constants__WEBPACK_IMPORTED_MODULE_3__.API_VERSION,\n    authStatus,\n    authMessage,\n    authReason\n  };\n  let authObject;\n  if (!authStatus || authStatus !== _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.AuthStatus.SignedIn) {\n    authObject = (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.signedOutAuthObject)(options);\n  } else {\n    const jwt = (0,_clerk_backend_jwt__WEBPACK_IMPORTED_MODULE_1__.decodeJwt)(authToken);\n    authObject = (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.signedInAuthObject)(_objectSpread(_objectSpread({}, options), {}, {\n      sessionToken: jwt.raw.text\n    }), jwt.payload);\n  }\n  const sanitizedAuthObject = (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.makeAuthObjectSerializable)((0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.stripPrivateDataFromObject)(_objectSpread(_objectSpread({}, authObject), initState)));\n  return (0,_utils__WEBPACK_IMPORTED_MODULE_2__.injectSSRStateIntoObject)({}, sanitizedAuthObject);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2J1aWxkQ2xlcmtQcm9wcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBTWlDO0FBQ2M7QUFDZ0I7QUFDVztBQUMxRSxNQUFNVyxlQUFlLEdBQUdBLENBQUNDLEdBQUcsRUFBRUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxLQUFLO0VBQy9DLE1BQU1DLFVBQVUsR0FBR0wsNkRBQXFCLENBQUNHLEdBQUcsRUFBRSxZQUFZLENBQUM7RUFDM0QsTUFBTUcsU0FBUyxHQUFHTiw2REFBcUIsQ0FBQ0csR0FBRyxFQUFFLFdBQVcsQ0FBQztFQUN6RCxNQUFNSSxXQUFXLEdBQUdQLDZEQUFxQixDQUFDRyxHQUFHLEVBQUUsYUFBYSxDQUFDO0VBQzdELE1BQU1LLFVBQVUsR0FBR1IsNkRBQXFCLENBQUNHLEdBQUcsRUFBRSxZQUFZLENBQUM7RUFDM0QsTUFBTU0sT0FBTyxHQUFHO0lBQ2RDLFNBQVMsRUFBRVgsa0RBQVU7SUFDckJZLE1BQU0sRUFBRWQsK0NBQU87SUFDZmUsVUFBVSxFQUFFZCxtREFBVztJQUN2Qk8sVUFBVTtJQUNWRSxXQUFXO0lBQ1hDO0VBQ0YsQ0FBQztFQUNELElBQUlLLFVBQVU7RUFDZCxJQUFJLENBQUNSLFVBQVUsSUFBSUEsVUFBVSxLQUFLZCwrREFBVSxDQUFDdUIsUUFBUSxFQUFFO0lBQ3JERCxVQUFVLEdBQUduQiw0RUFBbUIsQ0FBQ2UsT0FBTyxDQUFDO0VBQzNDLENBQUMsTUFBTTtJQUNMLE1BQU1NLEdBQUcsR0FBR25CLDZEQUFTLENBQUNVLFNBQVMsQ0FBQztJQUNoQ08sVUFBVSxHQUFHcEIsMkVBQWtCLENBQUF1QixhQUFBLENBQUFBLGFBQUEsS0FBTVAsT0FBTztNQUFFUSxZQUFZLEVBQUVGLEdBQUcsQ0FBQ0csR0FBRyxDQUFDQztJQUFJLElBQUlKLEdBQUcsQ0FBQ0ssT0FBTyxDQUFDO0VBQzFGO0VBQ0EsTUFBTUMsbUJBQW1CLEdBQUc3QixtRkFBMEIsQ0FBQ0csbUZBQTBCLENBQUFxQixhQUFBLENBQUFBLGFBQUEsS0FBTUgsVUFBVSxHQUFLVCxTQUFTLENBQUUsQ0FBQyxDQUFDO0VBQ25ILE9BQU9ILGdFQUF3QixDQUFDLENBQUMsQ0FBQyxFQUFFb0IsbUJBQW1CLENBQUM7QUFDMUQsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvYnVpbGRDbGVya1Byb3BzLmpzPzY4ZjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQXV0aFN0YXR1cyxcbiAgbWFrZUF1dGhPYmplY3RTZXJpYWxpemFibGUsXG4gIHNpZ25lZEluQXV0aE9iamVjdCxcbiAgc2lnbmVkT3V0QXV0aE9iamVjdCxcbiAgc3RyaXBQcml2YXRlRGF0YUZyb21PYmplY3Rcbn0gZnJvbSBcIkBjbGVyay9iYWNrZW5kL2ludGVybmFsXCI7XG5pbXBvcnQgeyBkZWNvZGVKd3QgfSBmcm9tIFwiQGNsZXJrL2JhY2tlbmQvand0XCI7XG5pbXBvcnQgeyBBUElfVVJMLCBBUElfVkVSU0lPTiwgU0VDUkVUX0tFWSB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgZ2V0QXV0aEtleUZyb21SZXF1ZXN0LCBpbmplY3RTU1JTdGF0ZUludG9PYmplY3QgfSBmcm9tIFwiLi91dGlsc1wiO1xuY29uc3QgYnVpbGRDbGVya1Byb3BzID0gKHJlcSwgaW5pdFN0YXRlID0ge30pID0+IHtcbiAgY29uc3QgYXV0aFN0YXR1cyA9IGdldEF1dGhLZXlGcm9tUmVxdWVzdChyZXEsIFwiQXV0aFN0YXR1c1wiKTtcbiAgY29uc3QgYXV0aFRva2VuID0gZ2V0QXV0aEtleUZyb21SZXF1ZXN0KHJlcSwgXCJBdXRoVG9rZW5cIik7XG4gIGNvbnN0IGF1dGhNZXNzYWdlID0gZ2V0QXV0aEtleUZyb21SZXF1ZXN0KHJlcSwgXCJBdXRoTWVzc2FnZVwiKTtcbiAgY29uc3QgYXV0aFJlYXNvbiA9IGdldEF1dGhLZXlGcm9tUmVxdWVzdChyZXEsIFwiQXV0aFJlYXNvblwiKTtcbiAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICBzZWNyZXRLZXk6IFNFQ1JFVF9LRVksXG4gICAgYXBpVXJsOiBBUElfVVJMLFxuICAgIGFwaVZlcnNpb246IEFQSV9WRVJTSU9OLFxuICAgIGF1dGhTdGF0dXMsXG4gICAgYXV0aE1lc3NhZ2UsXG4gICAgYXV0aFJlYXNvblxuICB9O1xuICBsZXQgYXV0aE9iamVjdDtcbiAgaWYgKCFhdXRoU3RhdHVzIHx8IGF1dGhTdGF0dXMgIT09IEF1dGhTdGF0dXMuU2lnbmVkSW4pIHtcbiAgICBhdXRoT2JqZWN0ID0gc2lnbmVkT3V0QXV0aE9iamVjdChvcHRpb25zKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBqd3QgPSBkZWNvZGVKd3QoYXV0aFRva2VuKTtcbiAgICBhdXRoT2JqZWN0ID0gc2lnbmVkSW5BdXRoT2JqZWN0KHsgLi4ub3B0aW9ucywgc2Vzc2lvblRva2VuOiBqd3QucmF3LnRleHQgfSwgand0LnBheWxvYWQpO1xuICB9XG4gIGNvbnN0IHNhbml0aXplZEF1dGhPYmplY3QgPSBtYWtlQXV0aE9iamVjdFNlcmlhbGl6YWJsZShzdHJpcFByaXZhdGVEYXRhRnJvbU9iamVjdCh7IC4uLmF1dGhPYmplY3QsIC4uLmluaXRTdGF0ZSB9KSk7XG4gIHJldHVybiBpbmplY3RTU1JTdGF0ZUludG9PYmplY3Qoe30sIHNhbml0aXplZEF1dGhPYmplY3QpO1xufTtcbmV4cG9ydCB7XG4gIGJ1aWxkQ2xlcmtQcm9wc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ1aWxkQ2xlcmtQcm9wcy5qcy5tYXAiXSwibmFtZXMiOlsiQXV0aFN0YXR1cyIsIm1ha2VBdXRoT2JqZWN0U2VyaWFsaXphYmxlIiwic2lnbmVkSW5BdXRoT2JqZWN0Iiwic2lnbmVkT3V0QXV0aE9iamVjdCIsInN0cmlwUHJpdmF0ZURhdGFGcm9tT2JqZWN0IiwiZGVjb2RlSnd0IiwiQVBJX1VSTCIsIkFQSV9WRVJTSU9OIiwiU0VDUkVUX0tFWSIsImdldEF1dGhLZXlGcm9tUmVxdWVzdCIsImluamVjdFNTUlN0YXRlSW50b09iamVjdCIsImJ1aWxkQ2xlcmtQcm9wcyIsInJlcSIsImluaXRTdGF0ZSIsImF1dGhTdGF0dXMiLCJhdXRoVG9rZW4iLCJhdXRoTWVzc2FnZSIsImF1dGhSZWFzb24iLCJvcHRpb25zIiwic2VjcmV0S2V5IiwiYXBpVXJsIiwiYXBpVmVyc2lvbiIsImF1dGhPYmplY3QiLCJTaWduZWRJbiIsImp3dCIsIl9vYmplY3RTcHJlYWQiLCJzZXNzaW9uVG9rZW4iLCJyYXciLCJ0ZXh0IiwicGF5bG9hZCIsInNhbml0aXplZEF1dGhPYmplY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clerkClient: () => (/* binding */ clerkClient)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend */ \"(middleware)/./node_modules/@clerk/backend/dist/index.mjs\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n\n\nconst clerkClient = (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.createClerkClient)({\n  secretKey: _constants__WEBPACK_IMPORTED_MODULE_1__.SECRET_KEY,\n  publishableKey: _constants__WEBPACK_IMPORTED_MODULE_1__.PUBLISHABLE_KEY,\n  apiUrl: _constants__WEBPACK_IMPORTED_MODULE_1__.API_URL,\n  apiVersion: _constants__WEBPACK_IMPORTED_MODULE_1__.API_VERSION,\n  userAgent: `${\"@clerk/nextjs\"}@${\"5.0.2\"}`,\n  proxyUrl: _constants__WEBPACK_IMPORTED_MODULE_1__.PROXY_URL,\n  domain: _constants__WEBPACK_IMPORTED_MODULE_1__.DOMAIN,\n  isSatellite: _constants__WEBPACK_IMPORTED_MODULE_1__.IS_SATELLITE,\n  sdkMetadata: _constants__WEBPACK_IMPORTED_MODULE_1__.SDK_METADATA,\n  telemetry: {\n    disabled: _constants__WEBPACK_IMPORTED_MODULE_1__.TELEMETRY_DISABLED,\n    debug: _constants__WEBPACK_IMPORTED_MODULE_1__.TELEMETRY_DEBUG\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2NsZXJrQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtRDtBQVcvQjtBQUVwQixNQUFNVyxXQUFXLEdBQUdYLGlFQUFpQixDQUFDO0VBQ3BDWSxTQUFTLEVBQUVKLGtEQUFVO0VBQ3JCSyxjQUFjLEVBQUVQLHVEQUFlO0VBQy9CUSxNQUFNLEVBQUViLCtDQUFPO0VBQ2ZjLFVBQVUsRUFBRWIsbURBQVc7RUFDdkJjLFNBQVMsRUFBRyxHQUFFLGVBQWdCLElBQUcsT0FBUSxFQUFDO0VBQzFDQyxRQUFRLEVBQUVaLGlEQUFTO0VBQ25CYSxNQUFNLEVBQUVmLDhDQUFNO0VBQ2RnQixXQUFXLEVBQUVmLG9EQUFZO0VBQ3pCZ0IsV0FBVyxFQUFFYixvREFBWTtFQUN6QmMsU0FBUyxFQUFFO0lBQ1RDLFFBQVEsRUFBRVosMERBQWtCO0lBQzVCYSxLQUFLLEVBQUVkLHVEQUFlQTtFQUN4QjtBQUNGLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvY2xlcmtDbGllbnQuanM/YjFmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGVya0NsaWVudCB9IGZyb20gXCJAY2xlcmsvYmFja2VuZFwiO1xuaW1wb3J0IHtcbiAgQVBJX1VSTCxcbiAgQVBJX1ZFUlNJT04sXG4gIERPTUFJTixcbiAgSVNfU0FURUxMSVRFLFxuICBQUk9YWV9VUkwsXG4gIFBVQkxJU0hBQkxFX0tFWSxcbiAgU0RLX01FVEFEQVRBLFxuICBTRUNSRVRfS0VZLFxuICBURUxFTUVUUllfREVCVUcsXG4gIFRFTEVNRVRSWV9ESVNBQkxFRFxufSBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmNvbnN0IGNsZXJrQ2xpZW50ID0gY3JlYXRlQ2xlcmtDbGllbnQoe1xuICBzZWNyZXRLZXk6IFNFQ1JFVF9LRVksXG4gIHB1Ymxpc2hhYmxlS2V5OiBQVUJMSVNIQUJMRV9LRVksXG4gIGFwaVVybDogQVBJX1VSTCxcbiAgYXBpVmVyc2lvbjogQVBJX1ZFUlNJT04sXG4gIHVzZXJBZ2VudDogYCR7XCJAY2xlcmsvbmV4dGpzXCJ9QCR7XCI1LjAuMlwifWAsXG4gIHByb3h5VXJsOiBQUk9YWV9VUkwsXG4gIGRvbWFpbjogRE9NQUlOLFxuICBpc1NhdGVsbGl0ZTogSVNfU0FURUxMSVRFLFxuICBzZGtNZXRhZGF0YTogU0RLX01FVEFEQVRBLFxuICB0ZWxlbWV0cnk6IHtcbiAgICBkaXNhYmxlZDogVEVMRU1FVFJZX0RJU0FCTEVELFxuICAgIGRlYnVnOiBURUxFTUVUUllfREVCVUdcbiAgfVxufSk7XG5leHBvcnQge1xuICBjbGVya0NsaWVudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsZXJrQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJjcmVhdGVDbGVya0NsaWVudCIsIkFQSV9VUkwiLCJBUElfVkVSU0lPTiIsIkRPTUFJTiIsIklTX1NBVEVMTElURSIsIlBST1hZX1VSTCIsIlBVQkxJU0hBQkxFX0tFWSIsIlNES19NRVRBREFUQSIsIlNFQ1JFVF9LRVkiLCJURUxFTUVUUllfREVCVUciLCJURUxFTUVUUllfRElTQUJMRUQiLCJjbGVya0NsaWVudCIsInNlY3JldEtleSIsInB1Ymxpc2hhYmxlS2V5IiwiYXBpVXJsIiwiYXBpVmVyc2lvbiIsInVzZXJBZ2VudCIsInByb3h5VXJsIiwiZG9tYWluIiwiaXNTYXRlbGxpdGUiLCJzZGtNZXRhZGF0YSIsInRlbGVtZXRyeSIsImRpc2FibGVkIiwiZGVidWciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkMiddleware.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/clerkMiddleware.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clerkMiddleware: () => (/* binding */ clerkMiddleware),\n/* harmony export */   createAuthenticateRequestOptions: () => (/* binding */ createAuthenticateRequestOptions)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(middleware)/./node_modules/@clerk/shared/dist/telemetry.mjs\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/index.js\");\n/* harmony import */ var _utils_debugLogger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/debugLogger */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js\");\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n/* harmony import */ var _errorThrower__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./errorThrower */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js\");\n/* harmony import */ var _protect__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./protect */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/protect.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n\n\n\n\n\nconst CONTROL_FLOW_ERROR = {\n  FORCE_NOT_FOUND: \"CLERK_PROTECT_REWRITE\",\n  REDIRECT_TO_URL: \"CLERK_PROTECT_REDIRECT_TO_URL\",\n  REDIRECT_TO_SIGN_IN: \"CLERK_PROTECT_REDIRECT_TO_SIGN_IN\"\n};\nconst clerkMiddleware = (0,_utils_debugLogger__WEBPACK_IMPORTED_MODULE_3__.withLogger)(\"clerkMiddleware\", logger => (...args) => {\n  const [request, event] = parseRequestAndEvent(args);\n  const [handler, params] = parseHandlerAndOptions(args);\n  if (params.debug) {\n    logger.enable();\n  }\n  const publishableKey = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.assertKey)(params.publishableKey || _constants__WEBPACK_IMPORTED_MODULE_5__.PUBLISHABLE_KEY, () => _errorThrower__WEBPACK_IMPORTED_MODULE_6__.errorThrower.throwMissingPublishableKeyError());\n  const secretKey = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.assertKey)(params.secretKey || _constants__WEBPACK_IMPORTED_MODULE_5__.SECRET_KEY, () => _errorThrower__WEBPACK_IMPORTED_MODULE_6__.errorThrower.throwMissingSecretKeyError());\n  const signInUrl = params.signInUrl || _constants__WEBPACK_IMPORTED_MODULE_5__.SIGN_IN_URL;\n  const signUpUrl = params.signUpUrl || _constants__WEBPACK_IMPORTED_MODULE_5__.SIGN_UP_URL;\n  const options = _objectSpread(_objectSpread({}, params), {}, {\n    publishableKey,\n    secretKey,\n    signInUrl,\n    signUpUrl\n  });\n  _clerkClient__WEBPACK_IMPORTED_MODULE_7__.clerkClient.telemetry.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_1__.eventMethodCalled)(\"clerkMiddleware\", {\n    handler: Boolean(handler),\n    satellite: Boolean(options.isSatellite),\n    proxy: Boolean(options.proxyUrl)\n  }));\n  const nextMiddleware = async (request2, event2) => {\n    const clerkRequest = (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.createClerkRequest)(request2);\n    logger.debug(\"options\", options);\n    logger.debug(\"url\", () => clerkRequest.toJSON());\n    const requestState = await _clerkClient__WEBPACK_IMPORTED_MODULE_7__.clerkClient.authenticateRequest(clerkRequest, createAuthenticateRequestOptions(clerkRequest, options));\n    logger.debug(\"requestState\", () => ({\n      status: requestState.status,\n      headers: JSON.stringify(Object.fromEntries(requestState.headers)),\n      reason: requestState.reason\n    }));\n    const locationHeader = requestState.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.Location);\n    if (locationHeader) {\n      return new Response(null, {\n        status: 307,\n        headers: requestState.headers\n      });\n    } else if (requestState.status === _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.AuthStatus.Handshake) {\n      throw new Error(\"Clerk: handshake status without redirect\");\n    }\n    const authObject = requestState.toAuth();\n    logger.debug(\"auth\", () => ({\n      auth: authObject,\n      debug: authObject.debug()\n    }));\n    const redirectToSignIn = createMiddlewareRedirectToSignIn(clerkRequest);\n    const protect = createMiddlewareProtect(clerkRequest, authObject, redirectToSignIn);\n    const authObjWithMethods = Object.assign(authObject, {\n      protect,\n      redirectToSignIn\n    });\n    let handlerResult = next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.next();\n    try {\n      handlerResult = (await (handler == null ? void 0 : handler(() => authObjWithMethods, request2, event2))) || handlerResult;\n    } catch (e) {\n      handlerResult = handleControlFlowErrors(e, clerkRequest, requestState);\n    }\n    if ((0,_utils__WEBPACK_IMPORTED_MODULE_8__.isRedirect)(handlerResult)) {\n      logger.debug(\"handlerResult is redirect\");\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_8__.serverRedirectWithAuth)(clerkRequest, handlerResult, options);\n    }\n    if (options.debug) {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_4__.setRequestHeadersOnNextResponse)(handlerResult, clerkRequest, {\n        [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.EnableDebug]: \"true\"\n      });\n    }\n    (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decorateRequest)(clerkRequest, handlerResult, requestState, options.secretKey);\n    if (requestState.headers) {\n      requestState.headers.forEach((value, key) => {\n        handlerResult.headers.append(key, value);\n      });\n    }\n    return handlerResult;\n  };\n  if (request && event) {\n    return nextMiddleware(request, event);\n  }\n  return nextMiddleware;\n});\nconst parseRequestAndEvent = args => {\n  return [args[0] instanceof Request ? args[0] : void 0, args[0] instanceof Request ? args[1] : void 0];\n};\nconst parseHandlerAndOptions = args => {\n  return [typeof args[0] === \"function\" ? args[0] : void 0, (args.length === 2 ? args[1] : typeof args[0] === \"function\" ? {} : args[0]) || {}];\n};\nconst createAuthenticateRequestOptions = (clerkRequest, options) => {\n  return _objectSpread(_objectSpread({}, options), (0,_utils__WEBPACK_IMPORTED_MODULE_4__.handleMultiDomainAndProxy)(clerkRequest, options));\n};\nconst createMiddlewareRedirectToSignIn = clerkRequest => {\n  return (opts = {}) => {\n    const err = new Error(CONTROL_FLOW_ERROR.REDIRECT_TO_SIGN_IN);\n    err.returnBackUrl = opts.returnBackUrl === null ? \"\" : opts.returnBackUrl || clerkRequest.clerkUrl.toString();\n    throw err;\n  };\n};\nconst createMiddlewareProtect = (clerkRequest, authObject, redirectToSignIn) => {\n  return (params, options) => {\n    const notFound = () => {\n      throw new Error(CONTROL_FLOW_ERROR.FORCE_NOT_FOUND);\n    };\n    const redirect = url => {\n      const err = new Error(CONTROL_FLOW_ERROR.REDIRECT_TO_URL);\n      err.redirectUrl = url;\n      throw err;\n    };\n    return (0,_protect__WEBPACK_IMPORTED_MODULE_9__.createProtect)({\n      request: clerkRequest,\n      redirect,\n      notFound,\n      authObject,\n      redirectToSignIn\n    })(params, options);\n  };\n};\nconst handleControlFlowErrors = (e, clerkRequest, requestState) => {\n  switch (e.message) {\n    case CONTROL_FLOW_ERROR.FORCE_NOT_FOUND:\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_8__.setHeader)(next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.rewrite(`${clerkRequest.clerkUrl.origin}/clerk_${Date.now()}`), _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, \"protect-rewrite\");\n    case CONTROL_FLOW_ERROR.REDIRECT_TO_URL:\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.redirectAdapter)(e.redirectUrl);\n    case CONTROL_FLOW_ERROR.REDIRECT_TO_SIGN_IN:\n      return (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.createRedirect)({\n        redirectAdapter: _utils__WEBPACK_IMPORTED_MODULE_4__.redirectAdapter,\n        baseUrl: clerkRequest.clerkUrl,\n        signInUrl: requestState.signInUrl,\n        signUpUrl: requestState.signUpUrl,\n        publishableKey: requestState.publishableKey\n      }).redirectToSignIn({\n        returnBackUrl: e.returnBackUrl\n      });\n    default:\n      throw e;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkMiddleware.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/constants.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_URL: () => (/* binding */ API_URL),\n/* harmony export */   API_VERSION: () => (/* binding */ API_VERSION),\n/* harmony export */   CLERK_JS_URL: () => (/* binding */ CLERK_JS_URL),\n/* harmony export */   CLERK_JS_VERSION: () => (/* binding */ CLERK_JS_VERSION),\n/* harmony export */   DOMAIN: () => (/* binding */ DOMAIN),\n/* harmony export */   IS_SATELLITE: () => (/* binding */ IS_SATELLITE),\n/* harmony export */   PROXY_URL: () => (/* binding */ PROXY_URL),\n/* harmony export */   PUBLISHABLE_KEY: () => (/* binding */ PUBLISHABLE_KEY),\n/* harmony export */   SDK_METADATA: () => (/* binding */ SDK_METADATA),\n/* harmony export */   SECRET_KEY: () => (/* binding */ SECRET_KEY),\n/* harmony export */   SIGN_IN_URL: () => (/* binding */ SIGN_IN_URL),\n/* harmony export */   SIGN_UP_URL: () => (/* binding */ SIGN_UP_URL),\n/* harmony export */   TELEMETRY_DEBUG: () => (/* binding */ TELEMETRY_DEBUG),\n/* harmony export */   TELEMETRY_DISABLED: () => (/* binding */ TELEMETRY_DISABLED)\n/* harmony export */ });\n/* harmony import */ var _clerk_shared_apiUrlFromPublishableKey__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/shared/apiUrlFromPublishableKey */ \"(middleware)/./node_modules/@clerk/shared/dist/apiUrlFromPublishableKey.mjs\");\n/* harmony import */ var _clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/underscore */ \"(middleware)/./node_modules/@clerk/shared/dist/underscore.mjs\");\n\n\nconst CLERK_JS_VERSION = process.env.NEXT_PUBLIC_CLERK_JS_VERSION || \"\";\nconst CLERK_JS_URL = process.env.NEXT_PUBLIC_CLERK_JS_URL || \"\";\nconst API_VERSION = process.env.CLERK_API_VERSION || \"v1\";\nconst SECRET_KEY = process.env.CLERK_SECRET_KEY || \"\";\nconst PUBLISHABLE_KEY = \"pk_test_Y2FyaW5nLWtpd2ktOTkuY2xlcmsuYWNjb3VudHMuZGV2JA\" || 0;\nconst API_URL = process.env.CLERK_API_URL || (0,_clerk_shared_apiUrlFromPublishableKey__WEBPACK_IMPORTED_MODULE_0__.apiUrlFromPublishableKey)(PUBLISHABLE_KEY);\nconst DOMAIN = process.env.NEXT_PUBLIC_CLERK_DOMAIN || \"\";\nconst PROXY_URL = process.env.NEXT_PUBLIC_CLERK_PROXY_URL || \"\";\nconst IS_SATELLITE = (0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_1__.isTruthy)(process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE) || false;\nconst SIGN_IN_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || \"\";\nconst SIGN_UP_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || \"\";\nconst SDK_METADATA = {\n  name: \"@clerk/nextjs\",\n  version: \"5.0.2\",\n  environment: \"development\"\n};\nconst TELEMETRY_DISABLED = (0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_1__.isTruthy)(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DISABLED);\nconst TELEMETRY_DEBUG = (0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_1__.isTruthy)(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DEBUG);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWtGO0FBQzlCO0FBQ3BELE1BQU1FLGdCQUFnQixHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsNEJBQTRCLElBQUksRUFBRTtBQUN2RSxNQUFNQyxZQUFZLEdBQUdILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRyx3QkFBd0IsSUFBSSxFQUFFO0FBQy9ELE1BQU1DLFdBQVcsR0FBR0wsT0FBTyxDQUFDQyxHQUFHLENBQUNLLGlCQUFpQixJQUFJLElBQUk7QUFDekQsTUFBTUMsVUFBVSxHQUFHUCxPQUFPLENBQUNDLEdBQUcsQ0FBQ08sZ0JBQWdCLElBQUksRUFBRTtBQUNyRCxNQUFNQyxlQUFlLEdBQUdULHdEQUE2QyxJQUFJLENBQUU7QUFDM0UsTUFBTVcsT0FBTyxHQUFHWCxPQUFPLENBQUNDLEdBQUcsQ0FBQ1csYUFBYSxJQUFJZixnR0FBd0IsQ0FBQ1ksZUFBZSxDQUFDO0FBQ3RGLE1BQU1JLE1BQU0sR0FBR2IsT0FBTyxDQUFDQyxHQUFHLENBQUNhLHdCQUF3QixJQUFJLEVBQUU7QUFDekQsTUFBTUMsU0FBUyxHQUFHZixPQUFPLENBQUNDLEdBQUcsQ0FBQ2UsMkJBQTJCLElBQUksRUFBRTtBQUMvRCxNQUFNQyxZQUFZLEdBQUduQixrRUFBUSxDQUFDRSxPQUFPLENBQUNDLEdBQUcsQ0FBQ2lCLDhCQUE4QixDQUFDLElBQUksS0FBSztBQUNsRixNQUFNQyxXQUFXLEdBQUduQixPQUFPLENBQUNDLEdBQUcsQ0FBQ21CLDZCQUE2QixJQUFJLEVBQUU7QUFDbkUsTUFBTUMsV0FBVyxHQUFHckIsT0FBTyxDQUFDQyxHQUFHLENBQUNxQiw2QkFBNkIsSUFBSSxFQUFFO0FBQ25FLE1BQU1DLFlBQVksR0FBRztFQUNuQkMsSUFBSSxFQUFFLGVBQWU7RUFDckJDLE9BQU8sRUFBRSxPQUFPO0VBQ2hCQyxXQUFXO0FBQ2IsQ0FBQztBQUNELE1BQU1DLGtCQUFrQixHQUFHN0Isa0VBQVEsQ0FBQ0UsT0FBTyxDQUFDQyxHQUFHLENBQUMyQixvQ0FBb0MsQ0FBQztBQUNyRixNQUFNQyxlQUFlLEdBQUcvQixrRUFBUSxDQUFDRSxPQUFPLENBQUNDLEdBQUcsQ0FBQzZCLGlDQUFpQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9jb25zdGFudHMuanM/Y2QyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhcGlVcmxGcm9tUHVibGlzaGFibGVLZXkgfSBmcm9tIFwiQGNsZXJrL3NoYXJlZC9hcGlVcmxGcm9tUHVibGlzaGFibGVLZXlcIjtcbmltcG9ydCB7IGlzVHJ1dGh5IH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvdW5kZXJzY29yZVwiO1xuY29uc3QgQ0xFUktfSlNfVkVSU0lPTiA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0pTX1ZFUlNJT04gfHwgXCJcIjtcbmNvbnN0IENMRVJLX0pTX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0pTX1VSTCB8fCBcIlwiO1xuY29uc3QgQVBJX1ZFUlNJT04gPSBwcm9jZXNzLmVudi5DTEVSS19BUElfVkVSU0lPTiB8fCBcInYxXCI7XG5jb25zdCBTRUNSRVRfS0VZID0gcHJvY2Vzcy5lbnYuQ0xFUktfU0VDUkVUX0tFWSB8fCBcIlwiO1xuY29uc3QgUFVCTElTSEFCTEVfS0VZID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0xFUktfUFVCTElTSEFCTEVfS0VZIHx8IFwiXCI7XG5jb25zdCBBUElfVVJMID0gcHJvY2Vzcy5lbnYuQ0xFUktfQVBJX1VSTCB8fCBhcGlVcmxGcm9tUHVibGlzaGFibGVLZXkoUFVCTElTSEFCTEVfS0VZKTtcbmNvbnN0IERPTUFJTiA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0RPTUFJTiB8fCBcIlwiO1xuY29uc3QgUFJPWFlfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0xFUktfUFJPWFlfVVJMIHx8IFwiXCI7XG5jb25zdCBJU19TQVRFTExJVEUgPSBpc1RydXRoeShwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19JU19TQVRFTExJVEUpIHx8IGZhbHNlO1xuY29uc3QgU0lHTl9JTl9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19TSUdOX0lOX1VSTCB8fCBcIlwiO1xuY29uc3QgU0lHTl9VUF9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19TSUdOX1VQX1VSTCB8fCBcIlwiO1xuY29uc3QgU0RLX01FVEFEQVRBID0ge1xuICBuYW1lOiBcIkBjbGVyay9uZXh0anNcIixcbiAgdmVyc2lvbjogXCI1LjAuMlwiLFxuICBlbnZpcm9ubWVudDogcHJvY2Vzcy5lbnYuTk9ERV9FTlZcbn07XG5jb25zdCBURUxFTUVUUllfRElTQUJMRUQgPSBpc1RydXRoeShwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19URUxFTUVUUllfRElTQUJMRUQpO1xuY29uc3QgVEVMRU1FVFJZX0RFQlVHID0gaXNUcnV0aHkocHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0xFUktfVEVMRU1FVFJZX0RFQlVHKTtcbmV4cG9ydCB7XG4gIEFQSV9VUkwsXG4gIEFQSV9WRVJTSU9OLFxuICBDTEVSS19KU19VUkwsXG4gIENMRVJLX0pTX1ZFUlNJT04sXG4gIERPTUFJTixcbiAgSVNfU0FURUxMSVRFLFxuICBQUk9YWV9VUkwsXG4gIFBVQkxJU0hBQkxFX0tFWSxcbiAgU0RLX01FVEFEQVRBLFxuICBTRUNSRVRfS0VZLFxuICBTSUdOX0lOX1VSTCxcbiAgU0lHTl9VUF9VUkwsXG4gIFRFTEVNRVRSWV9ERUJVRyxcbiAgVEVMRU1FVFJZX0RJU0FCTEVEXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJhcGlVcmxGcm9tUHVibGlzaGFibGVLZXkiLCJpc1RydXRoeSIsIkNMRVJLX0pTX1ZFUlNJT04iLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQ0xFUktfSlNfVkVSU0lPTiIsIkNMRVJLX0pTX1VSTCIsIk5FWFRfUFVCTElDX0NMRVJLX0pTX1VSTCIsIkFQSV9WRVJTSU9OIiwiQ0xFUktfQVBJX1ZFUlNJT04iLCJTRUNSRVRfS0VZIiwiQ0xFUktfU0VDUkVUX0tFWSIsIlBVQkxJU0hBQkxFX0tFWSIsIk5FWFRfUFVCTElDX0NMRVJLX1BVQkxJU0hBQkxFX0tFWSIsIkFQSV9VUkwiLCJDTEVSS19BUElfVVJMIiwiRE9NQUlOIiwiTkVYVF9QVUJMSUNfQ0xFUktfRE9NQUlOIiwiUFJPWFlfVVJMIiwiTkVYVF9QVUJMSUNfQ0xFUktfUFJPWFlfVVJMIiwiSVNfU0FURUxMSVRFIiwiTkVYVF9QVUJMSUNfQ0xFUktfSVNfU0FURUxMSVRFIiwiU0lHTl9JTl9VUkwiLCJORVhUX1BVQkxJQ19DTEVSS19TSUdOX0lOX1VSTCIsIlNJR05fVVBfVVJMIiwiTkVYVF9QVUJMSUNfQ0xFUktfU0lHTl9VUF9VUkwiLCJTREtfTUVUQURBVEEiLCJuYW1lIiwidmVyc2lvbiIsImVudmlyb25tZW50IiwiVEVMRU1FVFJZX0RJU0FCTEVEIiwiTkVYVF9QVUJMSUNfQ0xFUktfVEVMRU1FVFJZX0RJU0FCTEVEIiwiVEVMRU1FVFJZX0RFQlVHIiwiTkVYVF9QVUJMSUNfQ0xFUktfVEVMRU1FVFJZX0RFQlVHIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGetAuth: () => (/* binding */ createGetAuth),\n/* harmony export */   getAuth: () => (/* binding */ getAuth),\n/* harmony export */   parseJwt: () => (/* binding */ parseJwt)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _clerk_backend_jwt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/backend/jwt */ \"(middleware)/./node_modules/@clerk/backend/dist/jwt/index.mjs\");\n/* harmony import */ var _utils_debugLogger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/debugLogger */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errors */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errors.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n\nconst createGetAuth = ({\n  noAuthStatusMessage,\n  debugLoggerName\n}) => (0,_utils_debugLogger__WEBPACK_IMPORTED_MODULE_2__.withLogger)(debugLoggerName, logger => {\n  return (req, opts) => {\n    if ((0,_utils__WEBPACK_IMPORTED_MODULE_3__.getHeader)(req, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.EnableDebug) === \"true\") {\n      logger.enable();\n    }\n    const authToken = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getAuthKeyFromRequest)(req, \"AuthToken\");\n    const authSignature = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getAuthKeyFromRequest)(req, \"AuthSignature\");\n    const authMessage = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getAuthKeyFromRequest)(req, \"AuthMessage\");\n    const authReason = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getAuthKeyFromRequest)(req, \"AuthReason\");\n    const authStatus = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getAuthKeyFromRequest)(req, \"AuthStatus\");\n    logger.debug(\"Headers debug\", {\n      authStatus,\n      authMessage,\n      authReason\n    });\n    if (!authStatus) {\n      throw new Error(noAuthStatusMessage);\n    }\n    const options = {\n      authStatus,\n      apiUrl: _constants__WEBPACK_IMPORTED_MODULE_4__.API_URL,\n      apiVersion: _constants__WEBPACK_IMPORTED_MODULE_4__.API_VERSION,\n      authMessage,\n      secretKey: (opts == null ? void 0 : opts.secretKey) || _constants__WEBPACK_IMPORTED_MODULE_4__.SECRET_KEY,\n      authReason\n    };\n    logger.debug(\"Options debug\", options);\n    if (authStatus === _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.AuthStatus.SignedIn) {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_3__.assertTokenSignature)(authToken, options.secretKey, authSignature);\n      const jwt = (0,_clerk_backend_jwt__WEBPACK_IMPORTED_MODULE_1__.decodeJwt)(authToken);\n      logger.debug(\"JWT debug\", jwt.raw.text);\n      return (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.signedInAuthObject)(_objectSpread(_objectSpread({}, options), {}, {\n        sessionToken: jwt.raw.text\n      }), jwt.payload);\n    }\n    return (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.signedOutAuthObject)(options);\n  };\n});\nconst getAuth = createGetAuth({\n  debugLoggerName: \"getAuth()\",\n  noAuthStatusMessage: (0,_errors__WEBPACK_IMPORTED_MODULE_5__.getAuthAuthHeaderMissing)()\n});\nconst parseJwt = req => {\n  var _a;\n  const cookieToken = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getCookie)(req, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Cookies.Session);\n  const headerToken = (_a = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getHeader)(req, \"authorization\")) == null ? void 0 : _a.replace(\"Bearer \", \"\");\n  return (0,_clerk_backend_jwt__WEBPACK_IMPORTED_MODULE_1__.decodeJwt)(cookieToken || headerToken || \"\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2NyZWF0ZUdldEF1dGguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUc7QUFDMUQ7QUFDRztBQUNhO0FBQ1g7QUFDd0M7QUFDNUYsTUFBTWMsYUFBYSxHQUFHQSxDQUFDO0VBQ3JCQyxtQkFBbUI7RUFDbkJDO0FBQ0YsQ0FBQyxLQUFLWCw4REFBVSxDQUFDVyxlQUFlLEVBQUdDLE1BQU0sSUFBSztFQUM1QyxPQUFPLENBQUNDLEdBQUcsRUFBRUMsSUFBSSxLQUFLO0lBQ3BCLElBQUlOLGlEQUFTLENBQUNLLEdBQUcsRUFBRWpCLDhEQUFTLENBQUNtQixPQUFPLENBQUNDLFdBQVcsQ0FBQyxLQUFLLE1BQU0sRUFBRTtNQUM1REosTUFBTSxDQUFDSyxNQUFNLENBQUMsQ0FBQztJQUNqQjtJQUNBLE1BQU1DLFNBQVMsR0FBR1osNkRBQXFCLENBQUNPLEdBQUcsRUFBRSxXQUFXLENBQUM7SUFDekQsTUFBTU0sYUFBYSxHQUFHYiw2REFBcUIsQ0FBQ08sR0FBRyxFQUFFLGVBQWUsQ0FBQztJQUNqRSxNQUFNTyxXQUFXLEdBQUdkLDZEQUFxQixDQUFDTyxHQUFHLEVBQUUsYUFBYSxDQUFDO0lBQzdELE1BQU1RLFVBQVUsR0FBR2YsNkRBQXFCLENBQUNPLEdBQUcsRUFBRSxZQUFZLENBQUM7SUFDM0QsTUFBTVMsVUFBVSxHQUFHaEIsNkRBQXFCLENBQUNPLEdBQUcsRUFBRSxZQUFZLENBQUM7SUFDM0RELE1BQU0sQ0FBQ1csS0FBSyxDQUFDLGVBQWUsRUFBRTtNQUFFRCxVQUFVO01BQUVGLFdBQVc7TUFBRUM7SUFBVyxDQUFDLENBQUM7SUFDdEUsSUFBSSxDQUFDQyxVQUFVLEVBQUU7TUFDZixNQUFNLElBQUlFLEtBQUssQ0FBQ2QsbUJBQW1CLENBQUM7SUFDdEM7SUFDQSxNQUFNZSxPQUFPLEdBQUc7TUFDZEgsVUFBVTtNQUNWSSxNQUFNLEVBQUV6QiwrQ0FBTztNQUNmMEIsVUFBVSxFQUFFekIsbURBQVc7TUFDdkJrQixXQUFXO01BQ1hRLFNBQVMsRUFBRSxDQUFDZCxJQUFJLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHQSxJQUFJLENBQUNjLFNBQVMsS0FBS3pCLGtEQUFVO01BQ2pFa0I7SUFDRixDQUFDO0lBQ0RULE1BQU0sQ0FBQ1csS0FBSyxDQUFDLGVBQWUsRUFBRUUsT0FBTyxDQUFDO0lBQ3RDLElBQUlILFVBQVUsS0FBSzNCLCtEQUFVLENBQUNrQyxRQUFRLEVBQUU7TUFDdEN4Qiw0REFBb0IsQ0FBQ2EsU0FBUyxFQUFFTyxPQUFPLENBQUNHLFNBQVMsRUFBRVQsYUFBYSxDQUFDO01BQ2pFLE1BQU1XLEdBQUcsR0FBRy9CLDZEQUFTLENBQUNtQixTQUFTLENBQUM7TUFDaENOLE1BQU0sQ0FBQ1csS0FBSyxDQUFDLFdBQVcsRUFBRU8sR0FBRyxDQUFDQyxHQUFHLENBQUNDLElBQUksQ0FBQztNQUN2QyxPQUFPbkMsMkVBQWtCLENBQUFvQyxhQUFBLENBQUFBLGFBQUEsS0FBTVIsT0FBTztRQUFFUyxZQUFZLEVBQUVKLEdBQUcsQ0FBQ0MsR0FBRyxDQUFDQztNQUFJLElBQUlGLEdBQUcsQ0FBQ0ssT0FBTyxDQUFDO0lBQ3BGO0lBQ0EsT0FBT3JDLDRFQUFtQixDQUFDMkIsT0FBTyxDQUFDO0VBQ3JDLENBQUM7QUFDSCxDQUFDLENBQUM7QUFDRixNQUFNVyxPQUFPLEdBQUczQixhQUFhLENBQUM7RUFDNUJFLGVBQWUsRUFBRSxXQUFXO0VBQzVCRCxtQkFBbUIsRUFBRU4saUVBQXdCLENBQUM7QUFDaEQsQ0FBQyxDQUFDO0FBQ0YsTUFBTWlDLFFBQVEsR0FBSXhCLEdBQUcsSUFBSztFQUN4QixJQUFJeUIsRUFBRTtFQUNOLE1BQU1DLFdBQVcsR0FBR2hDLGlEQUFTLENBQUNNLEdBQUcsRUFBRWpCLDhEQUFTLENBQUM0QyxPQUFPLENBQUNDLE9BQU8sQ0FBQztFQUM3RCxNQUFNQyxXQUFXLEdBQUcsQ0FBQ0osRUFBRSxHQUFHOUIsaURBQVMsQ0FBQ0ssR0FBRyxFQUFFLGVBQWUsQ0FBQyxLQUFLLElBQUksR0FBRyxLQUFLLENBQUMsR0FBR3lCLEVBQUUsQ0FBQ0ssT0FBTyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUM7RUFDdkcsT0FBTzVDLDZEQUFTLENBQUN3QyxXQUFXLElBQUlHLFdBQVcsSUFBSSxFQUFFLENBQUM7QUFDcEQsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvY3JlYXRlR2V0QXV0aC5qcz8zOWNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF1dGhTdGF0dXMsIGNvbnN0YW50cywgc2lnbmVkSW5BdXRoT2JqZWN0LCBzaWduZWRPdXRBdXRoT2JqZWN0IH0gZnJvbSBcIkBjbGVyay9iYWNrZW5kL2ludGVybmFsXCI7XG5pbXBvcnQgeyBkZWNvZGVKd3QgfSBmcm9tIFwiQGNsZXJrL2JhY2tlbmQvand0XCI7XG5pbXBvcnQgeyB3aXRoTG9nZ2VyIH0gZnJvbSBcIi4uL3V0aWxzL2RlYnVnTG9nZ2VyXCI7XG5pbXBvcnQgeyBBUElfVVJMLCBBUElfVkVSU0lPTiwgU0VDUkVUX0tFWSB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgZ2V0QXV0aEF1dGhIZWFkZXJNaXNzaW5nIH0gZnJvbSBcIi4vZXJyb3JzXCI7XG5pbXBvcnQgeyBhc3NlcnRUb2tlblNpZ25hdHVyZSwgZ2V0QXV0aEtleUZyb21SZXF1ZXN0LCBnZXRDb29raWUsIGdldEhlYWRlciB9IGZyb20gXCIuL3V0aWxzXCI7XG5jb25zdCBjcmVhdGVHZXRBdXRoID0gKHtcbiAgbm9BdXRoU3RhdHVzTWVzc2FnZSxcbiAgZGVidWdMb2dnZXJOYW1lXG59KSA9PiB3aXRoTG9nZ2VyKGRlYnVnTG9nZ2VyTmFtZSwgKGxvZ2dlcikgPT4ge1xuICByZXR1cm4gKHJlcSwgb3B0cykgPT4ge1xuICAgIGlmIChnZXRIZWFkZXIocmVxLCBjb25zdGFudHMuSGVhZGVycy5FbmFibGVEZWJ1ZykgPT09IFwidHJ1ZVwiKSB7XG4gICAgICBsb2dnZXIuZW5hYmxlKCk7XG4gICAgfVxuICAgIGNvbnN0IGF1dGhUb2tlbiA9IGdldEF1dGhLZXlGcm9tUmVxdWVzdChyZXEsIFwiQXV0aFRva2VuXCIpO1xuICAgIGNvbnN0IGF1dGhTaWduYXR1cmUgPSBnZXRBdXRoS2V5RnJvbVJlcXVlc3QocmVxLCBcIkF1dGhTaWduYXR1cmVcIik7XG4gICAgY29uc3QgYXV0aE1lc3NhZ2UgPSBnZXRBdXRoS2V5RnJvbVJlcXVlc3QocmVxLCBcIkF1dGhNZXNzYWdlXCIpO1xuICAgIGNvbnN0IGF1dGhSZWFzb24gPSBnZXRBdXRoS2V5RnJvbVJlcXVlc3QocmVxLCBcIkF1dGhSZWFzb25cIik7XG4gICAgY29uc3QgYXV0aFN0YXR1cyA9IGdldEF1dGhLZXlGcm9tUmVxdWVzdChyZXEsIFwiQXV0aFN0YXR1c1wiKTtcbiAgICBsb2dnZXIuZGVidWcoXCJIZWFkZXJzIGRlYnVnXCIsIHsgYXV0aFN0YXR1cywgYXV0aE1lc3NhZ2UsIGF1dGhSZWFzb24gfSk7XG4gICAgaWYgKCFhdXRoU3RhdHVzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3Iobm9BdXRoU3RhdHVzTWVzc2FnZSk7XG4gICAgfVxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICBhdXRoU3RhdHVzLFxuICAgICAgYXBpVXJsOiBBUElfVVJMLFxuICAgICAgYXBpVmVyc2lvbjogQVBJX1ZFUlNJT04sXG4gICAgICBhdXRoTWVzc2FnZSxcbiAgICAgIHNlY3JldEtleTogKG9wdHMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdHMuc2VjcmV0S2V5KSB8fCBTRUNSRVRfS0VZLFxuICAgICAgYXV0aFJlYXNvblxuICAgIH07XG4gICAgbG9nZ2VyLmRlYnVnKFwiT3B0aW9ucyBkZWJ1Z1wiLCBvcHRpb25zKTtcbiAgICBpZiAoYXV0aFN0YXR1cyA9PT0gQXV0aFN0YXR1cy5TaWduZWRJbikge1xuICAgICAgYXNzZXJ0VG9rZW5TaWduYXR1cmUoYXV0aFRva2VuLCBvcHRpb25zLnNlY3JldEtleSwgYXV0aFNpZ25hdHVyZSk7XG4gICAgICBjb25zdCBqd3QgPSBkZWNvZGVKd3QoYXV0aFRva2VuKTtcbiAgICAgIGxvZ2dlci5kZWJ1ZyhcIkpXVCBkZWJ1Z1wiLCBqd3QucmF3LnRleHQpO1xuICAgICAgcmV0dXJuIHNpZ25lZEluQXV0aE9iamVjdCh7IC4uLm9wdGlvbnMsIHNlc3Npb25Ub2tlbjogand0LnJhdy50ZXh0IH0sIGp3dC5wYXlsb2FkKTtcbiAgICB9XG4gICAgcmV0dXJuIHNpZ25lZE91dEF1dGhPYmplY3Qob3B0aW9ucyk7XG4gIH07XG59KTtcbmNvbnN0IGdldEF1dGggPSBjcmVhdGVHZXRBdXRoKHtcbiAgZGVidWdMb2dnZXJOYW1lOiBcImdldEF1dGgoKVwiLFxuICBub0F1dGhTdGF0dXNNZXNzYWdlOiBnZXRBdXRoQXV0aEhlYWRlck1pc3NpbmcoKVxufSk7XG5jb25zdCBwYXJzZUp3dCA9IChyZXEpID0+IHtcbiAgdmFyIF9hO1xuICBjb25zdCBjb29raWVUb2tlbiA9IGdldENvb2tpZShyZXEsIGNvbnN0YW50cy5Db29raWVzLlNlc3Npb24pO1xuICBjb25zdCBoZWFkZXJUb2tlbiA9IChfYSA9IGdldEhlYWRlcihyZXEsIFwiYXV0aG9yaXphdGlvblwiKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnJlcGxhY2UoXCJCZWFyZXIgXCIsIFwiXCIpO1xuICByZXR1cm4gZGVjb2RlSnd0KGNvb2tpZVRva2VuIHx8IGhlYWRlclRva2VuIHx8IFwiXCIpO1xufTtcbmV4cG9ydCB7XG4gIGNyZWF0ZUdldEF1dGgsXG4gIGdldEF1dGgsXG4gIHBhcnNlSnd0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlR2V0QXV0aC5qcy5tYXAiXSwibmFtZXMiOlsiQXV0aFN0YXR1cyIsImNvbnN0YW50cyIsInNpZ25lZEluQXV0aE9iamVjdCIsInNpZ25lZE91dEF1dGhPYmplY3QiLCJkZWNvZGVKd3QiLCJ3aXRoTG9nZ2VyIiwiQVBJX1VSTCIsIkFQSV9WRVJTSU9OIiwiU0VDUkVUX0tFWSIsImdldEF1dGhBdXRoSGVhZGVyTWlzc2luZyIsImFzc2VydFRva2VuU2lnbmF0dXJlIiwiZ2V0QXV0aEtleUZyb21SZXF1ZXN0IiwiZ2V0Q29va2llIiwiZ2V0SGVhZGVyIiwiY3JlYXRlR2V0QXV0aCIsIm5vQXV0aFN0YXR1c01lc3NhZ2UiLCJkZWJ1Z0xvZ2dlck5hbWUiLCJsb2dnZXIiLCJyZXEiLCJvcHRzIiwiSGVhZGVycyIsIkVuYWJsZURlYnVnIiwiZW5hYmxlIiwiYXV0aFRva2VuIiwiYXV0aFNpZ25hdHVyZSIsImF1dGhNZXNzYWdlIiwiYXV0aFJlYXNvbiIsImF1dGhTdGF0dXMiLCJkZWJ1ZyIsIkVycm9yIiwib3B0aW9ucyIsImFwaVVybCIsImFwaVZlcnNpb24iLCJzZWNyZXRLZXkiLCJTaWduZWRJbiIsImp3dCIsInJhdyIsInRleHQiLCJfb2JqZWN0U3ByZWFkIiwic2Vzc2lvblRva2VuIiwicGF5bG9hZCIsImdldEF1dGgiLCJwYXJzZUp3dCIsIl9hIiwiY29va2llVG9rZW4iLCJDb29raWVzIiwiU2Vzc2lvbiIsImhlYWRlclRva2VuIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js":
/*!********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   errorThrower: () => (/* binding */ errorThrower)\n/* harmony export */ });\n/* harmony import */ var _clerk_shared_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/shared/error */ \"(middleware)/./node_modules/@clerk/shared/dist/error.mjs\");\n\nconst errorThrower = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_0__.buildErrorThrower)({\n  packageName: \"@clerk/nextjs\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2Vycm9yVGhyb3dlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3RDtBQUN4RCxNQUFNQyxZQUFZLEdBQUdELHNFQUFpQixDQUFDO0VBQUVFLFdBQVcsRUFBRTtBQUFnQixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2Vycm9yVGhyb3dlci5qcz81OTk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJ1aWxkRXJyb3JUaHJvd2VyIH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvZXJyb3JcIjtcbmNvbnN0IGVycm9yVGhyb3dlciA9IGJ1aWxkRXJyb3JUaHJvd2VyKHsgcGFja2FnZU5hbWU6IFwiQGNsZXJrL25leHRqc1wiIH0pO1xuZXhwb3J0IHtcbiAgZXJyb3JUaHJvd2VyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JUaHJvd2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJidWlsZEVycm9yVGhyb3dlciIsImVycm9yVGhyb3dlciIsInBhY2thZ2VOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errors.js":
/*!**************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/errors.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authAuthHeaderMissing: () => (/* binding */ authAuthHeaderMissing),\n/* harmony export */   authSignatureInvalid: () => (/* binding */ authSignatureInvalid),\n/* harmony export */   clockSkewDetected: () => (/* binding */ clockSkewDetected),\n/* harmony export */   getAuthAuthHeaderMissing: () => (/* binding */ getAuthAuthHeaderMissing),\n/* harmony export */   infiniteRedirectLoopDetected: () => (/* binding */ infiniteRedirectLoopDetected),\n/* harmony export */   informAboutProtectedRouteInfo: () => (/* binding */ informAboutProtectedRouteInfo),\n/* harmony export */   missingDomainAndProxy: () => (/* binding */ missingDomainAndProxy),\n/* harmony export */   missingSignInUrlInDev: () => (/* binding */ missingSignInUrlInDev),\n/* harmony export */   receivedRequestForIgnoredRoute: () => (/* binding */ receivedRequestForIgnoredRoute)\n/* harmony export */ });\nconst missingDomainAndProxy = `\nMissing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl.\n\n1) With middleware\n   e.g. export default clerkMiddleware({domain:'YOUR_DOMAIN',isSatellite:true}); // or the deprecated authMiddleware()\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_DOMAIN='YOUR_DOMAIN'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'\n   `;\nconst missingSignInUrlInDev = `\nInvalid signInUrl. A satellite application requires a signInUrl for development instances.\nCheck if signInUrl is missing from your configuration or if it is not an absolute URL\n\n1) With middleware\n   e.g. export default clerkMiddleware({signInUrl:'SOME_URL', isSatellite:true}); // or the deprecated authMiddleware()\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_SIGN_IN_URL='SOME_URL'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'`;\nconst receivedRequestForIgnoredRoute = (url, matcher) => `Clerk: The middleware was skipped for this request URL: ${url}. For performance reasons, it's recommended to your middleware matcher to:\nexport const config = {\n  matcher: ${matcher},\n};\n\nAlternatively, you can set your own ignoredRoutes. See https://clerk.com/docs/nextjs/middleware\n(This log only appears in development mode)\n`;\nconst getAuthAuthHeaderMissing = () => authAuthHeaderMissing(\"getAuth\");\nconst authAuthHeaderMissing = (helperName = \"auth\") => `Clerk: ${helperName}() was called but Clerk can't detect usage of clerkMiddleware() (or the deprecated authMiddleware()). Please ensure the following:\n-  clerkMiddleware() (or the deprecated authMiddleware()) is used in your Next.js Middleware.\n- Your Middleware matcher is configured to match this route or page.\n- If you are using the src directory, make sure the Middleware file is inside of it.\n\nFor more details, see https://clerk.com/docs/quickstarts/nextjs\n`;\nconst clockSkewDetected = verifyMessage => `Clerk: Clock skew detected. This usually means that your system clock is inaccurate. Clerk will continuously try to issue new tokens, as the existing ones will be treated as \"expired\" due to clock skew.\n\nTo resolve this issue, make sure your system's clock is set to the correct time (e.g. turn off and on automatic time synchronization).\n\n---\n\n${verifyMessage}`;\nconst infiniteRedirectLoopDetected = () => `Clerk: Infinite redirect loop detected. That usually means that we were not able to determine the auth state for this request. A list of common causes and solutions follows.\n\nReason 1:\nYour Clerk instance keys are incorrect, or you recently changed keys (Publishable Key, Secret Key).\nHow to resolve:\n-> Make sure you're using the correct keys from the Clerk Dashboard. If you changed keys recently, make sure to clear your browser application data and cookies.\n\nReason 2:\nA bug that may have already been fixed in the latest version of Clerk NextJS package.\nHow to resolve:\n-> Make sure you are using the latest version of '@clerk/nextjs' and 'next'.\n`;\nconst informAboutProtectedRouteInfo = (path, hasPublicRoutes, hasIgnoredRoutes, isApiRoute, defaultIgnoredRoutes) => {\n  const infoText = isApiRoute ? `INFO: Clerk: The request to ${path} is being protected (401) because there is no signed-in user, and the path is included in \\`apiRoutes\\`. To prevent this behavior, choose one of:` : `INFO: Clerk: The request to ${path} is being redirected because there is no signed-in user, and the path is not included in \\`ignoredRoutes\\` or \\`publicRoutes\\`. To prevent this behavior, choose one of:`;\n  const apiRoutesText = isApiRoute ? `To prevent Clerk authentication from protecting (401) the api route, remove the rule matching \"${path}\" from the \\`apiRoutes\\` array passed to authMiddleware` : void 0;\n  const publicRoutesText = hasPublicRoutes ? `To make the route accessible to both signed in and signed out users, add \"${path}\" to the \\`publicRoutes\\` array passed to authMiddleware` : `To make the route accessible to both signed in and signed out users, pass \\`publicRoutes: [\"${path}\"]\\` to authMiddleware`;\n  const ignoredRoutes = [...defaultIgnoredRoutes, path].map(r => `\"${r}\"`).join(\", \");\n  const ignoredRoutesText = hasIgnoredRoutes ? `To prevent Clerk authentication from running at all, add \"${path}\" to the \\`ignoredRoutes\\` array passed to authMiddleware` : `To prevent Clerk authentication from running at all, pass \\`ignoredRoutes: [${ignoredRoutes}]\\` to authMiddleware`;\n  const afterAuthText = \"Pass a custom `afterAuth` to authMiddleware, and replace Clerk's default behavior of redirecting unless a route is included in publicRoutes\";\n  return `${infoText}\n\n${[apiRoutesText, publicRoutesText, ignoredRoutesText, afterAuthText].filter(Boolean).map((text, index) => `${index + 1}. ${text}`).join(\"\\n\")}\n\nFor additional information about middleware, please visit https://clerk.com/docs/nextjs/middleware\n(This log only appears in development mode, or if \\`debug: true\\` is passed to authMiddleware)`;\n};\nconst authSignatureInvalid = `Clerk: Unable to verify request, this usually means the Clerk middleware did not run. Ensure Clerk's middleware is properly integrated and matches the current route. For more information, see: https://clerk.com/docs/nextjs/middleware. (code=auth_signature_invalid)`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errors.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* reexport safe */ _app_router_server_auth__WEBPACK_IMPORTED_MODULE_1__.auth),\n/* harmony export */   authMiddleware: () => (/* reexport safe */ _authMiddleware__WEBPACK_IMPORTED_MODULE_2__.authMiddleware),\n/* harmony export */   buildClerkProps: () => (/* reexport safe */ _buildClerkProps__WEBPACK_IMPORTED_MODULE_3__.buildClerkProps),\n/* harmony export */   clerkClient: () => (/* reexport safe */ _clerkClient__WEBPACK_IMPORTED_MODULE_4__.clerkClient),\n/* harmony export */   clerkMiddleware: () => (/* reexport safe */ _clerkMiddleware__WEBPACK_IMPORTED_MODULE_5__.clerkMiddleware),\n/* harmony export */   createClerkClient: () => (/* reexport safe */ _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.createClerkClient),\n/* harmony export */   createRouteMatcher: () => (/* reexport safe */ _routeMatcher__WEBPACK_IMPORTED_MODULE_6__.createRouteMatcher),\n/* harmony export */   currentUser: () => (/* reexport safe */ _app_router_server_currentUser__WEBPACK_IMPORTED_MODULE_7__.currentUser),\n/* harmony export */   getAuth: () => (/* reexport safe */ _createGetAuth__WEBPACK_IMPORTED_MODULE_8__.getAuth),\n/* harmony export */   redirectToSignIn: () => (/* reexport safe */ _redirectHelpers__WEBPACK_IMPORTED_MODULE_9__.redirectToSignIn),\n/* harmony export */   redirectToSignUp: () => (/* reexport safe */ _redirectHelpers__WEBPACK_IMPORTED_MODULE_9__.redirectToSignUp),\n/* harmony export */   verifyToken: () => (/* reexport safe */ _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.verifyToken)\n/* harmony export */ });\n/* harmony import */ var _routeMatcher__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./routeMatcher */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/routeMatcher.js\");\n/* harmony import */ var _clerk_backend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend */ \"(middleware)/./node_modules/@clerk/backend/dist/index.mjs\");\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _createGetAuth__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./createGetAuth */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js\");\n/* harmony import */ var _buildClerkProps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./buildClerkProps */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js\");\n/* harmony import */ var _app_router_server_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app-router/server/auth */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\");\n/* harmony import */ var _app_router_server_currentUser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../app-router/server/currentUser */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js\");\n/* harmony import */ var _clerkMiddleware__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clerkMiddleware */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/clerkMiddleware.js\");\n/* harmony import */ var _authMiddleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./authMiddleware */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/authMiddleware.js\");\n/* harmony import */ var _redirectHelpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./redirectHelpers */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/redirectHelpers.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBb0Q7QUFDWTtBQUNwQjtBQUNGO0FBQ1U7QUFDSDtBQUNjO0FBQ1g7QUFDRjtBQUNxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvaW5kZXguanM/ODkwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVSb3V0ZU1hdGNoZXIgfSBmcm9tIFwiLi9yb3V0ZU1hdGNoZXJcIjtcbmltcG9ydCB7IHZlcmlmeVRva2VuLCBjcmVhdGVDbGVya0NsaWVudCB9IGZyb20gXCJAY2xlcmsvYmFja2VuZFwiO1xuaW1wb3J0IHsgY2xlcmtDbGllbnQgfSBmcm9tIFwiLi9jbGVya0NsaWVudFwiO1xuaW1wb3J0IHsgZ2V0QXV0aCB9IGZyb20gXCIuL2NyZWF0ZUdldEF1dGhcIjtcbmltcG9ydCB7IGJ1aWxkQ2xlcmtQcm9wcyB9IGZyb20gXCIuL2J1aWxkQ2xlcmtQcm9wc1wiO1xuaW1wb3J0IHsgYXV0aCB9IGZyb20gXCIuLi9hcHAtcm91dGVyL3NlcnZlci9hdXRoXCI7XG5pbXBvcnQgeyBjdXJyZW50VXNlciB9IGZyb20gXCIuLi9hcHAtcm91dGVyL3NlcnZlci9jdXJyZW50VXNlclwiO1xuaW1wb3J0IHsgY2xlcmtNaWRkbGV3YXJlIH0gZnJvbSBcIi4vY2xlcmtNaWRkbGV3YXJlXCI7XG5pbXBvcnQgeyBhdXRoTWlkZGxld2FyZSB9IGZyb20gXCIuL2F1dGhNaWRkbGV3YXJlXCI7XG5pbXBvcnQgeyByZWRpcmVjdFRvU2lnbkluLCByZWRpcmVjdFRvU2lnblVwIH0gZnJvbSBcIi4vcmVkaXJlY3RIZWxwZXJzXCI7XG5leHBvcnQge1xuICBhdXRoLFxuICBhdXRoTWlkZGxld2FyZSxcbiAgYnVpbGRDbGVya1Byb3BzLFxuICBjbGVya0NsaWVudCxcbiAgY2xlcmtNaWRkbGV3YXJlLFxuICBjcmVhdGVDbGVya0NsaWVudCxcbiAgY3JlYXRlUm91dGVNYXRjaGVyLFxuICBjdXJyZW50VXNlcixcbiAgZ2V0QXV0aCxcbiAgcmVkaXJlY3RUb1NpZ25JbixcbiAgcmVkaXJlY3RUb1NpZ25VcCxcbiAgdmVyaWZ5VG9rZW5cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlUm91dGVNYXRjaGVyIiwidmVyaWZ5VG9rZW4iLCJjcmVhdGVDbGVya0NsaWVudCIsImNsZXJrQ2xpZW50IiwiZ2V0QXV0aCIsImJ1aWxkQ2xlcmtQcm9wcyIsImF1dGgiLCJjdXJyZW50VXNlciIsImNsZXJrTWlkZGxld2FyZSIsImF1dGhNaWRkbGV3YXJlIiwicmVkaXJlY3RUb1NpZ25JbiIsInJlZGlyZWN0VG9TaWduVXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/protect.js":
/*!***************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/protect.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createProtect: () => (/* binding */ createProtect)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/constants.js\");\n\n\nconst createProtect = opts => {\n  const {\n    redirectToSignIn,\n    authObject,\n    redirect,\n    notFound,\n    request\n  } = opts;\n  return (...args) => {\n    var _a, _b, _c, _d, _e, _f;\n    const optionValuesAsParam = ((_a = args[0]) == null ? void 0 : _a.unauthenticatedUrl) || ((_b = args[0]) == null ? void 0 : _b.unauthorizedUrl);\n    const paramsOrFunction = optionValuesAsParam ? void 0 : args[0];\n    const unauthenticatedUrl = ((_c = args[0]) == null ? void 0 : _c.unauthenticatedUrl) || ((_d = args[1]) == null ? void 0 : _d.unauthenticatedUrl);\n    const unauthorizedUrl = ((_e = args[0]) == null ? void 0 : _e.unauthorizedUrl) || ((_f = args[1]) == null ? void 0 : _f.unauthorizedUrl);\n    const handleUnauthenticated = () => {\n      if (unauthenticatedUrl) {\n        return redirect(unauthenticatedUrl);\n      }\n      if (isPageRequest(request)) {\n        return redirectToSignIn();\n      }\n      return notFound();\n    };\n    const handleUnauthorized = () => {\n      if (unauthorizedUrl) {\n        return redirect(unauthorizedUrl);\n      }\n      return notFound();\n    };\n    if (!authObject.userId) {\n      return handleUnauthenticated();\n    }\n    if (!paramsOrFunction) {\n      return authObject;\n    }\n    if (typeof paramsOrFunction === \"function\") {\n      if (paramsOrFunction(authObject.has)) {\n        return authObject;\n      }\n      return handleUnauthorized();\n    }\n    if (authObject.has(paramsOrFunction)) {\n      return authObject;\n    }\n    return handleUnauthorized();\n  };\n};\nconst isServerActionRequest = req => {\n  var _a, _b;\n  return !!req.headers.get(_constants__WEBPACK_IMPORTED_MODULE_1__.constants.Headers.NextUrl) && (((_a = req.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.Accept)) == null ? void 0 : _a.includes(\"text/x-component\")) || ((_b = req.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ContentType)) == null ? void 0 : _b.includes(\"multipart/form-data\")) || !!req.headers.get(_constants__WEBPACK_IMPORTED_MODULE_1__.constants.Headers.NextAction));\n};\nconst isPageRequest = req => {\n  var _a;\n  return req.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.SecFetchDest) === \"document\" || ((_a = req.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.Accept)) == null ? void 0 : _a.includes(\"text/html\")) || !!req.headers.get(_constants__WEBPACK_IMPORTED_MODULE_1__.constants.Headers.NextUrl) && !isServerActionRequest(req) || !!req.headers.get(_constants__WEBPACK_IMPORTED_MODULE_1__.constants.Headers.NextjsData);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL3Byb3RlY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9EO0FBQ007QUFDMUQsTUFBTUUsYUFBYSxHQUFJQyxJQUFJLElBQUs7RUFDOUIsTUFBTTtJQUFFQyxnQkFBZ0I7SUFBRUMsVUFBVTtJQUFFQyxRQUFRO0lBQUVDLFFBQVE7SUFBRUM7RUFBUSxDQUFDLEdBQUdMLElBQUk7RUFDMUUsT0FBTyxDQUFDLEdBQUdNLElBQUksS0FBSztJQUNsQixJQUFJQyxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsRUFBRSxFQUFFQyxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsRUFBRTtJQUMxQixNQUFNQyxtQkFBbUIsR0FBRyxDQUFDLENBQUNOLEVBQUUsR0FBR0QsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLElBQUksR0FBRyxLQUFLLENBQUMsR0FBR0MsRUFBRSxDQUFDTyxrQkFBa0IsTUFBTSxDQUFDTixFQUFFLEdBQUdGLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUdFLEVBQUUsQ0FBQ08sZUFBZSxDQUFDO0lBQy9JLE1BQU1DLGdCQUFnQixHQUFHSCxtQkFBbUIsR0FBRyxLQUFLLENBQUMsR0FBR1AsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUMvRCxNQUFNUSxrQkFBa0IsR0FBRyxDQUFDLENBQUNMLEVBQUUsR0FBR0gsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLElBQUksR0FBRyxLQUFLLENBQUMsR0FBR0csRUFBRSxDQUFDSyxrQkFBa0IsTUFBTSxDQUFDSixFQUFFLEdBQUdKLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUdJLEVBQUUsQ0FBQ0ksa0JBQWtCLENBQUM7SUFDakosTUFBTUMsZUFBZSxHQUFHLENBQUMsQ0FBQ0osRUFBRSxHQUFHTCxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHSyxFQUFFLENBQUNJLGVBQWUsTUFBTSxDQUFDSCxFQUFFLEdBQUdOLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUdNLEVBQUUsQ0FBQ0csZUFBZSxDQUFDO0lBQ3hJLE1BQU1FLHFCQUFxQixHQUFHQSxDQUFBLEtBQU07TUFDbEMsSUFBSUgsa0JBQWtCLEVBQUU7UUFDdEIsT0FBT1gsUUFBUSxDQUFDVyxrQkFBa0IsQ0FBQztNQUNyQztNQUNBLElBQUlJLGFBQWEsQ0FBQ2IsT0FBTyxDQUFDLEVBQUU7UUFDMUIsT0FBT0osZ0JBQWdCLENBQUMsQ0FBQztNQUMzQjtNQUNBLE9BQU9HLFFBQVEsQ0FBQyxDQUFDO0lBQ25CLENBQUM7SUFDRCxNQUFNZSxrQkFBa0IsR0FBR0EsQ0FBQSxLQUFNO01BQy9CLElBQUlKLGVBQWUsRUFBRTtRQUNuQixPQUFPWixRQUFRLENBQUNZLGVBQWUsQ0FBQztNQUNsQztNQUNBLE9BQU9YLFFBQVEsQ0FBQyxDQUFDO0lBQ25CLENBQUM7SUFDRCxJQUFJLENBQUNGLFVBQVUsQ0FBQ2tCLE1BQU0sRUFBRTtNQUN0QixPQUFPSCxxQkFBcUIsQ0FBQyxDQUFDO0lBQ2hDO0lBQ0EsSUFBSSxDQUFDRCxnQkFBZ0IsRUFBRTtNQUNyQixPQUFPZCxVQUFVO0lBQ25CO0lBQ0EsSUFBSSxPQUFPYyxnQkFBZ0IsS0FBSyxVQUFVLEVBQUU7TUFDMUMsSUFBSUEsZ0JBQWdCLENBQUNkLFVBQVUsQ0FBQ21CLEdBQUcsQ0FBQyxFQUFFO1FBQ3BDLE9BQU9uQixVQUFVO01BQ25CO01BQ0EsT0FBT2lCLGtCQUFrQixDQUFDLENBQUM7SUFDN0I7SUFDQSxJQUFJakIsVUFBVSxDQUFDbUIsR0FBRyxDQUFDTCxnQkFBZ0IsQ0FBQyxFQUFFO01BQ3BDLE9BQU9kLFVBQVU7SUFDbkI7SUFDQSxPQUFPaUIsa0JBQWtCLENBQUMsQ0FBQztFQUM3QixDQUFDO0FBQ0gsQ0FBQztBQUNELE1BQU1HLHFCQUFxQixHQUFJQyxHQUFHLElBQUs7RUFDckMsSUFBSWhCLEVBQUUsRUFBRUMsRUFBRTtFQUNWLE9BQU8sQ0FBQyxDQUFDZSxHQUFHLENBQUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDM0IsaURBQWEsQ0FBQzRCLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDcEIsRUFBRSxHQUFHZ0IsR0FBRyxDQUFDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQzVCLDhEQUFTLENBQUM2QixPQUFPLENBQUNFLE1BQU0sQ0FBQyxLQUFLLElBQUksR0FBRyxLQUFLLENBQUMsR0FBR3JCLEVBQUUsQ0FBQ3NCLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUNyQixFQUFFLEdBQUdlLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUM1Qiw4REFBUyxDQUFDNkIsT0FBTyxDQUFDSSxXQUFXLENBQUMsS0FBSyxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUd0QixFQUFFLENBQUNxQixRQUFRLENBQUMscUJBQXFCLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQ04sR0FBRyxDQUFDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQzNCLGlEQUFhLENBQUM0QixPQUFPLENBQUNLLFVBQVUsQ0FBQyxDQUFDO0FBQzVVLENBQUM7QUFDRCxNQUFNYixhQUFhLEdBQUlLLEdBQUcsSUFBSztFQUM3QixJQUFJaEIsRUFBRTtFQUNOLE9BQU9nQixHQUFHLENBQUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDNUIsOERBQVMsQ0FBQzZCLE9BQU8sQ0FBQ00sWUFBWSxDQUFDLEtBQUssVUFBVSxLQUFLLENBQUN6QixFQUFFLEdBQUdnQixHQUFHLENBQUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDNUIsOERBQVMsQ0FBQzZCLE9BQU8sQ0FBQ0UsTUFBTSxDQUFDLEtBQUssSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHckIsRUFBRSxDQUFDc0IsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDTixHQUFHLENBQUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDM0IsaURBQWEsQ0FBQzRCLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDLElBQUksQ0FBQ0wscUJBQXFCLENBQUNDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQ0EsR0FBRyxDQUFDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQzNCLGlEQUFhLENBQUM0QixPQUFPLENBQUNPLFVBQVUsQ0FBQztBQUNuVCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9wcm90ZWN0LmpzPzYwNjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uc3RhbnRzIH0gZnJvbSBcIkBjbGVyay9iYWNrZW5kL2ludGVybmFsXCI7XG5pbXBvcnQgeyBjb25zdGFudHMgYXMgbmV4dENvbnN0YW50cyB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcbmNvbnN0IGNyZWF0ZVByb3RlY3QgPSAob3B0cykgPT4ge1xuICBjb25zdCB7IHJlZGlyZWN0VG9TaWduSW4sIGF1dGhPYmplY3QsIHJlZGlyZWN0LCBub3RGb3VuZCwgcmVxdWVzdCB9ID0gb3B0cztcbiAgcmV0dXJuICguLi5hcmdzKSA9PiB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2Y7XG4gICAgY29uc3Qgb3B0aW9uVmFsdWVzQXNQYXJhbSA9ICgoX2EgPSBhcmdzWzBdKSA9PSBudWxsID8gdm9pZCAwIDogX2EudW5hdXRoZW50aWNhdGVkVXJsKSB8fCAoKF9iID0gYXJnc1swXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLnVuYXV0aG9yaXplZFVybCk7XG4gICAgY29uc3QgcGFyYW1zT3JGdW5jdGlvbiA9IG9wdGlvblZhbHVlc0FzUGFyYW0gPyB2b2lkIDAgOiBhcmdzWzBdO1xuICAgIGNvbnN0IHVuYXV0aGVudGljYXRlZFVybCA9ICgoX2MgPSBhcmdzWzBdKSA9PSBudWxsID8gdm9pZCAwIDogX2MudW5hdXRoZW50aWNhdGVkVXJsKSB8fCAoKF9kID0gYXJnc1sxXSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9kLnVuYXV0aGVudGljYXRlZFVybCk7XG4gICAgY29uc3QgdW5hdXRob3JpemVkVXJsID0gKChfZSA9IGFyZ3NbMF0pID09IG51bGwgPyB2b2lkIDAgOiBfZS51bmF1dGhvcml6ZWRVcmwpIHx8ICgoX2YgPSBhcmdzWzFdKSA9PSBudWxsID8gdm9pZCAwIDogX2YudW5hdXRob3JpemVkVXJsKTtcbiAgICBjb25zdCBoYW5kbGVVbmF1dGhlbnRpY2F0ZWQgPSAoKSA9PiB7XG4gICAgICBpZiAodW5hdXRoZW50aWNhdGVkVXJsKSB7XG4gICAgICAgIHJldHVybiByZWRpcmVjdCh1bmF1dGhlbnRpY2F0ZWRVcmwpO1xuICAgICAgfVxuICAgICAgaWYgKGlzUGFnZVJlcXVlc3QocmVxdWVzdCkpIHtcbiAgICAgICAgcmV0dXJuIHJlZGlyZWN0VG9TaWduSW4oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBub3RGb3VuZCgpO1xuICAgIH07XG4gICAgY29uc3QgaGFuZGxlVW5hdXRob3JpemVkID0gKCkgPT4ge1xuICAgICAgaWYgKHVuYXV0aG9yaXplZFVybCkge1xuICAgICAgICByZXR1cm4gcmVkaXJlY3QodW5hdXRob3JpemVkVXJsKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBub3RGb3VuZCgpO1xuICAgIH07XG4gICAgaWYgKCFhdXRoT2JqZWN0LnVzZXJJZCkge1xuICAgICAgcmV0dXJuIGhhbmRsZVVuYXV0aGVudGljYXRlZCgpO1xuICAgIH1cbiAgICBpZiAoIXBhcmFtc09yRnVuY3Rpb24pIHtcbiAgICAgIHJldHVybiBhdXRoT2JqZWN0O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHBhcmFtc09yRnVuY3Rpb24gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgaWYgKHBhcmFtc09yRnVuY3Rpb24oYXV0aE9iamVjdC5oYXMpKSB7XG4gICAgICAgIHJldHVybiBhdXRoT2JqZWN0O1xuICAgICAgfVxuICAgICAgcmV0dXJuIGhhbmRsZVVuYXV0aG9yaXplZCgpO1xuICAgIH1cbiAgICBpZiAoYXV0aE9iamVjdC5oYXMocGFyYW1zT3JGdW5jdGlvbikpIHtcbiAgICAgIHJldHVybiBhdXRoT2JqZWN0O1xuICAgIH1cbiAgICByZXR1cm4gaGFuZGxlVW5hdXRob3JpemVkKCk7XG4gIH07XG59O1xuY29uc3QgaXNTZXJ2ZXJBY3Rpb25SZXF1ZXN0ID0gKHJlcSkgPT4ge1xuICB2YXIgX2EsIF9iO1xuICByZXR1cm4gISFyZXEuaGVhZGVycy5nZXQobmV4dENvbnN0YW50cy5IZWFkZXJzLk5leHRVcmwpICYmICgoKF9hID0gcmVxLmhlYWRlcnMuZ2V0KGNvbnN0YW50cy5IZWFkZXJzLkFjY2VwdCkpID09IG51bGwgPyB2b2lkIDAgOiBfYS5pbmNsdWRlcyhcInRleHQveC1jb21wb25lbnRcIikpIHx8ICgoX2IgPSByZXEuaGVhZGVycy5nZXQoY29uc3RhbnRzLkhlYWRlcnMuQ29udGVudFR5cGUpKSA9PSBudWxsID8gdm9pZCAwIDogX2IuaW5jbHVkZXMoXCJtdWx0aXBhcnQvZm9ybS1kYXRhXCIpKSB8fCAhIXJlcS5oZWFkZXJzLmdldChuZXh0Q29uc3RhbnRzLkhlYWRlcnMuTmV4dEFjdGlvbikpO1xufTtcbmNvbnN0IGlzUGFnZVJlcXVlc3QgPSAocmVxKSA9PiB7XG4gIHZhciBfYTtcbiAgcmV0dXJuIHJlcS5oZWFkZXJzLmdldChjb25zdGFudHMuSGVhZGVycy5TZWNGZXRjaERlc3QpID09PSBcImRvY3VtZW50XCIgfHwgKChfYSA9IHJlcS5oZWFkZXJzLmdldChjb25zdGFudHMuSGVhZGVycy5BY2NlcHQpKSA9PSBudWxsID8gdm9pZCAwIDogX2EuaW5jbHVkZXMoXCJ0ZXh0L2h0bWxcIikpIHx8ICEhcmVxLmhlYWRlcnMuZ2V0KG5leHRDb25zdGFudHMuSGVhZGVycy5OZXh0VXJsKSAmJiAhaXNTZXJ2ZXJBY3Rpb25SZXF1ZXN0KHJlcSkgfHwgISFyZXEuaGVhZGVycy5nZXQobmV4dENvbnN0YW50cy5IZWFkZXJzLk5leHRqc0RhdGEpO1xufTtcbmV4cG9ydCB7XG4gIGNyZWF0ZVByb3RlY3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm90ZWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJjb25zdGFudHMiLCJuZXh0Q29uc3RhbnRzIiwiY3JlYXRlUHJvdGVjdCIsIm9wdHMiLCJyZWRpcmVjdFRvU2lnbkluIiwiYXV0aE9iamVjdCIsInJlZGlyZWN0Iiwibm90Rm91bmQiLCJyZXF1ZXN0IiwiYXJncyIsIl9hIiwiX2IiLCJfYyIsIl9kIiwiX2UiLCJfZiIsIm9wdGlvblZhbHVlc0FzUGFyYW0iLCJ1bmF1dGhlbnRpY2F0ZWRVcmwiLCJ1bmF1dGhvcml6ZWRVcmwiLCJwYXJhbXNPckZ1bmN0aW9uIiwiaGFuZGxlVW5hdXRoZW50aWNhdGVkIiwiaXNQYWdlUmVxdWVzdCIsImhhbmRsZVVuYXV0aG9yaXplZCIsInVzZXJJZCIsImhhcyIsImlzU2VydmVyQWN0aW9uUmVxdWVzdCIsInJlcSIsImhlYWRlcnMiLCJnZXQiLCJIZWFkZXJzIiwiTmV4dFVybCIsIkFjY2VwdCIsImluY2x1ZGVzIiwiQ29udGVudFR5cGUiLCJOZXh0QWN0aW9uIiwiU2VjRmV0Y2hEZXN0IiwiTmV4dGpzRGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/protect.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/redirectHelpers.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/redirectHelpers.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   redirectToSignIn: () => (/* binding */ redirectToSignIn),\n/* harmony export */   redirectToSignUp: () => (/* binding */ redirectToSignUp)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n\n\n\n\nconst redirectAdapter = url => {\n  const res = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(url);\n  return (0,_utils__WEBPACK_IMPORTED_MODULE_2__.setHeader)(res, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkRedirectTo, \"true\");\n};\nconst redirectHelpers = (0,_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.createRedirect)({\n  redirectAdapter,\n  signInUrl: _constants__WEBPACK_IMPORTED_MODULE_3__.SIGN_IN_URL,\n  signUpUrl: _constants__WEBPACK_IMPORTED_MODULE_3__.SIGN_UP_URL,\n  publishableKey: _constants__WEBPACK_IMPORTED_MODULE_3__.PUBLISHABLE_KEY,\n  // We're setting baseUrl to '' here as we want to keep the legacy behavior of\n  // the redirectToSignIn, redirectToSignUp helpers in the backend package.\n  baseUrl: \"\"\n});\nconst redirectToSignIn = redirectHelpers.redirectToSignIn;\nconst redirectToSignUp = redirectHelpers.redirectToSignUp;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL3JlZGlyZWN0SGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBb0U7QUFDekI7QUFDTjtBQUNtQztBQUN4RSxNQUFNTyxlQUFlLEdBQUlDLEdBQUcsSUFBSztFQUMvQixNQUFNQyxHQUFHLEdBQUdQLHFEQUFZLENBQUNRLFFBQVEsQ0FBQ0YsR0FBRyxDQUFDO0VBQ3RDLE9BQU9MLGlEQUFTLENBQUNNLEdBQUcsRUFBRVQsOERBQVMsQ0FBQ1csT0FBTyxDQUFDQyxlQUFlLEVBQUUsTUFBTSxDQUFDO0FBQ2xFLENBQUM7QUFDRCxNQUFNQyxlQUFlLEdBQUdaLHVFQUFjLENBQUM7RUFDckNNLGVBQWU7RUFDZk8sU0FBUyxFQUFFVCxtREFBVztFQUN0QlUsU0FBUyxFQUFFVCxtREFBVztFQUN0QlUsY0FBYyxFQUFFWix1REFBZTtFQUMvQjtFQUNBO0VBQ0FhLE9BQU8sRUFBRTtBQUNYLENBQUMsQ0FBQztBQUNGLE1BQU1DLGdCQUFnQixHQUFHTCxlQUFlLENBQUNLLGdCQUFnQjtBQUN6RCxNQUFNQyxnQkFBZ0IsR0FBR04sZUFBZSxDQUFDTSxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL3JlZGlyZWN0SGVscGVycy5qcz81ZWRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbnN0YW50cywgY3JlYXRlUmVkaXJlY3QgfSBmcm9tIFwiQGNsZXJrL2JhY2tlbmQvaW50ZXJuYWxcIjtcbmltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuaW1wb3J0IHsgc2V0SGVhZGVyIH0gZnJvbSBcIi4uL3V0aWxzXCI7XG5pbXBvcnQgeyBQVUJMSVNIQUJMRV9LRVksIFNJR05fSU5fVVJMLCBTSUdOX1VQX1VSTCB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuY29uc3QgcmVkaXJlY3RBZGFwdGVyID0gKHVybCkgPT4ge1xuICBjb25zdCByZXMgPSBOZXh0UmVzcG9uc2UucmVkaXJlY3QodXJsKTtcbiAgcmV0dXJuIHNldEhlYWRlcihyZXMsIGNvbnN0YW50cy5IZWFkZXJzLkNsZXJrUmVkaXJlY3RUbywgXCJ0cnVlXCIpO1xufTtcbmNvbnN0IHJlZGlyZWN0SGVscGVycyA9IGNyZWF0ZVJlZGlyZWN0KHtcbiAgcmVkaXJlY3RBZGFwdGVyLFxuICBzaWduSW5Vcmw6IFNJR05fSU5fVVJMLFxuICBzaWduVXBVcmw6IFNJR05fVVBfVVJMLFxuICBwdWJsaXNoYWJsZUtleTogUFVCTElTSEFCTEVfS0VZLFxuICAvLyBXZSdyZSBzZXR0aW5nIGJhc2VVcmwgdG8gJycgaGVyZSBhcyB3ZSB3YW50IHRvIGtlZXAgdGhlIGxlZ2FjeSBiZWhhdmlvciBvZlxuICAvLyB0aGUgcmVkaXJlY3RUb1NpZ25JbiwgcmVkaXJlY3RUb1NpZ25VcCBoZWxwZXJzIGluIHRoZSBiYWNrZW5kIHBhY2thZ2UuXG4gIGJhc2VVcmw6IFwiXCJcbn0pO1xuY29uc3QgcmVkaXJlY3RUb1NpZ25JbiA9IHJlZGlyZWN0SGVscGVycy5yZWRpcmVjdFRvU2lnbkluO1xuY29uc3QgcmVkaXJlY3RUb1NpZ25VcCA9IHJlZGlyZWN0SGVscGVycy5yZWRpcmVjdFRvU2lnblVwO1xuZXhwb3J0IHtcbiAgcmVkaXJlY3RUb1NpZ25JbixcbiAgcmVkaXJlY3RUb1NpZ25VcFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZGlyZWN0SGVscGVycy5qcy5tYXAiXSwibmFtZXMiOlsiY29uc3RhbnRzIiwiY3JlYXRlUmVkaXJlY3QiLCJOZXh0UmVzcG9uc2UiLCJzZXRIZWFkZXIiLCJQVUJMSVNIQUJMRV9LRVkiLCJTSUdOX0lOX1VSTCIsIlNJR05fVVBfVVJMIiwicmVkaXJlY3RBZGFwdGVyIiwidXJsIiwicmVzIiwicmVkaXJlY3QiLCJIZWFkZXJzIiwiQ2xlcmtSZWRpcmVjdFRvIiwicmVkaXJlY3RIZWxwZXJzIiwic2lnbkluVXJsIiwic2lnblVwVXJsIiwicHVibGlzaGFibGVLZXkiLCJiYXNlVXJsIiwicmVkaXJlY3RUb1NpZ25JbiIsInJlZGlyZWN0VG9TaWduVXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/redirectHelpers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/routeMatcher.js":
/*!********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/routeMatcher.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRouteMatcher: () => (/* binding */ createRouteMatcher)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/index.js\");\n\nconst createRouteMatcher = routes => {\n  if (typeof routes === \"function\") {\n    return req => routes(req);\n  }\n  const routePatterns = [routes || \"\"].flat().filter(Boolean);\n  const matchers = precomputePathRegex(routePatterns);\n  return req => matchers.some(matcher => matcher.test(req.nextUrl.pathname));\n};\nconst precomputePathRegex = patterns => {\n  return patterns.map(pattern => pattern instanceof RegExp ? pattern : _utils__WEBPACK_IMPORTED_MODULE_0__.paths.toRegexp(pattern));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL3JvdXRlTWF0Y2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpQztBQUNqQyxNQUFNQyxrQkFBa0IsR0FBSUMsTUFBTSxJQUFLO0VBQ3JDLElBQUksT0FBT0EsTUFBTSxLQUFLLFVBQVUsRUFBRTtJQUNoQyxPQUFRQyxHQUFHLElBQUtELE1BQU0sQ0FBQ0MsR0FBRyxDQUFDO0VBQzdCO0VBQ0EsTUFBTUMsYUFBYSxHQUFHLENBQUNGLE1BQU0sSUFBSSxFQUFFLENBQUMsQ0FBQ0csSUFBSSxDQUFDLENBQUMsQ0FBQ0MsTUFBTSxDQUFDQyxPQUFPLENBQUM7RUFDM0QsTUFBTUMsUUFBUSxHQUFHQyxtQkFBbUIsQ0FBQ0wsYUFBYSxDQUFDO0VBQ25ELE9BQVFELEdBQUcsSUFBS0ssUUFBUSxDQUFDRSxJQUFJLENBQUVDLE9BQU8sSUFBS0EsT0FBTyxDQUFDQyxJQUFJLENBQUNULEdBQUcsQ0FBQ1UsT0FBTyxDQUFDQyxRQUFRLENBQUMsQ0FBQztBQUNoRixDQUFDO0FBQ0QsTUFBTUwsbUJBQW1CLEdBQUlNLFFBQVEsSUFBSztFQUN4QyxPQUFPQSxRQUFRLENBQUNDLEdBQUcsQ0FBRUMsT0FBTyxJQUFLQSxPQUFPLFlBQVlDLE1BQU0sR0FBR0QsT0FBTyxHQUFHakIseUNBQUssQ0FBQ21CLFFBQVEsQ0FBQ0YsT0FBTyxDQUFDLENBQUM7QUFDakcsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvcm91dGVNYXRjaGVyLmpzPzM2ZDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGF0aHMgfSBmcm9tIFwiLi4vdXRpbHNcIjtcbmNvbnN0IGNyZWF0ZVJvdXRlTWF0Y2hlciA9IChyb3V0ZXMpID0+IHtcbiAgaWYgKHR5cGVvZiByb3V0ZXMgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJldHVybiAocmVxKSA9PiByb3V0ZXMocmVxKTtcbiAgfVxuICBjb25zdCByb3V0ZVBhdHRlcm5zID0gW3JvdXRlcyB8fCBcIlwiXS5mbGF0KCkuZmlsdGVyKEJvb2xlYW4pO1xuICBjb25zdCBtYXRjaGVycyA9IHByZWNvbXB1dGVQYXRoUmVnZXgocm91dGVQYXR0ZXJucyk7XG4gIHJldHVybiAocmVxKSA9PiBtYXRjaGVycy5zb21lKChtYXRjaGVyKSA9PiBtYXRjaGVyLnRlc3QocmVxLm5leHRVcmwucGF0aG5hbWUpKTtcbn07XG5jb25zdCBwcmVjb21wdXRlUGF0aFJlZ2V4ID0gKHBhdHRlcm5zKSA9PiB7XG4gIHJldHVybiBwYXR0ZXJucy5tYXAoKHBhdHRlcm4pID0+IHBhdHRlcm4gaW5zdGFuY2VvZiBSZWdFeHAgPyBwYXR0ZXJuIDogcGF0aHMudG9SZWdleHAocGF0dGVybikpO1xufTtcbmV4cG9ydCB7XG4gIGNyZWF0ZVJvdXRlTWF0Y2hlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRlTWF0Y2hlci5qcy5tYXAiXSwibmFtZXMiOlsicGF0aHMiLCJjcmVhdGVSb3V0ZU1hdGNoZXIiLCJyb3V0ZXMiLCJyZXEiLCJyb3V0ZVBhdHRlcm5zIiwiZmxhdCIsImZpbHRlciIsIkJvb2xlYW4iLCJtYXRjaGVycyIsInByZWNvbXB1dGVQYXRoUmVnZXgiLCJzb21lIiwibWF0Y2hlciIsInRlc3QiLCJuZXh0VXJsIiwicGF0aG5hbWUiLCJwYXR0ZXJucyIsIm1hcCIsInBhdHRlcm4iLCJSZWdFeHAiLCJ0b1JlZ2V4cCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/routeMatcher.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiEndpointUnauthorizedNextResponse: () => (/* binding */ apiEndpointUnauthorizedNextResponse),\n/* harmony export */   assertKey: () => (/* binding */ assertKey),\n/* harmony export */   assertTokenSignature: () => (/* binding */ assertTokenSignature),\n/* harmony export */   decorateRequest: () => (/* binding */ decorateRequest),\n/* harmony export */   getAuthKeyFromRequest: () => (/* binding */ getAuthKeyFromRequest),\n/* harmony export */   getAuthStatusFromRequest: () => (/* binding */ getAuthStatusFromRequest),\n/* harmony export */   getCookie: () => (/* binding */ getCookie),\n/* harmony export */   getCustomAttributeFromRequest: () => (/* binding */ getCustomAttributeFromRequest),\n/* harmony export */   getHeader: () => (/* binding */ getHeader),\n/* harmony export */   handleMultiDomainAndProxy: () => (/* binding */ handleMultiDomainAndProxy),\n/* harmony export */   injectSSRStateIntoObject: () => (/* binding */ injectSSRStateIntoObject),\n/* harmony export */   isCrossOrigin: () => (/* binding */ isCrossOrigin),\n/* harmony export */   redirectAdapter: () => (/* binding */ redirectAdapter),\n/* harmony export */   setCustomAttributeOnRequest: () => (/* binding */ setCustomAttributeOnRequest),\n/* harmony export */   setRequestHeadersOnNextResponse: () => (/* binding */ setRequestHeadersOnNextResponse)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/handleValueOrFn */ \"(middleware)/./node_modules/@clerk/shared/dist/handleValueOrFn.mjs\");\n/* harmony import */ var _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/keys */ \"(middleware)/./node_modules/@clerk/shared/dist/keys.mjs\");\n/* harmony import */ var _clerk_shared_proxy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/proxy */ \"(middleware)/./node_modules/@clerk/shared/dist/proxy.mjs\");\n/* harmony import */ var crypto_js_hmac_sha1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! crypto-js/hmac-sha1 */ \"(middleware)/./node_modules/crypto-js/hmac-sha1.js\");\n/* harmony import */ var crypto_js_hmac_sha1__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(crypto_js_hmac_sha1__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/constants.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./errors */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/errors.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n\n\n\n\nfunction setCustomAttributeOnRequest(req, key, value) {\n  Object.assign(req, {\n    [key]: value\n  });\n}\nfunction getCustomAttributeFromRequest(req, key) {\n  return key in req ? req[key] : void 0;\n}\nfunction getAuthKeyFromRequest(req, key) {\n  return getCustomAttributeFromRequest(req, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Attributes[key]) || getHeader(req, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers[key]);\n}\nfunction getAuthStatusFromRequest(req) {\n  return getCustomAttributeFromRequest(req, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Attributes.AuthStatus) || getHeader(req, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthStatus);\n}\nfunction getHeader(req, name) {\n  var _a, _b;\n  if (isNextRequest(req)) {\n    return req.headers.get(name);\n  }\n  return req.headers[name] || req.headers[name.toLowerCase()] || ((_b = (_a = req.socket) == null ? void 0 : _a._httpMessage) == null ? void 0 : _b.getHeader(name));\n}\nfunction getCookie(req, name) {\n  if (isNextRequest(req)) {\n    const reqCookieOrString = req.cookies.get(name);\n    if (!reqCookieOrString) {\n      return void 0;\n    }\n    return typeof reqCookieOrString === \"string\" ? reqCookieOrString : reqCookieOrString.value;\n  }\n  return req.cookies[name];\n}\nfunction isNextRequest(val) {\n  try {\n    const {\n      headers,\n      nextUrl,\n      cookies\n    } = val || {};\n    return typeof (headers == null ? void 0 : headers.get) === \"function\" && typeof (nextUrl == null ? void 0 : nextUrl.searchParams.get) === \"function\" && typeof (cookies == null ? void 0 : cookies.get) === \"function\";\n  } catch (e) {\n    return false;\n  }\n}\nconst OVERRIDE_HEADERS = \"x-middleware-override-headers\";\nconst MIDDLEWARE_HEADER_PREFIX = \"x-middleware-request\";\nconst setRequestHeadersOnNextResponse = (res, req, newHeaders) => {\n  if (!res.headers.get(OVERRIDE_HEADERS)) {\n    res.headers.set(OVERRIDE_HEADERS, [...req.headers.keys()]);\n    req.headers.forEach((val, key) => {\n      res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n    });\n  }\n  Object.entries(newHeaders).forEach(([key, val]) => {\n    res.headers.set(OVERRIDE_HEADERS, `${res.headers.get(OVERRIDE_HEADERS)},${key}`);\n    res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n  });\n};\nconst injectSSRStateIntoObject = (obj, authObject) => {\n  const __clerk_ssr_state =  true ? JSON.parse(JSON.stringify(_objectSpread({}, authObject))) : 0;\n  return _objectSpread(_objectSpread({}, obj), {}, {\n    __clerk_ssr_state\n  });\n};\nfunction decorateRequest(req, res, requestState, secretKey) {\n  const {\n    reason,\n    message,\n    status,\n    token\n  } = requestState;\n  if (!res) {\n    res = next_server__WEBPACK_IMPORTED_MODULE_5__.NextResponse.next();\n  }\n  if (res.headers.get(_constants__WEBPACK_IMPORTED_MODULE_6__.constants.Headers.NextRedirect)) {\n    return res;\n  }\n  let rewriteURL;\n  if (res.headers.get(_constants__WEBPACK_IMPORTED_MODULE_6__.constants.Headers.NextResume) === \"1\") {\n    res.headers.delete(_constants__WEBPACK_IMPORTED_MODULE_6__.constants.Headers.NextResume);\n    rewriteURL = new URL(req.url);\n  }\n  const rewriteURLHeader = res.headers.get(_constants__WEBPACK_IMPORTED_MODULE_6__.constants.Headers.NextRewrite);\n  if (rewriteURLHeader) {\n    const reqURL = new URL(req.url);\n    rewriteURL = new URL(rewriteURLHeader);\n    if (rewriteURL.origin !== reqURL.origin) {\n      return res;\n    }\n  }\n  if (rewriteURL) {\n    setRequestHeadersOnNextResponse(res, req, {\n      [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthStatus]: status,\n      [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthToken]: token || \"\",\n      [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthSignature]: token ? createTokenSignature(token, secretKey) : \"\",\n      [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthMessage]: message || \"\",\n      [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason]: reason || \"\",\n      [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkUrl]: req.clerkUrl.toString()\n    });\n    res.headers.set(_constants__WEBPACK_IMPORTED_MODULE_6__.constants.Headers.NextRewrite, rewriteURL.href);\n  }\n  return res;\n}\nconst apiEndpointUnauthorizedNextResponse = () => {\n  return next_server__WEBPACK_IMPORTED_MODULE_5__.NextResponse.json(null, {\n    status: 401,\n    statusText: \"Unauthorized\"\n  });\n};\nconst isCrossOrigin = (from, to) => {\n  const fromUrl = new URL(from);\n  const toUrl = new URL(to);\n  return fromUrl.origin !== toUrl.origin;\n};\nconst handleMultiDomainAndProxy = (clerkRequest, opts) => {\n  const relativeOrAbsoluteProxyUrl = (0,_clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_1__.handleValueOrFn)(opts == null ? void 0 : opts.proxyUrl, clerkRequest.clerkUrl, _constants__WEBPACK_IMPORTED_MODULE_7__.PROXY_URL);\n  let proxyUrl;\n  if (!!relativeOrAbsoluteProxyUrl && !(0,_clerk_shared_proxy__WEBPACK_IMPORTED_MODULE_3__.isHttpOrHttps)(relativeOrAbsoluteProxyUrl)) {\n    proxyUrl = new URL(relativeOrAbsoluteProxyUrl, clerkRequest.clerkUrl).toString();\n  } else {\n    proxyUrl = relativeOrAbsoluteProxyUrl;\n  }\n  const isSatellite = (0,_clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_1__.handleValueOrFn)(opts.isSatellite, new URL(clerkRequest.url), _constants__WEBPACK_IMPORTED_MODULE_7__.IS_SATELLITE);\n  const domain = (0,_clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_1__.handleValueOrFn)(opts.domain, new URL(clerkRequest.url), _constants__WEBPACK_IMPORTED_MODULE_7__.DOMAIN);\n  const signInUrl = (opts == null ? void 0 : opts.signInUrl) || _constants__WEBPACK_IMPORTED_MODULE_7__.SIGN_IN_URL;\n  if (isSatellite && !proxyUrl && !domain) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_8__.missingDomainAndProxy);\n  }\n  if (isSatellite && !(0,_clerk_shared_proxy__WEBPACK_IMPORTED_MODULE_3__.isHttpOrHttps)(signInUrl) && (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_2__.isDevelopmentFromSecretKey)(opts.secretKey || _constants__WEBPACK_IMPORTED_MODULE_7__.SECRET_KEY)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_8__.missingSignInUrlInDev);\n  }\n  return {\n    proxyUrl,\n    isSatellite,\n    domain,\n    signInUrl\n  };\n};\nconst redirectAdapter = url => {\n  return next_server__WEBPACK_IMPORTED_MODULE_5__.NextResponse.redirect(url, {\n    headers: {\n      [_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkRedirectTo]: \"true\"\n    }\n  });\n};\nfunction assertKey(key, onError) {\n  if (!key) {\n    onError();\n  }\n  return key;\n}\nfunction createTokenSignature(token, key) {\n  return crypto_js_hmac_sha1__WEBPACK_IMPORTED_MODULE_4___default()(token, key).toString();\n}\nfunction assertTokenSignature(token, key, signature) {\n  if (!signature) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_8__.authSignatureInvalid);\n  }\n  const expectedSignature = createTokenSignature(token, key);\n  if (expectedSignature !== signature) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_8__.authSignatureInvalid);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/server/utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js":
/*!******************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDebugLogger: () => (/* binding */ createDebugLogger),\n/* harmony export */   withLogger: () => (/* binding */ withLogger)\n/* harmony export */ });\n/* harmony import */ var next_package_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/package.json */ \"(middleware)/./node_modules/next/package.json\");\n/* harmony import */ var _logFormatter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logFormatter */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/logFormatter.js\");\n\n\nconst createDebugLogger = (name, formatter) => () => {\n  const entries = [];\n  let isEnabled = false;\n  return {\n    enable: () => {\n      isEnabled = true;\n    },\n    debug: (...args) => {\n      if (isEnabled) {\n        entries.push(args.map(arg => typeof arg === \"function\" ? arg() : arg));\n      }\n    },\n    commit: () => {\n      if (isEnabled) {\n        console.log(debugLogHeader(name));\n        for (const log of entries) {\n          let output = formatter(log);\n          output = output.split(\"\\n\").map(l => `  ${l}`).join(\"\\n\");\n          if (process.env.VERCEL) {\n            output = truncate(output, 4096);\n          }\n          console.log(output);\n        }\n        console.log(debugLogFooter(name));\n      }\n    }\n  };\n};\nconst withLogger = (loggerFactoryOrName, handlerCtor) => {\n  return (...args) => {\n    const factory = typeof loggerFactoryOrName === \"string\" ? createDebugLogger(loggerFactoryOrName, _logFormatter__WEBPACK_IMPORTED_MODULE_1__.logFormatter) : loggerFactoryOrName;\n    const logger = factory();\n    const handler = handlerCtor(logger);\n    try {\n      const res = handler(...args);\n      if (typeof res === \"object\" && \"then\" in res && typeof res.then === \"function\") {\n        return res.then(val => {\n          logger.commit();\n          return val;\n        }).catch(err => {\n          logger.commit();\n          throw err;\n        });\n      }\n      logger.commit();\n      return res;\n    } catch (err) {\n      logger.commit();\n      throw err;\n    }\n  };\n};\nfunction debugLogHeader(name) {\n  return `[clerk debug start: ${name}]`;\n}\nfunction debugLogFooter(name) {\n  return `[clerk debug end: ${name}] (@clerk/nextjs=${\"5.0.2\"},next=${next_package_json__WEBPACK_IMPORTED_MODULE_0__.version})`;\n}\nfunction truncate(str, maxLength) {\n  const encoder = new TextEncoder();\n  const decoder = new TextDecoder(\"utf-8\");\n  const encodedString = encoder.encode(str);\n  const truncatedString = encodedString.slice(0, maxLength);\n  return decoder.decode(truncatedString).replace(/\\uFFFD/g, \"\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvZGVidWdMb2dnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUNNO0FBQzlDLE1BQU1FLGlCQUFpQixHQUFHQSxDQUFDQyxJQUFJLEVBQUVDLFNBQVMsS0FBSyxNQUFNO0VBQ25ELE1BQU1DLE9BQU8sR0FBRyxFQUFFO0VBQ2xCLElBQUlDLFNBQVMsR0FBRyxLQUFLO0VBQ3JCLE9BQU87SUFDTEMsTUFBTSxFQUFFQSxDQUFBLEtBQU07TUFDWkQsU0FBUyxHQUFHLElBQUk7SUFDbEIsQ0FBQztJQUNERSxLQUFLLEVBQUVBLENBQUMsR0FBR0MsSUFBSSxLQUFLO01BQ2xCLElBQUlILFNBQVMsRUFBRTtRQUNiRCxPQUFPLENBQUNLLElBQUksQ0FBQ0QsSUFBSSxDQUFDRSxHQUFHLENBQUVDLEdBQUcsSUFBSyxPQUFPQSxHQUFHLEtBQUssVUFBVSxHQUFHQSxHQUFHLENBQUMsQ0FBQyxHQUFHQSxHQUFHLENBQUMsQ0FBQztNQUMxRTtJQUNGLENBQUM7SUFDREMsTUFBTSxFQUFFQSxDQUFBLEtBQU07TUFDWixJQUFJUCxTQUFTLEVBQUU7UUFDYlEsT0FBTyxDQUFDQyxHQUFHLENBQUNDLGNBQWMsQ0FBQ2IsSUFBSSxDQUFDLENBQUM7UUFDakMsS0FBSyxNQUFNWSxHQUFHLElBQUlWLE9BQU8sRUFBRTtVQUN6QixJQUFJWSxNQUFNLEdBQUdiLFNBQVMsQ0FBQ1csR0FBRyxDQUFDO1VBQzNCRSxNQUFNLEdBQUdBLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDUCxHQUFHLENBQUVRLENBQUMsSUFBTSxLQUFJQSxDQUFFLEVBQUMsQ0FBQyxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDO1VBQzNELElBQUlDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxNQUFNLEVBQUU7WUFDdEJOLE1BQU0sR0FBR08sUUFBUSxDQUFDUCxNQUFNLEVBQUUsSUFBSSxDQUFDO1VBQ2pDO1VBQ0FILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRSxNQUFNLENBQUM7UUFDckI7UUFDQUgsT0FBTyxDQUFDQyxHQUFHLENBQUNVLGNBQWMsQ0FBQ3RCLElBQUksQ0FBQyxDQUFDO01BQ25DO0lBQ0Y7RUFDRixDQUFDO0FBQ0gsQ0FBQztBQUNELE1BQU11QixVQUFVLEdBQUdBLENBQUNDLG1CQUFtQixFQUFFQyxXQUFXLEtBQUs7RUFDdkQsT0FBTyxDQUFDLEdBQUduQixJQUFJLEtBQUs7SUFDbEIsTUFBTW9CLE9BQU8sR0FBRyxPQUFPRixtQkFBbUIsS0FBSyxRQUFRLEdBQUd6QixpQkFBaUIsQ0FBQ3lCLG1CQUFtQixFQUFFMUIsdURBQVksQ0FBQyxHQUFHMEIsbUJBQW1CO0lBQ3BJLE1BQU1HLE1BQU0sR0FBR0QsT0FBTyxDQUFDLENBQUM7SUFDeEIsTUFBTUUsT0FBTyxHQUFHSCxXQUFXLENBQUNFLE1BQU0sQ0FBQztJQUNuQyxJQUFJO01BQ0YsTUFBTUUsR0FBRyxHQUFHRCxPQUFPLENBQUMsR0FBR3RCLElBQUksQ0FBQztNQUM1QixJQUFJLE9BQU91QixHQUFHLEtBQUssUUFBUSxJQUFJLE1BQU0sSUFBSUEsR0FBRyxJQUFJLE9BQU9BLEdBQUcsQ0FBQ0MsSUFBSSxLQUFLLFVBQVUsRUFBRTtRQUM5RSxPQUFPRCxHQUFHLENBQUNDLElBQUksQ0FBRUMsR0FBRyxJQUFLO1VBQ3ZCSixNQUFNLENBQUNqQixNQUFNLENBQUMsQ0FBQztVQUNmLE9BQU9xQixHQUFHO1FBQ1osQ0FBQyxDQUFDLENBQUNDLEtBQUssQ0FBRUMsR0FBRyxJQUFLO1VBQ2hCTixNQUFNLENBQUNqQixNQUFNLENBQUMsQ0FBQztVQUNmLE1BQU11QixHQUFHO1FBQ1gsQ0FBQyxDQUFDO01BQ0o7TUFDQU4sTUFBTSxDQUFDakIsTUFBTSxDQUFDLENBQUM7TUFDZixPQUFPbUIsR0FBRztJQUNaLENBQUMsQ0FBQyxPQUFPSSxHQUFHLEVBQUU7TUFDWk4sTUFBTSxDQUFDakIsTUFBTSxDQUFDLENBQUM7TUFDZixNQUFNdUIsR0FBRztJQUNYO0VBQ0YsQ0FBQztBQUNILENBQUM7QUFDRCxTQUFTcEIsY0FBY0EsQ0FBQ2IsSUFBSSxFQUFFO0VBQzVCLE9BQVEsdUJBQXNCQSxJQUFLLEdBQUU7QUFDdkM7QUFDQSxTQUFTc0IsY0FBY0EsQ0FBQ3RCLElBQUksRUFBRTtFQUM1QixPQUFRLHFCQUFvQkEsSUFBSyxvQkFBbUIsT0FBUSxTQUFRSCxzREFBZ0IsR0FBRTtBQUN4RjtBQUNBLFNBQVN3QixRQUFRQSxDQUFDYyxHQUFHLEVBQUVDLFNBQVMsRUFBRTtFQUNoQyxNQUFNQyxPQUFPLEdBQUcsSUFBSUMsV0FBVyxDQUFDLENBQUM7RUFDakMsTUFBTUMsT0FBTyxHQUFHLElBQUlDLFdBQVcsQ0FBQyxPQUFPLENBQUM7RUFDeEMsTUFBTUMsYUFBYSxHQUFHSixPQUFPLENBQUNLLE1BQU0sQ0FBQ1AsR0FBRyxDQUFDO0VBQ3pDLE1BQU1RLGVBQWUsR0FBR0YsYUFBYSxDQUFDRyxLQUFLLENBQUMsQ0FBQyxFQUFFUixTQUFTLENBQUM7RUFDekQsT0FBT0csT0FBTyxDQUFDTSxNQUFNLENBQUNGLGVBQWUsQ0FBQyxDQUFDRyxPQUFPLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQztBQUMvRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS91dGlscy9kZWJ1Z0xvZ2dlci5qcz85MWQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBuZXh0UGtnIGZyb20gXCJuZXh0L3BhY2thZ2UuanNvblwiO1xuaW1wb3J0IHsgbG9nRm9ybWF0dGVyIH0gZnJvbSBcIi4vbG9nRm9ybWF0dGVyXCI7XG5jb25zdCBjcmVhdGVEZWJ1Z0xvZ2dlciA9IChuYW1lLCBmb3JtYXR0ZXIpID0+ICgpID0+IHtcbiAgY29uc3QgZW50cmllcyA9IFtdO1xuICBsZXQgaXNFbmFibGVkID0gZmFsc2U7XG4gIHJldHVybiB7XG4gICAgZW5hYmxlOiAoKSA9PiB7XG4gICAgICBpc0VuYWJsZWQgPSB0cnVlO1xuICAgIH0sXG4gICAgZGVidWc6ICguLi5hcmdzKSA9PiB7XG4gICAgICBpZiAoaXNFbmFibGVkKSB7XG4gICAgICAgIGVudHJpZXMucHVzaChhcmdzLm1hcCgoYXJnKSA9PiB0eXBlb2YgYXJnID09PSBcImZ1bmN0aW9uXCIgPyBhcmcoKSA6IGFyZykpO1xuICAgICAgfVxuICAgIH0sXG4gICAgY29tbWl0OiAoKSA9PiB7XG4gICAgICBpZiAoaXNFbmFibGVkKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGRlYnVnTG9nSGVhZGVyKG5hbWUpKTtcbiAgICAgICAgZm9yIChjb25zdCBsb2cgb2YgZW50cmllcykge1xuICAgICAgICAgIGxldCBvdXRwdXQgPSBmb3JtYXR0ZXIobG9nKTtcbiAgICAgICAgICBvdXRwdXQgPSBvdXRwdXQuc3BsaXQoXCJcXG5cIikubWFwKChsKSA9PiBgICAke2x9YCkuam9pbihcIlxcblwiKTtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuVkVSQ0VMKSB7XG4gICAgICAgICAgICBvdXRwdXQgPSB0cnVuY2F0ZShvdXRwdXQsIDQwOTYpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zb2xlLmxvZyhvdXRwdXQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUubG9nKGRlYnVnTG9nRm9vdGVyKG5hbWUpKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59O1xuY29uc3Qgd2l0aExvZ2dlciA9IChsb2dnZXJGYWN0b3J5T3JOYW1lLCBoYW5kbGVyQ3RvcikgPT4ge1xuICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICBjb25zdCBmYWN0b3J5ID0gdHlwZW9mIGxvZ2dlckZhY3RvcnlPck5hbWUgPT09IFwic3RyaW5nXCIgPyBjcmVhdGVEZWJ1Z0xvZ2dlcihsb2dnZXJGYWN0b3J5T3JOYW1lLCBsb2dGb3JtYXR0ZXIpIDogbG9nZ2VyRmFjdG9yeU9yTmFtZTtcbiAgICBjb25zdCBsb2dnZXIgPSBmYWN0b3J5KCk7XG4gICAgY29uc3QgaGFuZGxlciA9IGhhbmRsZXJDdG9yKGxvZ2dlcik7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlcyA9IGhhbmRsZXIoLi4uYXJncyk7XG4gICAgICBpZiAodHlwZW9mIHJlcyA9PT0gXCJvYmplY3RcIiAmJiBcInRoZW5cIiBpbiByZXMgJiYgdHlwZW9mIHJlcy50aGVuID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIHJlcy50aGVuKCh2YWwpID0+IHtcbiAgICAgICAgICBsb2dnZXIuY29tbWl0KCk7XG4gICAgICAgICAgcmV0dXJuIHZhbDtcbiAgICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgIGxvZ2dlci5jb21taXQoKTtcbiAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgbG9nZ2VyLmNvbW1pdCgpO1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGxvZ2dlci5jb21taXQoKTtcbiAgICAgIHRocm93IGVycjtcbiAgICB9XG4gIH07XG59O1xuZnVuY3Rpb24gZGVidWdMb2dIZWFkZXIobmFtZSkge1xuICByZXR1cm4gYFtjbGVyayBkZWJ1ZyBzdGFydDogJHtuYW1lfV1gO1xufVxuZnVuY3Rpb24gZGVidWdMb2dGb290ZXIobmFtZSkge1xuICByZXR1cm4gYFtjbGVyayBkZWJ1ZyBlbmQ6ICR7bmFtZX1dIChAY2xlcmsvbmV4dGpzPSR7XCI1LjAuMlwifSxuZXh0PSR7bmV4dFBrZy52ZXJzaW9ufSlgO1xufVxuZnVuY3Rpb24gdHJ1bmNhdGUoc3RyLCBtYXhMZW5ndGgpIHtcbiAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICBjb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKFwidXRmLThcIik7XG4gIGNvbnN0IGVuY29kZWRTdHJpbmcgPSBlbmNvZGVyLmVuY29kZShzdHIpO1xuICBjb25zdCB0cnVuY2F0ZWRTdHJpbmcgPSBlbmNvZGVkU3RyaW5nLnNsaWNlKDAsIG1heExlbmd0aCk7XG4gIHJldHVybiBkZWNvZGVyLmRlY29kZSh0cnVuY2F0ZWRTdHJpbmcpLnJlcGxhY2UoL1xcdUZGRkQvZywgXCJcIik7XG59XG5leHBvcnQge1xuICBjcmVhdGVEZWJ1Z0xvZ2dlcixcbiAgd2l0aExvZ2dlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlYnVnTG9nZ2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJuZXh0UGtnIiwibG9nRm9ybWF0dGVyIiwiY3JlYXRlRGVidWdMb2dnZXIiLCJuYW1lIiwiZm9ybWF0dGVyIiwiZW50cmllcyIsImlzRW5hYmxlZCIsImVuYWJsZSIsImRlYnVnIiwiYXJncyIsInB1c2giLCJtYXAiLCJhcmciLCJjb21taXQiLCJjb25zb2xlIiwibG9nIiwiZGVidWdMb2dIZWFkZXIiLCJvdXRwdXQiLCJzcGxpdCIsImwiLCJqb2luIiwicHJvY2VzcyIsImVudiIsIlZFUkNFTCIsInRydW5jYXRlIiwiZGVidWdMb2dGb290ZXIiLCJ3aXRoTG9nZ2VyIiwibG9nZ2VyRmFjdG9yeU9yTmFtZSIsImhhbmRsZXJDdG9yIiwiZmFjdG9yeSIsImxvZ2dlciIsImhhbmRsZXIiLCJyZXMiLCJ0aGVuIiwidmFsIiwiY2F0Y2giLCJlcnIiLCJ2ZXJzaW9uIiwic3RyIiwibWF4TGVuZ3RoIiwiZW5jb2RlciIsIlRleHRFbmNvZGVyIiwiZGVjb2RlciIsIlRleHREZWNvZGVyIiwiZW5jb2RlZFN0cmluZyIsImVuY29kZSIsInRydW5jYXRlZFN0cmluZyIsInNsaWNlIiwiZGVjb2RlIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pathMatchers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pathMatchers */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/pathMatchers.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _pathMatchers__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _pathMatchers__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _response__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./response */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/response.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _response__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _response__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _serverRedirectWithAuth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serverRedirectWithAuth */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/serverRedirectWithAuth.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _serverRedirectWithAuth__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _serverRedirectWithAuth__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUErQjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3V0aWxzL2luZGV4LmpzP2VlYzQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vcGF0aE1hdGNoZXJzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZXNwb25zZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2VydmVyUmVkaXJlY3RXaXRoQXV0aFwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/logFormatter.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/logFormatter.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logFormatter: () => (/* binding */ logFormatter)\n/* harmony export */ });\nconst maskSecretKey = str => {\n  if (!str || typeof str !== \"string\") {\n    return str;\n  }\n  try {\n    return (str || \"\").replace(/^(sk_(live|test)_)(.+?)(.{3})$/, \"$1*********$4\");\n  } catch (e) {\n    return \"\";\n  }\n};\nconst logFormatter = entry => {\n  return (Array.isArray(entry) ? entry : [entry]).map(entry2 => {\n    if (typeof entry2 === \"string\") {\n      return maskSecretKey(entry2);\n    }\n    const masked = Object.fromEntries(Object.entries(entry2).map(([k, v]) => [k, maskSecretKey(v)]));\n    return JSON.stringify(masked, null, 2);\n  }).join(\", \");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvbG9nRm9ybWF0dGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxhQUFhLEdBQUlDLEdBQUcsSUFBSztFQUM3QixJQUFJLENBQUNBLEdBQUcsSUFBSSxPQUFPQSxHQUFHLEtBQUssUUFBUSxFQUFFO0lBQ25DLE9BQU9BLEdBQUc7RUFDWjtFQUNBLElBQUk7SUFDRixPQUFPLENBQUNBLEdBQUcsSUFBSSxFQUFFLEVBQUVDLE9BQU8sQ0FBQyxnQ0FBZ0MsRUFBRSxlQUFlLENBQUM7RUFDL0UsQ0FBQyxDQUFDLE9BQU9DLENBQUMsRUFBRTtJQUNWLE9BQU8sRUFBRTtFQUNYO0FBQ0YsQ0FBQztBQUNELE1BQU1DLFlBQVksR0FBSUMsS0FBSyxJQUFLO0VBQzlCLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDQyxPQUFPLENBQUNGLEtBQUssQ0FBQyxHQUFHQSxLQUFLLEdBQUcsQ0FBQ0EsS0FBSyxDQUFDLEVBQUVHLEdBQUcsQ0FBRUMsTUFBTSxJQUFLO0lBQzlELElBQUksT0FBT0EsTUFBTSxLQUFLLFFBQVEsRUFBRTtNQUM5QixPQUFPVCxhQUFhLENBQUNTLE1BQU0sQ0FBQztJQUM5QjtJQUNBLE1BQU1DLE1BQU0sR0FBR0MsTUFBTSxDQUFDQyxXQUFXLENBQUNELE1BQU0sQ0FBQ0UsT0FBTyxDQUFDSixNQUFNLENBQUMsQ0FBQ0QsR0FBRyxDQUFDLENBQUMsQ0FBQ00sQ0FBQyxFQUFFQyxDQUFDLENBQUMsS0FBSyxDQUFDRCxDQUFDLEVBQUVkLGFBQWEsQ0FBQ2UsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hHLE9BQU9DLElBQUksQ0FBQ0MsU0FBUyxDQUFDUCxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztFQUN4QyxDQUFDLENBQUMsQ0FBQ1EsSUFBSSxDQUFDLElBQUksQ0FBQztBQUNmLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvbG9nRm9ybWF0dGVyLmpzPzI1OTAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbWFza1NlY3JldEtleSA9IChzdHIpID0+IHtcbiAgaWYgKCFzdHIgfHwgdHlwZW9mIHN0ciAhPT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiBzdHI7XG4gIH1cbiAgdHJ5IHtcbiAgICByZXR1cm4gKHN0ciB8fCBcIlwiKS5yZXBsYWNlKC9eKHNrXyhsaXZlfHRlc3QpXykoLis/KSguezN9KSQvLCBcIiQxKioqKioqKioqJDRcIik7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxufTtcbmNvbnN0IGxvZ0Zvcm1hdHRlciA9IChlbnRyeSkgPT4ge1xuICByZXR1cm4gKEFycmF5LmlzQXJyYXkoZW50cnkpID8gZW50cnkgOiBbZW50cnldKS5tYXAoKGVudHJ5MikgPT4ge1xuICAgIGlmICh0eXBlb2YgZW50cnkyID09PSBcInN0cmluZ1wiKSB7XG4gICAgICByZXR1cm4gbWFza1NlY3JldEtleShlbnRyeTIpO1xuICAgIH1cbiAgICBjb25zdCBtYXNrZWQgPSBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMoZW50cnkyKS5tYXAoKFtrLCB2XSkgPT4gW2ssIG1hc2tTZWNyZXRLZXkodildKSk7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG1hc2tlZCwgbnVsbCwgMik7XG4gIH0pLmpvaW4oXCIsIFwiKTtcbn07XG5leHBvcnQge1xuICBsb2dGb3JtYXR0ZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dGb3JtYXR0ZXIuanMubWFwIl0sIm5hbWVzIjpbIm1hc2tTZWNyZXRLZXkiLCJzdHIiLCJyZXBsYWNlIiwiZSIsImxvZ0Zvcm1hdHRlciIsImVudHJ5IiwiQXJyYXkiLCJpc0FycmF5IiwibWFwIiwiZW50cnkyIiwibWFza2VkIiwiT2JqZWN0IiwiZnJvbUVudHJpZXMiLCJlbnRyaWVzIiwiayIsInYiLCJKU09OIiwic3RyaW5naWZ5Iiwiam9pbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/logFormatter.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/pathMatchers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/pathMatchers.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paths: () => (/* binding */ paths)\n/* harmony export */ });\n/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path-to-regexp */ \"(middleware)/./node_modules/path-to-regexp/dist.es2015/index.js\");\n\nconst paths = {\n  toRegexp: path => {\n    try {\n      return (0,path_to_regexp__WEBPACK_IMPORTED_MODULE_0__.pathToRegexp)(path);\n    } catch (e) {\n      throw new Error(`Invalid path: ${path}.\nConsult the documentation of path-to-regexp here: https://github.com/pillarjs/path-to-regexp\n${e.message}`);\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvcGF0aE1hdGNoZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQThDO0FBQzlDLE1BQU1DLEtBQUssR0FBRztFQUNaQyxRQUFRLEVBQUdDLElBQUksSUFBSztJQUNsQixJQUFJO01BQ0YsT0FBT0gsNERBQVksQ0FBQ0csSUFBSSxDQUFDO0lBQzNCLENBQUMsQ0FBQyxPQUFPQyxDQUFDLEVBQUU7TUFDVixNQUFNLElBQUlDLEtBQUssQ0FDWixpQkFBZ0JGLElBQUs7QUFDOUI7QUFDQSxFQUFFQyxDQUFDLENBQUNFLE9BQVEsRUFDTixDQUFDO0lBQ0g7RUFDRjtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvcGF0aE1hdGNoZXJzLmpzPzg5YzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGF0aFRvUmVnZXhwIH0gZnJvbSBcInBhdGgtdG8tcmVnZXhwXCI7XG5jb25zdCBwYXRocyA9IHtcbiAgdG9SZWdleHA6IChwYXRoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBwYXRoVG9SZWdleHAocGF0aCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgSW52YWxpZCBwYXRoOiAke3BhdGh9LlxuQ29uc3VsdCB0aGUgZG9jdW1lbnRhdGlvbiBvZiBwYXRoLXRvLXJlZ2V4cCBoZXJlOiBodHRwczovL2dpdGh1Yi5jb20vcGlsbGFyanMvcGF0aC10by1yZWdleHBcbiR7ZS5tZXNzYWdlfWBcbiAgICAgICk7XG4gICAgfVxuICB9XG59O1xuZXhwb3J0IHtcbiAgcGF0aHNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRoTWF0Y2hlcnMuanMubWFwIl0sIm5hbWVzIjpbInBhdGhUb1JlZ2V4cCIsInBhdGhzIiwidG9SZWdleHAiLCJwYXRoIiwiZSIsIkVycm9yIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/pathMatchers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/response.js":
/*!***************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/response.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isRedirect: () => (/* binding */ isRedirect),\n/* harmony export */   mergeResponses: () => (/* binding */ mergeResponses),\n/* harmony export */   setHeader: () => (/* binding */ setHeader),\n/* harmony export */   stringifyHeaders: () => (/* binding */ stringifyHeaders)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"(middleware)/./node_modules/@clerk/nextjs/dist/esm/constants.js\");\nconst _excluded = [\"name\", \"value\"];\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\nconst mergeResponses = (...responses) => {\n  const normalisedResponses = responses.filter(Boolean).map(res => {\n    if (res instanceof next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse) {\n      return res;\n    }\n    return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(res.body, res);\n  });\n  if (normalisedResponses.length === 0) {\n    return;\n  }\n  const lastResponse = normalisedResponses[normalisedResponses.length - 1];\n  const finalResponse = new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(lastResponse.body, lastResponse);\n  for (const response of normalisedResponses) {\n    response.headers.forEach((value, name) => {\n      finalResponse.headers.set(name, value);\n    });\n    response.cookies.getAll().forEach(cookie => {\n      const {\n          name,\n          value\n        } = cookie,\n        options = _objectWithoutProperties(cookie, _excluded);\n      finalResponse.cookies.set(name, value, options);\n    });\n  }\n  return finalResponse;\n};\nconst isRedirect = res => {\n  return res.headers.get(_constants__WEBPACK_IMPORTED_MODULE_1__.constants.Headers.NextRedirect);\n};\nconst setHeader = (res, name, val) => {\n  res.headers.set(name, val);\n  return res;\n};\nconst stringifyHeaders = headers => {\n  if (!headers) {\n    return JSON.stringify({});\n  }\n  const obj = {};\n  headers.forEach((value, name) => {\n    obj[name] = value;\n  });\n  return JSON.stringify(obj);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvcmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTJDO0FBQ2U7QUFDMUQsTUFBTUcsY0FBYyxHQUFHQSxDQUFDLEdBQUdDLFNBQVMsS0FBSztFQUN2QyxNQUFNQyxtQkFBbUIsR0FBR0QsU0FBUyxDQUFDRSxNQUFNLENBQUNDLE9BQU8sQ0FBQyxDQUFDQyxHQUFHLENBQUVDLEdBQUcsSUFBSztJQUNqRSxJQUFJQSxHQUFHLFlBQVlULHFEQUFZLEVBQUU7TUFDL0IsT0FBT1MsR0FBRztJQUNaO0lBQ0EsT0FBTyxJQUFJVCxxREFBWSxDQUFDUyxHQUFHLENBQUNDLElBQUksRUFBRUQsR0FBRyxDQUFDO0VBQ3hDLENBQUMsQ0FBQztFQUNGLElBQUlKLG1CQUFtQixDQUFDTSxNQUFNLEtBQUssQ0FBQyxFQUFFO0lBQ3BDO0VBQ0Y7RUFDQSxNQUFNQyxZQUFZLEdBQUdQLG1CQUFtQixDQUFDQSxtQkFBbUIsQ0FBQ00sTUFBTSxHQUFHLENBQUMsQ0FBQztFQUN4RSxNQUFNRSxhQUFhLEdBQUcsSUFBSWIscURBQVksQ0FBQ1ksWUFBWSxDQUFDRixJQUFJLEVBQUVFLFlBQVksQ0FBQztFQUN2RSxLQUFLLE1BQU1FLFFBQVEsSUFBSVQsbUJBQW1CLEVBQUU7SUFDMUNTLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDQyxPQUFPLENBQUMsQ0FBQ0MsS0FBSyxFQUFFQyxJQUFJLEtBQUs7TUFDeENMLGFBQWEsQ0FBQ0UsT0FBTyxDQUFDSSxHQUFHLENBQUNELElBQUksRUFBRUQsS0FBSyxDQUFDO0lBQ3hDLENBQUMsQ0FBQztJQUNGSCxRQUFRLENBQUNNLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDLENBQUMsQ0FBQ0wsT0FBTyxDQUFFTSxNQUFNLElBQUs7TUFDNUMsTUFBTTtVQUFFSixJQUFJO1VBQUVEO1FBQWtCLENBQUMsR0FBR0ssTUFBTTtRQUFsQkMsT0FBTyxHQUFBQyx3QkFBQSxDQUFLRixNQUFNLEVBQUFHLFNBQUE7TUFDMUNaLGFBQWEsQ0FBQ08sT0FBTyxDQUFDRCxHQUFHLENBQUNELElBQUksRUFBRUQsS0FBSyxFQUFFTSxPQUFPLENBQUM7SUFDakQsQ0FBQyxDQUFDO0VBQ0o7RUFDQSxPQUFPVixhQUFhO0FBQ3RCLENBQUM7QUFDRCxNQUFNYSxVQUFVLEdBQUlqQixHQUFHLElBQUs7RUFDMUIsT0FBT0EsR0FBRyxDQUFDTSxPQUFPLENBQUNZLEdBQUcsQ0FBQ3pCLGlEQUFhLENBQUMwQixPQUFPLENBQUNDLFlBQVksQ0FBQztBQUM1RCxDQUFDO0FBQ0QsTUFBTUMsU0FBUyxHQUFHQSxDQUFDckIsR0FBRyxFQUFFUyxJQUFJLEVBQUVhLEdBQUcsS0FBSztFQUNwQ3RCLEdBQUcsQ0FBQ00sT0FBTyxDQUFDSSxHQUFHLENBQUNELElBQUksRUFBRWEsR0FBRyxDQUFDO0VBQzFCLE9BQU90QixHQUFHO0FBQ1osQ0FBQztBQUNELE1BQU11QixnQkFBZ0IsR0FBSWpCLE9BQU8sSUFBSztFQUNwQyxJQUFJLENBQUNBLE9BQU8sRUFBRTtJQUNaLE9BQU9rQixJQUFJLENBQUNDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUMzQjtFQUNBLE1BQU1DLEdBQUcsR0FBRyxDQUFDLENBQUM7RUFDZHBCLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDLENBQUNDLEtBQUssRUFBRUMsSUFBSSxLQUFLO0lBQy9CaUIsR0FBRyxDQUFDakIsSUFBSSxDQUFDLEdBQUdELEtBQUs7RUFDbkIsQ0FBQyxDQUFDO0VBQ0YsT0FBT2dCLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxHQUFHLENBQUM7QUFDNUIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS91dGlscy9yZXNwb25zZS5qcz81NmJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuaW1wb3J0IHsgY29uc3RhbnRzIGFzIG5leHRDb25zdGFudHMgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5jb25zdCBtZXJnZVJlc3BvbnNlcyA9ICguLi5yZXNwb25zZXMpID0+IHtcbiAgY29uc3Qgbm9ybWFsaXNlZFJlc3BvbnNlcyA9IHJlc3BvbnNlcy5maWx0ZXIoQm9vbGVhbikubWFwKChyZXMpID0+IHtcbiAgICBpZiAocmVzIGluc3RhbmNlb2YgTmV4dFJlc3BvbnNlKSB7XG4gICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZShyZXMuYm9keSwgcmVzKTtcbiAgfSk7XG4gIGlmIChub3JtYWxpc2VkUmVzcG9uc2VzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBsYXN0UmVzcG9uc2UgPSBub3JtYWxpc2VkUmVzcG9uc2VzW25vcm1hbGlzZWRSZXNwb25zZXMubGVuZ3RoIC0gMV07XG4gIGNvbnN0IGZpbmFsUmVzcG9uc2UgPSBuZXcgTmV4dFJlc3BvbnNlKGxhc3RSZXNwb25zZS5ib2R5LCBsYXN0UmVzcG9uc2UpO1xuICBmb3IgKGNvbnN0IHJlc3BvbnNlIG9mIG5vcm1hbGlzZWRSZXNwb25zZXMpIHtcbiAgICByZXNwb25zZS5oZWFkZXJzLmZvckVhY2goKHZhbHVlLCBuYW1lKSA9PiB7XG4gICAgICBmaW5hbFJlc3BvbnNlLmhlYWRlcnMuc2V0KG5hbWUsIHZhbHVlKTtcbiAgICB9KTtcbiAgICByZXNwb25zZS5jb29raWVzLmdldEFsbCgpLmZvckVhY2goKGNvb2tpZSkgPT4ge1xuICAgICAgY29uc3QgeyBuYW1lLCB2YWx1ZSwgLi4ub3B0aW9ucyB9ID0gY29va2llO1xuICAgICAgZmluYWxSZXNwb25zZS5jb29raWVzLnNldChuYW1lLCB2YWx1ZSwgb3B0aW9ucyk7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIGZpbmFsUmVzcG9uc2U7XG59O1xuY29uc3QgaXNSZWRpcmVjdCA9IChyZXMpID0+IHtcbiAgcmV0dXJuIHJlcy5oZWFkZXJzLmdldChuZXh0Q29uc3RhbnRzLkhlYWRlcnMuTmV4dFJlZGlyZWN0KTtcbn07XG5jb25zdCBzZXRIZWFkZXIgPSAocmVzLCBuYW1lLCB2YWwpID0+IHtcbiAgcmVzLmhlYWRlcnMuc2V0KG5hbWUsIHZhbCk7XG4gIHJldHVybiByZXM7XG59O1xuY29uc3Qgc3RyaW5naWZ5SGVhZGVycyA9IChoZWFkZXJzKSA9PiB7XG4gIGlmICghaGVhZGVycykge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh7fSk7XG4gIH1cbiAgY29uc3Qgb2JqID0ge307XG4gIGhlYWRlcnMuZm9yRWFjaCgodmFsdWUsIG5hbWUpID0+IHtcbiAgICBvYmpbbmFtZV0gPSB2YWx1ZTtcbiAgfSk7XG4gIHJldHVybiBKU09OLnN0cmluZ2lmeShvYmopO1xufTtcbmV4cG9ydCB7XG4gIGlzUmVkaXJlY3QsXG4gIG1lcmdlUmVzcG9uc2VzLFxuICBzZXRIZWFkZXIsXG4gIHN0cmluZ2lmeUhlYWRlcnNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNwb25zZS5qcy5tYXAiXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiY29uc3RhbnRzIiwibmV4dENvbnN0YW50cyIsIm1lcmdlUmVzcG9uc2VzIiwicmVzcG9uc2VzIiwibm9ybWFsaXNlZFJlc3BvbnNlcyIsImZpbHRlciIsIkJvb2xlYW4iLCJtYXAiLCJyZXMiLCJib2R5IiwibGVuZ3RoIiwibGFzdFJlc3BvbnNlIiwiZmluYWxSZXNwb25zZSIsInJlc3BvbnNlIiwiaGVhZGVycyIsImZvckVhY2giLCJ2YWx1ZSIsIm5hbWUiLCJzZXQiLCJjb29raWVzIiwiZ2V0QWxsIiwiY29va2llIiwib3B0aW9ucyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsIl9leGNsdWRlZCIsImlzUmVkaXJlY3QiLCJnZXQiLCJIZWFkZXJzIiwiTmV4dFJlZGlyZWN0Iiwic2V0SGVhZGVyIiwidmFsIiwic3RyaW5naWZ5SGVhZGVycyIsIkpTT04iLCJzdHJpbmdpZnkiLCJvYmoiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/serverRedirectWithAuth.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/utils/serverRedirectWithAuth.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serverRedirectWithAuth: () => (/* binding */ serverRedirectWithAuth)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\");\n/* harmony import */ var _clerk_shared_devBrowser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/devBrowser */ \"(middleware)/./node_modules/@clerk/shared/dist/devBrowser.mjs\");\n/* harmony import */ var _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/keys */ \"(middleware)/./node_modules/@clerk/shared/dist/keys.mjs\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n\n\n\nconst serverRedirectWithAuth = (clerkRequest, res, opts) => {\n  const location = res.headers.get(\"location\");\n  const shouldAppendDevBrowser = res.headers.get(_clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkRedirectTo) === \"true\";\n  if (shouldAppendDevBrowser && !!location && (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_2__.isDevelopmentFromSecretKey)(opts.secretKey) && clerkRequest.clerkUrl.isCrossOrigin(location)) {\n    const dbJwt = clerkRequest.cookies.get(_clerk_shared_devBrowser__WEBPACK_IMPORTED_MODULE_1__.DEV_BROWSER_JWT_KEY) || \"\";\n    const url = new URL(location);\n    const urlWithDevBrowser = (0,_clerk_shared_devBrowser__WEBPACK_IMPORTED_MODULE_1__.setDevBrowserJWTInURL)(url, dbJwt);\n    return next_server__WEBPACK_IMPORTED_MODULE_3__.NextResponse.redirect(urlWithDevBrowser.href, res);\n  }\n  return res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvc2VydmVyUmVkaXJlY3RXaXRoQXV0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFvRDtBQUNrQztBQUN0QjtBQUNyQjtBQUMzQyxNQUFNSyxzQkFBc0IsR0FBR0EsQ0FBQ0MsWUFBWSxFQUFFQyxHQUFHLEVBQUVDLElBQUksS0FBSztFQUMxRCxNQUFNQyxRQUFRLEdBQUdGLEdBQUcsQ0FBQ0csT0FBTyxDQUFDQyxHQUFHLENBQUMsVUFBVSxDQUFDO0VBQzVDLE1BQU1DLHNCQUFzQixHQUFHTCxHQUFHLENBQUNHLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDWCw4REFBUyxDQUFDYSxPQUFPLENBQUNDLGVBQWUsQ0FBQyxLQUFLLE1BQU07RUFDNUYsSUFBSUYsc0JBQXNCLElBQUksQ0FBQyxDQUFDSCxRQUFRLElBQUlOLDhFQUEwQixDQUFDSyxJQUFJLENBQUNPLFNBQVMsQ0FBQyxJQUFJVCxZQUFZLENBQUNVLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDUixRQUFRLENBQUMsRUFBRTtJQUN2SSxNQUFNUyxLQUFLLEdBQUdaLFlBQVksQ0FBQ2EsT0FBTyxDQUFDUixHQUFHLENBQUNWLHlFQUFtQixDQUFDLElBQUksRUFBRTtJQUNqRSxNQUFNbUIsR0FBRyxHQUFHLElBQUlDLEdBQUcsQ0FBQ1osUUFBUSxDQUFDO0lBQzdCLE1BQU1hLGlCQUFpQixHQUFHcEIsK0VBQXFCLENBQUNrQixHQUFHLEVBQUVGLEtBQUssQ0FBQztJQUMzRCxPQUFPZCxxREFBWSxDQUFDbUIsUUFBUSxDQUFDRCxpQkFBaUIsQ0FBQ0UsSUFBSSxFQUFFakIsR0FBRyxDQUFDO0VBQzNEO0VBQ0EsT0FBT0EsR0FBRztBQUNaLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvc2VydmVyUmVkaXJlY3RXaXRoQXV0aC5qcz9kYmEwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbnN0YW50cyB9IGZyb20gXCJAY2xlcmsvYmFja2VuZC9pbnRlcm5hbFwiO1xuaW1wb3J0IHsgREVWX0JST1dTRVJfSldUX0tFWSwgc2V0RGV2QnJvd3NlckpXVEluVVJMIH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvZGV2QnJvd3NlclwiO1xuaW1wb3J0IHsgaXNEZXZlbG9wbWVudEZyb21TZWNyZXRLZXkgfSBmcm9tIFwiQGNsZXJrL3NoYXJlZC9rZXlzXCI7XG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmNvbnN0IHNlcnZlclJlZGlyZWN0V2l0aEF1dGggPSAoY2xlcmtSZXF1ZXN0LCByZXMsIG9wdHMpID0+IHtcbiAgY29uc3QgbG9jYXRpb24gPSByZXMuaGVhZGVycy5nZXQoXCJsb2NhdGlvblwiKTtcbiAgY29uc3Qgc2hvdWxkQXBwZW5kRGV2QnJvd3NlciA9IHJlcy5oZWFkZXJzLmdldChjb25zdGFudHMuSGVhZGVycy5DbGVya1JlZGlyZWN0VG8pID09PSBcInRydWVcIjtcbiAgaWYgKHNob3VsZEFwcGVuZERldkJyb3dzZXIgJiYgISFsb2NhdGlvbiAmJiBpc0RldmVsb3BtZW50RnJvbVNlY3JldEtleShvcHRzLnNlY3JldEtleSkgJiYgY2xlcmtSZXF1ZXN0LmNsZXJrVXJsLmlzQ3Jvc3NPcmlnaW4obG9jYXRpb24pKSB7XG4gICAgY29uc3QgZGJKd3QgPSBjbGVya1JlcXVlc3QuY29va2llcy5nZXQoREVWX0JST1dTRVJfSldUX0tFWSkgfHwgXCJcIjtcbiAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGxvY2F0aW9uKTtcbiAgICBjb25zdCB1cmxXaXRoRGV2QnJvd3NlciA9IHNldERldkJyb3dzZXJKV1RJblVSTCh1cmwsIGRiSnd0KTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHVybFdpdGhEZXZCcm93c2VyLmhyZWYsIHJlcyk7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn07XG5leHBvcnQge1xuICBzZXJ2ZXJSZWRpcmVjdFdpdGhBdXRoXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VydmVyUmVkaXJlY3RXaXRoQXV0aC5qcy5tYXAiXSwibmFtZXMiOlsiY29uc3RhbnRzIiwiREVWX0JST1dTRVJfSldUX0tFWSIsInNldERldkJyb3dzZXJKV1RJblVSTCIsImlzRGV2ZWxvcG1lbnRGcm9tU2VjcmV0S2V5IiwiTmV4dFJlc3BvbnNlIiwic2VydmVyUmVkaXJlY3RXaXRoQXV0aCIsImNsZXJrUmVxdWVzdCIsInJlcyIsIm9wdHMiLCJsb2NhdGlvbiIsImhlYWRlcnMiLCJnZXQiLCJzaG91bGRBcHBlbmREZXZCcm93c2VyIiwiSGVhZGVycyIsIkNsZXJrUmVkaXJlY3RUbyIsInNlY3JldEtleSIsImNsZXJrVXJsIiwiaXNDcm9zc09yaWdpbiIsImRiSnd0IiwiY29va2llcyIsInVybCIsIlVSTCIsInVybFdpdGhEZXZCcm93c2VyIiwicmVkaXJlY3QiLCJocmVmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/nextjs/dist/esm/utils/serverRedirectWithAuth.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/cookie/index.js":
/*!**************************************!*\
  !*** ./node_modules/cookie/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module exports.\n * @public\n */\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n  var obj = {};\n  var opt = options || {};\n  var dec = opt.decode || decode;\n  var index = 0;\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index);\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break;\n    }\n    var endIdx = str.indexOf(';', index);\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n    var key = str.slice(index, eqIdx).trim();\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim();\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n      obj[key] = tryDecode(val, dec);\n    }\n    index = endIdx + 1;\n  }\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n  var value = enc(val);\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n  var str = name + '=' + value;\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid');\n    }\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n    str += '; Domain=' + opt.domain;\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n    str += '; Path=' + opt.path;\n  }\n  if (opt.expires) {\n    var expires = opt.expires;\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n    str += '; Expires=' + expires.toUTCString();\n  }\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n  if (opt.secure) {\n    str += '; Secure';\n  }\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string' ? opt.priority.toLowerCase() : opt.priority;\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low';\n        break;\n      case 'medium':\n        str += '; Priority=Medium';\n        break;\n      case 'high':\n        str += '; Priority=High';\n        break;\n      default:\n        throw new TypeError('option priority is invalid');\n    }\n  }\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode(str) {\n  return str.indexOf('%') !== -1 ? decodeURIComponent(str) : str;\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode(val) {\n  return encodeURIComponent(val);\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate(val) {\n  return __toString.call(val) === '[object Date]' || val instanceof Date;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/cookie/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/core.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/core.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(";\n(function (root, factory) {\n  if (true) {\n    // CommonJS\n    module.exports = exports = factory();\n  } else {}\n})(this, function () {\n  /*globals window, global, require*/\n\n  /**\n   * CryptoJS core components.\n   */\n  var CryptoJS = CryptoJS || function (Math, undefined) {\n    var crypto;\n\n    // Native crypto from window (Browser)\n    if (false) {}\n\n    // Native crypto in web worker (Browser)\n    if (typeof self !== 'undefined' && self.crypto) {\n      crypto = self.crypto;\n    }\n\n    // Native crypto from worker\n    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n      crypto = globalThis.crypto;\n    }\n\n    // Native (experimental IE 11) crypto from window (Browser)\n    if (!crypto && false && 0) {}\n\n    // Native crypto from global (NodeJS)\n    if (!crypto && typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.crypto) {\n      crypto = __webpack_require__.g.crypto;\n    }\n\n    // Native crypto import via require (NodeJS)\n    if (!crypto && \"function\" === 'function') {\n      try {\n        crypto = __webpack_require__(/*! crypto */ \"?599d\");\n      } catch (err) {}\n    }\n\n    /*\n     * Cryptographically secure pseudorandom number generator\n     *\n     * As Math.random() is cryptographically not safe to use\n     */\n    var cryptoSecureRandomInt = function () {\n      if (crypto) {\n        // Use getRandomValues method (Browser)\n        if (typeof crypto.getRandomValues === 'function') {\n          try {\n            return crypto.getRandomValues(new Uint32Array(1))[0];\n          } catch (err) {}\n        }\n\n        // Use randomBytes method (NodeJS)\n        if (typeof crypto.randomBytes === 'function') {\n          try {\n            return crypto.randomBytes(4).readInt32LE();\n          } catch (err) {}\n        }\n      }\n      throw new Error('Native crypto module could not be used to get secure random number.');\n    };\n\n    /*\n     * Local polyfill of Object.create\n      */\n    var create = Object.create || function () {\n      function F() {}\n      return function (obj) {\n        var subtype;\n        F.prototype = obj;\n        subtype = new F();\n        F.prototype = null;\n        return subtype;\n      };\n    }();\n\n    /**\n     * CryptoJS namespace.\n     */\n    var C = {};\n\n    /**\n     * Library namespace.\n     */\n    var C_lib = C.lib = {};\n\n    /**\n     * Base object for prototypal inheritance.\n     */\n    var Base = C_lib.Base = function () {\n      return {\n        /**\n         * Creates a new object that inherits from this object.\n         *\n         * @param {Object} overrides Properties to copy into the new object.\n         *\n         * @return {Object} The new object.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var MyType = CryptoJS.lib.Base.extend({\n         *         field: 'value',\n         *\n         *         method: function () {\n         *         }\n         *     });\n         */\n        extend: function (overrides) {\n          // Spawn\n          var subtype = create(this);\n\n          // Augment\n          if (overrides) {\n            subtype.mixIn(overrides);\n          }\n\n          // Create default initializer\n          if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n            subtype.init = function () {\n              subtype.$super.init.apply(this, arguments);\n            };\n          }\n\n          // Initializer's prototype is the subtype object\n          subtype.init.prototype = subtype;\n\n          // Reference supertype\n          subtype.$super = this;\n          return subtype;\n        },\n        /**\n         * Extends this object and runs the init method.\n         * Arguments to create() will be passed to init().\n         *\n         * @return {Object} The new object.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var instance = MyType.create();\n         */\n        create: function () {\n          var instance = this.extend();\n          instance.init.apply(instance, arguments);\n          return instance;\n        },\n        /**\n         * Initializes a newly created object.\n         * Override this method to add some logic when your objects are created.\n         *\n         * @example\n         *\n         *     var MyType = CryptoJS.lib.Base.extend({\n         *         init: function () {\n         *             // ...\n         *         }\n         *     });\n         */\n        init: function () {},\n        /**\n         * Copies properties into this object.\n         *\n         * @param {Object} properties The properties to mix in.\n         *\n         * @example\n         *\n         *     MyType.mixIn({\n         *         field: 'value'\n         *     });\n         */\n        mixIn: function (properties) {\n          for (var propertyName in properties) {\n            if (properties.hasOwnProperty(propertyName)) {\n              this[propertyName] = properties[propertyName];\n            }\n          }\n\n          // IE won't copy toString using the loop above\n          if (properties.hasOwnProperty('toString')) {\n            this.toString = properties.toString;\n          }\n        },\n        /**\n         * Creates a copy of this object.\n         *\n         * @return {Object} The clone.\n         *\n         * @example\n         *\n         *     var clone = instance.clone();\n         */\n        clone: function () {\n          return this.init.prototype.extend(this);\n        }\n      };\n    }();\n\n    /**\n     * An array of 32-bit words.\n     *\n     * @property {Array} words The array of 32-bit words.\n     * @property {number} sigBytes The number of significant bytes in this word array.\n     */\n    var WordArray = C_lib.WordArray = Base.extend({\n      /**\n       * Initializes a newly created word array.\n       *\n       * @param {Array} words (Optional) An array of 32-bit words.\n       * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n       *\n       * @example\n       *\n       *     var wordArray = CryptoJS.lib.WordArray.create();\n       *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n       *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n       */\n      init: function (words, sigBytes) {\n        words = this.words = words || [];\n        if (sigBytes != undefined) {\n          this.sigBytes = sigBytes;\n        } else {\n          this.sigBytes = words.length * 4;\n        }\n      },\n      /**\n       * Converts this word array to a string.\n       *\n       * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n       *\n       * @return {string} The stringified word array.\n       *\n       * @example\n       *\n       *     var string = wordArray + '';\n       *     var string = wordArray.toString();\n       *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n       */\n      toString: function (encoder) {\n        return (encoder || Hex).stringify(this);\n      },\n      /**\n       * Concatenates a word array to this word array.\n       *\n       * @param {WordArray} wordArray The word array to append.\n       *\n       * @return {WordArray} This word array.\n       *\n       * @example\n       *\n       *     wordArray1.concat(wordArray2);\n       */\n      concat: function (wordArray) {\n        // Shortcuts\n        var thisWords = this.words;\n        var thatWords = wordArray.words;\n        var thisSigBytes = this.sigBytes;\n        var thatSigBytes = wordArray.sigBytes;\n\n        // Clamp excess bits\n        this.clamp();\n\n        // Concat\n        if (thisSigBytes % 4) {\n          // Copy one byte at a time\n          for (var i = 0; i < thatSigBytes; i++) {\n            var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n            thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;\n          }\n        } else {\n          // Copy one word at a time\n          for (var j = 0; j < thatSigBytes; j += 4) {\n            thisWords[thisSigBytes + j >>> 2] = thatWords[j >>> 2];\n          }\n        }\n        this.sigBytes += thatSigBytes;\n\n        // Chainable\n        return this;\n      },\n      /**\n       * Removes insignificant bits.\n       *\n       * @example\n       *\n       *     wordArray.clamp();\n       */\n      clamp: function () {\n        // Shortcuts\n        var words = this.words;\n        var sigBytes = this.sigBytes;\n\n        // Clamp\n        words[sigBytes >>> 2] &= 0xffffffff << 32 - sigBytes % 4 * 8;\n        words.length = Math.ceil(sigBytes / 4);\n      },\n      /**\n       * Creates a copy of this word array.\n       *\n       * @return {WordArray} The clone.\n       *\n       * @example\n       *\n       *     var clone = wordArray.clone();\n       */\n      clone: function () {\n        var clone = Base.clone.call(this);\n        clone.words = this.words.slice(0);\n        return clone;\n      },\n      /**\n       * Creates a word array filled with random bytes.\n       *\n       * @param {number} nBytes The number of random bytes to generate.\n       *\n       * @return {WordArray} The random word array.\n       *\n       * @static\n       *\n       * @example\n       *\n       *     var wordArray = CryptoJS.lib.WordArray.random(16);\n       */\n      random: function (nBytes) {\n        var words = [];\n        for (var i = 0; i < nBytes; i += 4) {\n          words.push(cryptoSecureRandomInt());\n        }\n        return new WordArray.init(words, nBytes);\n      }\n    });\n\n    /**\n     * Encoder namespace.\n     */\n    var C_enc = C.enc = {};\n\n    /**\n     * Hex encoding strategy.\n     */\n    var Hex = C_enc.Hex = {\n      /**\n       * Converts a word array to a hex string.\n       *\n       * @param {WordArray} wordArray The word array.\n       *\n       * @return {string} The hex string.\n       *\n       * @static\n       *\n       * @example\n       *\n       *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n       */\n      stringify: function (wordArray) {\n        // Shortcuts\n        var words = wordArray.words;\n        var sigBytes = wordArray.sigBytes;\n\n        // Convert\n        var hexChars = [];\n        for (var i = 0; i < sigBytes; i++) {\n          var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n          hexChars.push((bite >>> 4).toString(16));\n          hexChars.push((bite & 0x0f).toString(16));\n        }\n        return hexChars.join('');\n      },\n      /**\n       * Converts a hex string to a word array.\n       *\n       * @param {string} hexStr The hex string.\n       *\n       * @return {WordArray} The word array.\n       *\n       * @static\n       *\n       * @example\n       *\n       *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n       */\n      parse: function (hexStr) {\n        // Shortcut\n        var hexStrLength = hexStr.length;\n\n        // Convert\n        var words = [];\n        for (var i = 0; i < hexStrLength; i += 2) {\n          words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;\n        }\n        return new WordArray.init(words, hexStrLength / 2);\n      }\n    };\n\n    /**\n     * Latin1 encoding strategy.\n     */\n    var Latin1 = C_enc.Latin1 = {\n      /**\n       * Converts a word array to a Latin1 string.\n       *\n       * @param {WordArray} wordArray The word array.\n       *\n       * @return {string} The Latin1 string.\n       *\n       * @static\n       *\n       * @example\n       *\n       *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n       */\n      stringify: function (wordArray) {\n        // Shortcuts\n        var words = wordArray.words;\n        var sigBytes = wordArray.sigBytes;\n\n        // Convert\n        var latin1Chars = [];\n        for (var i = 0; i < sigBytes; i++) {\n          var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n          latin1Chars.push(String.fromCharCode(bite));\n        }\n        return latin1Chars.join('');\n      },\n      /**\n       * Converts a Latin1 string to a word array.\n       *\n       * @param {string} latin1Str The Latin1 string.\n       *\n       * @return {WordArray} The word array.\n       *\n       * @static\n       *\n       * @example\n       *\n       *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n       */\n      parse: function (latin1Str) {\n        // Shortcut\n        var latin1StrLength = latin1Str.length;\n\n        // Convert\n        var words = [];\n        for (var i = 0; i < latin1StrLength; i++) {\n          words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;\n        }\n        return new WordArray.init(words, latin1StrLength);\n      }\n    };\n\n    /**\n     * UTF-8 encoding strategy.\n     */\n    var Utf8 = C_enc.Utf8 = {\n      /**\n       * Converts a word array to a UTF-8 string.\n       *\n       * @param {WordArray} wordArray The word array.\n       *\n       * @return {string} The UTF-8 string.\n       *\n       * @static\n       *\n       * @example\n       *\n       *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n       */\n      stringify: function (wordArray) {\n        try {\n          return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n        } catch (e) {\n          throw new Error('Malformed UTF-8 data');\n        }\n      },\n      /**\n       * Converts a UTF-8 string to a word array.\n       *\n       * @param {string} utf8Str The UTF-8 string.\n       *\n       * @return {WordArray} The word array.\n       *\n       * @static\n       *\n       * @example\n       *\n       *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n       */\n      parse: function (utf8Str) {\n        return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n      }\n    };\n\n    /**\n     * Abstract buffered block algorithm template.\n     *\n     * The property blockSize must be implemented in a concrete subtype.\n     *\n     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n     */\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n      /**\n       * Resets this block algorithm's data buffer to its initial state.\n       *\n       * @example\n       *\n       *     bufferedBlockAlgorithm.reset();\n       */\n      reset: function () {\n        // Initial values\n        this._data = new WordArray.init();\n        this._nDataBytes = 0;\n      },\n      /**\n       * Adds new data to this block algorithm's buffer.\n       *\n       * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n       *\n       * @example\n       *\n       *     bufferedBlockAlgorithm._append('data');\n       *     bufferedBlockAlgorithm._append(wordArray);\n       */\n      _append: function (data) {\n        // Convert string to WordArray, else assume WordArray already\n        if (typeof data == 'string') {\n          data = Utf8.parse(data);\n        }\n\n        // Append\n        this._data.concat(data);\n        this._nDataBytes += data.sigBytes;\n      },\n      /**\n       * Processes available data blocks.\n       *\n       * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n       *\n       * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n       *\n       * @return {WordArray} The processed data.\n       *\n       * @example\n       *\n       *     var processedData = bufferedBlockAlgorithm._process();\n       *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n       */\n      _process: function (doFlush) {\n        var processedWords;\n\n        // Shortcuts\n        var data = this._data;\n        var dataWords = data.words;\n        var dataSigBytes = data.sigBytes;\n        var blockSize = this.blockSize;\n        var blockSizeBytes = blockSize * 4;\n\n        // Count blocks ready\n        var nBlocksReady = dataSigBytes / blockSizeBytes;\n        if (doFlush) {\n          // Round up to include partial blocks\n          nBlocksReady = Math.ceil(nBlocksReady);\n        } else {\n          // Round down to include only full blocks,\n          // less the number of blocks that must remain in the buffer\n          nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n        }\n\n        // Count words ready\n        var nWordsReady = nBlocksReady * blockSize;\n\n        // Count bytes ready\n        var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n        // Process blocks\n        if (nWordsReady) {\n          for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n            // Perform concrete-algorithm logic\n            this._doProcessBlock(dataWords, offset);\n          }\n\n          // Remove processed words\n          processedWords = dataWords.splice(0, nWordsReady);\n          data.sigBytes -= nBytesReady;\n        }\n\n        // Return processed words\n        return new WordArray.init(processedWords, nBytesReady);\n      },\n      /**\n       * Creates a copy of this object.\n       *\n       * @return {Object} The clone.\n       *\n       * @example\n       *\n       *     var clone = bufferedBlockAlgorithm.clone();\n       */\n      clone: function () {\n        var clone = Base.clone.call(this);\n        clone._data = this._data.clone();\n        return clone;\n      },\n      _minBufferSize: 0\n    });\n\n    /**\n     * Abstract hasher template.\n     *\n     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n     */\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n      /**\n       * Configuration options.\n       */\n      cfg: Base.extend(),\n      /**\n       * Initializes a newly created hasher.\n       *\n       * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n       *\n       * @example\n       *\n       *     var hasher = CryptoJS.algo.SHA256.create();\n       */\n      init: function (cfg) {\n        // Apply config defaults\n        this.cfg = this.cfg.extend(cfg);\n\n        // Set initial values\n        this.reset();\n      },\n      /**\n       * Resets this hasher to its initial state.\n       *\n       * @example\n       *\n       *     hasher.reset();\n       */\n      reset: function () {\n        // Reset data buffer\n        BufferedBlockAlgorithm.reset.call(this);\n\n        // Perform concrete-hasher logic\n        this._doReset();\n      },\n      /**\n       * Updates this hasher with a message.\n       *\n       * @param {WordArray|string} messageUpdate The message to append.\n       *\n       * @return {Hasher} This hasher.\n       *\n       * @example\n       *\n       *     hasher.update('message');\n       *     hasher.update(wordArray);\n       */\n      update: function (messageUpdate) {\n        // Append\n        this._append(messageUpdate);\n\n        // Update the hash\n        this._process();\n\n        // Chainable\n        return this;\n      },\n      /**\n       * Finalizes the hash computation.\n       * Note that the finalize operation is effectively a destructive, read-once operation.\n       *\n       * @param {WordArray|string} messageUpdate (Optional) A final message update.\n       *\n       * @return {WordArray} The hash.\n       *\n       * @example\n       *\n       *     var hash = hasher.finalize();\n       *     var hash = hasher.finalize('message');\n       *     var hash = hasher.finalize(wordArray);\n       */\n      finalize: function (messageUpdate) {\n        // Final message update\n        if (messageUpdate) {\n          this._append(messageUpdate);\n        }\n\n        // Perform concrete-hasher logic\n        var hash = this._doFinalize();\n        return hash;\n      },\n      blockSize: 512 / 32,\n      /**\n       * Creates a shortcut function to a hasher's object interface.\n       *\n       * @param {Hasher} hasher The hasher to create a helper for.\n       *\n       * @return {Function} The shortcut function.\n       *\n       * @static\n       *\n       * @example\n       *\n       *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n       */\n      _createHelper: function (hasher) {\n        return function (message, cfg) {\n          return new hasher.init(cfg).finalize(message);\n        };\n      },\n      /**\n       * Creates a shortcut function to the HMAC's object interface.\n       *\n       * @param {Hasher} hasher The hasher to use in this HMAC helper.\n       *\n       * @return {Function} The shortcut function.\n       *\n       * @static\n       *\n       * @example\n       *\n       *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n       */\n      _createHmacHelper: function (hasher) {\n        return function (message, key) {\n          return new C_algo.HMAC.init(hasher, key).finalize(message);\n        };\n      }\n    });\n\n    /**\n     * Algorithm namespace.\n     */\n    var C_algo = C.algo = {};\n    return C;\n  }(Math);\n  return CryptoJS;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/core.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/hmac-sha1.js":
/*!*********************************************!*\
  !*** ./node_modules/crypto-js/hmac-sha1.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(";\n(function (root, factory, undef) {\n  if (true) {\n    // CommonJS\n    module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"), __webpack_require__(/*! ./sha1 */ \"(middleware)/./node_modules/crypto-js/sha1.js\"), __webpack_require__(/*! ./hmac */ \"(middleware)/./node_modules/crypto-js/hmac.js\"));\n  } else {}\n})(this, function (CryptoJS) {\n  return CryptoJS.HmacSHA1;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1qcy9obWFjLXNoYTEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFBRSxXQUFVQSxJQUFJLEVBQUVDLE9BQU8sRUFBRUMsS0FBSyxFQUFFO0VBQ2pDLElBQUksSUFBMkIsRUFBRTtJQUNoQztJQUNBRSxNQUFNLENBQUNELE9BQU8sR0FBR0EsT0FBTyxHQUFHRixPQUFPLENBQUNJLG1CQUFPLENBQUMsNkRBQVEsQ0FBQyxFQUFFQSxtQkFBTyxDQUFDLDZEQUFRLENBQUMsRUFBRUEsbUJBQU8sQ0FBQyw2REFBUSxDQUFDLENBQUM7RUFDNUYsQ0FBQyxNQUNJLEVBT0o7QUFDRixDQUFDLEVBQUMsSUFBSSxFQUFFLFVBQVVHLFFBQVEsRUFBRTtFQUUzQixPQUFPQSxRQUFRLENBQUNDLFFBQVE7QUFFekIsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jcnlwdG8tanMvaG1hYy1zaGExLmpzPzE1MzUiXSwic291cmNlc0NvbnRlbnQiOlsiOyhmdW5jdGlvbiAocm9vdCwgZmFjdG9yeSwgdW5kZWYpIHtcblx0aWYgKHR5cGVvZiBleHBvcnRzID09PSBcIm9iamVjdFwiKSB7XG5cdFx0Ly8gQ29tbW9uSlNcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoXCIuL2NvcmVcIiksIHJlcXVpcmUoXCIuL3NoYTFcIiksIHJlcXVpcmUoXCIuL2htYWNcIikpO1xuXHR9XG5cdGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG5cdFx0Ly8gQU1EXG5cdFx0ZGVmaW5lKFtcIi4vY29yZVwiLCBcIi4vc2hhMVwiLCBcIi4vaG1hY1wiXSwgZmFjdG9yeSk7XG5cdH1cblx0ZWxzZSB7XG5cdFx0Ly8gR2xvYmFsIChicm93c2VyKVxuXHRcdGZhY3Rvcnkocm9vdC5DcnlwdG9KUyk7XG5cdH1cbn0odGhpcywgZnVuY3Rpb24gKENyeXB0b0pTKSB7XG5cblx0cmV0dXJuIENyeXB0b0pTLkhtYWNTSEExO1xuXG59KSk7Il0sIm5hbWVzIjpbInJvb3QiLCJmYWN0b3J5IiwidW5kZWYiLCJleHBvcnRzIiwibW9kdWxlIiwicmVxdWlyZSIsImRlZmluZSIsImFtZCIsIkNyeXB0b0pTIiwiSG1hY1NIQTEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/hmac-sha1.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/hmac.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/hmac.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(";\n(function (root, factory) {\n  if (true) {\n    // CommonJS\n    module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"));\n  } else {}\n})(this, function (CryptoJS) {\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var Base = C_lib.Base;\n    var C_enc = C.enc;\n    var Utf8 = C_enc.Utf8;\n    var C_algo = C.algo;\n\n    /**\n     * HMAC algorithm.\n     */\n    var HMAC = C_algo.HMAC = Base.extend({\n      /**\n       * Initializes a newly created HMAC.\n       *\n       * @param {Hasher} hasher The hash algorithm to use.\n       * @param {WordArray|string} key The secret key.\n       *\n       * @example\n       *\n       *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n       */\n      init: function (hasher, key) {\n        // Init hasher\n        hasher = this._hasher = new hasher.init();\n\n        // Convert string to WordArray, else assume WordArray already\n        if (typeof key == 'string') {\n          key = Utf8.parse(key);\n        }\n\n        // Shortcuts\n        var hasherBlockSize = hasher.blockSize;\n        var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n        // Allow arbitrary length keys\n        if (key.sigBytes > hasherBlockSizeBytes) {\n          key = hasher.finalize(key);\n        }\n\n        // Clamp excess bits\n        key.clamp();\n\n        // Clone key for inner and outer pads\n        var oKey = this._oKey = key.clone();\n        var iKey = this._iKey = key.clone();\n\n        // Shortcuts\n        var oKeyWords = oKey.words;\n        var iKeyWords = iKey.words;\n\n        // XOR keys with pad constants\n        for (var i = 0; i < hasherBlockSize; i++) {\n          oKeyWords[i] ^= 0x5c5c5c5c;\n          iKeyWords[i] ^= 0x36363636;\n        }\n        oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n        // Set initial values\n        this.reset();\n      },\n      /**\n       * Resets this HMAC to its initial state.\n       *\n       * @example\n       *\n       *     hmacHasher.reset();\n       */\n      reset: function () {\n        // Shortcut\n        var hasher = this._hasher;\n\n        // Reset\n        hasher.reset();\n        hasher.update(this._iKey);\n      },\n      /**\n       * Updates this HMAC with a message.\n       *\n       * @param {WordArray|string} messageUpdate The message to append.\n       *\n       * @return {HMAC} This HMAC instance.\n       *\n       * @example\n       *\n       *     hmacHasher.update('message');\n       *     hmacHasher.update(wordArray);\n       */\n      update: function (messageUpdate) {\n        this._hasher.update(messageUpdate);\n\n        // Chainable\n        return this;\n      },\n      /**\n       * Finalizes the HMAC computation.\n       * Note that the finalize operation is effectively a destructive, read-once operation.\n       *\n       * @param {WordArray|string} messageUpdate (Optional) A final message update.\n       *\n       * @return {WordArray} The HMAC.\n       *\n       * @example\n       *\n       *     var hmac = hmacHasher.finalize();\n       *     var hmac = hmacHasher.finalize('message');\n       *     var hmac = hmacHasher.finalize(wordArray);\n       */\n      finalize: function (messageUpdate) {\n        // Shortcut\n        var hasher = this._hasher;\n\n        // Compute HMAC\n        var innerHash = hasher.finalize(messageUpdate);\n        hasher.reset();\n        var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n        return hmac;\n      }\n    });\n  })();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/hmac.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/crypto-js/sha1.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/sha1.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(";\n(function (root, factory) {\n  if (true) {\n    // CommonJS\n    module.exports = exports = factory(__webpack_require__(/*! ./core */ \"(middleware)/./node_modules/crypto-js/core.js\"));\n  } else {}\n})(this, function (CryptoJS) {\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var Hasher = C_lib.Hasher;\n    var C_algo = C.algo;\n\n    // Reusable object\n    var W = [];\n\n    /**\n     * SHA-1 hash algorithm.\n     */\n    var SHA1 = C_algo.SHA1 = Hasher.extend({\n      _doReset: function () {\n        this._hash = new WordArray.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);\n      },\n      _doProcessBlock: function (M, offset) {\n        // Shortcut\n        var H = this._hash.words;\n\n        // Working variables\n        var a = H[0];\n        var b = H[1];\n        var c = H[2];\n        var d = H[3];\n        var e = H[4];\n\n        // Computation\n        for (var i = 0; i < 80; i++) {\n          if (i < 16) {\n            W[i] = M[offset + i] | 0;\n          } else {\n            var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n            W[i] = n << 1 | n >>> 31;\n          }\n          var t = (a << 5 | a >>> 27) + e + W[i];\n          if (i < 20) {\n            t += (b & c | ~b & d) + 0x5a827999;\n          } else if (i < 40) {\n            t += (b ^ c ^ d) + 0x6ed9eba1;\n          } else if (i < 60) {\n            t += (b & c | b & d | c & d) - 0x70e44324;\n          } else /* if (i < 80) */{\n              t += (b ^ c ^ d) - 0x359d3e2a;\n            }\n          e = d;\n          d = c;\n          c = b << 30 | b >>> 2;\n          b = a;\n          a = t;\n        }\n\n        // Intermediate hash value\n        H[0] = H[0] + a | 0;\n        H[1] = H[1] + b | 0;\n        H[2] = H[2] + c | 0;\n        H[3] = H[3] + d | 0;\n        H[4] = H[4] + e | 0;\n      },\n      _doFinalize: function () {\n        // Shortcuts\n        var data = this._data;\n        var dataWords = data.words;\n        var nBitsTotal = this._nDataBytes * 8;\n        var nBitsLeft = data.sigBytes * 8;\n\n        // Add padding\n        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\n        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;\n        data.sigBytes = dataWords.length * 4;\n\n        // Hash final blocks\n        this._process();\n\n        // Return final computed hash\n        return this._hash;\n      },\n      clone: function () {\n        var clone = Hasher.clone.call(this);\n        clone._hash = this._hash.clone();\n        return clone;\n      }\n    });\n\n    /**\n     * Shortcut function to the hasher's object interface.\n     *\n     * @param {WordArray|string} message The message to hash.\n     *\n     * @return {WordArray} The hash.\n     *\n     * @static\n     *\n     * @example\n     *\n     *     var hash = CryptoJS.SHA1('message');\n     *     var hash = CryptoJS.SHA1(wordArray);\n     */\n    C.SHA1 = Hasher._createHelper(SHA1);\n\n    /**\n     * Shortcut function to the HMAC's object interface.\n     *\n     * @param {WordArray|string} message The message to hash.\n     * @param {WordArray|string} key The secret key.\n     *\n     * @return {WordArray} The HMAC.\n     *\n     * @static\n     *\n     * @example\n     *\n     *     var hmac = CryptoJS.HmacSHA1(message, key);\n     */\n    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n  })();\n  return CryptoJS.SHA1;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/crypto-js/sha1.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/dot-case/dist.es2015/index.js":
/*!****************************************************!*\
  !*** ./node_modules/dot-case/dist.es2015/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dotCase: () => (/* binding */ dotCase)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var no_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! no-case */ \"(middleware)/./node_modules/no-case/dist.es2015/index.js\");\n\n\nfunction dotCase(input, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return (0,no_case__WEBPACK_IMPORTED_MODULE_0__.noCase)(input, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({\n    delimiter: \".\"\n  }, options));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2RvdC1jYXNlL2Rpc3QuZXMyMDE1L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpQztBQUNBO0FBQzFCLFNBQVNFLE9BQU9BLENBQUNDLEtBQUssRUFBRUMsT0FBTyxFQUFFO0VBQ3BDLElBQUlBLE9BQU8sS0FBSyxLQUFLLENBQUMsRUFBRTtJQUFFQSxPQUFPLEdBQUcsQ0FBQyxDQUFDO0VBQUU7RUFDeEMsT0FBT0gsK0NBQU0sQ0FBQ0UsS0FBSyxFQUFFSCwrQ0FBUSxDQUFDO0lBQUVLLFNBQVMsRUFBRTtFQUFJLENBQUMsRUFBRUQsT0FBTyxDQUFDLENBQUM7QUFDL0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RvdC1jYXNlL2Rpc3QuZXMyMDE1L2luZGV4LmpzPzZlNDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24gfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IG5vQ2FzZSB9IGZyb20gXCJuby1jYXNlXCI7XG5leHBvcnQgZnVuY3Rpb24gZG90Q2FzZShpbnB1dCwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgcmV0dXJuIG5vQ2FzZShpbnB1dCwgX19hc3NpZ24oeyBkZWxpbWl0ZXI6IFwiLlwiIH0sIG9wdGlvbnMpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsIm5vQ2FzZSIsImRvdENhc2UiLCJpbnB1dCIsIm9wdGlvbnMiLCJkZWxpbWl0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/dot-case/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/lower-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/lower-case/dist.es2015/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   localeLowerCase: () => (/* binding */ localeLowerCase),\n/* harmony export */   lowerCase: () => (/* binding */ lowerCase)\n/* harmony export */ });\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\"\n    }\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\"\n    }\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"\\u0069\\u0307\",\n      J: \"\\u006A\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"\\u0069\\u0307\\u0300\",\n      Í: \"\\u0069\\u0307\\u0301\",\n      Ĩ: \"\\u0069\\u0307\\u0303\"\n    }\n  }\n};\n/**\n * Localized lower case.\n */\nfunction localeLowerCase(str, locale) {\n  var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, function (m) {\n    return lang.map[m];\n  }));\n  return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nfunction lowerCase(str) {\n  return str.toLowerCase();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2xvd2VyLWNhc2UvZGlzdC5lczIwMTUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxJQUFJQSxnQkFBZ0IsR0FBRztFQUNuQkMsRUFBRSxFQUFFO0lBQ0FDLE1BQU0sRUFBRSw2QkFBNkI7SUFDckNDLEdBQUcsRUFBRTtNQUNEQyxDQUFDLEVBQUUsUUFBUTtNQUNYQyxDQUFDLEVBQUUsUUFBUTtNQUNYQyxFQUFFLEVBQUU7SUFDUjtFQUNKLENBQUM7RUFDREMsRUFBRSxFQUFFO0lBQ0FMLE1BQU0sRUFBRSxTQUFTO0lBQ2pCQyxHQUFHLEVBQUU7TUFDREMsQ0FBQyxFQUFFLFFBQVE7TUFDWEMsQ0FBQyxFQUFFLFFBQVE7TUFDWEMsRUFBRSxFQUFFO0lBQ1I7RUFDSixDQUFDO0VBQ0RFLEVBQUUsRUFBRTtJQUNBTixNQUFNLEVBQUUsNENBQTRDO0lBQ3BEQyxHQUFHLEVBQUU7TUFDREUsQ0FBQyxFQUFFLGNBQWM7TUFDakJJLENBQUMsRUFBRSxjQUFjO01BQ2pCQyxDQUFDLEVBQUUsY0FBYztNQUNqQkMsQ0FBQyxFQUFFLG9CQUFvQjtNQUN2QkMsQ0FBQyxFQUFFLG9CQUFvQjtNQUN2QkMsQ0FBQyxFQUFFO0lBQ1A7RUFDSjtBQUNKLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDTyxTQUFTQyxlQUFlQSxDQUFDQyxHQUFHLEVBQUVDLE1BQU0sRUFBRTtFQUN6QyxJQUFJQyxJQUFJLEdBQUdqQixnQkFBZ0IsQ0FBQ2dCLE1BQU0sQ0FBQ0UsV0FBVyxDQUFDLENBQUMsQ0FBQztFQUNqRCxJQUFJRCxJQUFJLEVBQ0osT0FBT0UsU0FBUyxDQUFDSixHQUFHLENBQUNLLE9BQU8sQ0FBQ0gsSUFBSSxDQUFDZixNQUFNLEVBQUUsVUFBVW1CLENBQUMsRUFBRTtJQUFFLE9BQU9KLElBQUksQ0FBQ2QsR0FBRyxDQUFDa0IsQ0FBQyxDQUFDO0VBQUUsQ0FBQyxDQUFDLENBQUM7RUFDcEYsT0FBT0YsU0FBUyxDQUFDSixHQUFHLENBQUM7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTSSxTQUFTQSxDQUFDSixHQUFHLEVBQUU7RUFDM0IsT0FBT0EsR0FBRyxDQUFDRyxXQUFXLENBQUMsQ0FBQztBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG93ZXItY2FzZS9kaXN0LmVzMjAxNS9pbmRleC5qcz85MDZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU291cmNlOiBmdHA6Ly9mdHAudW5pY29kZS5vcmcvUHVibGljL1VDRC9sYXRlc3QvdWNkL1NwZWNpYWxDYXNpbmcudHh0XG4gKi9cbnZhciBTVVBQT1JURURfTE9DQUxFID0ge1xuICAgIHRyOiB7XG4gICAgICAgIHJlZ2V4cDogL1xcdTAxMzB8XFx1MDA0OXxcXHUwMDQ5XFx1MDMwNy9nLFxuICAgICAgICBtYXA6IHtcbiAgICAgICAgICAgIMSwOiBcIlxcdTAwNjlcIixcbiAgICAgICAgICAgIEk6IFwiXFx1MDEzMVwiLFxuICAgICAgICAgICAgScyHOiBcIlxcdTAwNjlcIixcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIGF6OiB7XG4gICAgICAgIHJlZ2V4cDogL1xcdTAxMzAvZyxcbiAgICAgICAgbWFwOiB7XG4gICAgICAgICAgICDEsDogXCJcXHUwMDY5XCIsXG4gICAgICAgICAgICBJOiBcIlxcdTAxMzFcIixcbiAgICAgICAgICAgIEnMhzogXCJcXHUwMDY5XCIsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBsdDoge1xuICAgICAgICByZWdleHA6IC9cXHUwMDQ5fFxcdTAwNEF8XFx1MDEyRXxcXHUwMENDfFxcdTAwQ0R8XFx1MDEyOC9nLFxuICAgICAgICBtYXA6IHtcbiAgICAgICAgICAgIEk6IFwiXFx1MDA2OVxcdTAzMDdcIixcbiAgICAgICAgICAgIEo6IFwiXFx1MDA2QVxcdTAzMDdcIixcbiAgICAgICAgICAgIMSuOiBcIlxcdTAxMkZcXHUwMzA3XCIsXG4gICAgICAgICAgICDDjDogXCJcXHUwMDY5XFx1MDMwN1xcdTAzMDBcIixcbiAgICAgICAgICAgIMONOiBcIlxcdTAwNjlcXHUwMzA3XFx1MDMwMVwiLFxuICAgICAgICAgICAgxKg6IFwiXFx1MDA2OVxcdTAzMDdcXHUwMzAzXCIsXG4gICAgICAgIH0sXG4gICAgfSxcbn07XG4vKipcbiAqIExvY2FsaXplZCBsb3dlciBjYXNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9jYWxlTG93ZXJDYXNlKHN0ciwgbG9jYWxlKSB7XG4gICAgdmFyIGxhbmcgPSBTVVBQT1JURURfTE9DQUxFW2xvY2FsZS50b0xvd2VyQ2FzZSgpXTtcbiAgICBpZiAobGFuZylcbiAgICAgICAgcmV0dXJuIGxvd2VyQ2FzZShzdHIucmVwbGFjZShsYW5nLnJlZ2V4cCwgZnVuY3Rpb24gKG0pIHsgcmV0dXJuIGxhbmcubWFwW21dOyB9KSk7XG4gICAgcmV0dXJuIGxvd2VyQ2FzZShzdHIpO1xufVxuLyoqXG4gKiBMb3dlciBjYXNlIGFzIGEgZnVuY3Rpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsb3dlckNhc2Uoc3RyKSB7XG4gICAgcmV0dXJuIHN0ci50b0xvd2VyQ2FzZSgpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIlNVUFBPUlRFRF9MT0NBTEUiLCJ0ciIsInJlZ2V4cCIsIm1hcCIsIsSwIiwiSSIsIknMhyIsImF6IiwibHQiLCJKIiwixK4iLCLDjCIsIsONIiwixKgiLCJsb2NhbGVMb3dlckNhc2UiLCJzdHIiLCJsb2NhbGUiLCJsYW5nIiwidG9Mb3dlckNhc2UiLCJsb3dlckNhc2UiLCJyZXBsYWNlIiwibSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/lower-case/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/map-obj/index.js":
/*!***************************************!*\
  !*** ./node_modules/map-obj/index.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst isObject = value => typeof value === 'object' && value !== null;\nconst mapObjectSkip = Symbol('skip');\n\n// Customized for this use-case\nconst isObjectCustom = value => isObject(value) && !(value instanceof RegExp) && !(value instanceof Error) && !(value instanceof Date);\nconst mapObject = (object, mapper, options, isSeen = new WeakMap()) => {\n  options = _objectSpread({\n    deep: false,\n    target: {}\n  }, options);\n  if (isSeen.has(object)) {\n    return isSeen.get(object);\n  }\n  isSeen.set(object, options.target);\n  const {\n    target\n  } = options;\n  delete options.target;\n  const mapArray = array => array.map(element => isObjectCustom(element) ? mapObject(element, mapper, options, isSeen) : element);\n  if (Array.isArray(object)) {\n    return mapArray(object);\n  }\n  for (const [key, value] of Object.entries(object)) {\n    const mapResult = mapper(key, value, object);\n    if (mapResult === mapObjectSkip) {\n      continue;\n    }\n    let [newKey, newValue, {\n      shouldRecurse = true\n    } = {}] = mapResult;\n\n    // Drop `__proto__` keys.\n    if (newKey === '__proto__') {\n      continue;\n    }\n    if (options.deep && shouldRecurse && isObjectCustom(newValue)) {\n      newValue = Array.isArray(newValue) ? mapArray(newValue) : mapObject(newValue, mapper, options, isSeen);\n    }\n    target[newKey] = newValue;\n  }\n  return target;\n};\nmodule.exports = (object, mapper, options) => {\n  if (!isObject(object)) {\n    throw new TypeError(`Expected an object, got \\`${object}\\` (${typeof object})`);\n  }\n  return mapObject(object, mapper, options);\n};\nmodule.exports.mapObjectSkip = mapObjectSkip;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL21hcC1vYmovaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQUEsU0FBQUEsUUFBQUMsQ0FBQSxFQUFBQyxDQUFBLFFBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxJQUFBLENBQUFKLENBQUEsT0FBQUcsTUFBQSxDQUFBRSxxQkFBQSxRQUFBQyxDQUFBLEdBQUFILE1BQUEsQ0FBQUUscUJBQUEsQ0FBQUwsQ0FBQSxHQUFBQyxDQUFBLEtBQUFLLENBQUEsR0FBQUEsQ0FBQSxDQUFBQyxNQUFBLFdBQUFOLENBQUEsV0FBQUUsTUFBQSxDQUFBSyx3QkFBQSxDQUFBUixDQUFBLEVBQUFDLENBQUEsRUFBQVEsVUFBQSxPQUFBUCxDQUFBLENBQUFRLElBQUEsQ0FBQUMsS0FBQSxDQUFBVCxDQUFBLEVBQUFJLENBQUEsWUFBQUosQ0FBQTtBQUFBLFNBQUFVLGNBQUFaLENBQUEsYUFBQUMsQ0FBQSxNQUFBQSxDQUFBLEdBQUFZLFNBQUEsQ0FBQUMsTUFBQSxFQUFBYixDQUFBLFVBQUFDLENBQUEsV0FBQVcsU0FBQSxDQUFBWixDQUFBLElBQUFZLFNBQUEsQ0FBQVosQ0FBQSxRQUFBQSxDQUFBLE9BQUFGLE9BQUEsQ0FBQUksTUFBQSxDQUFBRCxDQUFBLE9BQUFhLE9BQUEsV0FBQWQsQ0FBQSxJQUFBZSxlQUFBLENBQUFoQixDQUFBLEVBQUFDLENBQUEsRUFBQUMsQ0FBQSxDQUFBRCxDQUFBLFNBQUFFLE1BQUEsQ0FBQWMseUJBQUEsR0FBQWQsTUFBQSxDQUFBZSxnQkFBQSxDQUFBbEIsQ0FBQSxFQUFBRyxNQUFBLENBQUFjLHlCQUFBLENBQUFmLENBQUEsS0FBQUgsT0FBQSxDQUFBSSxNQUFBLENBQUFELENBQUEsR0FBQWEsT0FBQSxXQUFBZCxDQUFBLElBQUFFLE1BQUEsQ0FBQWdCLGNBQUEsQ0FBQW5CLENBQUEsRUFBQUMsQ0FBQSxFQUFBRSxNQUFBLENBQUFLLHdCQUFBLENBQUFOLENBQUEsRUFBQUQsQ0FBQSxpQkFBQUQsQ0FBQTtBQUFBLFNBQUFnQixnQkFBQUksR0FBQSxFQUFBQyxHQUFBLEVBQUFDLEtBQUEsSUFBQUQsR0FBQSxHQUFBRSxjQUFBLENBQUFGLEdBQUEsT0FBQUEsR0FBQSxJQUFBRCxHQUFBLElBQUFqQixNQUFBLENBQUFnQixjQUFBLENBQUFDLEdBQUEsRUFBQUMsR0FBQSxJQUFBQyxLQUFBLEVBQUFBLEtBQUEsRUFBQWIsVUFBQSxRQUFBZSxZQUFBLFFBQUFDLFFBQUEsb0JBQUFMLEdBQUEsQ0FBQUMsR0FBQSxJQUFBQyxLQUFBLFdBQUFGLEdBQUE7QUFBQSxTQUFBRyxlQUFBRyxHQUFBLFFBQUFMLEdBQUEsR0FBQU0sWUFBQSxDQUFBRCxHQUFBLDJCQUFBTCxHQUFBLGdCQUFBQSxHQUFBLEdBQUFPLE1BQUEsQ0FBQVAsR0FBQTtBQUFBLFNBQUFNLGFBQUFFLEtBQUEsRUFBQUMsSUFBQSxlQUFBRCxLQUFBLGlCQUFBQSxLQUFBLGtCQUFBQSxLQUFBLE1BQUFFLElBQUEsR0FBQUYsS0FBQSxDQUFBRyxNQUFBLENBQUFDLFdBQUEsT0FBQUYsSUFBQSxLQUFBRyxTQUFBLFFBQUFDLEdBQUEsR0FBQUosSUFBQSxDQUFBSyxJQUFBLENBQUFQLEtBQUEsRUFBQUMsSUFBQSwyQkFBQUssR0FBQSxzQkFBQUEsR0FBQSxZQUFBRSxTQUFBLDREQUFBUCxJQUFBLGdCQUFBRixNQUFBLEdBQUFVLE1BQUEsRUFBQVQsS0FBQTtBQUViLE1BQU1VLFFBQVEsR0FBR2pCLEtBQUssSUFBSSxPQUFPQSxLQUFLLEtBQUssUUFBUSxJQUFJQSxLQUFLLEtBQUssSUFBSTtBQUNyRSxNQUFNa0IsYUFBYSxHQUFHUixNQUFNLENBQUMsTUFBTSxDQUFDOztBQUVwQztBQUNBLE1BQU1TLGNBQWMsR0FBR25CLEtBQUssSUFDM0JpQixRQUFRLENBQUNqQixLQUFLLENBQUMsSUFDZixFQUFFQSxLQUFLLFlBQVlvQixNQUFNLENBQUMsSUFDMUIsRUFBRXBCLEtBQUssWUFBWXFCLEtBQUssQ0FBQyxJQUN6QixFQUFFckIsS0FBSyxZQUFZc0IsSUFBSSxDQUFDO0FBRXpCLE1BQU1DLFNBQVMsR0FBR0EsQ0FBQ0MsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsTUFBTSxHQUFHLElBQUlDLE9BQU8sQ0FBQyxDQUFDLEtBQUs7RUFDdEVGLE9BQU8sR0FBQXBDLGFBQUE7SUFDTnVDLElBQUksRUFBRSxLQUFLO0lBQ1hDLE1BQU0sRUFBRSxDQUFDO0VBQUMsR0FDUEosT0FBTyxDQUNWO0VBRUQsSUFBSUMsTUFBTSxDQUFDSSxHQUFHLENBQUNQLE1BQU0sQ0FBQyxFQUFFO0lBQ3ZCLE9BQU9HLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDUixNQUFNLENBQUM7RUFDMUI7RUFFQUcsTUFBTSxDQUFDTSxHQUFHLENBQUNULE1BQU0sRUFBRUUsT0FBTyxDQUFDSSxNQUFNLENBQUM7RUFFbEMsTUFBTTtJQUFDQTtFQUFNLENBQUMsR0FBR0osT0FBTztFQUN4QixPQUFPQSxPQUFPLENBQUNJLE1BQU07RUFFckIsTUFBTUksUUFBUSxHQUFHQyxLQUFLLElBQUlBLEtBQUssQ0FBQ0MsR0FBRyxDQUFDQyxPQUFPLElBQUlsQixjQUFjLENBQUNrQixPQUFPLENBQUMsR0FBR2QsU0FBUyxDQUFDYyxPQUFPLEVBQUVaLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxNQUFNLENBQUMsR0FBR1UsT0FBTyxDQUFDO0VBQy9ILElBQUlDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDZixNQUFNLENBQUMsRUFBRTtJQUMxQixPQUFPVSxRQUFRLENBQUNWLE1BQU0sQ0FBQztFQUN4QjtFQUVBLEtBQUssTUFBTSxDQUFDekIsR0FBRyxFQUFFQyxLQUFLLENBQUMsSUFBSW5CLE1BQU0sQ0FBQzJELE9BQU8sQ0FBQ2hCLE1BQU0sQ0FBQyxFQUFFO0lBQ2xELE1BQU1pQixTQUFTLEdBQUdoQixNQUFNLENBQUMxQixHQUFHLEVBQUVDLEtBQUssRUFBRXdCLE1BQU0sQ0FBQztJQUU1QyxJQUFJaUIsU0FBUyxLQUFLdkIsYUFBYSxFQUFFO01BQ2hDO0lBQ0Q7SUFFQSxJQUFJLENBQUN3QixNQUFNLEVBQUVDLFFBQVEsRUFBRTtNQUFDQyxhQUFhLEdBQUc7SUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBR0gsU0FBUzs7SUFFL0Q7SUFDQSxJQUFJQyxNQUFNLEtBQUssV0FBVyxFQUFFO01BQzNCO0lBQ0Q7SUFFQSxJQUFJaEIsT0FBTyxDQUFDRyxJQUFJLElBQUllLGFBQWEsSUFBSXpCLGNBQWMsQ0FBQ3dCLFFBQVEsQ0FBQyxFQUFFO01BQzlEQSxRQUFRLEdBQUdMLEtBQUssQ0FBQ0MsT0FBTyxDQUFDSSxRQUFRLENBQUMsR0FDakNULFFBQVEsQ0FBQ1MsUUFBUSxDQUFDLEdBQ2xCcEIsU0FBUyxDQUFDb0IsUUFBUSxFQUFFbEIsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLE1BQU0sQ0FBQztJQUM5QztJQUVBRyxNQUFNLENBQUNZLE1BQU0sQ0FBQyxHQUFHQyxRQUFRO0VBQzFCO0VBRUEsT0FBT2IsTUFBTTtBQUNkLENBQUM7QUFFRGUsTUFBTSxDQUFDQyxPQUFPLEdBQUcsQ0FBQ3RCLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEtBQUs7RUFDN0MsSUFBSSxDQUFDVCxRQUFRLENBQUNPLE1BQU0sQ0FBQyxFQUFFO0lBQ3RCLE1BQU0sSUFBSVQsU0FBUyxDQUFFLDZCQUE0QlMsTUFBTyxPQUFNLE9BQU9BLE1BQU8sR0FBRSxDQUFDO0VBQ2hGO0VBRUEsT0FBT0QsU0FBUyxDQUFDQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxDQUFDO0FBQzFDLENBQUM7QUFFRG1CLDRCQUE0QixHQUFHM0IsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWFwLW9iai9pbmRleC5qcz9lNDgxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgaXNPYmplY3QgPSB2YWx1ZSA9PiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICE9PSBudWxsO1xuY29uc3QgbWFwT2JqZWN0U2tpcCA9IFN5bWJvbCgnc2tpcCcpO1xuXG4vLyBDdXN0b21pemVkIGZvciB0aGlzIHVzZS1jYXNlXG5jb25zdCBpc09iamVjdEN1c3RvbSA9IHZhbHVlID0+XG5cdGlzT2JqZWN0KHZhbHVlKSAmJlxuXHQhKHZhbHVlIGluc3RhbmNlb2YgUmVnRXhwKSAmJlxuXHQhKHZhbHVlIGluc3RhbmNlb2YgRXJyb3IpICYmXG5cdCEodmFsdWUgaW5zdGFuY2VvZiBEYXRlKTtcblxuY29uc3QgbWFwT2JqZWN0ID0gKG9iamVjdCwgbWFwcGVyLCBvcHRpb25zLCBpc1NlZW4gPSBuZXcgV2Vha01hcCgpKSA9PiB7XG5cdG9wdGlvbnMgPSB7XG5cdFx0ZGVlcDogZmFsc2UsXG5cdFx0dGFyZ2V0OiB7fSxcblx0XHQuLi5vcHRpb25zXG5cdH07XG5cblx0aWYgKGlzU2Vlbi5oYXMob2JqZWN0KSkge1xuXHRcdHJldHVybiBpc1NlZW4uZ2V0KG9iamVjdCk7XG5cdH1cblxuXHRpc1NlZW4uc2V0KG9iamVjdCwgb3B0aW9ucy50YXJnZXQpO1xuXG5cdGNvbnN0IHt0YXJnZXR9ID0gb3B0aW9ucztcblx0ZGVsZXRlIG9wdGlvbnMudGFyZ2V0O1xuXG5cdGNvbnN0IG1hcEFycmF5ID0gYXJyYXkgPT4gYXJyYXkubWFwKGVsZW1lbnQgPT4gaXNPYmplY3RDdXN0b20oZWxlbWVudCkgPyBtYXBPYmplY3QoZWxlbWVudCwgbWFwcGVyLCBvcHRpb25zLCBpc1NlZW4pIDogZWxlbWVudCk7XG5cdGlmIChBcnJheS5pc0FycmF5KG9iamVjdCkpIHtcblx0XHRyZXR1cm4gbWFwQXJyYXkob2JqZWN0KTtcblx0fVxuXG5cdGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKG9iamVjdCkpIHtcblx0XHRjb25zdCBtYXBSZXN1bHQgPSBtYXBwZXIoa2V5LCB2YWx1ZSwgb2JqZWN0KTtcblxuXHRcdGlmIChtYXBSZXN1bHQgPT09IG1hcE9iamVjdFNraXApIHtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGxldCBbbmV3S2V5LCBuZXdWYWx1ZSwge3Nob3VsZFJlY3Vyc2UgPSB0cnVlfSA9IHt9XSA9IG1hcFJlc3VsdDtcblxuXHRcdC8vIERyb3AgYF9fcHJvdG9fX2Aga2V5cy5cblx0XHRpZiAobmV3S2V5ID09PSAnX19wcm90b19fJykge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0aWYgKG9wdGlvbnMuZGVlcCAmJiBzaG91bGRSZWN1cnNlICYmIGlzT2JqZWN0Q3VzdG9tKG5ld1ZhbHVlKSkge1xuXHRcdFx0bmV3VmFsdWUgPSBBcnJheS5pc0FycmF5KG5ld1ZhbHVlKSA/XG5cdFx0XHRcdG1hcEFycmF5KG5ld1ZhbHVlKSA6XG5cdFx0XHRcdG1hcE9iamVjdChuZXdWYWx1ZSwgbWFwcGVyLCBvcHRpb25zLCBpc1NlZW4pO1xuXHRcdH1cblxuXHRcdHRhcmdldFtuZXdLZXldID0gbmV3VmFsdWU7XG5cdH1cblxuXHRyZXR1cm4gdGFyZ2V0O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSAob2JqZWN0LCBtYXBwZXIsIG9wdGlvbnMpID0+IHtcblx0aWYgKCFpc09iamVjdChvYmplY3QpKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihgRXhwZWN0ZWQgYW4gb2JqZWN0LCBnb3QgXFxgJHtvYmplY3R9XFxgICgke3R5cGVvZiBvYmplY3R9KWApO1xuXHR9XG5cblx0cmV0dXJuIG1hcE9iamVjdChvYmplY3QsIG1hcHBlciwgb3B0aW9ucyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5tYXBPYmplY3RTa2lwID0gbWFwT2JqZWN0U2tpcDtcbiJdLCJuYW1lcyI6WyJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5Iiwib2JqIiwia2V5IiwidmFsdWUiLCJfdG9Qcm9wZXJ0eUtleSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiYXJnIiwiX3RvUHJpbWl0aXZlIiwiU3RyaW5nIiwiaW5wdXQiLCJoaW50IiwicHJpbSIsIlN5bWJvbCIsInRvUHJpbWl0aXZlIiwidW5kZWZpbmVkIiwicmVzIiwiY2FsbCIsIlR5cGVFcnJvciIsIk51bWJlciIsImlzT2JqZWN0IiwibWFwT2JqZWN0U2tpcCIsImlzT2JqZWN0Q3VzdG9tIiwiUmVnRXhwIiwiRXJyb3IiLCJEYXRlIiwibWFwT2JqZWN0Iiwib2JqZWN0IiwibWFwcGVyIiwib3B0aW9ucyIsImlzU2VlbiIsIldlYWtNYXAiLCJkZWVwIiwidGFyZ2V0IiwiaGFzIiwiZ2V0Iiwic2V0IiwibWFwQXJyYXkiLCJhcnJheSIsIm1hcCIsImVsZW1lbnQiLCJBcnJheSIsImlzQXJyYXkiLCJlbnRyaWVzIiwibWFwUmVzdWx0IiwibmV3S2V5IiwibmV3VmFsdWUiLCJzaG91bGRSZWN1cnNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/map-obj/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\"path\" in c && c.path && `Path=${c.path}`, \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`, \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`, \"domain\" in c && c.domain && `Domain=${c.domain}`, \"secure\" in c && c.secure && \"Secure\", \"httpOnly\" in c && c.httpOnly && \"HttpOnly\", \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`, \"partitioned\" in c && c.partitioned && \"Partitioned\", \"priority\" in c && c.priority && `Priority=${c.priority}`].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair) continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {}\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(attributes.map(([key, value2]) => [key.toLowerCase(), value2]));\n  const cookie = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    name,\n    value: decodeURIComponent(value),\n    domain\n  }, expires && {\n    expires: new Date(expires)\n  }), httponly && {\n    httpOnly: true\n  }), typeof maxage === \"string\" && {\n    maxAge: Number(maxage)\n  }), {}, {\n    path\n  }, samesite && {\n    sameSite: parseSameSite(samesite)\n  }), secure && {\n    secure: true\n  }), priority && {\n    priority: parsePriority(priority)\n  }), partitioned && {\n    partitioned: true\n  });\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString) return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, {\n          name,\n          value\n        });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, {\n      name,\n      value\n    });\n    this._headers.set(\"cookie\", Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \"));\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map(name => map.delete(name));\n    this._headers.set(\"cookie\", Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \"));\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(v => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed) this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(c => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie(_objectSpread({\n      name,\n      value\n    }, cookie)));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, path, domain] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0].path, args[0].domain];\n    return this.set({\n      name,\n      path,\n      domain,\n      value: \"\",\n      expires: /* @__PURE__ */new Date(0)\n    });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = {\n  name: \"\",\n  value: \"\"\n}) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@opentelemetry/api/index.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __dirname = \"/\";\n(() => {\n  \"use strict\";\n\n  var e = {\n    491: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.ContextAPI = void 0;\n      const n = r(223);\n      const a = r(172);\n      const o = r(930);\n      const i = \"context\";\n      const c = new n.NoopContextManager();\n      class ContextAPI {\n        constructor() {}\n        static getInstance() {\n          if (!this._instance) {\n            this._instance = new ContextAPI();\n          }\n          return this._instance;\n        }\n        setGlobalContextManager(e) {\n          return (0, a.registerGlobal)(i, e, o.DiagAPI.instance());\n        }\n        active() {\n          return this._getContextManager().active();\n        }\n        with(e, t, r, ...n) {\n          return this._getContextManager().with(e, t, r, ...n);\n        }\n        bind(e, t) {\n          return this._getContextManager().bind(e, t);\n        }\n        _getContextManager() {\n          return (0, a.getGlobal)(i) || c;\n        }\n        disable() {\n          this._getContextManager().disable();\n          (0, a.unregisterGlobal)(i, o.DiagAPI.instance());\n        }\n      }\n      t.ContextAPI = ContextAPI;\n    },\n    930: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.DiagAPI = void 0;\n      const n = r(56);\n      const a = r(912);\n      const o = r(957);\n      const i = r(172);\n      const c = \"diag\";\n      class DiagAPI {\n        constructor() {\n          function _logProxy(e) {\n            return function (...t) {\n              const r = (0, i.getGlobal)(\"diag\");\n              if (!r) return;\n              return r[e](...t);\n            };\n          }\n          const e = this;\n          const setLogger = (t, r = {\n            logLevel: o.DiagLogLevel.INFO\n          }) => {\n            var n, c, s;\n            if (t === e) {\n              const t = new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");\n              e.error((n = t.stack) !== null && n !== void 0 ? n : t.message);\n              return false;\n            }\n            if (typeof r === \"number\") {\n              r = {\n                logLevel: r\n              };\n            }\n            const u = (0, i.getGlobal)(\"diag\");\n            const l = (0, a.createLogLevelDiagLogger)((c = r.logLevel) !== null && c !== void 0 ? c : o.DiagLogLevel.INFO, t);\n            if (u && !r.suppressOverrideMessage) {\n              const e = (s = new Error().stack) !== null && s !== void 0 ? s : \"<failed to generate stacktrace>\";\n              u.warn(`Current logger will be overwritten from ${e}`);\n              l.warn(`Current logger will overwrite one already registered from ${e}`);\n            }\n            return (0, i.registerGlobal)(\"diag\", l, e, true);\n          };\n          e.setLogger = setLogger;\n          e.disable = () => {\n            (0, i.unregisterGlobal)(c, e);\n          };\n          e.createComponentLogger = e => new n.DiagComponentLogger(e);\n          e.verbose = _logProxy(\"verbose\");\n          e.debug = _logProxy(\"debug\");\n          e.info = _logProxy(\"info\");\n          e.warn = _logProxy(\"warn\");\n          e.error = _logProxy(\"error\");\n        }\n        static instance() {\n          if (!this._instance) {\n            this._instance = new DiagAPI();\n          }\n          return this._instance;\n        }\n      }\n      t.DiagAPI = DiagAPI;\n    },\n    653: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.MetricsAPI = void 0;\n      const n = r(660);\n      const a = r(172);\n      const o = r(930);\n      const i = \"metrics\";\n      class MetricsAPI {\n        constructor() {}\n        static getInstance() {\n          if (!this._instance) {\n            this._instance = new MetricsAPI();\n          }\n          return this._instance;\n        }\n        setGlobalMeterProvider(e) {\n          return (0, a.registerGlobal)(i, e, o.DiagAPI.instance());\n        }\n        getMeterProvider() {\n          return (0, a.getGlobal)(i) || n.NOOP_METER_PROVIDER;\n        }\n        getMeter(e, t, r) {\n          return this.getMeterProvider().getMeter(e, t, r);\n        }\n        disable() {\n          (0, a.unregisterGlobal)(i, o.DiagAPI.instance());\n        }\n      }\n      t.MetricsAPI = MetricsAPI;\n    },\n    181: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.PropagationAPI = void 0;\n      const n = r(172);\n      const a = r(874);\n      const o = r(194);\n      const i = r(277);\n      const c = r(369);\n      const s = r(930);\n      const u = \"propagation\";\n      const l = new a.NoopTextMapPropagator();\n      class PropagationAPI {\n        constructor() {\n          this.createBaggage = c.createBaggage;\n          this.getBaggage = i.getBaggage;\n          this.getActiveBaggage = i.getActiveBaggage;\n          this.setBaggage = i.setBaggage;\n          this.deleteBaggage = i.deleteBaggage;\n        }\n        static getInstance() {\n          if (!this._instance) {\n            this._instance = new PropagationAPI();\n          }\n          return this._instance;\n        }\n        setGlobalPropagator(e) {\n          return (0, n.registerGlobal)(u, e, s.DiagAPI.instance());\n        }\n        inject(e, t, r = o.defaultTextMapSetter) {\n          return this._getGlobalPropagator().inject(e, t, r);\n        }\n        extract(e, t, r = o.defaultTextMapGetter) {\n          return this._getGlobalPropagator().extract(e, t, r);\n        }\n        fields() {\n          return this._getGlobalPropagator().fields();\n        }\n        disable() {\n          (0, n.unregisterGlobal)(u, s.DiagAPI.instance());\n        }\n        _getGlobalPropagator() {\n          return (0, n.getGlobal)(u) || l;\n        }\n      }\n      t.PropagationAPI = PropagationAPI;\n    },\n    997: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.TraceAPI = void 0;\n      const n = r(172);\n      const a = r(846);\n      const o = r(139);\n      const i = r(607);\n      const c = r(930);\n      const s = \"trace\";\n      class TraceAPI {\n        constructor() {\n          this._proxyTracerProvider = new a.ProxyTracerProvider();\n          this.wrapSpanContext = o.wrapSpanContext;\n          this.isSpanContextValid = o.isSpanContextValid;\n          this.deleteSpan = i.deleteSpan;\n          this.getSpan = i.getSpan;\n          this.getActiveSpan = i.getActiveSpan;\n          this.getSpanContext = i.getSpanContext;\n          this.setSpan = i.setSpan;\n          this.setSpanContext = i.setSpanContext;\n        }\n        static getInstance() {\n          if (!this._instance) {\n            this._instance = new TraceAPI();\n          }\n          return this._instance;\n        }\n        setGlobalTracerProvider(e) {\n          const t = (0, n.registerGlobal)(s, this._proxyTracerProvider, c.DiagAPI.instance());\n          if (t) {\n            this._proxyTracerProvider.setDelegate(e);\n          }\n          return t;\n        }\n        getTracerProvider() {\n          return (0, n.getGlobal)(s) || this._proxyTracerProvider;\n        }\n        getTracer(e, t) {\n          return this.getTracerProvider().getTracer(e, t);\n        }\n        disable() {\n          (0, n.unregisterGlobal)(s, c.DiagAPI.instance());\n          this._proxyTracerProvider = new a.ProxyTracerProvider();\n        }\n      }\n      t.TraceAPI = TraceAPI;\n    },\n    277: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.deleteBaggage = t.setBaggage = t.getActiveBaggage = t.getBaggage = void 0;\n      const n = r(491);\n      const a = r(780);\n      const o = (0, a.createContextKey)(\"OpenTelemetry Baggage Key\");\n      function getBaggage(e) {\n        return e.getValue(o) || undefined;\n      }\n      t.getBaggage = getBaggage;\n      function getActiveBaggage() {\n        return getBaggage(n.ContextAPI.getInstance().active());\n      }\n      t.getActiveBaggage = getActiveBaggage;\n      function setBaggage(e, t) {\n        return e.setValue(o, t);\n      }\n      t.setBaggage = setBaggage;\n      function deleteBaggage(e) {\n        return e.deleteValue(o);\n      }\n      t.deleteBaggage = deleteBaggage;\n    },\n    993: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.BaggageImpl = void 0;\n      class BaggageImpl {\n        constructor(e) {\n          this._entries = e ? new Map(e) : new Map();\n        }\n        getEntry(e) {\n          const t = this._entries.get(e);\n          if (!t) {\n            return undefined;\n          }\n          return Object.assign({}, t);\n        }\n        getAllEntries() {\n          return Array.from(this._entries.entries()).map(([e, t]) => [e, t]);\n        }\n        setEntry(e, t) {\n          const r = new BaggageImpl(this._entries);\n          r._entries.set(e, t);\n          return r;\n        }\n        removeEntry(e) {\n          const t = new BaggageImpl(this._entries);\n          t._entries.delete(e);\n          return t;\n        }\n        removeEntries(...e) {\n          const t = new BaggageImpl(this._entries);\n          for (const r of e) {\n            t._entries.delete(r);\n          }\n          return t;\n        }\n        clear() {\n          return new BaggageImpl();\n        }\n      }\n      t.BaggageImpl = BaggageImpl;\n    },\n    830: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.baggageEntryMetadataSymbol = void 0;\n      t.baggageEntryMetadataSymbol = Symbol(\"BaggageEntryMetadata\");\n    },\n    369: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.baggageEntryMetadataFromString = t.createBaggage = void 0;\n      const n = r(930);\n      const a = r(993);\n      const o = r(830);\n      const i = n.DiagAPI.instance();\n      function createBaggage(e = {}) {\n        return new a.BaggageImpl(new Map(Object.entries(e)));\n      }\n      t.createBaggage = createBaggage;\n      function baggageEntryMetadataFromString(e) {\n        if (typeof e !== \"string\") {\n          i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);\n          e = \"\";\n        }\n        return {\n          __TYPE__: o.baggageEntryMetadataSymbol,\n          toString() {\n            return e;\n          }\n        };\n      }\n      t.baggageEntryMetadataFromString = baggageEntryMetadataFromString;\n    },\n    67: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.context = void 0;\n      const n = r(491);\n      t.context = n.ContextAPI.getInstance();\n    },\n    223: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.NoopContextManager = void 0;\n      const n = r(780);\n      class NoopContextManager {\n        active() {\n          return n.ROOT_CONTEXT;\n        }\n        with(e, t, r, ...n) {\n          return t.call(r, ...n);\n        }\n        bind(e, t) {\n          return t;\n        }\n        enable() {\n          return this;\n        }\n        disable() {\n          return this;\n        }\n      }\n      t.NoopContextManager = NoopContextManager;\n    },\n    780: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.ROOT_CONTEXT = t.createContextKey = void 0;\n      function createContextKey(e) {\n        return Symbol.for(e);\n      }\n      t.createContextKey = createContextKey;\n      class BaseContext {\n        constructor(e) {\n          const t = this;\n          t._currentContext = e ? new Map(e) : new Map();\n          t.getValue = e => t._currentContext.get(e);\n          t.setValue = (e, r) => {\n            const n = new BaseContext(t._currentContext);\n            n._currentContext.set(e, r);\n            return n;\n          };\n          t.deleteValue = e => {\n            const r = new BaseContext(t._currentContext);\n            r._currentContext.delete(e);\n            return r;\n          };\n        }\n      }\n      t.ROOT_CONTEXT = new BaseContext();\n    },\n    506: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.diag = void 0;\n      const n = r(930);\n      t.diag = n.DiagAPI.instance();\n    },\n    56: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.DiagComponentLogger = void 0;\n      const n = r(172);\n      class DiagComponentLogger {\n        constructor(e) {\n          this._namespace = e.namespace || \"DiagComponentLogger\";\n        }\n        debug(...e) {\n          return logProxy(\"debug\", this._namespace, e);\n        }\n        error(...e) {\n          return logProxy(\"error\", this._namespace, e);\n        }\n        info(...e) {\n          return logProxy(\"info\", this._namespace, e);\n        }\n        warn(...e) {\n          return logProxy(\"warn\", this._namespace, e);\n        }\n        verbose(...e) {\n          return logProxy(\"verbose\", this._namespace, e);\n        }\n      }\n      t.DiagComponentLogger = DiagComponentLogger;\n      function logProxy(e, t, r) {\n        const a = (0, n.getGlobal)(\"diag\");\n        if (!a) {\n          return;\n        }\n        r.unshift(t);\n        return a[e](...r);\n      }\n    },\n    972: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.DiagConsoleLogger = void 0;\n      const r = [{\n        n: \"error\",\n        c: \"error\"\n      }, {\n        n: \"warn\",\n        c: \"warn\"\n      }, {\n        n: \"info\",\n        c: \"info\"\n      }, {\n        n: \"debug\",\n        c: \"debug\"\n      }, {\n        n: \"verbose\",\n        c: \"trace\"\n      }];\n      class DiagConsoleLogger {\n        constructor() {\n          function _consoleFunc(e) {\n            return function (...t) {\n              if (console) {\n                let r = console[e];\n                if (typeof r !== \"function\") {\n                  r = console.log;\n                }\n                if (typeof r === \"function\") {\n                  return r.apply(console, t);\n                }\n              }\n            };\n          }\n          for (let e = 0; e < r.length; e++) {\n            this[r[e].n] = _consoleFunc(r[e].c);\n          }\n        }\n      }\n      t.DiagConsoleLogger = DiagConsoleLogger;\n    },\n    912: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.createLogLevelDiagLogger = void 0;\n      const n = r(957);\n      function createLogLevelDiagLogger(e, t) {\n        if (e < n.DiagLogLevel.NONE) {\n          e = n.DiagLogLevel.NONE;\n        } else if (e > n.DiagLogLevel.ALL) {\n          e = n.DiagLogLevel.ALL;\n        }\n        t = t || {};\n        function _filterFunc(r, n) {\n          const a = t[r];\n          if (typeof a === \"function\" && e >= n) {\n            return a.bind(t);\n          }\n          return function () {};\n        }\n        return {\n          error: _filterFunc(\"error\", n.DiagLogLevel.ERROR),\n          warn: _filterFunc(\"warn\", n.DiagLogLevel.WARN),\n          info: _filterFunc(\"info\", n.DiagLogLevel.INFO),\n          debug: _filterFunc(\"debug\", n.DiagLogLevel.DEBUG),\n          verbose: _filterFunc(\"verbose\", n.DiagLogLevel.VERBOSE)\n        };\n      }\n      t.createLogLevelDiagLogger = createLogLevelDiagLogger;\n    },\n    957: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.DiagLogLevel = void 0;\n      var r;\n      (function (e) {\n        e[e[\"NONE\"] = 0] = \"NONE\";\n        e[e[\"ERROR\"] = 30] = \"ERROR\";\n        e[e[\"WARN\"] = 50] = \"WARN\";\n        e[e[\"INFO\"] = 60] = \"INFO\";\n        e[e[\"DEBUG\"] = 70] = \"DEBUG\";\n        e[e[\"VERBOSE\"] = 80] = \"VERBOSE\";\n        e[e[\"ALL\"] = 9999] = \"ALL\";\n      })(r = t.DiagLogLevel || (t.DiagLogLevel = {}));\n    },\n    172: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.unregisterGlobal = t.getGlobal = t.registerGlobal = void 0;\n      const n = r(200);\n      const a = r(521);\n      const o = r(130);\n      const i = a.VERSION.split(\".\")[0];\n      const c = Symbol.for(`opentelemetry.js.api.${i}`);\n      const s = n._globalThis;\n      function registerGlobal(e, t, r, n = false) {\n        var o;\n        const i = s[c] = (o = s[c]) !== null && o !== void 0 ? o : {\n          version: a.VERSION\n        };\n        if (!n && i[e]) {\n          const t = new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);\n          r.error(t.stack || t.message);\n          return false;\n        }\n        if (i.version !== a.VERSION) {\n          const t = new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);\n          r.error(t.stack || t.message);\n          return false;\n        }\n        i[e] = t;\n        r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);\n        return true;\n      }\n      t.registerGlobal = registerGlobal;\n      function getGlobal(e) {\n        var t, r;\n        const n = (t = s[c]) === null || t === void 0 ? void 0 : t.version;\n        if (!n || !(0, o.isCompatible)(n)) {\n          return;\n        }\n        return (r = s[c]) === null || r === void 0 ? void 0 : r[e];\n      }\n      t.getGlobal = getGlobal;\n      function unregisterGlobal(e, t) {\n        t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);\n        const r = s[c];\n        if (r) {\n          delete r[e];\n        }\n      }\n      t.unregisterGlobal = unregisterGlobal;\n    },\n    130: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.isCompatible = t._makeCompatibilityCheck = void 0;\n      const n = r(521);\n      const a = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n      function _makeCompatibilityCheck(e) {\n        const t = new Set([e]);\n        const r = new Set();\n        const n = e.match(a);\n        if (!n) {\n          return () => false;\n        }\n        const o = {\n          major: +n[1],\n          minor: +n[2],\n          patch: +n[3],\n          prerelease: n[4]\n        };\n        if (o.prerelease != null) {\n          return function isExactmatch(t) {\n            return t === e;\n          };\n        }\n        function _reject(e) {\n          r.add(e);\n          return false;\n        }\n        function _accept(e) {\n          t.add(e);\n          return true;\n        }\n        return function isCompatible(e) {\n          if (t.has(e)) {\n            return true;\n          }\n          if (r.has(e)) {\n            return false;\n          }\n          const n = e.match(a);\n          if (!n) {\n            return _reject(e);\n          }\n          const i = {\n            major: +n[1],\n            minor: +n[2],\n            patch: +n[3],\n            prerelease: n[4]\n          };\n          if (i.prerelease != null) {\n            return _reject(e);\n          }\n          if (o.major !== i.major) {\n            return _reject(e);\n          }\n          if (o.major === 0) {\n            if (o.minor === i.minor && o.patch <= i.patch) {\n              return _accept(e);\n            }\n            return _reject(e);\n          }\n          if (o.minor <= i.minor) {\n            return _accept(e);\n          }\n          return _reject(e);\n        };\n      }\n      t._makeCompatibilityCheck = _makeCompatibilityCheck;\n      t.isCompatible = _makeCompatibilityCheck(n.VERSION);\n    },\n    886: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.metrics = void 0;\n      const n = r(653);\n      t.metrics = n.MetricsAPI.getInstance();\n    },\n    901: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.ValueType = void 0;\n      var r;\n      (function (e) {\n        e[e[\"INT\"] = 0] = \"INT\";\n        e[e[\"DOUBLE\"] = 1] = \"DOUBLE\";\n      })(r = t.ValueType || (t.ValueType = {}));\n    },\n    102: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.createNoopMeter = t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = t.NOOP_OBSERVABLE_GAUGE_METRIC = t.NOOP_OBSERVABLE_COUNTER_METRIC = t.NOOP_UP_DOWN_COUNTER_METRIC = t.NOOP_HISTOGRAM_METRIC = t.NOOP_COUNTER_METRIC = t.NOOP_METER = t.NoopObservableUpDownCounterMetric = t.NoopObservableGaugeMetric = t.NoopObservableCounterMetric = t.NoopObservableMetric = t.NoopHistogramMetric = t.NoopUpDownCounterMetric = t.NoopCounterMetric = t.NoopMetric = t.NoopMeter = void 0;\n      class NoopMeter {\n        constructor() {}\n        createHistogram(e, r) {\n          return t.NOOP_HISTOGRAM_METRIC;\n        }\n        createCounter(e, r) {\n          return t.NOOP_COUNTER_METRIC;\n        }\n        createUpDownCounter(e, r) {\n          return t.NOOP_UP_DOWN_COUNTER_METRIC;\n        }\n        createObservableGauge(e, r) {\n          return t.NOOP_OBSERVABLE_GAUGE_METRIC;\n        }\n        createObservableCounter(e, r) {\n          return t.NOOP_OBSERVABLE_COUNTER_METRIC;\n        }\n        createObservableUpDownCounter(e, r) {\n          return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n        }\n        addBatchObservableCallback(e, t) {}\n        removeBatchObservableCallback(e) {}\n      }\n      t.NoopMeter = NoopMeter;\n      class NoopMetric {}\n      t.NoopMetric = NoopMetric;\n      class NoopCounterMetric extends NoopMetric {\n        add(e, t) {}\n      }\n      t.NoopCounterMetric = NoopCounterMetric;\n      class NoopUpDownCounterMetric extends NoopMetric {\n        add(e, t) {}\n      }\n      t.NoopUpDownCounterMetric = NoopUpDownCounterMetric;\n      class NoopHistogramMetric extends NoopMetric {\n        record(e, t) {}\n      }\n      t.NoopHistogramMetric = NoopHistogramMetric;\n      class NoopObservableMetric {\n        addCallback(e) {}\n        removeCallback(e) {}\n      }\n      t.NoopObservableMetric = NoopObservableMetric;\n      class NoopObservableCounterMetric extends NoopObservableMetric {}\n      t.NoopObservableCounterMetric = NoopObservableCounterMetric;\n      class NoopObservableGaugeMetric extends NoopObservableMetric {}\n      t.NoopObservableGaugeMetric = NoopObservableGaugeMetric;\n      class NoopObservableUpDownCounterMetric extends NoopObservableMetric {}\n      t.NoopObservableUpDownCounterMetric = NoopObservableUpDownCounterMetric;\n      t.NOOP_METER = new NoopMeter();\n      t.NOOP_COUNTER_METRIC = new NoopCounterMetric();\n      t.NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\n      t.NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n      t.NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric();\n      t.NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric();\n      t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableUpDownCounterMetric();\n      function createNoopMeter() {\n        return t.NOOP_METER;\n      }\n      t.createNoopMeter = createNoopMeter;\n    },\n    660: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.NOOP_METER_PROVIDER = t.NoopMeterProvider = void 0;\n      const n = r(102);\n      class NoopMeterProvider {\n        getMeter(e, t, r) {\n          return n.NOOP_METER;\n        }\n      }\n      t.NoopMeterProvider = NoopMeterProvider;\n      t.NOOP_METER_PROVIDER = new NoopMeterProvider();\n    },\n    200: function (e, t, r) {\n      var n = this && this.__createBinding || (Object.create ? function (e, t, r, n) {\n        if (n === undefined) n = r;\n        Object.defineProperty(e, n, {\n          enumerable: true,\n          get: function () {\n            return t[r];\n          }\n        });\n      } : function (e, t, r, n) {\n        if (n === undefined) n = r;\n        e[n] = t[r];\n      });\n      var a = this && this.__exportStar || function (e, t) {\n        for (var r in e) if (r !== \"default\" && !Object.prototype.hasOwnProperty.call(t, r)) n(t, e, r);\n      };\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      a(r(46), t);\n    },\n    651: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t._globalThis = void 0;\n      t._globalThis = typeof globalThis === \"object\" ? globalThis : __webpack_require__.g;\n    },\n    46: function (e, t, r) {\n      var n = this && this.__createBinding || (Object.create ? function (e, t, r, n) {\n        if (n === undefined) n = r;\n        Object.defineProperty(e, n, {\n          enumerable: true,\n          get: function () {\n            return t[r];\n          }\n        });\n      } : function (e, t, r, n) {\n        if (n === undefined) n = r;\n        e[n] = t[r];\n      });\n      var a = this && this.__exportStar || function (e, t) {\n        for (var r in e) if (r !== \"default\" && !Object.prototype.hasOwnProperty.call(t, r)) n(t, e, r);\n      };\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      a(r(651), t);\n    },\n    939: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.propagation = void 0;\n      const n = r(181);\n      t.propagation = n.PropagationAPI.getInstance();\n    },\n    874: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.NoopTextMapPropagator = void 0;\n      class NoopTextMapPropagator {\n        inject(e, t) {}\n        extract(e, t) {\n          return e;\n        }\n        fields() {\n          return [];\n        }\n      }\n      t.NoopTextMapPropagator = NoopTextMapPropagator;\n    },\n    194: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.defaultTextMapSetter = t.defaultTextMapGetter = void 0;\n      t.defaultTextMapGetter = {\n        get(e, t) {\n          if (e == null) {\n            return undefined;\n          }\n          return e[t];\n        },\n        keys(e) {\n          if (e == null) {\n            return [];\n          }\n          return Object.keys(e);\n        }\n      };\n      t.defaultTextMapSetter = {\n        set(e, t, r) {\n          if (e == null) {\n            return;\n          }\n          e[t] = r;\n        }\n      };\n    },\n    845: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.trace = void 0;\n      const n = r(997);\n      t.trace = n.TraceAPI.getInstance();\n    },\n    403: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.NonRecordingSpan = void 0;\n      const n = r(476);\n      class NonRecordingSpan {\n        constructor(e = n.INVALID_SPAN_CONTEXT) {\n          this._spanContext = e;\n        }\n        spanContext() {\n          return this._spanContext;\n        }\n        setAttribute(e, t) {\n          return this;\n        }\n        setAttributes(e) {\n          return this;\n        }\n        addEvent(e, t) {\n          return this;\n        }\n        setStatus(e) {\n          return this;\n        }\n        updateName(e) {\n          return this;\n        }\n        end(e) {}\n        isRecording() {\n          return false;\n        }\n        recordException(e, t) {}\n      }\n      t.NonRecordingSpan = NonRecordingSpan;\n    },\n    614: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.NoopTracer = void 0;\n      const n = r(491);\n      const a = r(607);\n      const o = r(403);\n      const i = r(139);\n      const c = n.ContextAPI.getInstance();\n      class NoopTracer {\n        startSpan(e, t, r = c.active()) {\n          const n = Boolean(t === null || t === void 0 ? void 0 : t.root);\n          if (n) {\n            return new o.NonRecordingSpan();\n          }\n          const s = r && (0, a.getSpanContext)(r);\n          if (isSpanContext(s) && (0, i.isSpanContextValid)(s)) {\n            return new o.NonRecordingSpan(s);\n          } else {\n            return new o.NonRecordingSpan();\n          }\n        }\n        startActiveSpan(e, t, r, n) {\n          let o;\n          let i;\n          let s;\n          if (arguments.length < 2) {\n            return;\n          } else if (arguments.length === 2) {\n            s = t;\n          } else if (arguments.length === 3) {\n            o = t;\n            s = r;\n          } else {\n            o = t;\n            i = r;\n            s = n;\n          }\n          const u = i !== null && i !== void 0 ? i : c.active();\n          const l = this.startSpan(e, o, u);\n          const g = (0, a.setSpan)(u, l);\n          return c.with(g, s, undefined, l);\n        }\n      }\n      t.NoopTracer = NoopTracer;\n      function isSpanContext(e) {\n        return typeof e === \"object\" && typeof e[\"spanId\"] === \"string\" && typeof e[\"traceId\"] === \"string\" && typeof e[\"traceFlags\"] === \"number\";\n      }\n    },\n    124: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.NoopTracerProvider = void 0;\n      const n = r(614);\n      class NoopTracerProvider {\n        getTracer(e, t, r) {\n          return new n.NoopTracer();\n        }\n      }\n      t.NoopTracerProvider = NoopTracerProvider;\n    },\n    125: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.ProxyTracer = void 0;\n      const n = r(614);\n      const a = new n.NoopTracer();\n      class ProxyTracer {\n        constructor(e, t, r, n) {\n          this._provider = e;\n          this.name = t;\n          this.version = r;\n          this.options = n;\n        }\n        startSpan(e, t, r) {\n          return this._getTracer().startSpan(e, t, r);\n        }\n        startActiveSpan(e, t, r, n) {\n          const a = this._getTracer();\n          return Reflect.apply(a.startActiveSpan, a, arguments);\n        }\n        _getTracer() {\n          if (this._delegate) {\n            return this._delegate;\n          }\n          const e = this._provider.getDelegateTracer(this.name, this.version, this.options);\n          if (!e) {\n            return a;\n          }\n          this._delegate = e;\n          return this._delegate;\n        }\n      }\n      t.ProxyTracer = ProxyTracer;\n    },\n    846: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.ProxyTracerProvider = void 0;\n      const n = r(125);\n      const a = r(124);\n      const o = new a.NoopTracerProvider();\n      class ProxyTracerProvider {\n        getTracer(e, t, r) {\n          var a;\n          return (a = this.getDelegateTracer(e, t, r)) !== null && a !== void 0 ? a : new n.ProxyTracer(this, e, t, r);\n        }\n        getDelegate() {\n          var e;\n          return (e = this._delegate) !== null && e !== void 0 ? e : o;\n        }\n        setDelegate(e) {\n          this._delegate = e;\n        }\n        getDelegateTracer(e, t, r) {\n          var n;\n          return (n = this._delegate) === null || n === void 0 ? void 0 : n.getTracer(e, t, r);\n        }\n      }\n      t.ProxyTracerProvider = ProxyTracerProvider;\n    },\n    996: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.SamplingDecision = void 0;\n      var r;\n      (function (e) {\n        e[e[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n        e[e[\"RECORD\"] = 1] = \"RECORD\";\n        e[e[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n      })(r = t.SamplingDecision || (t.SamplingDecision = {}));\n    },\n    607: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.getSpanContext = t.setSpanContext = t.deleteSpan = t.setSpan = t.getActiveSpan = t.getSpan = void 0;\n      const n = r(780);\n      const a = r(403);\n      const o = r(491);\n      const i = (0, n.createContextKey)(\"OpenTelemetry Context Key SPAN\");\n      function getSpan(e) {\n        return e.getValue(i) || undefined;\n      }\n      t.getSpan = getSpan;\n      function getActiveSpan() {\n        return getSpan(o.ContextAPI.getInstance().active());\n      }\n      t.getActiveSpan = getActiveSpan;\n      function setSpan(e, t) {\n        return e.setValue(i, t);\n      }\n      t.setSpan = setSpan;\n      function deleteSpan(e) {\n        return e.deleteValue(i);\n      }\n      t.deleteSpan = deleteSpan;\n      function setSpanContext(e, t) {\n        return setSpan(e, new a.NonRecordingSpan(t));\n      }\n      t.setSpanContext = setSpanContext;\n      function getSpanContext(e) {\n        var t;\n        return (t = getSpan(e)) === null || t === void 0 ? void 0 : t.spanContext();\n      }\n      t.getSpanContext = getSpanContext;\n    },\n    325: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.TraceStateImpl = void 0;\n      const n = r(564);\n      const a = 32;\n      const o = 512;\n      const i = \",\";\n      const c = \"=\";\n      class TraceStateImpl {\n        constructor(e) {\n          this._internalState = new Map();\n          if (e) this._parse(e);\n        }\n        set(e, t) {\n          const r = this._clone();\n          if (r._internalState.has(e)) {\n            r._internalState.delete(e);\n          }\n          r._internalState.set(e, t);\n          return r;\n        }\n        unset(e) {\n          const t = this._clone();\n          t._internalState.delete(e);\n          return t;\n        }\n        get(e) {\n          return this._internalState.get(e);\n        }\n        serialize() {\n          return this._keys().reduce((e, t) => {\n            e.push(t + c + this.get(t));\n            return e;\n          }, []).join(i);\n        }\n        _parse(e) {\n          if (e.length > o) return;\n          this._internalState = e.split(i).reverse().reduce((e, t) => {\n            const r = t.trim();\n            const a = r.indexOf(c);\n            if (a !== -1) {\n              const o = r.slice(0, a);\n              const i = r.slice(a + 1, t.length);\n              if ((0, n.validateKey)(o) && (0, n.validateValue)(i)) {\n                e.set(o, i);\n              } else {}\n            }\n            return e;\n          }, new Map());\n          if (this._internalState.size > a) {\n            this._internalState = new Map(Array.from(this._internalState.entries()).reverse().slice(0, a));\n          }\n        }\n        _keys() {\n          return Array.from(this._internalState.keys()).reverse();\n        }\n        _clone() {\n          const e = new TraceStateImpl();\n          e._internalState = new Map(this._internalState);\n          return e;\n        }\n      }\n      t.TraceStateImpl = TraceStateImpl;\n    },\n    564: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.validateValue = t.validateKey = void 0;\n      const r = \"[_0-9a-z-*/]\";\n      const n = `[a-z]${r}{0,255}`;\n      const a = `[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;\n      const o = new RegExp(`^(?:${n}|${a})$`);\n      const i = /^[ -~]{0,255}[!-~]$/;\n      const c = /,|=/;\n      function validateKey(e) {\n        return o.test(e);\n      }\n      t.validateKey = validateKey;\n      function validateValue(e) {\n        return i.test(e) && !c.test(e);\n      }\n      t.validateValue = validateValue;\n    },\n    98: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.createTraceState = void 0;\n      const n = r(325);\n      function createTraceState(e) {\n        return new n.TraceStateImpl(e);\n      }\n      t.createTraceState = createTraceState;\n    },\n    476: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.INVALID_SPAN_CONTEXT = t.INVALID_TRACEID = t.INVALID_SPANID = void 0;\n      const n = r(475);\n      t.INVALID_SPANID = \"0000000000000000\";\n      t.INVALID_TRACEID = \"00000000000000000000000000000000\";\n      t.INVALID_SPAN_CONTEXT = {\n        traceId: t.INVALID_TRACEID,\n        spanId: t.INVALID_SPANID,\n        traceFlags: n.TraceFlags.NONE\n      };\n    },\n    357: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.SpanKind = void 0;\n      var r;\n      (function (e) {\n        e[e[\"INTERNAL\"] = 0] = \"INTERNAL\";\n        e[e[\"SERVER\"] = 1] = \"SERVER\";\n        e[e[\"CLIENT\"] = 2] = \"CLIENT\";\n        e[e[\"PRODUCER\"] = 3] = \"PRODUCER\";\n        e[e[\"CONSUMER\"] = 4] = \"CONSUMER\";\n      })(r = t.SpanKind || (t.SpanKind = {}));\n    },\n    139: (e, t, r) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.wrapSpanContext = t.isSpanContextValid = t.isValidSpanId = t.isValidTraceId = void 0;\n      const n = r(476);\n      const a = r(403);\n      const o = /^([0-9a-f]{32})$/i;\n      const i = /^[0-9a-f]{16}$/i;\n      function isValidTraceId(e) {\n        return o.test(e) && e !== n.INVALID_TRACEID;\n      }\n      t.isValidTraceId = isValidTraceId;\n      function isValidSpanId(e) {\n        return i.test(e) && e !== n.INVALID_SPANID;\n      }\n      t.isValidSpanId = isValidSpanId;\n      function isSpanContextValid(e) {\n        return isValidTraceId(e.traceId) && isValidSpanId(e.spanId);\n      }\n      t.isSpanContextValid = isSpanContextValid;\n      function wrapSpanContext(e) {\n        return new a.NonRecordingSpan(e);\n      }\n      t.wrapSpanContext = wrapSpanContext;\n    },\n    847: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.SpanStatusCode = void 0;\n      var r;\n      (function (e) {\n        e[e[\"UNSET\"] = 0] = \"UNSET\";\n        e[e[\"OK\"] = 1] = \"OK\";\n        e[e[\"ERROR\"] = 2] = \"ERROR\";\n      })(r = t.SpanStatusCode || (t.SpanStatusCode = {}));\n    },\n    475: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.TraceFlags = void 0;\n      var r;\n      (function (e) {\n        e[e[\"NONE\"] = 0] = \"NONE\";\n        e[e[\"SAMPLED\"] = 1] = \"SAMPLED\";\n      })(r = t.TraceFlags || (t.TraceFlags = {}));\n    },\n    521: (e, t) => {\n      Object.defineProperty(t, \"__esModule\", {\n        value: true\n      });\n      t.VERSION = void 0;\n      t.VERSION = \"1.6.0\";\n    }\n  };\n  var t = {};\n  function __nccwpck_require__(r) {\n    var n = t[r];\n    if (n !== undefined) {\n      return n.exports;\n    }\n    var a = t[r] = {\n      exports: {}\n    };\n    var o = true;\n    try {\n      e[r].call(a.exports, a, a.exports, __nccwpck_require__);\n      o = false;\n    } finally {\n      if (o) delete t[r];\n    }\n    return a.exports;\n  }\n  if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n  var r = {};\n  (() => {\n    var e = r;\n    Object.defineProperty(e, \"__esModule\", {\n      value: true\n    });\n    e.trace = e.propagation = e.metrics = e.diag = e.context = e.INVALID_SPAN_CONTEXT = e.INVALID_TRACEID = e.INVALID_SPANID = e.isValidSpanId = e.isValidTraceId = e.isSpanContextValid = e.createTraceState = e.TraceFlags = e.SpanStatusCode = e.SpanKind = e.SamplingDecision = e.ProxyTracerProvider = e.ProxyTracer = e.defaultTextMapSetter = e.defaultTextMapGetter = e.ValueType = e.createNoopMeter = e.DiagLogLevel = e.DiagConsoleLogger = e.ROOT_CONTEXT = e.createContextKey = e.baggageEntryMetadataFromString = void 0;\n    var t = __nccwpck_require__(369);\n    Object.defineProperty(e, \"baggageEntryMetadataFromString\", {\n      enumerable: true,\n      get: function () {\n        return t.baggageEntryMetadataFromString;\n      }\n    });\n    var n = __nccwpck_require__(780);\n    Object.defineProperty(e, \"createContextKey\", {\n      enumerable: true,\n      get: function () {\n        return n.createContextKey;\n      }\n    });\n    Object.defineProperty(e, \"ROOT_CONTEXT\", {\n      enumerable: true,\n      get: function () {\n        return n.ROOT_CONTEXT;\n      }\n    });\n    var a = __nccwpck_require__(972);\n    Object.defineProperty(e, \"DiagConsoleLogger\", {\n      enumerable: true,\n      get: function () {\n        return a.DiagConsoleLogger;\n      }\n    });\n    var o = __nccwpck_require__(957);\n    Object.defineProperty(e, \"DiagLogLevel\", {\n      enumerable: true,\n      get: function () {\n        return o.DiagLogLevel;\n      }\n    });\n    var i = __nccwpck_require__(102);\n    Object.defineProperty(e, \"createNoopMeter\", {\n      enumerable: true,\n      get: function () {\n        return i.createNoopMeter;\n      }\n    });\n    var c = __nccwpck_require__(901);\n    Object.defineProperty(e, \"ValueType\", {\n      enumerable: true,\n      get: function () {\n        return c.ValueType;\n      }\n    });\n    var s = __nccwpck_require__(194);\n    Object.defineProperty(e, \"defaultTextMapGetter\", {\n      enumerable: true,\n      get: function () {\n        return s.defaultTextMapGetter;\n      }\n    });\n    Object.defineProperty(e, \"defaultTextMapSetter\", {\n      enumerable: true,\n      get: function () {\n        return s.defaultTextMapSetter;\n      }\n    });\n    var u = __nccwpck_require__(125);\n    Object.defineProperty(e, \"ProxyTracer\", {\n      enumerable: true,\n      get: function () {\n        return u.ProxyTracer;\n      }\n    });\n    var l = __nccwpck_require__(846);\n    Object.defineProperty(e, \"ProxyTracerProvider\", {\n      enumerable: true,\n      get: function () {\n        return l.ProxyTracerProvider;\n      }\n    });\n    var g = __nccwpck_require__(996);\n    Object.defineProperty(e, \"SamplingDecision\", {\n      enumerable: true,\n      get: function () {\n        return g.SamplingDecision;\n      }\n    });\n    var p = __nccwpck_require__(357);\n    Object.defineProperty(e, \"SpanKind\", {\n      enumerable: true,\n      get: function () {\n        return p.SpanKind;\n      }\n    });\n    var d = __nccwpck_require__(847);\n    Object.defineProperty(e, \"SpanStatusCode\", {\n      enumerable: true,\n      get: function () {\n        return d.SpanStatusCode;\n      }\n    });\n    var _ = __nccwpck_require__(475);\n    Object.defineProperty(e, \"TraceFlags\", {\n      enumerable: true,\n      get: function () {\n        return _.TraceFlags;\n      }\n    });\n    var f = __nccwpck_require__(98);\n    Object.defineProperty(e, \"createTraceState\", {\n      enumerable: true,\n      get: function () {\n        return f.createTraceState;\n      }\n    });\n    var b = __nccwpck_require__(139);\n    Object.defineProperty(e, \"isSpanContextValid\", {\n      enumerable: true,\n      get: function () {\n        return b.isSpanContextValid;\n      }\n    });\n    Object.defineProperty(e, \"isValidTraceId\", {\n      enumerable: true,\n      get: function () {\n        return b.isValidTraceId;\n      }\n    });\n    Object.defineProperty(e, \"isValidSpanId\", {\n      enumerable: true,\n      get: function () {\n        return b.isValidSpanId;\n      }\n    });\n    var v = __nccwpck_require__(476);\n    Object.defineProperty(e, \"INVALID_SPANID\", {\n      enumerable: true,\n      get: function () {\n        return v.INVALID_SPANID;\n      }\n    });\n    Object.defineProperty(e, \"INVALID_TRACEID\", {\n      enumerable: true,\n      get: function () {\n        return v.INVALID_TRACEID;\n      }\n    });\n    Object.defineProperty(e, \"INVALID_SPAN_CONTEXT\", {\n      enumerable: true,\n      get: function () {\n        return v.INVALID_SPAN_CONTEXT;\n      }\n    });\n    const O = __nccwpck_require__(67);\n    Object.defineProperty(e, \"context\", {\n      enumerable: true,\n      get: function () {\n        return O.context;\n      }\n    });\n    const P = __nccwpck_require__(506);\n    Object.defineProperty(e, \"diag\", {\n      enumerable: true,\n      get: function () {\n        return P.diag;\n      }\n    });\n    const N = __nccwpck_require__(886);\n    Object.defineProperty(e, \"metrics\", {\n      enumerable: true,\n      get: function () {\n        return N.metrics;\n      }\n    });\n    const S = __nccwpck_require__(939);\n    Object.defineProperty(e, \"propagation\", {\n      enumerable: true,\n      get: function () {\n        return S.propagation;\n      }\n    });\n    const C = __nccwpck_require__(845);\n    Object.defineProperty(e, \"trace\", {\n      enumerable: true,\n      get: function () {\n        return C.trace;\n      }\n    });\n    e[\"default\"] = {\n      context: O.context,\n      diag: P.diag,\n      metrics: N.metrics,\n      propagation: S.propagation,\n      trace: C.trace\n    };\n  })();\n  module.exports = r;\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/cookie/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/cookie/index.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("var __dirname = \"/\";\n(() => {\n  \"use strict\";\n\n  if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n  var e = {};\n  (() => {\n    var r = e;\n    /*!\n     * cookie\n     * Copyright(c) 2012-2014 Roman Shtylman\n     * Copyright(c) 2015 Douglas Christopher Wilson\n     * MIT Licensed\n     */\n    r.parse = parse;\n    r.serialize = serialize;\n    var i = decodeURIComponent;\n    var t = encodeURIComponent;\n    var a = /; */;\n    var n = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    function parse(e, r) {\n      if (typeof e !== \"string\") {\n        throw new TypeError(\"argument str must be a string\");\n      }\n      var t = {};\n      var n = r || {};\n      var o = e.split(a);\n      var s = n.decode || i;\n      for (var p = 0; p < o.length; p++) {\n        var f = o[p];\n        var u = f.indexOf(\"=\");\n        if (u < 0) {\n          continue;\n        }\n        var v = f.substr(0, u).trim();\n        var c = f.substr(++u, f.length).trim();\n        if ('\"' == c[0]) {\n          c = c.slice(1, -1);\n        }\n        if (undefined == t[v]) {\n          t[v] = tryDecode(c, s);\n        }\n      }\n      return t;\n    }\n    function serialize(e, r, i) {\n      var a = i || {};\n      var o = a.encode || t;\n      if (typeof o !== \"function\") {\n        throw new TypeError(\"option encode is invalid\");\n      }\n      if (!n.test(e)) {\n        throw new TypeError(\"argument name is invalid\");\n      }\n      var s = o(r);\n      if (s && !n.test(s)) {\n        throw new TypeError(\"argument val is invalid\");\n      }\n      var p = e + \"=\" + s;\n      if (null != a.maxAge) {\n        var f = a.maxAge - 0;\n        if (isNaN(f) || !isFinite(f)) {\n          throw new TypeError(\"option maxAge is invalid\");\n        }\n        p += \"; Max-Age=\" + Math.floor(f);\n      }\n      if (a.domain) {\n        if (!n.test(a.domain)) {\n          throw new TypeError(\"option domain is invalid\");\n        }\n        p += \"; Domain=\" + a.domain;\n      }\n      if (a.path) {\n        if (!n.test(a.path)) {\n          throw new TypeError(\"option path is invalid\");\n        }\n        p += \"; Path=\" + a.path;\n      }\n      if (a.expires) {\n        if (typeof a.expires.toUTCString !== \"function\") {\n          throw new TypeError(\"option expires is invalid\");\n        }\n        p += \"; Expires=\" + a.expires.toUTCString();\n      }\n      if (a.httpOnly) {\n        p += \"; HttpOnly\";\n      }\n      if (a.secure) {\n        p += \"; Secure\";\n      }\n      if (a.sameSite) {\n        var u = typeof a.sameSite === \"string\" ? a.sameSite.toLowerCase() : a.sameSite;\n        switch (u) {\n          case true:\n            p += \"; SameSite=Strict\";\n            break;\n          case \"lax\":\n            p += \"; SameSite=Lax\";\n            break;\n          case \"strict\":\n            p += \"; SameSite=Strict\";\n            break;\n          case \"none\":\n            p += \"; SameSite=None\";\n            break;\n          default:\n            throw new TypeError(\"option sameSite is invalid\");\n        }\n      }\n      return p;\n    }\n    function tryDecode(e, r) {\n      try {\n        return r(e);\n      } catch (r) {\n        return e;\n      }\n    }\n  })();\n  module.exports = e;\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/cookie/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __dirname = \"/\";\nvar __WEBPACK_AMD_DEFINE_RESULT__;(() => {\n  var i = {\n    226: function (i, e) {\n      (function (o, a) {\n        \"use strict\";\n\n        var r = \"1.0.35\",\n          t = \"\",\n          n = \"?\",\n          s = \"function\",\n          b = \"undefined\",\n          w = \"object\",\n          l = \"string\",\n          d = \"major\",\n          c = \"model\",\n          u = \"name\",\n          p = \"type\",\n          m = \"vendor\",\n          f = \"version\",\n          h = \"architecture\",\n          v = \"console\",\n          g = \"mobile\",\n          k = \"tablet\",\n          x = \"smarttv\",\n          _ = \"wearable\",\n          y = \"embedded\",\n          q = 350;\n        var T = \"Amazon\",\n          S = \"Apple\",\n          z = \"ASUS\",\n          N = \"BlackBerry\",\n          A = \"Browser\",\n          C = \"Chrome\",\n          E = \"Edge\",\n          O = \"Firefox\",\n          U = \"Google\",\n          j = \"Huawei\",\n          P = \"LG\",\n          R = \"Microsoft\",\n          M = \"Motorola\",\n          B = \"Opera\",\n          V = \"Samsung\",\n          D = \"Sharp\",\n          I = \"Sony\",\n          W = \"Viera\",\n          F = \"Xiaomi\",\n          G = \"Zebra\",\n          H = \"Facebook\",\n          L = \"Chromium OS\",\n          Z = \"Mac OS\";\n        var extend = function (i, e) {\n            var o = {};\n            for (var a in i) {\n              if (e[a] && e[a].length % 2 === 0) {\n                o[a] = e[a].concat(i[a]);\n              } else {\n                o[a] = i[a];\n              }\n            }\n            return o;\n          },\n          enumerize = function (i) {\n            var e = {};\n            for (var o = 0; o < i.length; o++) {\n              e[i[o].toUpperCase()] = i[o];\n            }\n            return e;\n          },\n          has = function (i, e) {\n            return typeof i === l ? lowerize(e).indexOf(lowerize(i)) !== -1 : false;\n          },\n          lowerize = function (i) {\n            return i.toLowerCase();\n          },\n          majorize = function (i) {\n            return typeof i === l ? i.replace(/[^\\d\\.]/g, t).split(\".\")[0] : a;\n          },\n          trim = function (i, e) {\n            if (typeof i === l) {\n              i = i.replace(/^\\s\\s*/, t);\n              return typeof e === b ? i : i.substring(0, q);\n            }\n          };\n        var rgxMapper = function (i, e) {\n            var o = 0,\n              r,\n              t,\n              n,\n              b,\n              l,\n              d;\n            while (o < e.length && !l) {\n              var c = e[o],\n                u = e[o + 1];\n              r = t = 0;\n              while (r < c.length && !l) {\n                if (!c[r]) {\n                  break;\n                }\n                l = c[r++].exec(i);\n                if (!!l) {\n                  for (n = 0; n < u.length; n++) {\n                    d = l[++t];\n                    b = u[n];\n                    if (typeof b === w && b.length > 0) {\n                      if (b.length === 2) {\n                        if (typeof b[1] == s) {\n                          this[b[0]] = b[1].call(this, d);\n                        } else {\n                          this[b[0]] = b[1];\n                        }\n                      } else if (b.length === 3) {\n                        if (typeof b[1] === s && !(b[1].exec && b[1].test)) {\n                          this[b[0]] = d ? b[1].call(this, d, b[2]) : a;\n                        } else {\n                          this[b[0]] = d ? d.replace(b[1], b[2]) : a;\n                        }\n                      } else if (b.length === 4) {\n                        this[b[0]] = d ? b[3].call(this, d.replace(b[1], b[2])) : a;\n                      }\n                    } else {\n                      this[b] = d ? d : a;\n                    }\n                  }\n                }\n              }\n              o += 2;\n            }\n          },\n          strMapper = function (i, e) {\n            for (var o in e) {\n              if (typeof e[o] === w && e[o].length > 0) {\n                for (var r = 0; r < e[o].length; r++) {\n                  if (has(e[o][r], i)) {\n                    return o === n ? a : o;\n                  }\n                }\n              } else if (has(e[o], i)) {\n                return o === n ? a : o;\n              }\n            }\n            return i;\n          };\n        var $ = {\n            \"1.0\": \"/8\",\n            1.2: \"/1\",\n            1.3: \"/3\",\n            \"2.0\": \"/412\",\n            \"2.0.2\": \"/416\",\n            \"2.0.3\": \"/417\",\n            \"2.0.4\": \"/419\",\n            \"?\": \"/\"\n          },\n          X = {\n            ME: \"4.90\",\n            \"NT 3.11\": \"NT3.51\",\n            \"NT 4.0\": \"NT4.0\",\n            2e3: \"NT 5.0\",\n            XP: [\"NT 5.1\", \"NT 5.2\"],\n            Vista: \"NT 6.0\",\n            7: \"NT 6.1\",\n            8: \"NT 6.2\",\n            8.1: \"NT 6.3\",\n            10: [\"NT 6.4\", \"NT 10.0\"],\n            RT: \"ARM\"\n          };\n        var K = {\n          browser: [[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i], [f, [u, \"Chrome\"]], [/edg(?:e|ios|a)?\\/([\\w\\.]+)/i], [f, [u, \"Edge\"]], [/(opera mini)\\/([-\\w\\.]+)/i, /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i, /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i], [u, f], [/opios[\\/ ]+([\\w\\.]+)/i], [f, [u, B + \" Mini\"]], [/\\bopr\\/([\\w\\.]+)/i], [f, [u, B]], [/(kindle)\\/([\\w\\.]+)/i, /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i, /(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i, /(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i, /(?:ms|\\()(ie) ([\\w\\.]+)/i, /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i, /(heytap|ovi)browser\\/([\\d\\.]+)/i, /(weibo)__([\\d\\.]+)/i], [u, f], [/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i], [f, [u, \"UC\" + A]], [/microm.+\\bqbcore\\/([\\w\\.]+)/i, /\\bqbcore\\/([\\w\\.]+).+microm/i], [f, [u, \"WeChat(Win) Desktop\"]], [/micromessenger\\/([\\w\\.]+)/i], [f, [u, \"WeChat\"]], [/konqueror\\/([\\w\\.]+)/i], [f, [u, \"Konqueror\"]], [/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i], [f, [u, \"IE\"]], [/ya(?:search)?browser\\/([\\w\\.]+)/i], [f, [u, \"Yandex\"]], [/(avast|avg)\\/([\\w\\.]+)/i], [[u, /(.+)/, \"$1 Secure \" + A], f], [/\\bfocus\\/([\\w\\.]+)/i], [f, [u, O + \" Focus\"]], [/\\bopt\\/([\\w\\.]+)/i], [f, [u, B + \" Touch\"]], [/coc_coc\\w+\\/([\\w\\.]+)/i], [f, [u, \"Coc Coc\"]], [/dolfin\\/([\\w\\.]+)/i], [f, [u, \"Dolphin\"]], [/coast\\/([\\w\\.]+)/i], [f, [u, B + \" Coast\"]], [/miuibrowser\\/([\\w\\.]+)/i], [f, [u, \"MIUI \" + A]], [/fxios\\/([-\\w\\.]+)/i], [f, [u, O]], [/\\bqihu|(qi?ho?o?|360)browser/i], [[u, \"360 \" + A]], [/(oculus|samsung|sailfish|huawei)browser\\/([\\w\\.]+)/i], [[u, /(.+)/, \"$1 \" + A], f], [/(comodo_dragon)\\/([\\w\\.]+)/i], [[u, /_/g, \" \"], f], [/(electron)\\/([\\w\\.]+) safari/i, /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i, /m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i], [u, f], [/(metasr)[\\/ ]?([\\w\\.]+)/i, /(lbbrowser)/i, /\\[(linkedin)app\\]/i], [u], [/((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i], [[u, H], f], [/(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i, /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i, /safari (line)\\/([\\w\\.]+)/i, /\\b(line)\\/([\\w\\.]+)\\/iab/i, /(chromium|instagram)[\\/ ]([-\\w\\.]+)/i], [u, f], [/\\bgsa\\/([\\w\\.]+) .*safari\\//i], [f, [u, \"GSA\"]], [/musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i], [f, [u, \"TikTok\"]], [/headlesschrome(?:\\/([\\w\\.]+)| )/i], [f, [u, C + \" Headless\"]], [/ wv\\).+(chrome)\\/([\\w\\.]+)/i], [[u, C + \" WebView\"], f], [/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i], [f, [u, \"Android \" + A]], [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i], [u, f], [/version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i], [f, [u, \"Mobile Safari\"]], [/version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i], [f, u], [/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i], [u, [f, strMapper, $]], [/(webkit|khtml)\\/([\\w\\.]+)/i], [u, f], [/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i], [[u, \"Netscape\"], f], [/mobile vr; rv:([\\w\\.]+)\\).+firefox/i], [f, [u, O + \" Reality\"]], [/ekiohf.+(flow)\\/([\\w\\.]+)/i, /(swiftfox)/i, /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i, /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i, /(firefox)\\/([\\w\\.]+)/i, /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i, /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i, /(links) \\(([\\w\\.]+)/i, /panasonic;(viera)/i], [u, f], [/(cobalt)\\/([\\w\\.]+)/i], [u, [f, /master.|lts./, \"\"]]],\n          cpu: [[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i], [[h, \"amd64\"]], [/(ia32(?=;))/i], [[h, lowerize]], [/((?:i[346]|x)86)[;\\)]/i], [[h, \"ia32\"]], [/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i], [[h, \"arm64\"]], [/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i], [[h, \"armhf\"]], [/windows (ce|mobile); ppc;/i], [[h, \"arm\"]], [/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i], [[h, /ower/, t, lowerize]], [/(sun4\\w)[;\\)]/i], [[h, \"sparc\"]], [/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i], [[h, lowerize]]],\n          device: [[/\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i], [c, [m, V], [p, k]], [/\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i, /samsung[- ]([-\\w]+)/i, /sec-(sgh\\w+)/i], [c, [m, V], [p, g]], [/(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i], [c, [m, S], [p, g]], [/\\((ipad);[-\\w\\),; ]+apple/i, /applecoremedia\\/[\\w\\.]+ \\((ipad)/i, /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i], [c, [m, S], [p, k]], [/(macintosh);/i], [c, [m, S]], [/\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i], [c, [m, D], [p, g]], [/\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i], [c, [m, j], [p, k]], [/(?:huawei|honor)([-\\w ]+)[;\\)]/i, /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i], [c, [m, j], [p, g]], [/\\b(poco[\\w ]+)(?: bui|\\))/i, /\\b; (\\w+) build\\/hm\\1/i, /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i, /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i, /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i], [[c, /_/g, \" \"], [m, F], [p, g]], [/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i], [[c, /_/g, \" \"], [m, F], [p, k]], [/; (\\w+) bui.+ oppo/i, /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i], [c, [m, \"OPPO\"], [p, g]], [/vivo (\\w+)(?: bui|\\))/i, /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i], [c, [m, \"Vivo\"], [p, g]], [/\\b(rmx[12]\\d{3})(?: bui|;|\\))/i], [c, [m, \"Realme\"], [p, g]], [/\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i, /\\bmot(?:orola)?[- ](\\w*)/i, /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i], [c, [m, M], [p, g]], [/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i], [c, [m, M], [p, k]], [/((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i], [c, [m, P], [p, k]], [/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i, /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i, /\\blg-?([\\d\\w]+) bui/i], [c, [m, P], [p, g]], [/(ideatab[-\\w ]+)/i, /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i], [c, [m, \"Lenovo\"], [p, k]], [/(?:maemo|nokia).*(n900|lumia \\d+)/i, /nokia[-_ ]?([-\\w\\.]*)/i], [[c, /_/g, \" \"], [m, \"Nokia\"], [p, g]], [/(pixel c)\\b/i], [c, [m, U], [p, k]], [/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i], [c, [m, U], [p, g]], [/droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i], [c, [m, I], [p, g]], [/sony tablet [ps]/i, /\\b(?:sony)?sgp\\w+(?: bui|\\))/i], [[c, \"Xperia Tablet\"], [m, I], [p, k]], [/ (kb2005|in20[12]5|be20[12][59])\\b/i, /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i], [c, [m, \"OnePlus\"], [p, g]], [/(alexa)webm/i, /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i, /(kf[a-z]+)( bui|\\)).+silk\\//i], [c, [m, T], [p, k]], [/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i], [[c, /(.+)/g, \"Fire Phone $1\"], [m, T], [p, g]], [/(playbook);[-\\w\\),; ]+(rim)/i], [c, m, [p, k]], [/\\b((?:bb[a-f]|st[hv])100-\\d)/i, /\\(bb10; (\\w+)/i], [c, [m, N], [p, g]], [/(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i], [c, [m, z], [p, k]], [/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i], [c, [m, z], [p, g]], [/(nexus 9)/i], [c, [m, \"HTC\"], [p, k]], [/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i, /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i, /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i], [m, [c, /_/g, \" \"], [p, g]], [/droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i], [c, [m, \"Acer\"], [p, k]], [/droid.+; (m[1-5] note) bui/i, /\\bmz-([-\\w]{2,})/i], [c, [m, \"Meizu\"], [p, g]], [/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i, /(hp) ([\\w ]+\\w)/i, /(asus)-?(\\w+)/i, /(microsoft); (lumia[\\w ]+)/i, /(lenovo)[-_ ]?([-\\w]+)/i, /(jolla)/i, /(oppo) ?([\\w ]+) bui/i], [m, c, [p, g]], [/(kobo)\\s(ereader|touch)/i, /(archos) (gamepad2?)/i, /(hp).+(touchpad(?!.+tablet)|tablet)/i, /(kindle)\\/([\\w\\.]+)/i, /(nook)[\\w ]+build\\/(\\w+)/i, /(dell) (strea[kpr\\d ]*[\\dko])/i, /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i, /(trinity)[- ]*(t\\d{3}) bui/i, /(gigaset)[- ]+(q\\w{1,9}) bui/i, /(vodafone) ([\\w ]+)(?:\\)| bui)/i], [m, c, [p, k]], [/(surface duo)/i], [c, [m, R], [p, k]], [/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i], [c, [m, \"Fairphone\"], [p, g]], [/(u304aa)/i], [c, [m, \"AT&T\"], [p, g]], [/\\bsie-(\\w*)/i], [c, [m, \"Siemens\"], [p, g]], [/\\b(rct\\w+) b/i], [c, [m, \"RCA\"], [p, k]], [/\\b(venue[\\d ]{2,7}) b/i], [c, [m, \"Dell\"], [p, k]], [/\\b(q(?:mv|ta)\\w+) b/i], [c, [m, \"Verizon\"], [p, k]], [/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i], [c, [m, \"Barnes & Noble\"], [p, k]], [/\\b(tm\\d{3}\\w+) b/i], [c, [m, \"NuVision\"], [p, k]], [/\\b(k88) b/i], [c, [m, \"ZTE\"], [p, k]], [/\\b(nx\\d{3}j) b/i], [c, [m, \"ZTE\"], [p, g]], [/\\b(gen\\d{3}) b.+49h/i], [c, [m, \"Swiss\"], [p, g]], [/\\b(zur\\d{3}) b/i], [c, [m, \"Swiss\"], [p, k]], [/\\b((zeki)?tb.*\\b) b/i], [c, [m, \"Zeki\"], [p, k]], [/\\b([yr]\\d{2}) b/i, /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i], [[m, \"Dragon Touch\"], c, [p, k]], [/\\b(ns-?\\w{0,9}) b/i], [c, [m, \"Insignia\"], [p, k]], [/\\b((nxa|next)-?\\w{0,9}) b/i], [c, [m, \"NextBook\"], [p, k]], [/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i], [[m, \"Voice\"], c, [p, g]], [/\\b(lvtel\\-)?(v1[12]) b/i], [[m, \"LvTel\"], c, [p, g]], [/\\b(ph-1) /i], [c, [m, \"Essential\"], [p, g]], [/\\b(v(100md|700na|7011|917g).*\\b) b/i], [c, [m, \"Envizen\"], [p, k]], [/\\b(trio[-\\w\\. ]+) b/i], [c, [m, \"MachSpeed\"], [p, k]], [/\\btu_(1491) b/i], [c, [m, \"Rotor\"], [p, k]], [/(shield[\\w ]+) b/i], [c, [m, \"Nvidia\"], [p, k]], [/(sprint) (\\w+)/i], [m, c, [p, g]], [/(kin\\.[onetw]{3})/i], [[c, /\\./g, \" \"], [m, R], [p, g]], [/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i], [c, [m, G], [p, k]], [/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i], [c, [m, G], [p, g]], [/smart-tv.+(samsung)/i], [m, [p, x]], [/hbbtv.+maple;(\\d+)/i], [[c, /^/, \"SmartTV\"], [m, V], [p, x]], [/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i], [[m, P], [p, x]], [/(apple) ?tv/i], [m, [c, S + \" TV\"], [p, x]], [/crkey/i], [[c, C + \"cast\"], [m, U], [p, x]], [/droid.+aft(\\w)( bui|\\))/i], [c, [m, T], [p, x]], [/\\(dtv[\\);].+(aquos)/i, /(aquos-tv[\\w ]+)\\)/i], [c, [m, D], [p, x]], [/(bravia[\\w ]+)( bui|\\))/i], [c, [m, I], [p, x]], [/(mitv-\\w{5}) bui/i], [c, [m, F], [p, x]], [/Hbbtv.*(technisat) (.*);/i], [m, c, [p, x]], [/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i, /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i], [[m, trim], [c, trim], [p, x]], [/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i], [[p, x]], [/(ouya)/i, /(nintendo) ([wids3utch]+)/i], [m, c, [p, v]], [/droid.+; (shield) bui/i], [c, [m, \"Nvidia\"], [p, v]], [/(playstation [345portablevi]+)/i], [c, [m, I], [p, v]], [/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i], [c, [m, R], [p, v]], [/((pebble))app/i], [m, c, [p, _]], [/(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i], [c, [m, S], [p, _]], [/droid.+; (glass) \\d/i], [c, [m, U], [p, _]], [/droid.+; (wt63?0{2,3})\\)/i], [c, [m, G], [p, _]], [/(quest( 2| pro)?)/i], [c, [m, H], [p, _]], [/(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i], [m, [p, y]], [/(aeobc)\\b/i], [c, [m, T], [p, y]], [/droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i], [c, [p, g]], [/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i], [c, [p, k]], [/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i], [[p, k]], [/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i], [[p, g]], [/(android[-\\w\\. ]{0,9});.+buil/i], [c, [m, \"Generic\"]]],\n          engine: [[/windows.+ edge\\/([\\w\\.]+)/i], [f, [u, E + \"HTML\"]], [/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i], [f, [u, \"Blink\"]], [/(presto)\\/([\\w\\.]+)/i, /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, /ekioh(flow)\\/([\\w\\.]+)/i, /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i, /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i, /\\b(libweb)/i], [u, f], [/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i], [f, u]],\n          os: [[/microsoft (windows) (vista|xp)/i], [u, f], [/(windows) nt 6\\.2; (arm)/i, /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i, /(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i], [u, [f, strMapper, X]], [/(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i], [[u, \"Windows\"], [f, strMapper, X]], [/ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i, /ios;fbsv\\/([\\d\\.]+)/i, /cfnetwork\\/.+darwin/i], [[f, /_/g, \".\"], [u, \"iOS\"]], [/(mac os x) ?([\\w\\. ]*)/i, /(macintosh|mac_powerpc\\b)(?!.+haiku)/i], [[u, Z], [f, /_/g, \".\"]], [/droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i], [f, u], [/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i, /(blackberry)\\w*\\/([\\w\\.]*)/i, /(tizen|kaios)[\\/ ]([\\w\\.]+)/i, /\\((series40);/i], [u, f], [/\\(bb(10);/i], [f, [u, N]], [/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i], [f, [u, \"Symbian\"]], [/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i], [f, [u, O + \" OS\"]], [/web0s;.+rt(tv)/i, /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i], [f, [u, \"webOS\"]], [/watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i], [f, [u, \"watchOS\"]], [/crkey\\/([\\d\\.]+)/i], [f, [u, C + \"cast\"]], [/(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i], [[u, L], f], [/panasonic;(viera)/i, /(netrange)mmh/i, /(nettv)\\/(\\d+\\.[\\w\\.]+)/i, /(nintendo|playstation) ([wids345portablevuch]+)/i, /(xbox); +xbox ([^\\);]+)/i, /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i, /(mint)[\\/\\(\\) ]?(\\w*)/i, /(mageia|vectorlinux)[; ]/i, /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i, /(hurd|linux) ?([\\w\\.]*)/i, /(gnu) ?([\\w\\.]*)/i, /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, /(haiku) (\\w+)/i], [u, f], [/(sunos) ?([\\w\\.\\d]*)/i], [[u, \"Solaris\"], f], [/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i, /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i, /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, /(unix) ?([\\w\\.]*)/i], [u, f]]\n        };\n        var UAParser = function (i, e) {\n          if (typeof i === w) {\n            e = i;\n            i = a;\n          }\n          if (!(this instanceof UAParser)) {\n            return new UAParser(i, e).getResult();\n          }\n          var r = typeof o !== b && o.navigator ? o.navigator : a;\n          var n = i || (r && r.userAgent ? r.userAgent : t);\n          var v = r && r.userAgentData ? r.userAgentData : a;\n          var x = e ? extend(K, e) : K;\n          var _ = r && r.userAgent == n;\n          this.getBrowser = function () {\n            var i = {};\n            i[u] = a;\n            i[f] = a;\n            rgxMapper.call(i, n, x.browser);\n            i[d] = majorize(i[f]);\n            if (_ && r && r.brave && typeof r.brave.isBrave == s) {\n              i[u] = \"Brave\";\n            }\n            return i;\n          };\n          this.getCPU = function () {\n            var i = {};\n            i[h] = a;\n            rgxMapper.call(i, n, x.cpu);\n            return i;\n          };\n          this.getDevice = function () {\n            var i = {};\n            i[m] = a;\n            i[c] = a;\n            i[p] = a;\n            rgxMapper.call(i, n, x.device);\n            if (_ && !i[p] && v && v.mobile) {\n              i[p] = g;\n            }\n            if (_ && i[c] == \"Macintosh\" && r && typeof r.standalone !== b && r.maxTouchPoints && r.maxTouchPoints > 2) {\n              i[c] = \"iPad\";\n              i[p] = k;\n            }\n            return i;\n          };\n          this.getEngine = function () {\n            var i = {};\n            i[u] = a;\n            i[f] = a;\n            rgxMapper.call(i, n, x.engine);\n            return i;\n          };\n          this.getOS = function () {\n            var i = {};\n            i[u] = a;\n            i[f] = a;\n            rgxMapper.call(i, n, x.os);\n            if (_ && !i[u] && v && v.platform != \"Unknown\") {\n              i[u] = v.platform.replace(/chrome os/i, L).replace(/macos/i, Z);\n            }\n            return i;\n          };\n          this.getResult = function () {\n            return {\n              ua: this.getUA(),\n              browser: this.getBrowser(),\n              engine: this.getEngine(),\n              os: this.getOS(),\n              device: this.getDevice(),\n              cpu: this.getCPU()\n            };\n          };\n          this.getUA = function () {\n            return n;\n          };\n          this.setUA = function (i) {\n            n = typeof i === l && i.length > q ? trim(i, q) : i;\n            return this;\n          };\n          this.setUA(n);\n          return this;\n        };\n        UAParser.VERSION = r;\n        UAParser.BROWSER = enumerize([u, f, d]);\n        UAParser.CPU = enumerize([h]);\n        UAParser.DEVICE = enumerize([c, m, p, v, g, x, k, _, y]);\n        UAParser.ENGINE = UAParser.OS = enumerize([u, f]);\n        if (typeof e !== b) {\n          if (\"object\" !== b && i.exports) {\n            e = i.exports = UAParser;\n          }\n          e.UAParser = UAParser;\n        } else {\n          if (\"function\" === s && __webpack_require__.amdO) {\n            !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n              return UAParser;\n            }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n          } else if (typeof o !== b) {\n            o.UAParser = UAParser;\n          }\n        }\n        var Q = typeof o !== b && (o.jQuery || o.Zepto);\n        if (Q && !Q.ua) {\n          var Y = new UAParser();\n          Q.ua = Y.getResult();\n          Q.ua.get = function () {\n            return Y.getUA();\n          };\n          Q.ua.set = function (i) {\n            Y.setUA(i);\n            var e = Y.getResult();\n            for (var o in e) {\n              Q.ua[o] = e[o];\n            }\n          };\n        }\n      })( false ? 0 : this);\n    }\n  };\n  var e = {};\n  function __nccwpck_require__(o) {\n    var a = e[o];\n    if (a !== undefined) {\n      return a.exports;\n    }\n    var r = e[o] = {\n      exports: {}\n    };\n    var t = true;\n    try {\n      i[o].call(r.exports, r, r.exports, __nccwpck_require__);\n      t = false;\n    } finally {\n      if (t) delete e[o];\n    }\n    return r.exports;\n  }\n  if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n  var o = __nccwpck_require__(226);\n  module.exports = o;\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/api/headers.js":
/*!***************************************************!*\
  !*** ./node_modules/next/dist/esm/api/headers.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _client_components_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/headers */ "(middleware)/./node_modules/next/dist/esm/client/components/headers.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _client_components_headers__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== "default") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _client_components_headers__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);


/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/api/navigation.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/esm/api/navigation.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ "(middleware)/./node_modules/next/dist/esm/client/components/navigation.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== "default") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);


/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/api/server.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/esm/api/server.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/web/exports/index */ "(middleware)/./node_modules/next/dist/esm/server/web/exports/index.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== "default") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _server_web_exports_index__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);


/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/action-async-storage-instance.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/action-async-storage-instance.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actionAsyncStorage: () => (/* binding */ actionAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(middleware)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst actionAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYWN0aW9uLWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0M7QUFDekIsTUFBTUMscUJBQXFCRCw2RUFBdUJBLEdBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYWN0aW9uLWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2UuanM/YTQ3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSB9IGZyb20gXCIuL2FzeW5jLWxvY2FsLXN0b3JhZ2VcIjtcbmV4cG9ydCBjb25zdCBhY3Rpb25Bc3luY1N0b3JhZ2UgPSBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hY3Rpb24tYXN5bmMtc3RvcmFnZS1pbnN0YW5jZS5qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UiLCJhY3Rpb25Bc3luY1N0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/action-async-storage-instance.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/action-async-storage.external.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/action-async-storage.external.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actionAsyncStorage: () => (/* reexport safe */ _action_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__.actionAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _action_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./action-async-storage-instance */ \"(middleware)/./node_modules/next/dist/esm/client/components/action-async-storage-instance.js\");\n\"TURBOPACK { transition: next-shared }\";\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYWN0aW9uLWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUMyQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2FjdGlvbi1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzPzhkZTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJUVVJCT1BBQ0sgeyB0cmFuc2l0aW9uOiBuZXh0LXNoYXJlZCB9XCI7XG5pbXBvcnQgeyBhY3Rpb25Bc3luY1N0b3JhZ2UgfSBmcm9tIFwiLi9hY3Rpb24tYXN5bmMtc3RvcmFnZS1pbnN0YW5jZVwiO1xuZXhwb3J0IHsgYWN0aW9uQXN5bmNTdG9yYWdlIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFjdGlvbi1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzLm1hcCJdLCJuYW1lcyI6WyJhY3Rpb25Bc3luY1N0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/action-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/app-router-headers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION: () => (/* binding */ ACTION),\n/* harmony export */   FLIGHT_PARAMETERS: () => (/* binding */ FLIGHT_PARAMETERS),\n/* harmony export */   NEXT_DID_POSTPONE_HEADER: () => (/* binding */ NEXT_DID_POSTPONE_HEADER),\n/* harmony export */   NEXT_ROUTER_PREFETCH_HEADER: () => (/* binding */ NEXT_ROUTER_PREFETCH_HEADER),\n/* harmony export */   NEXT_ROUTER_STATE_TREE: () => (/* binding */ NEXT_ROUTER_STATE_TREE),\n/* harmony export */   NEXT_RSC_UNION_QUERY: () => (/* binding */ NEXT_RSC_UNION_QUERY),\n/* harmony export */   NEXT_URL: () => (/* binding */ NEXT_URL),\n/* harmony export */   RSC_CONTENT_TYPE_HEADER: () => (/* binding */ RSC_CONTENT_TYPE_HEADER),\n/* harmony export */   RSC_HEADER: () => (/* binding */ RSC_HEADER)\n/* harmony export */ });\nconst RSC_HEADER = \"RSC\";\nconst ACTION = \"Next-Action\";\nconst NEXT_ROUTER_STATE_TREE = \"Next-Router-State-Tree\";\nconst NEXT_ROUTER_PREFETCH_HEADER = \"Next-Router-Prefetch\";\nconst NEXT_URL = \"Next-Url\";\nconst RSC_CONTENT_TYPE_HEADER = \"text/x-component\";\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC_HEADER\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH_HEADER\n    ]\n];\nconst NEXT_RSC_UNION_QUERY = \"_rsc\";\nconst NEXT_DID_POSTPONE_HEADER = \"x-nextjs-postponed\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFPLE1BQU1BLGFBQWEsTUFBSztBQUN4QixNQUFNQyxTQUFTLGNBQWE7QUFDNUIsTUFBTUMseUJBQXlCLHlCQUF3QjtBQUN2RCxNQUFNQyw4QkFBOEIsdUJBQXNCO0FBQzFELE1BQU1DLFdBQVcsV0FBVTtBQUMzQixNQUFNQywwQkFBMEIsbUJBQWtCO0FBQ2xELE1BQU1DLG9CQUFvQjtJQUM3QjtRQUNJTjtLQUNIO0lBQ0Q7UUFDSUU7S0FDSDtJQUNEO1FBQ0lDO0tBQ0g7Q0FDSjtBQUNNLE1BQU1JLHVCQUF1QixPQUFNO0FBQ25DLE1BQU1DLDJCQUEyQixxQkFBb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzLmpzPzIyN2EiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFJTQ19IRUFERVIgPSBcIlJTQ1wiO1xuZXhwb3J0IGNvbnN0IEFDVElPTiA9IFwiTmV4dC1BY3Rpb25cIjtcbmV4cG9ydCBjb25zdCBORVhUX1JPVVRFUl9TVEFURV9UUkVFID0gXCJOZXh0LVJvdXRlci1TdGF0ZS1UcmVlXCI7XG5leHBvcnQgY29uc3QgTkVYVF9ST1VURVJfUFJFRkVUQ0hfSEVBREVSID0gXCJOZXh0LVJvdXRlci1QcmVmZXRjaFwiO1xuZXhwb3J0IGNvbnN0IE5FWFRfVVJMID0gXCJOZXh0LVVybFwiO1xuZXhwb3J0IGNvbnN0IFJTQ19DT05URU5UX1RZUEVfSEVBREVSID0gXCJ0ZXh0L3gtY29tcG9uZW50XCI7XG5leHBvcnQgY29uc3QgRkxJR0hUX1BBUkFNRVRFUlMgPSBbXG4gICAgW1xuICAgICAgICBSU0NfSEVBREVSXG4gICAgXSxcbiAgICBbXG4gICAgICAgIE5FWFRfUk9VVEVSX1NUQVRFX1RSRUVcbiAgICBdLFxuICAgIFtcbiAgICAgICAgTkVYVF9ST1VURVJfUFJFRkVUQ0hfSEVBREVSXG4gICAgXVxuXTtcbmV4cG9ydCBjb25zdCBORVhUX1JTQ19VTklPTl9RVUVSWSA9IFwiX3JzY1wiO1xuZXhwb3J0IGNvbnN0IE5FWFRfRElEX1BPU1RQT05FX0hFQURFUiA9IFwieC1uZXh0anMtcG9zdHBvbmVkXCI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZXItaGVhZGVycy5qcy5tYXAiXSwibmFtZXMiOlsiUlNDX0hFQURFUiIsIkFDVElPTiIsIk5FWFRfUk9VVEVSX1NUQVRFX1RSRUUiLCJORVhUX1JPVVRFUl9QUkVGRVRDSF9IRUFERVIiLCJORVhUX1VSTCIsIlJTQ19DT05URU5UX1RZUEVfSEVBREVSIiwiRkxJR0hUX1BBUkFNRVRFUlMiLCJORVhUX1JTQ19VTklPTl9RVUVSWSIsIk5FWFRfRElEX1BPU1RQT05FX0hFQURFUiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/async-local-storage.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/async-local-storage.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsyncLocalStorage: () => (/* binding */ createAsyncLocalStorage)\n/* harmony export */ });\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXN5bmMtbG9jYWwtc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsMkNBQTJDLElBQUlDLE1BQU07QUFDM0QsTUFBTUM7SUFDRkMsVUFBVTtRQUNOLE1BQU1IO0lBQ1Y7SUFDQUksV0FBVztRQUNQO1FBQ0EsT0FBT0M7SUFDWDtJQUNBQyxNQUFNO1FBQ0YsTUFBTU47SUFDVjtJQUNBTyxPQUFPO1FBQ0gsTUFBTVA7SUFDVjtJQUNBUSxZQUFZO1FBQ1IsTUFBTVI7SUFDVjtBQUNKO0FBQ0EsTUFBTVMsK0JBQStCQyxXQUFXQyxpQkFBaUI7QUFDMUQsU0FBU0M7SUFDWixJQUFJSCw4QkFBOEI7UUFDOUIsT0FBTyxJQUFJQTtJQUNmO0lBQ0EsT0FBTyxJQUFJUDtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2FzeW5jLWxvY2FsLXN0b3JhZ2UuanM/YjQyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yID0gbmV3IEVycm9yKFwiSW52YXJpYW50OiBBc3luY0xvY2FsU3RvcmFnZSBhY2Nlc3NlZCBpbiBydW50aW1lIHdoZXJlIGl0IGlzIG5vdCBhdmFpbGFibGVcIik7XG5jbGFzcyBGYWtlQXN5bmNMb2NhbFN0b3JhZ2Uge1xuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIHRocm93IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3I7XG4gICAgfVxuICAgIGdldFN0b3JlKCkge1xuICAgICAgICAvLyBUaGlzIGZha2UgaW1wbGVtZW50YXRpb24gb2YgQXN5bmNMb2NhbFN0b3JhZ2UgYWx3YXlzIHJldHVybnMgYHVuZGVmaW5lZGAuXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJ1bigpIHtcbiAgICAgICAgdGhyb3cgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvcjtcbiAgICB9XG4gICAgZXhpdCgpIHtcbiAgICAgICAgdGhyb3cgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvcjtcbiAgICB9XG4gICAgZW50ZXJXaXRoKCkge1xuICAgICAgICB0aHJvdyBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yO1xuICAgIH1cbn1cbmNvbnN0IG1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UgPSBnbG9iYWxUaGlzLkFzeW5jTG9jYWxTdG9yYWdlO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlKCkge1xuICAgIGlmIChtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlKSB7XG4gICAgICAgIHJldHVybiBuZXcgbWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSgpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IEZha2VBc3luY0xvY2FsU3RvcmFnZSgpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3luYy1sb2NhbC1zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yIiwiRXJyb3IiLCJGYWtlQXN5bmNMb2NhbFN0b3JhZ2UiLCJkaXNhYmxlIiwiZ2V0U3RvcmUiLCJ1bmRlZmluZWQiLCJydW4iLCJleGl0IiwiZW50ZXJXaXRoIiwibWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSIsImdsb2JhbFRoaXMiLCJBc3luY0xvY2FsU3RvcmFnZSIsImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/async-local-storage.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bailoutToClientRendering: () => (/* binding */ bailoutToClientRendering)\n/* harmony export */ });\n/* harmony import */ var _shared_lib_lazy_dynamic_bailout_to_csr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/lib/lazy-dynamic/bailout-to-csr */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/lazy-dynamic/bailout-to-csr.js\");\n/* harmony import */ var _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./static-generation-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\");\n\n\nfunction bailoutToClientRendering(reason) {\n    const staticGenerationStore = _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__.staticGenerationAsyncStorage.getStore();\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.forceStatic) return;\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.isStaticGeneration) throw new _shared_lib_lazy_dynamic_bailout_to_csr__WEBPACK_IMPORTED_MODULE_0__.BailoutToCSRError(reason);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYmFpbG91dC10by1jbGllbnQtcmVuZGVyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQjtBQUNXO0FBQzlCLFNBQVNFLHlCQUF5QkMsTUFBTTtJQUMzQyxNQUFNQyx3QkFBd0JILG1HQUE0QkEsQ0FBQ0ksUUFBUTtJQUNuRSxJQUFJRCx5QkFBeUIsT0FBTyxLQUFLLElBQUlBLHNCQUFzQkUsV0FBVyxFQUFFO0lBQ2hGLElBQUlGLHlCQUF5QixPQUFPLEtBQUssSUFBSUEsc0JBQXNCRyxrQkFBa0IsRUFBRSxNQUFNLElBQUlQLHNGQUFpQkEsQ0FBQ0c7QUFDdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYmFpbG91dC10by1jbGllbnQtcmVuZGVyaW5nLmpzP2JmNWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFpbG91dFRvQ1NSRXJyb3IgfSBmcm9tIFwiLi4vLi4vc2hhcmVkL2xpYi9sYXp5LWR5bmFtaWMvYmFpbG91dC10by1jc3JcIjtcbmltcG9ydCB7IHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UgfSBmcm9tIFwiLi9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLmV4dGVybmFsXCI7XG5leHBvcnQgZnVuY3Rpb24gYmFpbG91dFRvQ2xpZW50UmVuZGVyaW5nKHJlYXNvbikge1xuICAgIGNvbnN0IHN0YXRpY0dlbmVyYXRpb25TdG9yZSA9IHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlID09IG51bGwgPyB2b2lkIDAgOiBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuZm9yY2VTdGF0aWMpIHJldHVybjtcbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlID09IG51bGwgPyB2b2lkIDAgOiBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuaXNTdGF0aWNHZW5lcmF0aW9uKSB0aHJvdyBuZXcgQmFpbG91dFRvQ1NSRXJyb3IocmVhc29uKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFpbG91dC10by1jbGllbnQtcmVuZGVyaW5nLmpzLm1hcCJdLCJuYW1lcyI6WyJCYWlsb3V0VG9DU1JFcnJvciIsInN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UiLCJiYWlsb3V0VG9DbGllbnRSZW5kZXJpbmciLCJyZWFzb24iLCJzdGF0aWNHZW5lcmF0aW9uU3RvcmUiLCJnZXRTdG9yZSIsImZvcmNlU3RhdGljIiwiaXNTdGF0aWNHZW5lcmF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/draft-mode.js":
/*!********************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/draft-mode.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DraftMode: () => (/* binding */ DraftMode)\n/* harmony export */ });\n/* harmony import */ var _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./static-generation-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\");\n/* harmony import */ var _server_app_render_dynamic_rendering__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../server/app-render/dynamic-rendering */ \"(middleware)/./node_modules/next/dist/esm/server/app-render/dynamic-rendering.js\");\n\n\nclass DraftMode {\n    get isEnabled() {\n        return this._provider.isEnabled;\n    }\n    enable() {\n        const store = _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_0__.staticGenerationAsyncStorage.getStore();\n        if (store) {\n            // We we have a store we want to track dynamic data access to ensure we\n            // don't statically generate routes that manipulate draft mode.\n            (0,_server_app_render_dynamic_rendering__WEBPACK_IMPORTED_MODULE_1__.trackDynamicDataAccessed)(store, \"draftMode().enable()\");\n        }\n        return this._provider.enable();\n    }\n    disable() {\n        const store = _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_0__.staticGenerationAsyncStorage.getStore();\n        if (store) {\n            // We we have a store we want to track dynamic data access to ensure we\n            // don't statically generate routes that manipulate draft mode.\n            (0,_server_app_render_dynamic_rendering__WEBPACK_IMPORTED_MODULE_1__.trackDynamicDataAccessed)(store, \"draftMode().disable()\");\n        }\n        return this._provider.disable();\n    }\n    constructor(provider){\n        this._provider = provider;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvZHJhZnQtbW9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDSjtBQUMxQixNQUFNRTtJQUNULElBQUlDLFlBQVk7UUFDWixPQUFPLElBQUksQ0FBQ0MsU0FBUyxDQUFDRCxTQUFTO0lBQ25DO0lBQ0FFLFNBQVM7UUFDTCxNQUFNQyxRQUFRTixtR0FBNEJBLENBQUNPLFFBQVE7UUFDbkQsSUFBSUQsT0FBTztZQUNQO1lBQ0E7WUFDQUwsOEZBQXdCQSxDQUFDSyxPQUFPO1FBQ3BDO1FBQ0EsT0FBTyxJQUFJLENBQUNGLFNBQVMsQ0FBQ0MsTUFBTTtJQUNoQztJQUNBRyxVQUFVO1FBQ04sTUFBTUYsUUFBUU4sbUdBQTRCQSxDQUFDTyxRQUFRO1FBQ25ELElBQUlELE9BQU87WUFDUDtZQUNBO1lBQ0FMLDhGQUF3QkEsQ0FBQ0ssT0FBTztRQUNwQztRQUNBLE9BQU8sSUFBSSxDQUFDRixTQUFTLENBQUNJLE9BQU87SUFDakM7SUFDQUMsWUFBWUMsUUFBUSxDQUFDO1FBQ2pCLElBQUksQ0FBQ04sU0FBUyxHQUFHTTtJQUNyQjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2RyYWZ0LW1vZGUuanM/OTFhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlIH0gZnJvbSBcIi4vc3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbFwiO1xuaW1wb3J0IHsgdHJhY2tEeW5hbWljRGF0YUFjY2Vzc2VkIH0gZnJvbSBcIi4uLy4uL3NlcnZlci9hcHAtcmVuZGVyL2R5bmFtaWMtcmVuZGVyaW5nXCI7XG5leHBvcnQgY2xhc3MgRHJhZnRNb2RlIHtcbiAgICBnZXQgaXNFbmFibGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJvdmlkZXIuaXNFbmFibGVkO1xuICAgIH1cbiAgICBlbmFibGUoKSB7XG4gICAgICAgIGNvbnN0IHN0b3JlID0gc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgICAgICBpZiAoc3RvcmUpIHtcbiAgICAgICAgICAgIC8vIFdlIHdlIGhhdmUgYSBzdG9yZSB3ZSB3YW50IHRvIHRyYWNrIGR5bmFtaWMgZGF0YSBhY2Nlc3MgdG8gZW5zdXJlIHdlXG4gICAgICAgICAgICAvLyBkb24ndCBzdGF0aWNhbGx5IGdlbmVyYXRlIHJvdXRlcyB0aGF0IG1hbmlwdWxhdGUgZHJhZnQgbW9kZS5cbiAgICAgICAgICAgIHRyYWNrRHluYW1pY0RhdGFBY2Nlc3NlZChzdG9yZSwgXCJkcmFmdE1vZGUoKS5lbmFibGUoKVwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fcHJvdmlkZXIuZW5hYmxlKCk7XG4gICAgfVxuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIGNvbnN0IHN0b3JlID0gc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgICAgICBpZiAoc3RvcmUpIHtcbiAgICAgICAgICAgIC8vIFdlIHdlIGhhdmUgYSBzdG9yZSB3ZSB3YW50IHRvIHRyYWNrIGR5bmFtaWMgZGF0YSBhY2Nlc3MgdG8gZW5zdXJlIHdlXG4gICAgICAgICAgICAvLyBkb24ndCBzdGF0aWNhbGx5IGdlbmVyYXRlIHJvdXRlcyB0aGF0IG1hbmlwdWxhdGUgZHJhZnQgbW9kZS5cbiAgICAgICAgICAgIHRyYWNrRHluYW1pY0RhdGFBY2Nlc3NlZChzdG9yZSwgXCJkcmFmdE1vZGUoKS5kaXNhYmxlKClcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3Byb3ZpZGVyLmRpc2FibGUoKTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IocHJvdmlkZXIpe1xuICAgICAgICB0aGlzLl9wcm92aWRlciA9IHByb3ZpZGVyO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHJhZnQtbW9kZS5qcy5tYXAiXSwibmFtZXMiOlsic3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSIsInRyYWNrRHluYW1pY0RhdGFBY2Nlc3NlZCIsIkRyYWZ0TW9kZSIsImlzRW5hYmxlZCIsIl9wcm92aWRlciIsImVuYWJsZSIsInN0b3JlIiwiZ2V0U3RvcmUiLCJkaXNhYmxlIiwiY29uc3RydWN0b3IiLCJwcm92aWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/draft-mode.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/headers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/headers.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cookies: () => (/* binding */ cookies),\n/* harmony export */   draftMode: () => (/* binding */ draftMode),\n/* harmony export */   headers: () => (/* binding */ headers)\n/* harmony export */ });\n/* harmony import */ var _server_web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../server/web/spec-extension/adapters/request-cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\");\n/* harmony import */ var _server_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../server/web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _server_web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../server/web/spec-extension/cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _action_async_storage_external__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./action-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/action-async-storage.external.js\");\n/* harmony import */ var _draft_mode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./draft-mode */ \"(middleware)/./node_modules/next/dist/esm/client/components/draft-mode.js\");\n/* harmony import */ var _server_app_render_dynamic_rendering__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../server/app-render/dynamic-rendering */ \"(middleware)/./node_modules/next/dist/esm/server/app-render/dynamic-rendering.js\");\n/* harmony import */ var _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./static-generation-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\");\n/* harmony import */ var _request_async_storage_external__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./request-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n\n\n\n\n\n\n\n\n/**\n * This function allows you to read the HTTP incoming request headers in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers) and\n * [Middleware](https://nextjs.org/docs/app/building-your-application/routing/middleware).\n *\n * Read more: [Next.js Docs: `headers`](https://nextjs.org/docs/app/api-reference/functions/headers)\n */ function headers() {\n    const callingExpression = \"headers\";\n    const staticGenerationStore = _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_6__.staticGenerationAsyncStorage.getStore();\n    if (staticGenerationStore) {\n        if (staticGenerationStore.forceStatic) {\n            // When we are forcing static we don't mark this as a Dynamic read and we return an empty headers object\n            return _server_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.seal(new Headers({}));\n        } else {\n            // We will return a real headers object below so we mark this call as reading from a dynamic data source\n            (0,_server_app_render_dynamic_rendering__WEBPACK_IMPORTED_MODULE_5__.trackDynamicDataAccessed)(staticGenerationStore, callingExpression);\n        }\n    }\n    return (0,_request_async_storage_external__WEBPACK_IMPORTED_MODULE_7__.getExpectedRequestStore)(callingExpression).headers;\n}\nfunction cookies() {\n    const callingExpression = \"cookies\";\n    const staticGenerationStore = _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_6__.staticGenerationAsyncStorage.getStore();\n    if (staticGenerationStore) {\n        if (staticGenerationStore.forceStatic) {\n            // When we are forcing static we don't mark this as a Dynamic read and we return an empty cookies object\n            return _server_web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_0__.RequestCookiesAdapter.seal(new _server_web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_2__.RequestCookies(new Headers({})));\n        } else {\n            // We will return a real headers object below so we mark this call as reading from a dynamic data source\n            (0,_server_app_render_dynamic_rendering__WEBPACK_IMPORTED_MODULE_5__.trackDynamicDataAccessed)(staticGenerationStore, callingExpression);\n        }\n    }\n    const requestStore = (0,_request_async_storage_external__WEBPACK_IMPORTED_MODULE_7__.getExpectedRequestStore)(callingExpression);\n    const asyncActionStore = _action_async_storage_external__WEBPACK_IMPORTED_MODULE_3__.actionAsyncStorage.getStore();\n    if ((asyncActionStore == null ? void 0 : asyncActionStore.isAction) || (asyncActionStore == null ? void 0 : asyncActionStore.isAppRoute)) {\n        // We can't conditionally return different types here based on the context.\n        // To avoid confusion, we always return the readonly type here.\n        return requestStore.mutableCookies;\n    }\n    return requestStore.cookies;\n}\nfunction draftMode() {\n    const callingExpression = \"draftMode\";\n    const requestStore = (0,_request_async_storage_external__WEBPACK_IMPORTED_MODULE_7__.getExpectedRequestStore)(callingExpression);\n    return new _draft_mode__WEBPACK_IMPORTED_MODULE_4__.DraftMode(requestStore.draftMode);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvaGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUE4QjtBQUNQO0FBQ0E7QUFDSTtBQUNUO0FBQ2U7QUFDSTtBQUNMO0FBQ2hDOzs7Ozs7OztDQVFBLEdBQVcsU0FBU1E7SUFDaEIsTUFBTUMsb0JBQW9CO0lBQzFCLE1BQU1DLHdCQUF3QkosbUdBQTRCQSxDQUFDSyxRQUFRO0lBQ25FLElBQUlELHVCQUF1QjtRQUN2QixJQUFJQSxzQkFBc0JFLFdBQVcsRUFBRTtZQUNuQztZQUNBLE9BQU9YLHVGQUFjQSxDQUFDWSxJQUFJLENBQUMsSUFBSUMsUUFBUSxDQUFDO1FBQzVDLE9BQU87WUFDSDtZQUNBVCw4RkFBd0JBLENBQUNLLHVCQUF1QkQ7UUFDcEQ7SUFDSjtJQUNBLE9BQU9GLHdGQUF1QkEsQ0FBQ0UsbUJBQW1CRCxPQUFPO0FBQzdEO0FBQ08sU0FBU087SUFDWixNQUFNTixvQkFBb0I7SUFDMUIsTUFBTUMsd0JBQXdCSixtR0FBNEJBLENBQUNLLFFBQVE7SUFDbkUsSUFBSUQsdUJBQXVCO1FBQ3ZCLElBQUlBLHNCQUFzQkUsV0FBVyxFQUFFO1lBQ25DO1lBQ0EsT0FBT1osc0dBQXFCQSxDQUFDYSxJQUFJLENBQUMsSUFBSVgsOEVBQWNBLENBQUMsSUFBSVksUUFBUSxDQUFDO1FBQ3RFLE9BQU87WUFDSDtZQUNBVCw4RkFBd0JBLENBQUNLLHVCQUF1QkQ7UUFDcEQ7SUFDSjtJQUNBLE1BQU1PLGVBQWVULHdGQUF1QkEsQ0FBQ0U7SUFDN0MsTUFBTVEsbUJBQW1CZCw4RUFBa0JBLENBQUNRLFFBQVE7SUFDcEQsSUFBSSxDQUFDTSxvQkFBb0IsT0FBTyxLQUFLLElBQUlBLGlCQUFpQkMsUUFBUSxLQUFNRCxDQUFBQSxvQkFBb0IsT0FBTyxLQUFLLElBQUlBLGlCQUFpQkUsVUFBVSxHQUFHO1FBQ3RJO1FBQ0E7UUFDQSxPQUFPSCxhQUFhSSxjQUFjO0lBQ3RDO0lBQ0EsT0FBT0osYUFBYUQsT0FBTztBQUMvQjtBQUNPLFNBQVNNO0lBQ1osTUFBTVosb0JBQW9CO0lBQzFCLE1BQU1PLGVBQWVULHdGQUF1QkEsQ0FBQ0U7SUFDN0MsT0FBTyxJQUFJTCxrREFBU0EsQ0FBQ1ksYUFBYUssU0FBUztBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9oZWFkZXJzLmpzPzU3YjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVxdWVzdENvb2tpZXNBZGFwdGVyIH0gZnJvbSBcIi4uLy4uL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVxdWVzdC1jb29raWVzXCI7XG5pbXBvcnQgeyBIZWFkZXJzQWRhcHRlciB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL2hlYWRlcnNcIjtcbmltcG9ydCB7IFJlcXVlc3RDb29raWVzIH0gZnJvbSBcIi4uLy4uL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llc1wiO1xuaW1wb3J0IHsgYWN0aW9uQXN5bmNTdG9yYWdlIH0gZnJvbSBcIi4vYWN0aW9uLWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWxcIjtcbmltcG9ydCB7IERyYWZ0TW9kZSB9IGZyb20gXCIuL2RyYWZ0LW1vZGVcIjtcbmltcG9ydCB7IHRyYWNrRHluYW1pY0RhdGFBY2Nlc3NlZCB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvYXBwLXJlbmRlci9keW5hbWljLXJlbmRlcmluZ1wiO1xuaW1wb3J0IHsgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSB9IGZyb20gXCIuL3N0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWxcIjtcbmltcG9ydCB7IGdldEV4cGVjdGVkUmVxdWVzdFN0b3JlIH0gZnJvbSBcIi4vcmVxdWVzdC1hc3luYy1zdG9yYWdlLmV4dGVybmFsXCI7XG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWxsb3dzIHlvdSB0byByZWFkIHRoZSBIVFRQIGluY29taW5nIHJlcXVlc3QgaGVhZGVycyBpblxuICogW1NlcnZlciBDb21wb25lbnRzXShodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYnVpbGRpbmcteW91ci1hcHBsaWNhdGlvbi9yZW5kZXJpbmcvc2VydmVyLWNvbXBvbmVudHMpLFxuICogW1NlcnZlciBBY3Rpb25zXShodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYnVpbGRpbmcteW91ci1hcHBsaWNhdGlvbi9kYXRhLWZldGNoaW5nL3NlcnZlci1hY3Rpb25zLWFuZC1tdXRhdGlvbnMpLFxuICogW1JvdXRlIEhhbmRsZXJzXShodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYnVpbGRpbmcteW91ci1hcHBsaWNhdGlvbi9yb3V0aW5nL3JvdXRlLWhhbmRsZXJzKSBhbmRcbiAqIFtNaWRkbGV3YXJlXShodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYnVpbGRpbmcteW91ci1hcHBsaWNhdGlvbi9yb3V0aW5nL21pZGRsZXdhcmUpLlxuICpcbiAqIFJlYWQgbW9yZTogW05leHQuanMgRG9jczogYGhlYWRlcnNgXShodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYXBpLXJlZmVyZW5jZS9mdW5jdGlvbnMvaGVhZGVycylcbiAqLyBleHBvcnQgZnVuY3Rpb24gaGVhZGVycygpIHtcbiAgICBjb25zdCBjYWxsaW5nRXhwcmVzc2lvbiA9IFwiaGVhZGVyc1wiO1xuICAgIGNvbnN0IHN0YXRpY0dlbmVyYXRpb25TdG9yZSA9IHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlKSB7XG4gICAgICAgIGlmIChzdGF0aWNHZW5lcmF0aW9uU3RvcmUuZm9yY2VTdGF0aWMpIHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGZvcmNpbmcgc3RhdGljIHdlIGRvbid0IG1hcmsgdGhpcyBhcyBhIER5bmFtaWMgcmVhZCBhbmQgd2UgcmV0dXJuIGFuIGVtcHR5IGhlYWRlcnMgb2JqZWN0XG4gICAgICAgICAgICByZXR1cm4gSGVhZGVyc0FkYXB0ZXIuc2VhbChuZXcgSGVhZGVycyh7fSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gV2Ugd2lsbCByZXR1cm4gYSByZWFsIGhlYWRlcnMgb2JqZWN0IGJlbG93IHNvIHdlIG1hcmsgdGhpcyBjYWxsIGFzIHJlYWRpbmcgZnJvbSBhIGR5bmFtaWMgZGF0YSBzb3VyY2VcbiAgICAgICAgICAgIHRyYWNrRHluYW1pY0RhdGFBY2Nlc3NlZChzdGF0aWNHZW5lcmF0aW9uU3RvcmUsIGNhbGxpbmdFeHByZXNzaW9uKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZ2V0RXhwZWN0ZWRSZXF1ZXN0U3RvcmUoY2FsbGluZ0V4cHJlc3Npb24pLmhlYWRlcnM7XG59XG5leHBvcnQgZnVuY3Rpb24gY29va2llcygpIHtcbiAgICBjb25zdCBjYWxsaW5nRXhwcmVzc2lvbiA9IFwiY29va2llc1wiO1xuICAgIGNvbnN0IHN0YXRpY0dlbmVyYXRpb25TdG9yZSA9IHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlKSB7XG4gICAgICAgIGlmIChzdGF0aWNHZW5lcmF0aW9uU3RvcmUuZm9yY2VTdGF0aWMpIHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGZvcmNpbmcgc3RhdGljIHdlIGRvbid0IG1hcmsgdGhpcyBhcyBhIER5bmFtaWMgcmVhZCBhbmQgd2UgcmV0dXJuIGFuIGVtcHR5IGNvb2tpZXMgb2JqZWN0XG4gICAgICAgICAgICByZXR1cm4gUmVxdWVzdENvb2tpZXNBZGFwdGVyLnNlYWwobmV3IFJlcXVlc3RDb29raWVzKG5ldyBIZWFkZXJzKHt9KSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gV2Ugd2lsbCByZXR1cm4gYSByZWFsIGhlYWRlcnMgb2JqZWN0IGJlbG93IHNvIHdlIG1hcmsgdGhpcyBjYWxsIGFzIHJlYWRpbmcgZnJvbSBhIGR5bmFtaWMgZGF0YSBzb3VyY2VcbiAgICAgICAgICAgIHRyYWNrRHluYW1pY0RhdGFBY2Nlc3NlZChzdGF0aWNHZW5lcmF0aW9uU3RvcmUsIGNhbGxpbmdFeHByZXNzaW9uKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCByZXF1ZXN0U3RvcmUgPSBnZXRFeHBlY3RlZFJlcXVlc3RTdG9yZShjYWxsaW5nRXhwcmVzc2lvbik7XG4gICAgY29uc3QgYXN5bmNBY3Rpb25TdG9yZSA9IGFjdGlvbkFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgIGlmICgoYXN5bmNBY3Rpb25TdG9yZSA9PSBudWxsID8gdm9pZCAwIDogYXN5bmNBY3Rpb25TdG9yZS5pc0FjdGlvbikgfHwgKGFzeW5jQWN0aW9uU3RvcmUgPT0gbnVsbCA/IHZvaWQgMCA6IGFzeW5jQWN0aW9uU3RvcmUuaXNBcHBSb3V0ZSkpIHtcbiAgICAgICAgLy8gV2UgY2FuJ3QgY29uZGl0aW9uYWxseSByZXR1cm4gZGlmZmVyZW50IHR5cGVzIGhlcmUgYmFzZWQgb24gdGhlIGNvbnRleHQuXG4gICAgICAgIC8vIFRvIGF2b2lkIGNvbmZ1c2lvbiwgd2UgYWx3YXlzIHJldHVybiB0aGUgcmVhZG9ubHkgdHlwZSBoZXJlLlxuICAgICAgICByZXR1cm4gcmVxdWVzdFN0b3JlLm11dGFibGVDb29raWVzO1xuICAgIH1cbiAgICByZXR1cm4gcmVxdWVzdFN0b3JlLmNvb2tpZXM7XG59XG5leHBvcnQgZnVuY3Rpb24gZHJhZnRNb2RlKCkge1xuICAgIGNvbnN0IGNhbGxpbmdFeHByZXNzaW9uID0gXCJkcmFmdE1vZGVcIjtcbiAgICBjb25zdCByZXF1ZXN0U3RvcmUgPSBnZXRFeHBlY3RlZFJlcXVlc3RTdG9yZShjYWxsaW5nRXhwcmVzc2lvbik7XG4gICAgcmV0dXJuIG5ldyBEcmFmdE1vZGUocmVxdWVzdFN0b3JlLmRyYWZ0TW9kZSk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlYWRlcnMuanMubWFwIl0sIm5hbWVzIjpbIlJlcXVlc3RDb29raWVzQWRhcHRlciIsIkhlYWRlcnNBZGFwdGVyIiwiUmVxdWVzdENvb2tpZXMiLCJhY3Rpb25Bc3luY1N0b3JhZ2UiLCJEcmFmdE1vZGUiLCJ0cmFja0R5bmFtaWNEYXRhQWNjZXNzZWQiLCJzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlIiwiZ2V0RXhwZWN0ZWRSZXF1ZXN0U3RvcmUiLCJoZWFkZXJzIiwiY2FsbGluZ0V4cHJlc3Npb24iLCJzdGF0aWNHZW5lcmF0aW9uU3RvcmUiLCJnZXRTdG9yZSIsImZvcmNlU3RhdGljIiwic2VhbCIsIkhlYWRlcnMiLCJjb29raWVzIiwicmVxdWVzdFN0b3JlIiwiYXN5bmNBY3Rpb25TdG9yZSIsImlzQWN0aW9uIiwiaXNBcHBSb3V0ZSIsIm11dGFibGVDb29raWVzIiwiZHJhZnRNb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/hooks-server-context.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/hooks-server-context.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DynamicServerError: () => (/* binding */ DynamicServerError),\n/* harmony export */   isDynamicServerError: () => (/* binding */ isDynamicServerError)\n/* harmony export */ });\nconst DYNAMIC_ERROR_CODE = \"DYNAMIC_SERVER_USAGE\";\nclass DynamicServerError extends Error {\n    constructor(description){\n        super(\"Dynamic server usage: \" + description);\n        this.description = description;\n        this.digest = DYNAMIC_ERROR_CODE;\n    }\n}\nfunction isDynamicServerError(err) {\n    if (typeof err !== \"object\" || err === null || !(\"digest\" in err) || typeof err.digest !== \"string\") {\n        return false;\n    }\n    return err.digest === DYNAMIC_ERROR_CODE;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvaG9va3Mtc2VydmVyLWNvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxxQkFBcUI7QUFDcEIsTUFBTUMsMkJBQTJCQztJQUNwQ0MsWUFBWUMsV0FBVyxDQUFDO1FBQ3BCLEtBQUssQ0FBQywyQkFBMkJBO1FBQ2pDLElBQUksQ0FBQ0EsV0FBVyxHQUFHQTtRQUNuQixJQUFJLENBQUNDLE1BQU0sR0FBR0w7SUFDbEI7QUFDSjtBQUNPLFNBQVNNLHFCQUFxQkMsR0FBRztJQUNwQyxJQUFJLE9BQU9BLFFBQVEsWUFBWUEsUUFBUSxRQUFRLENBQUUsYUFBWUEsR0FBQUEsS0FBUSxPQUFPQSxJQUFJRixNQUFNLEtBQUssVUFBVTtRQUNqRyxPQUFPO0lBQ1g7SUFDQSxPQUFPRSxJQUFJRixNQUFNLEtBQUtMO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2hvb2tzLXNlcnZlci1jb250ZXh0LmpzPzgyZWQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRFlOQU1JQ19FUlJPUl9DT0RFID0gXCJEWU5BTUlDX1NFUlZFUl9VU0FHRVwiO1xuZXhwb3J0IGNsYXNzIER5bmFtaWNTZXJ2ZXJFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihkZXNjcmlwdGlvbil7XG4gICAgICAgIHN1cGVyKFwiRHluYW1pYyBzZXJ2ZXIgdXNhZ2U6IFwiICsgZGVzY3JpcHRpb24pO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgICAgIHRoaXMuZGlnZXN0ID0gRFlOQU1JQ19FUlJPUl9DT0RFO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0R5bmFtaWNTZXJ2ZXJFcnJvcihlcnIpIHtcbiAgICBpZiAodHlwZW9mIGVyciAhPT0gXCJvYmplY3RcIiB8fCBlcnIgPT09IG51bGwgfHwgIShcImRpZ2VzdFwiIGluIGVycikgfHwgdHlwZW9mIGVyci5kaWdlc3QgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gZXJyLmRpZ2VzdCA9PT0gRFlOQU1JQ19FUlJPUl9DT0RFO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ob29rcy1zZXJ2ZXItY29udGV4dC5qcy5tYXAiXSwibmFtZXMiOlsiRFlOQU1JQ19FUlJPUl9DT0RFIiwiRHluYW1pY1NlcnZlckVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsImRlc2NyaXB0aW9uIiwiZGlnZXN0IiwiaXNEeW5hbWljU2VydmVyRXJyb3IiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/hooks-server-context.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/navigation.js":
/*!********************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/navigation.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReadonlyURLSearchParams: () => (/* reexport safe */ _navigation_react_server__WEBPACK_IMPORTED_MODULE_5__.ReadonlyURLSearchParams),\n/* harmony export */   RedirectType: () => (/* reexport safe */ _navigation_react_server__WEBPACK_IMPORTED_MODULE_5__.RedirectType),\n/* harmony export */   ServerInsertedHTMLContext: () => (/* reexport safe */ _shared_lib_server_inserted_html_shared_runtime__WEBPACK_IMPORTED_MODULE_6__.ServerInsertedHTMLContext),\n/* harmony export */   notFound: () => (/* reexport safe */ _navigation_react_server__WEBPACK_IMPORTED_MODULE_5__.notFound),\n/* harmony export */   permanentRedirect: () => (/* reexport safe */ _navigation_react_server__WEBPACK_IMPORTED_MODULE_5__.permanentRedirect),\n/* harmony export */   redirect: () => (/* reexport safe */ _navigation_react_server__WEBPACK_IMPORTED_MODULE_5__.redirect),\n/* harmony export */   useParams: () => (/* binding */ useParams),\n/* harmony export */   usePathname: () => (/* binding */ usePathname),\n/* harmony export */   useRouter: () => (/* binding */ useRouter),\n/* harmony export */   useSearchParams: () => (/* binding */ useSearchParams),\n/* harmony export */   useSelectedLayoutSegment: () => (/* binding */ useSelectedLayoutSegment),\n/* harmony export */   useSelectedLayoutSegments: () => (/* binding */ useSelectedLayoutSegments),\n/* harmony export */   useServerInsertedHTML: () => (/* reexport safe */ _shared_lib_server_inserted_html_shared_runtime__WEBPACK_IMPORTED_MODULE_6__.useServerInsertedHTML)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/lib/app-router-context.shared-runtime */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\");\n/* harmony import */ var _shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/lib/hooks-client-context.shared-runtime */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\");\n/* harmony import */ var _router_reducer_reducers_get_segment_value__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./router-reducer/reducers/get-segment-value */ \"(middleware)/./node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js\");\n/* harmony import */ var _shared_lib_segment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared/lib/segment */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\");\n/* harmony import */ var _navigation_react_server__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./navigation.react-server */ \"(middleware)/./node_modules/next/dist/esm/client/components/navigation.react-server.js\");\n/* harmony import */ var _shared_lib_server_inserted_html_shared_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../shared/lib/server-inserted-html.shared-runtime */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\");\n\n\n\n\n\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you *read* the current URL's search parameters.\n *\n * Learn more about [`URLSearchParams` on MDN](https://developer.mozilla.org/docs/Web/API/URLSearchParams)\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useSearchParams } from 'next/navigation'\n *\n * export default function Page() {\n *   const searchParams = useSearchParams()\n *   searchParams.get('foo') // returns 'bar' when ?foo=bar\n *   // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSearchParams`](https://nextjs.org/docs/app/api-reference/functions/use-search-params)\n */ function useSearchParams() {\n    const searchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__.SearchParamsContext);\n    // In the case where this is `null`, the compat types added in\n    // `next-env.d.ts` will add a new overload that changes the return type to\n    // include `null`.\n    const readonlySearchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        if (!searchParams) {\n            // When the router is not ready in pages, we won't have the search params\n            // available.\n            return null;\n        }\n        return new _navigation_react_server__WEBPACK_IMPORTED_MODULE_5__.ReadonlyURLSearchParams(searchParams);\n    }, [\n        searchParams\n    ]);\n    if (true) {\n        // AsyncLocalStorage should not be included in the client bundle.\n        const { bailoutToClientRendering } = __webpack_require__(/*! ./bailout-to-client-rendering */ \"(middleware)/./node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js\");\n        // TODO-APP: handle dynamic = 'force-static' here and on the client\n        bailoutToClientRendering(\"useSearchParams()\");\n    }\n    return readonlySearchParams;\n}\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the current URL's pathname.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { usePathname } from 'next/navigation'\n *\n * export default function Page() {\n *  const pathname = usePathname() // returns \"/dashboard\" on /dashboard?foo=bar\n *  // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `usePathname`](https://nextjs.org/docs/app/api-reference/functions/use-pathname)\n */ function usePathname() {\n    // In the case where this is `null`, the compat types added in `next-env.d.ts`\n    // will add a new overload that changes the return type to include `null`.\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__.PathnameContext);\n}\n\n/**\n *\n * This hook allows you to programmatically change routes inside [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components).\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useRouter } from 'next/navigation'\n *\n * export default function Page() {\n *  const router = useRouter()\n *  // ...\n *  router.push('/dashboard') // Navigate to /dashboard\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useRouter`](https://nextjs.org/docs/app/api-reference/functions/use-router)\n */ function useRouter() {\n    const router = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__.AppRouterContext);\n    if (router === null) {\n        throw new Error(\"invariant expected app router to be mounted\");\n    }\n    return router;\n}\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read a route's dynamic params filled in by the current URL.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useParams } from 'next/navigation'\n *\n * export default function Page() {\n *   // on /dashboard/[team] where pathname is /dashboard/nextjs\n *   const { team } = useParams() // team === \"nextjs\"\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useParams`](https://nextjs.org/docs/app/api-reference/functions/use-params)\n */ function useParams() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__.PathParamsContext);\n}\n/** Get the canonical parameters from the current level to the leaf node. */ function getSelectedLayoutSegmentPath(tree, parallelRouteKey, first, segmentPath) {\n    if (first === void 0) first = true;\n    if (segmentPath === void 0) segmentPath = [];\n    let node;\n    if (first) {\n        // Use the provided parallel route key on the first parallel route\n        node = tree[1][parallelRouteKey];\n    } else {\n        // After first parallel route prefer children, if there's no children pick the first parallel route.\n        const parallelRoutes = tree[1];\n        var _parallelRoutes_children;\n        node = (_parallelRoutes_children = parallelRoutes.children) != null ? _parallelRoutes_children : Object.values(parallelRoutes)[0];\n    }\n    if (!node) return segmentPath;\n    const segment = node[0];\n    const segmentValue = (0,_router_reducer_reducers_get_segment_value__WEBPACK_IMPORTED_MODULE_3__.getSegmentValue)(segment);\n    if (!segmentValue || segmentValue.startsWith(_shared_lib_segment__WEBPACK_IMPORTED_MODULE_4__.PAGE_SEGMENT_KEY)) {\n        return segmentPath;\n    }\n    segmentPath.push(segmentValue);\n    return getSelectedLayoutSegmentPath(node, parallelRouteKey, false, segmentPath);\n}\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segments **below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n *\n * import { useSelectedLayoutSegments } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segments = useSelectedLayoutSegments()\n *\n *   return (\n *     <ul>\n *       {segments.map((segment, index) => (\n *         <li key={index}>{segment}</li>\n *       ))}\n *     </ul>\n *   )\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegments`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segments)\n */ function useSelectedLayoutSegments(parallelRouteKey) {\n    if (parallelRouteKey === void 0) parallelRouteKey = \"children\";\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__.LayoutRouterContext);\n    // @ts-expect-error This only happens in `pages`. Type is overwritten in navigation.d.ts\n    if (!context) return null;\n    return getSelectedLayoutSegmentPath(context.tree, parallelRouteKey);\n}\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segment **one level below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n * import { useSelectedLayoutSegment } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segment = useSelectedLayoutSegment()\n *\n *   return <p>Active segment: {segment}</p>\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegment`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segment)\n */ function useSelectedLayoutSegment(parallelRouteKey) {\n    if (parallelRouteKey === void 0) parallelRouteKey = \"children\";\n    const selectedLayoutSegments = useSelectedLayoutSegments(parallelRouteKey);\n    if (!selectedLayoutSegments || selectedLayoutSegments.length === 0) {\n        return null;\n    }\n    const selectedLayoutSegment = parallelRouteKey === \"children\" ? selectedLayoutSegments[0] : selectedLayoutSegments[selectedLayoutSegments.length - 1];\n    // if the default slot is showing, we return null since it's not technically \"selected\" (it's a fallback)\n    // and returning an internal value like `__DEFAULT__` would be confusing.\n    return selectedLayoutSegment === _shared_lib_segment__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_SEGMENT_KEY ? null : selectedLayoutSegment;\n}\n// Client components APIs\n\n// Shared components APIs\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/navigation.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/navigation.react-server.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/navigation.react-server.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReadonlyURLSearchParams: () => (/* binding */ ReadonlyURLSearchParams),\n/* harmony export */   RedirectType: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_0__.RedirectType),\n/* harmony export */   notFound: () => (/* reexport safe */ _not_found__WEBPACK_IMPORTED_MODULE_1__.notFound),\n/* harmony export */   permanentRedirect: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_0__.permanentRedirect),\n/* harmony export */   redirect: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_0__.redirect)\n/* harmony export */ });\n/* harmony import */ var _redirect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./redirect */ \"(middleware)/./node_modules/next/dist/esm/client/components/redirect.js\");\n/* harmony import */ var _not_found__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./not-found */ \"(middleware)/./node_modules/next/dist/esm/client/components/not-found.js\");\n/** @internal */ class ReadonlyURLSearchParamsError extends Error {\n    constructor(){\n        super(\"Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams\");\n    }\n}\nclass ReadonlyURLSearchParams extends URLSearchParams {\n    /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */ append() {\n        throw new ReadonlyURLSearchParamsError();\n    }\n    /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */ delete() {\n        throw new ReadonlyURLSearchParamsError();\n    }\n    /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */ set() {\n        throw new ReadonlyURLSearchParamsError();\n    }\n    /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */ sort() {\n        throw new ReadonlyURLSearchParamsError();\n    }\n}\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvbmF2aWdhdGlvbi5yZWFjdC1zZXJ2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLGlCQUFpQixNQUFNQSxxQ0FBcUNDO0lBQ3hEQyxhQUFhO1FBQ1QsS0FBSyxDQUFDO0lBQ1Y7QUFDSjtBQUNBLE1BQU1DLGdDQUFnQ0M7SUFDbEMsMktBQTJLQyxTQUFTO1FBQ2hMLE1BQU0sSUFBSUw7SUFDZDtJQUNBLDJLQUEyS00sU0FBUztRQUNoTCxNQUFNLElBQUlOO0lBQ2Q7SUFDQSwyS0FBMktPLE1BQU07UUFDN0ssTUFBTSxJQUFJUDtJQUNkO0lBQ0EsMktBQTJLUSxPQUFPO1FBQzlLLE1BQU0sSUFBSVI7SUFDZDtBQUNKO0FBQ2tEO0FBQ2pDO0FBQ2UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvbmF2aWdhdGlvbi5yZWFjdC1zZXJ2ZXIuanM/NGI1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGludGVybmFsICovIGNsYXNzIFJlYWRvbmx5VVJMU2VhcmNoUGFyYW1zRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgc3VwZXIoXCJNZXRob2QgdW5hdmFpbGFibGUgb24gYFJlYWRvbmx5VVJMU2VhcmNoUGFyYW1zYC4gUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYXBpLXJlZmVyZW5jZS9mdW5jdGlvbnMvdXNlLXNlYXJjaC1wYXJhbXMjdXBkYXRpbmctc2VhcmNocGFyYW1zXCIpO1xuICAgIH1cbn1cbmNsYXNzIFJlYWRvbmx5VVJMU2VhcmNoUGFyYW1zIGV4dGVuZHMgVVJMU2VhcmNoUGFyYW1zIHtcbiAgICAvKiogQGRlcHJlY2F0ZWQgTWV0aG9kIHVuYXZhaWxhYmxlIG9uIGBSZWFkb25seVVSTFNlYXJjaFBhcmFtc2AuIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2FwaS1yZWZlcmVuY2UvZnVuY3Rpb25zL3VzZS1zZWFyY2gtcGFyYW1zI3VwZGF0aW5nLXNlYXJjaHBhcmFtcyAqLyBhcHBlbmQoKSB7XG4gICAgICAgIHRocm93IG5ldyBSZWFkb25seVVSTFNlYXJjaFBhcmFtc0Vycm9yKCk7XG4gICAgfVxuICAgIC8qKiBAZGVwcmVjYXRlZCBNZXRob2QgdW5hdmFpbGFibGUgb24gYFJlYWRvbmx5VVJMU2VhcmNoUGFyYW1zYC4gUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYXBpLXJlZmVyZW5jZS9mdW5jdGlvbnMvdXNlLXNlYXJjaC1wYXJhbXMjdXBkYXRpbmctc2VhcmNocGFyYW1zICovIGRlbGV0ZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJlYWRvbmx5VVJMU2VhcmNoUGFyYW1zRXJyb3IoKTtcbiAgICB9XG4gICAgLyoqIEBkZXByZWNhdGVkIE1ldGhvZCB1bmF2YWlsYWJsZSBvbiBgUmVhZG9ubHlVUkxTZWFyY2hQYXJhbXNgLiBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9hcGktcmVmZXJlbmNlL2Z1bmN0aW9ucy91c2Utc2VhcmNoLXBhcmFtcyN1cGRhdGluZy1zZWFyY2hwYXJhbXMgKi8gc2V0KCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVhZG9ubHlVUkxTZWFyY2hQYXJhbXNFcnJvcigpO1xuICAgIH1cbiAgICAvKiogQGRlcHJlY2F0ZWQgTWV0aG9kIHVuYXZhaWxhYmxlIG9uIGBSZWFkb25seVVSTFNlYXJjaFBhcmFtc2AuIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2FwaS1yZWZlcmVuY2UvZnVuY3Rpb25zL3VzZS1zZWFyY2gtcGFyYW1zI3VwZGF0aW5nLXNlYXJjaHBhcmFtcyAqLyBzb3J0KCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVhZG9ubHlVUkxTZWFyY2hQYXJhbXNFcnJvcigpO1xuICAgIH1cbn1cbmV4cG9ydCB7IHJlZGlyZWN0LCBwZXJtYW5lbnRSZWRpcmVjdCwgUmVkaXJlY3RUeXBlIH0gZnJvbSBcIi4vcmVkaXJlY3RcIjtcbmV4cG9ydCB7IG5vdEZvdW5kIH0gZnJvbSBcIi4vbm90LWZvdW5kXCI7XG5leHBvcnQgeyBSZWFkb25seVVSTFNlYXJjaFBhcmFtcyB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1uYXZpZ2F0aW9uLnJlYWN0LXNlcnZlci5qcy5tYXAiXSwibmFtZXMiOlsiUmVhZG9ubHlVUkxTZWFyY2hQYXJhbXNFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJSZWFkb25seVVSTFNlYXJjaFBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsImFwcGVuZCIsImRlbGV0ZSIsInNldCIsInNvcnQiLCJyZWRpcmVjdCIsInBlcm1hbmVudFJlZGlyZWN0IiwiUmVkaXJlY3RUeXBlIiwibm90Rm91bmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/navigation.react-server.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/not-found.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/not-found.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNotFoundError: () => (/* binding */ isNotFoundError),\n/* harmony export */   notFound: () => (/* binding */ notFound)\n/* harmony export */ });\nconst NOT_FOUND_ERROR_CODE = \"NEXT_NOT_FOUND\";\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */ function notFound() {\n    // eslint-disable-next-line no-throw-literal\n    const error = new Error(NOT_FOUND_ERROR_CODE);\n    error.digest = NOT_FOUND_ERROR_CODE;\n    throw error;\n}\n/**\n * Checks an error to determine if it's an error generated by the `notFound()`\n * helper.\n *\n * @param error the error that may reference a not found error\n * @returns true if the error is a not found error\n */ function isNotFoundError(error) {\n    if (typeof error !== \"object\" || error === null || !(\"digest\" in error)) {\n        return false;\n    }\n    return error.digest === NOT_FOUND_ERROR_CODE;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsdUJBQXVCO0FBQzdCOzs7Ozs7Ozs7Ozs7O0NBYUEsR0FBVyxTQUFTQztJQUNoQjtJQUNBLE1BQU1DLFFBQVEsSUFBSUMsTUFBTUg7SUFDeEJFLE1BQU1FLE1BQU0sR0FBR0o7SUFDZixNQUFNRTtBQUNWO0FBQ0E7Ozs7OztDQU1BLEdBQVcsU0FBU0csZ0JBQWdCSCxLQUFLO0lBQ3JDLElBQUksT0FBT0EsVUFBVSxZQUFZQSxVQUFVLFFBQVEsQ0FBRSxhQUFZQSxLQUFBQSxHQUFRO1FBQ3JFLE9BQU87SUFDWDtJQUNBLE9BQU9BLE1BQU1FLE1BQU0sS0FBS0o7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLmpzP2E4ZjMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTk9UX0ZPVU5EX0VSUk9SX0NPREUgPSBcIk5FWFRfTk9UX0ZPVU5EXCI7XG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWxsb3dzIHlvdSB0byByZW5kZXIgdGhlIFtub3QtZm91bmQuanMgZmlsZV0oaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2FwaS1yZWZlcmVuY2UvZmlsZS1jb252ZW50aW9ucy9ub3QtZm91bmQpXG4gKiB3aXRoaW4gYSByb3V0ZSBzZWdtZW50IGFzIHdlbGwgYXMgaW5qZWN0IGEgdGFnLlxuICpcbiAqIGBub3RGb3VuZCgpYCBjYW4gYmUgdXNlZCBpblxuICogW1NlcnZlciBDb21wb25lbnRzXShodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYnVpbGRpbmcteW91ci1hcHBsaWNhdGlvbi9yZW5kZXJpbmcvc2VydmVyLWNvbXBvbmVudHMpLFxuICogW1JvdXRlIEhhbmRsZXJzXShodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYnVpbGRpbmcteW91ci1hcHBsaWNhdGlvbi9yb3V0aW5nL3JvdXRlLWhhbmRsZXJzKSwgYW5kXG4gKiBbU2VydmVyIEFjdGlvbnNdKGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9idWlsZGluZy15b3VyLWFwcGxpY2F0aW9uL2RhdGEtZmV0Y2hpbmcvc2VydmVyLWFjdGlvbnMtYW5kLW11dGF0aW9ucykuXG4gKlxuICogLSBJbiBhIFNlcnZlciBDb21wb25lbnQsIHRoaXMgd2lsbCBpbnNlcnQgYSBgPG1ldGEgbmFtZT1cInJvYm90c1wiIGNvbnRlbnQ9XCJub2luZGV4XCIgLz5gIG1ldGEgdGFnIGFuZCBzZXQgdGhlIHN0YXR1cyBjb2RlIHRvIDQwNC5cbiAqIC0gSW4gYSBSb3V0ZSBIYW5kbGVyIG9yIFNlcnZlciBBY3Rpb24sIGl0IHdpbGwgc2VydmUgYSA0MDQgdG8gdGhlIGNhbGxlci5cbiAqXG4gKiBSZWFkIG1vcmU6IFtOZXh0LmpzIERvY3M6IGBub3RGb3VuZGBdKGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9hcGktcmVmZXJlbmNlL2Z1bmN0aW9ucy9ub3QtZm91bmQpXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIG5vdEZvdW5kKCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby10aHJvdy1saXRlcmFsXG4gICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoTk9UX0ZPVU5EX0VSUk9SX0NPREUpO1xuICAgIGVycm9yLmRpZ2VzdCA9IE5PVF9GT1VORF9FUlJPUl9DT0RFO1xuICAgIHRocm93IGVycm9yO1xufVxuLyoqXG4gKiBDaGVja3MgYW4gZXJyb3IgdG8gZGV0ZXJtaW5lIGlmIGl0J3MgYW4gZXJyb3IgZ2VuZXJhdGVkIGJ5IHRoZSBgbm90Rm91bmQoKWBcbiAqIGhlbHBlci5cbiAqXG4gKiBAcGFyYW0gZXJyb3IgdGhlIGVycm9yIHRoYXQgbWF5IHJlZmVyZW5jZSBhIG5vdCBmb3VuZCBlcnJvclxuICogQHJldHVybnMgdHJ1ZSBpZiB0aGUgZXJyb3IgaXMgYSBub3QgZm91bmQgZXJyb3JcbiAqLyBleHBvcnQgZnVuY3Rpb24gaXNOb3RGb3VuZEVycm9yKGVycm9yKSB7XG4gICAgaWYgKHR5cGVvZiBlcnJvciAhPT0gXCJvYmplY3RcIiB8fCBlcnJvciA9PT0gbnVsbCB8fCAhKFwiZGlnZXN0XCIgaW4gZXJyb3IpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIGVycm9yLmRpZ2VzdCA9PT0gTk9UX0ZPVU5EX0VSUk9SX0NPREU7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vdC1mb3VuZC5qcy5tYXAiXSwibmFtZXMiOlsiTk9UX0ZPVU5EX0VSUk9SX0NPREUiLCJub3RGb3VuZCIsImVycm9yIiwiRXJyb3IiLCJkaWdlc3QiLCJpc05vdEZvdW5kRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/not-found.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/redirect-status-code.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/redirect-status-code.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedirectStatusCode: () => (/* binding */ RedirectStatusCode)\n/* harmony export */ });\nvar RedirectStatusCode;\n(function(RedirectStatusCode) {\n    RedirectStatusCode[RedirectStatusCode[\"SeeOther\"] = 303] = \"SeeOther\";\n    RedirectStatusCode[RedirectStatusCode[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    RedirectStatusCode[RedirectStatusCode[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n})(RedirectStatusCode || (RedirectStatusCode = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvcmVkaXJlY3Qtc3RhdHVzLWNvZGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLElBQUlBLG1CQUFrQjtBQUM1QixVQUFTQSxrQkFBa0I7SUFDeEJBLGtCQUFrQixDQUFDQSxrQkFBa0IsQ0FBQyxXQUFXLEdBQUcsSUFBSSxHQUFHO0lBQzNEQSxrQkFBa0IsQ0FBQ0Esa0JBQWtCLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxHQUFHO0lBQ3BFQSxrQkFBa0IsQ0FBQ0Esa0JBQWtCLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxHQUFHO0FBQ3hFLEdBQUdBLHNCQUF1QkEsQ0FBQUEscUJBQXFCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvcmVkaXJlY3Qtc3RhdHVzLWNvZGUuanM/YzkzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIFJlZGlyZWN0U3RhdHVzQ29kZTtcbihmdW5jdGlvbihSZWRpcmVjdFN0YXR1c0NvZGUpIHtcbiAgICBSZWRpcmVjdFN0YXR1c0NvZGVbUmVkaXJlY3RTdGF0dXNDb2RlW1wiU2VlT3RoZXJcIl0gPSAzMDNdID0gXCJTZWVPdGhlclwiO1xuICAgIFJlZGlyZWN0U3RhdHVzQ29kZVtSZWRpcmVjdFN0YXR1c0NvZGVbXCJUZW1wb3JhcnlSZWRpcmVjdFwiXSA9IDMwN10gPSBcIlRlbXBvcmFyeVJlZGlyZWN0XCI7XG4gICAgUmVkaXJlY3RTdGF0dXNDb2RlW1JlZGlyZWN0U3RhdHVzQ29kZVtcIlBlcm1hbmVudFJlZGlyZWN0XCJdID0gMzA4XSA9IFwiUGVybWFuZW50UmVkaXJlY3RcIjtcbn0pKFJlZGlyZWN0U3RhdHVzQ29kZSB8fCAoUmVkaXJlY3RTdGF0dXNDb2RlID0ge30pKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVkaXJlY3Qtc3RhdHVzLWNvZGUuanMubWFwIl0sIm5hbWVzIjpbIlJlZGlyZWN0U3RhdHVzQ29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/redirect-status-code.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/redirect.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/redirect.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedirectType: () => (/* binding */ RedirectType),\n/* harmony export */   getRedirectError: () => (/* binding */ getRedirectError),\n/* harmony export */   getRedirectStatusCodeFromError: () => (/* binding */ getRedirectStatusCodeFromError),\n/* harmony export */   getRedirectTypeFromError: () => (/* binding */ getRedirectTypeFromError),\n/* harmony export */   getURLFromRedirectError: () => (/* binding */ getURLFromRedirectError),\n/* harmony export */   isRedirectError: () => (/* binding */ isRedirectError),\n/* harmony export */   permanentRedirect: () => (/* binding */ permanentRedirect),\n/* harmony export */   redirect: () => (/* binding */ redirect)\n/* harmony export */ });\n/* harmony import */ var _request_async_storage_external__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n/* harmony import */ var _action_async_storage_external__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./action-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/action-async-storage.external.js\");\n/* harmony import */ var _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./redirect-status-code */ \"(middleware)/./node_modules/next/dist/esm/client/components/redirect-status-code.js\");\n\n\n\nconst REDIRECT_ERROR_CODE = \"NEXT_REDIRECT\";\nvar RedirectType;\n(function(RedirectType) {\n    RedirectType[\"push\"] = \"push\";\n    RedirectType[\"replace\"] = \"replace\";\n})(RedirectType || (RedirectType = {}));\nfunction getRedirectError(url, type, statusCode) {\n    if (statusCode === void 0) statusCode = _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.TemporaryRedirect;\n    const error = new Error(REDIRECT_ERROR_CODE);\n    error.digest = REDIRECT_ERROR_CODE + \";\" + type + \";\" + url + \";\" + statusCode + \";\";\n    const requestStore = _request_async_storage_external__WEBPACK_IMPORTED_MODULE_0__.requestAsyncStorage.getStore();\n    if (requestStore) {\n        error.mutableCookies = requestStore.mutableCookies;\n    }\n    return error;\n}\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */ function redirect(/** The URL to redirect to */ url, type) {\n    if (type === void 0) type = \"replace\";\n    const actionStore = _action_async_storage_external__WEBPACK_IMPORTED_MODULE_1__.actionAsyncStorage.getStore();\n    throw getRedirectError(url, type, // If we're in an action, we want to use a 303 redirect\n    // as we don't want the POST request to follow the redirect,\n    // as it could result in erroneous re-submissions.\n    (actionStore == null ? void 0 : actionStore.isAction) ? _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.SeeOther : _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.TemporaryRedirect);\n}\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */ function permanentRedirect(/** The URL to redirect to */ url, type) {\n    if (type === void 0) type = \"replace\";\n    const actionStore = _action_async_storage_external__WEBPACK_IMPORTED_MODULE_1__.actionAsyncStorage.getStore();\n    throw getRedirectError(url, type, // If we're in an action, we want to use a 303 redirect\n    // as we don't want the POST request to follow the redirect,\n    // as it could result in erroneous re-submissions.\n    (actionStore == null ? void 0 : actionStore.isAction) ? _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.SeeOther : _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.PermanentRedirect);\n}\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */ function isRedirectError(error) {\n    if (typeof error !== \"object\" || error === null || !(\"digest\" in error) || typeof error.digest !== \"string\") {\n        return false;\n    }\n    const [errorCode, type, destination, status] = error.digest.split(\";\", 4);\n    const statusCode = Number(status);\n    return errorCode === REDIRECT_ERROR_CODE && (type === \"replace\" || type === \"push\") && typeof destination === \"string\" && !isNaN(statusCode) && statusCode in _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode;\n}\nfunction getURLFromRedirectError(error) {\n    if (!isRedirectError(error)) return null;\n    // Slices off the beginning of the digest that contains the code and the\n    // separating ';'.\n    return error.digest.split(\";\", 3)[2];\n}\nfunction getRedirectTypeFromError(error) {\n    if (!isRedirectError(error)) {\n        throw new Error(\"Not a redirect error\");\n    }\n    return error.digest.split(\";\", 2)[1];\n}\nfunction getRedirectStatusCodeFromError(error) {\n    if (!isRedirectError(error)) {\n        throw new Error(\"Not a redirect error\");\n    }\n    return Number(error.digest.split(\";\", 4)[3]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/redirect.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage-instance.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/request-async-storage-instance.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(middleware)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst requestAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvcmVxdWVzdC1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdDO0FBQ3pCLE1BQU1DLHNCQUFzQkQsNkVBQXVCQSxHQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS1pbnN0YW5jZS5qcz9kYTY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIH0gZnJvbSBcIi4vYXN5bmMtbG9jYWwtc3RvcmFnZVwiO1xuZXhwb3J0IGNvbnN0IHJlcXVlc3RBc3luY1N0b3JhZ2UgPSBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2UuanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIiwicmVxdWVzdEFzeW5jU3RvcmFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage-instance.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/request-async-storage.external.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getExpectedRequestStore: () => (/* binding */ getExpectedRequestStore),\n/* harmony export */   requestAsyncStorage: () => (/* reexport safe */ _request_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__.requestAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _request_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request-async-storage-instance */ \"(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage-instance.js\");\n\"TURBOPACK { transition: next-shared }\";\n\n\nfunction getExpectedRequestStore(callingExpression) {\n    const store = _request_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__.requestAsyncStorage.getStore();\n    if (store) return store;\n    throw new Error(\"`\" + callingExpression + \"` was called outside a request scope. Read more: https://nextjs.org/docs/messages/next-dynamic-api-wrong-context\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvcmVxdWVzdC1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQzRCO0FBQ0E7QUFDckIsU0FBU0Msd0JBQXdCQyxpQkFBaUI7SUFDckQsTUFBTUMsUUFBUUgsZ0ZBQW1CQSxDQUFDSSxRQUFRO0lBQzFDLElBQUlELE9BQU8sT0FBT0E7SUFDbEIsTUFBTSxJQUFJRSxNQUFNLE1BQU1ILG9CQUFvQjtBQUM5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanM/Yjc2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcIlRVUkJPUEFDSyB7IHRyYW5zaXRpb246IG5leHQtc2hhcmVkIH1cIjtcbmltcG9ydCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UgfSBmcm9tIFwiLi9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2VcIjtcbmV4cG9ydCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UgfTtcbmV4cG9ydCBmdW5jdGlvbiBnZXRFeHBlY3RlZFJlcXVlc3RTdG9yZShjYWxsaW5nRXhwcmVzc2lvbikge1xuICAgIGNvbnN0IHN0b3JlID0gcmVxdWVzdEFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgIGlmIChzdG9yZSkgcmV0dXJuIHN0b3JlO1xuICAgIHRocm93IG5ldyBFcnJvcihcImBcIiArIGNhbGxpbmdFeHByZXNzaW9uICsgXCJgIHdhcyBjYWxsZWQgb3V0c2lkZSBhIHJlcXVlc3Qgc2NvcGUuIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbmV4dC1keW5hbWljLWFwaS13cm9uZy1jb250ZXh0XCIpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanMubWFwIl0sIm5hbWVzIjpbInJlcXVlc3RBc3luY1N0b3JhZ2UiLCJnZXRFeHBlY3RlZFJlcXVlc3RTdG9yZSIsImNhbGxpbmdFeHByZXNzaW9uIiwic3RvcmUiLCJnZXRTdG9yZSIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSegmentValue: () => (/* binding */ getSegmentValue)\n/* harmony export */ });\nfunction getSegmentValue(segment) {\n    return Array.isArray(segment) ? segment[1] : segment;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvcm91dGVyLXJlZHVjZXIvcmVkdWNlcnMvZ2V0LXNlZ21lbnQtdmFsdWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLGdCQUFnQkMsT0FBTztJQUNuQyxPQUFPQyxNQUFNQyxPQUFPLENBQUNGLFdBQVdBLE9BQU8sQ0FBQyxFQUFFLEdBQUdBO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL3JvdXRlci1yZWR1Y2VyL3JlZHVjZXJzL2dldC1zZWdtZW50LXZhbHVlLmpzPzRhZDQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGdldFNlZ21lbnRWYWx1ZShzZWdtZW50KSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoc2VnbWVudCkgPyBzZWdtZW50WzFdIDogc2VnbWVudDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LXNlZ21lbnQtdmFsdWUuanMubWFwIl0sIm5hbWVzIjpbImdldFNlZ21lbnRWYWx1ZSIsInNlZ21lbnQiLCJBcnJheSIsImlzQXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/static-generation-async-storage-instance.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/static-generation-async-storage-instance.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(middleware)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst staticGenerationAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS1pbnN0YW5jZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnQztBQUN6QixNQUFNQywrQkFBK0JELDZFQUF1QkEsR0FBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzP2M0MDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UgfSBmcm9tIFwiLi9hc3luYy1sb2NhbC1zdG9yYWdlXCI7XG5leHBvcnQgY29uc3Qgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSA9IGNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2UuanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIiwic3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/static-generation-async-storage-instance.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   staticGenerationAsyncStorage: () => (/* reexport safe */ _static_generation_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__.staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _static_generation_async_storage_instance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./static-generation-async-storage-instance */ \"(middleware)/./node_modules/next/dist/esm/client/components/static-generation-async-storage-instance.js\");\n\"TURBOPACK { transition: next-shared }\";\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ3FDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcz8wMTE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwiVFVSQk9QQUNLIHsgdHJhbnNpdGlvbjogbmV4dC1zaGFyZWQgfVwiO1xuaW1wb3J0IHsgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSB9IGZyb20gXCIuL3N0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2VcIjtcbmV4cG9ydCB7IHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcy5tYXAiXSwibmFtZXMiOlsic3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/static-generation-bailout.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/static-generation-bailout.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StaticGenBailoutError: () => (/* binding */ StaticGenBailoutError),\n/* harmony export */   isStaticGenBailoutError: () => (/* binding */ isStaticGenBailoutError)\n/* harmony export */ });\nconst NEXT_STATIC_GEN_BAILOUT = \"NEXT_STATIC_GEN_BAILOUT\";\nclass StaticGenBailoutError extends Error {\n    constructor(...args){\n        super(...args);\n        this.code = NEXT_STATIC_GEN_BAILOUT;\n    }\n}\nfunction isStaticGenBailoutError(error) {\n    if (typeof error !== \"object\" || error === null || !(\"code\" in error)) {\n        return false;\n    }\n    return error.code === NEXT_STATIC_GEN_BAILOUT;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BLDBCQUEwQjtBQUN6QixNQUFNQyw4QkFBOEJDO0lBQ3ZDQyxZQUFZLEdBQUdDLElBQUksQ0FBQztRQUNoQixLQUFLLElBQUlBO1FBQ1QsSUFBSSxDQUFDQyxJQUFJLEdBQUdMO0lBQ2hCO0FBQ0o7QUFDTyxTQUFTTSx3QkFBd0JDLEtBQUs7SUFDekMsSUFBSSxPQUFPQSxVQUFVLFlBQVlBLFVBQVUsUUFBUSxDQUFFLFdBQVVBLEtBQUFBLEdBQVE7UUFDbkUsT0FBTztJQUNYO0lBQ0EsT0FBT0EsTUFBTUYsSUFBSSxLQUFLTDtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9zdGF0aWMtZ2VuZXJhdGlvbi1iYWlsb3V0LmpzP2RjODMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTkVYVF9TVEFUSUNfR0VOX0JBSUxPVVQgPSBcIk5FWFRfU1RBVElDX0dFTl9CQUlMT1VUXCI7XG5leHBvcnQgY2xhc3MgU3RhdGljR2VuQmFpbG91dEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKC4uLmFyZ3Mpe1xuICAgICAgICBzdXBlciguLi5hcmdzKTtcbiAgICAgICAgdGhpcy5jb2RlID0gTkVYVF9TVEFUSUNfR0VOX0JBSUxPVVQ7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU3RhdGljR2VuQmFpbG91dEVycm9yKGVycm9yKSB7XG4gICAgaWYgKHR5cGVvZiBlcnJvciAhPT0gXCJvYmplY3RcIiB8fCBlcnJvciA9PT0gbnVsbCB8fCAhKFwiY29kZVwiIGluIGVycm9yKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBlcnJvci5jb2RlID09PSBORVhUX1NUQVRJQ19HRU5fQkFJTE9VVDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhdGljLWdlbmVyYXRpb24tYmFpbG91dC5qcy5tYXAiXSwibmFtZXMiOlsiTkVYVF9TVEFUSUNfR0VOX0JBSUxPVVQiLCJTdGF0aWNHZW5CYWlsb3V0RXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiYXJncyIsImNvZGUiLCJpc1N0YXRpY0dlbkJhaWxvdXRFcnJvciIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/static-generation-bailout.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/lib/constants.js":
/*!*****************************************************!*\
  !*** ./node_modules/next/dist/esm/lib/constants.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION_SUFFIX: () => (/* binding */ ACTION_SUFFIX),\n/* harmony export */   APP_DIR_ALIAS: () => (/* binding */ APP_DIR_ALIAS),\n/* harmony export */   CACHE_ONE_YEAR: () => (/* binding */ CACHE_ONE_YEAR),\n/* harmony export */   DOT_NEXT_ALIAS: () => (/* binding */ DOT_NEXT_ALIAS),\n/* harmony export */   ESLINT_DEFAULT_DIRS: () => (/* binding */ ESLINT_DEFAULT_DIRS),\n/* harmony export */   ESLINT_PROMPT_VALUES: () => (/* binding */ ESLINT_PROMPT_VALUES),\n/* harmony export */   GSP_NO_RETURNED_VALUE: () => (/* binding */ GSP_NO_RETURNED_VALUE),\n/* harmony export */   GSSP_COMPONENT_MEMBER_ERROR: () => (/* binding */ GSSP_COMPONENT_MEMBER_ERROR),\n/* harmony export */   GSSP_NO_RETURNED_VALUE: () => (/* binding */ GSSP_NO_RETURNED_VALUE),\n/* harmony export */   INSTRUMENTATION_HOOK_FILENAME: () => (/* binding */ INSTRUMENTATION_HOOK_FILENAME),\n/* harmony export */   MIDDLEWARE_FILENAME: () => (/* binding */ MIDDLEWARE_FILENAME),\n/* harmony export */   MIDDLEWARE_LOCATION_REGEXP: () => (/* binding */ MIDDLEWARE_LOCATION_REGEXP),\n/* harmony export */   NEXT_BODY_SUFFIX: () => (/* binding */ NEXT_BODY_SUFFIX),\n/* harmony export */   NEXT_CACHE_IMPLICIT_TAG_ID: () => (/* binding */ NEXT_CACHE_IMPLICIT_TAG_ID),\n/* harmony export */   NEXT_CACHE_REVALIDATED_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATED_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_SOFT_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_SOFT_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_CACHE_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_TAG_MAX_ITEMS: () => (/* binding */ NEXT_CACHE_TAG_MAX_ITEMS),\n/* harmony export */   NEXT_CACHE_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_DATA_SUFFIX: () => (/* binding */ NEXT_DATA_SUFFIX),\n/* harmony export */   NEXT_META_SUFFIX: () => (/* binding */ NEXT_META_SUFFIX),\n/* harmony export */   NEXT_QUERY_PARAM_PREFIX: () => (/* binding */ NEXT_QUERY_PARAM_PREFIX),\n/* harmony export */   NON_STANDARD_NODE_ENV: () => (/* binding */ NON_STANDARD_NODE_ENV),\n/* harmony export */   PAGES_DIR_ALIAS: () => (/* binding */ PAGES_DIR_ALIAS),\n/* harmony export */   PRERENDER_REVALIDATE_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_HEADER),\n/* harmony export */   PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER),\n/* harmony export */   PUBLIC_DIR_MIDDLEWARE_CONFLICT: () => (/* binding */ PUBLIC_DIR_MIDDLEWARE_CONFLICT),\n/* harmony export */   ROOT_DIR_ALIAS: () => (/* binding */ ROOT_DIR_ALIAS),\n/* harmony export */   RSC_ACTION_CLIENT_WRAPPER_ALIAS: () => (/* binding */ RSC_ACTION_CLIENT_WRAPPER_ALIAS),\n/* harmony export */   RSC_ACTION_ENCRYPTION_ALIAS: () => (/* binding */ RSC_ACTION_ENCRYPTION_ALIAS),\n/* harmony export */   RSC_ACTION_PROXY_ALIAS: () => (/* binding */ RSC_ACTION_PROXY_ALIAS),\n/* harmony export */   RSC_ACTION_VALIDATE_ALIAS: () => (/* binding */ RSC_ACTION_VALIDATE_ALIAS),\n/* harmony export */   RSC_MOD_REF_PROXY_ALIAS: () => (/* binding */ RSC_MOD_REF_PROXY_ALIAS),\n/* harmony export */   RSC_PREFETCH_SUFFIX: () => (/* binding */ RSC_PREFETCH_SUFFIX),\n/* harmony export */   RSC_SUFFIX: () => (/* binding */ RSC_SUFFIX),\n/* harmony export */   SERVER_PROPS_EXPORT_ERROR: () => (/* binding */ SERVER_PROPS_EXPORT_ERROR),\n/* harmony export */   SERVER_PROPS_GET_INIT_PROPS_CONFLICT: () => (/* binding */ SERVER_PROPS_GET_INIT_PROPS_CONFLICT),\n/* harmony export */   SERVER_PROPS_SSG_CONFLICT: () => (/* binding */ SERVER_PROPS_SSG_CONFLICT),\n/* harmony export */   SERVER_RUNTIME: () => (/* binding */ SERVER_RUNTIME),\n/* harmony export */   SSG_FALLBACK_EXPORT_ERROR: () => (/* binding */ SSG_FALLBACK_EXPORT_ERROR),\n/* harmony export */   SSG_GET_INITIAL_PROPS_CONFLICT: () => (/* binding */ SSG_GET_INITIAL_PROPS_CONFLICT),\n/* harmony export */   STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: () => (/* binding */ STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR),\n/* harmony export */   UNSTABLE_REVALIDATE_RENAME_ERROR: () => (/* binding */ UNSTABLE_REVALIDATE_RENAME_ERROR),\n/* harmony export */   WEBPACK_LAYERS: () => (/* binding */ WEBPACK_LAYERS),\n/* harmony export */   WEBPACK_RESOURCE_QUERIES: () => (/* binding */ WEBPACK_RESOURCE_QUERIES)\n/* harmony export */ });\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst NEXT_QUERY_PARAM_PREFIX = \"nxtP\";\nconst PRERENDER_REVALIDATE_HEADER = \"x-prerender-revalidate\";\nconst PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = \"x-prerender-revalidate-if-generated\";\nconst RSC_PREFETCH_SUFFIX = \".prefetch.rsc\";\nconst RSC_SUFFIX = \".rsc\";\nconst ACTION_SUFFIX = \".action\";\nconst NEXT_DATA_SUFFIX = \".json\";\nconst NEXT_META_SUFFIX = \".meta\";\nconst NEXT_BODY_SUFFIX = \".body\";\nconst NEXT_CACHE_TAGS_HEADER = \"x-next-cache-tags\";\nconst NEXT_CACHE_SOFT_TAGS_HEADER = \"x-next-cache-soft-tags\";\nconst NEXT_CACHE_REVALIDATED_TAGS_HEADER = \"x-next-revalidated-tags\";\nconst NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = \"x-next-revalidate-tag-token\";\n// if these change make sure we update the related\n// documentation as well\nconst NEXT_CACHE_TAG_MAX_ITEMS = 64;\nconst NEXT_CACHE_TAG_MAX_LENGTH = 256;\nconst NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nconst NEXT_CACHE_IMPLICIT_TAG_ID = \"_N_T_\";\n// in seconds\nconst CACHE_ONE_YEAR = 31536000;\n// Patterns to detect middleware files\nconst MIDDLEWARE_FILENAME = \"middleware\";\nconst MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nconst INSTRUMENTATION_HOOK_FILENAME = \"instrumentation\";\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nconst PAGES_DIR_ALIAS = \"private-next-pages\";\nconst DOT_NEXT_ALIAS = \"private-dot-next\";\nconst ROOT_DIR_ALIAS = \"private-next-root-dir\";\nconst APP_DIR_ALIAS = \"private-next-app-dir\";\nconst RSC_MOD_REF_PROXY_ALIAS = \"private-next-rsc-mod-ref-proxy\";\nconst RSC_ACTION_VALIDATE_ALIAS = \"private-next-rsc-action-validate\";\nconst RSC_ACTION_PROXY_ALIAS = \"private-next-rsc-server-reference\";\nconst RSC_ACTION_ENCRYPTION_ALIAS = \"private-next-rsc-action-encryption\";\nconst RSC_ACTION_CLIENT_WRAPPER_ALIAS = \"private-next-rsc-action-client-wrapper\";\nconst PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nconst SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nconst SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nconst SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nconst STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nconst SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nconst GSP_NO_RETURNED_VALUE = \"Your `getStaticProps` function did not return an object. Did you forget to add a `return`?\";\nconst GSSP_NO_RETURNED_VALUE = \"Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?\";\nconst UNSTABLE_REVALIDATE_RENAME_ERROR = \"The `unstable_revalidate` property is available for general use.\\n\" + \"Please use `revalidate` instead.\";\nconst GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nconst NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nconst SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nconst ESLINT_DEFAULT_DIRS = [\"app\", \"pages\", \"components\", \"lib\", \"src\"];\nconst ESLINT_PROMPT_VALUES = [{\n  title: \"Strict\",\n  recommended: true,\n  config: {\n    extends: \"next/core-web-vitals\"\n  }\n}, {\n  title: \"Base\",\n  config: {\n    extends: \"next\"\n  }\n}, {\n  title: \"Cancel\",\n  config: null\n}];\nconst SERVER_RUNTIME = {\n  edge: \"edge\",\n  experimentalEdge: \"experimental-edge\",\n  nodejs: \"nodejs\"\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n  * The layer for the shared code between the client and server bundles.\n  */\n  shared: \"shared\",\n  /**\n  * React Server Components layer (rsc).\n  */\n  reactServerComponents: \"rsc\",\n  /**\n  * Server Side Rendering layer for app (ssr).\n  */\n  serverSideRendering: \"ssr\",\n  /**\n  * The browser client bundle layer for actions.\n  */\n  actionBrowser: \"action-browser\",\n  /**\n  * The layer for the API routes.\n  */\n  api: \"api\",\n  /**\n  * The layer for the middleware code.\n  */\n  middleware: \"middleware\",\n  /**\n  * The layer for the instrumentation hooks.\n  */\n  instrument: \"instrument\",\n  /**\n  * The layer for assets on the edge.\n  */\n  edgeAsset: \"edge-asset\",\n  /**\n  * The browser client bundle layer for App directory.\n  */\n  appPagesBrowser: \"app-pages-browser\",\n  /**\n  * The server bundle layer for metadata routes.\n  */\n  appMetadataRoute: \"app-metadata-route\",\n  /**\n  * The layer for the server bundle for App Route handlers.\n  */\n  appRouteHandler: \"app-route-handler\"\n};\nconst WEBPACK_LAYERS = _objectSpread(_objectSpread({}, WEBPACK_LAYERS_NAMES), {}, {\n  GROUP: {\n    serverOnly: [WEBPACK_LAYERS_NAMES.reactServerComponents, WEBPACK_LAYERS_NAMES.actionBrowser, WEBPACK_LAYERS_NAMES.appMetadataRoute, WEBPACK_LAYERS_NAMES.appRouteHandler, WEBPACK_LAYERS_NAMES.instrument],\n    clientOnly: [WEBPACK_LAYERS_NAMES.serverSideRendering, WEBPACK_LAYERS_NAMES.appPagesBrowser],\n    nonClientServerTarget: [\n    // middleware and pages api\n    WEBPACK_LAYERS_NAMES.middleware, WEBPACK_LAYERS_NAMES.api],\n    app: [WEBPACK_LAYERS_NAMES.reactServerComponents, WEBPACK_LAYERS_NAMES.actionBrowser, WEBPACK_LAYERS_NAMES.appMetadataRoute, WEBPACK_LAYERS_NAMES.appRouteHandler, WEBPACK_LAYERS_NAMES.serverSideRendering, WEBPACK_LAYERS_NAMES.appPagesBrowser, WEBPACK_LAYERS_NAMES.shared, WEBPACK_LAYERS_NAMES.instrument]\n  }\n});\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: \"__next_edge_ssr_entry__\",\n  metadata: \"__next_metadata__\",\n  metadataRoute: \"__next_metadata_route__\",\n  metadataImageMeta: \"__next_metadata_image_meta__\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/lib/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/lib/url.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/esm/lib/url.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPathname: () => (/* binding */ getPathname),\n/* harmony export */   isFullStringUrl: () => (/* binding */ isFullStringUrl)\n/* harmony export */ });\nconst DUMMY_ORIGIN = \"http://n\";\nfunction getUrlWithoutHost(url) {\n  return new URL(url, DUMMY_ORIGIN);\n}\nfunction getPathname(url) {\n  return getUrlWithoutHost(url).pathname;\n}\nfunction isFullStringUrl(url) {\n  return /https?:\\/\\//.test(url);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vbGliL3VybC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BLFlBQVksR0FBRyxVQUFVO0FBQy9CLFNBQVNDLGlCQUFpQkEsQ0FBQ0MsR0FBRyxFQUFFO0VBQzVCLE9BQU8sSUFBSUMsR0FBRyxDQUFDRCxHQUFHLEVBQUVGLFlBQVksQ0FBQztBQUNyQztBQUNPLFNBQVNJLFdBQVdBLENBQUNGLEdBQUcsRUFBRTtFQUM3QixPQUFPRCxpQkFBaUIsQ0FBQ0MsR0FBRyxDQUFDLENBQUNHLFFBQVE7QUFDMUM7QUFDTyxTQUFTQyxlQUFlQSxDQUFDSixHQUFHLEVBQUU7RUFDakMsT0FBTyxhQUFhLENBQUNLLElBQUksQ0FBQ0wsR0FBRyxDQUFDO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2xpYi91cmwuanM/MDIxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBEVU1NWV9PUklHSU4gPSBcImh0dHA6Ly9uXCI7XG5mdW5jdGlvbiBnZXRVcmxXaXRob3V0SG9zdCh1cmwpIHtcbiAgICByZXR1cm4gbmV3IFVSTCh1cmwsIERVTU1ZX09SSUdJTik7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0UGF0aG5hbWUodXJsKSB7XG4gICAgcmV0dXJuIGdldFVybFdpdGhvdXRIb3N0KHVybCkucGF0aG5hbWU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNGdWxsU3RyaW5nVXJsKHVybCkge1xuICAgIHJldHVybiAvaHR0cHM/OlxcL1xcLy8udGVzdCh1cmwpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmwuanMubWFwIl0sIm5hbWVzIjpbIkRVTU1ZX09SSUdJTiIsImdldFVybFdpdGhvdXRIb3N0IiwidXJsIiwiVVJMIiwiZ2V0UGF0aG5hbWUiLCJwYXRobmFtZSIsImlzRnVsbFN0cmluZ1VybCIsInRlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/lib/url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/api-utils/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiError: () => (/* binding */ ApiError),\n/* harmony export */   COOKIE_NAME_PRERENDER_BYPASS: () => (/* binding */ COOKIE_NAME_PRERENDER_BYPASS),\n/* harmony export */   COOKIE_NAME_PRERENDER_DATA: () => (/* binding */ COOKIE_NAME_PRERENDER_DATA),\n/* harmony export */   RESPONSE_LIMIT_DEFAULT: () => (/* binding */ RESPONSE_LIMIT_DEFAULT),\n/* harmony export */   SYMBOL_CLEARED_COOKIES: () => (/* binding */ SYMBOL_CLEARED_COOKIES),\n/* harmony export */   SYMBOL_PREVIEW_DATA: () => (/* binding */ SYMBOL_PREVIEW_DATA),\n/* harmony export */   checkIsOnDemandRevalidate: () => (/* binding */ checkIsOnDemandRevalidate),\n/* harmony export */   clearPreviewData: () => (/* binding */ clearPreviewData),\n/* harmony export */   redirect: () => (/* binding */ redirect),\n/* harmony export */   sendError: () => (/* binding */ sendError),\n/* harmony export */   sendStatusCode: () => (/* binding */ sendStatusCode),\n/* harmony export */   setLazyProp: () => (/* binding */ setLazyProp),\n/* harmony export */   wrapApiHandler: () => (/* binding */ wrapApiHandler)\n/* harmony export */ });\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n/* harmony import */ var _lib_trace_tracer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/trace/tracer */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js\");\n/* harmony import */ var _lib_trace_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/trace/constants */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\nfunction wrapApiHandler(page, handler) {\n  return (...args) => {\n    var _getTracer_getRootSpanAttributes;\n    (_getTracer_getRootSpanAttributes = (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_2__.getTracer)().getRootSpanAttributes()) == null ? void 0 : _getTracer_getRootSpanAttributes.set(\"next.route\", page);\n    // Call API route method\n    return (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_2__.getTracer)().trace(_lib_trace_constants__WEBPACK_IMPORTED_MODULE_3__.NodeSpan.runHandler, {\n      spanName: `executing api route (pages) ${page}`\n    }, () => handler(...args));\n  };\n}\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */\nfunction sendStatusCode(res, statusCode) {\n  res.statusCode = statusCode;\n  return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */\nfunction redirect(res, statusOrUrl, url) {\n  if (typeof statusOrUrl === \"string\") {\n    url = statusOrUrl;\n    statusOrUrl = 307;\n  }\n  if (typeof statusOrUrl !== \"number\" || typeof url !== \"string\") {\n    throw new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`);\n  }\n  res.writeHead(statusOrUrl, {\n    Location: url\n  });\n  res.write(url);\n  res.end();\n  return res;\n}\nfunction checkIsOnDemandRevalidate(req, previewProps) {\n  const headers = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__.HeadersAdapter.from(req.headers);\n  const previewModeId = headers.get(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_HEADER);\n  const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n  const revalidateOnlyGenerated = headers.has(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n  return {\n    isOnDemandRevalidate,\n    revalidateOnlyGenerated\n  };\n}\nconst COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nconst COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nconst RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nconst SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nconst SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nfunction clearPreviewData(res, options = {}) {\n  if (SYMBOL_CLEARED_COOKIES in res) {\n    return res;\n  }\n  const {\n    serialize\n  } = __webpack_require__(/*! next/dist/compiled/cookie */ \"(middleware)/./node_modules/next/dist/compiled/cookie/index.js\");\n  const previous = res.getHeader(\"Set-Cookie\");\n  res.setHeader(`Set-Cookie`, [...(typeof previous === \"string\" ? [previous] : Array.isArray(previous) ? previous : []), serialize(COOKIE_NAME_PRERENDER_BYPASS, \"\", _objectSpread({\n    // To delete a cookie, set `expires` to a date in the past:\n    // https://tools.ietf.org/html/rfc6265#section-4.1.1\n    // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n    expires: new Date(0),\n    httpOnly: true,\n    sameSite:  false ? 0 : \"lax\",\n    secure: false,\n    path: \"/\"\n  }, options.path !== undefined ? {\n    path: options.path\n  } : undefined)), serialize(COOKIE_NAME_PRERENDER_DATA, \"\", _objectSpread({\n    // To delete a cookie, set `expires` to a date in the past:\n    // https://tools.ietf.org/html/rfc6265#section-4.1.1\n    // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n    expires: new Date(0),\n    httpOnly: true,\n    sameSite:  false ? 0 : \"lax\",\n    secure: false,\n    path: \"/\"\n  }, options.path !== undefined ? {\n    path: options.path\n  } : undefined))]);\n  Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n    value: true,\n    enumerable: false\n  });\n  return res;\n}\n/**\n * Custom error class\n */\nclass ApiError extends Error {\n  constructor(statusCode, message) {\n    super(message);\n    this.statusCode = statusCode;\n  }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */\nfunction sendError(res, statusCode, message) {\n  res.statusCode = statusCode;\n  res.statusMessage = message;\n  res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */\nfunction setLazyProp({\n  req\n}, prop, getter) {\n  const opts = {\n    configurable: true,\n    enumerable: true\n  };\n  const optsReset = _objectSpread(_objectSpread({}, opts), {}, {\n    writable: true\n  });\n  Object.defineProperty(req, prop, _objectSpread(_objectSpread({}, opts), {}, {\n    get: () => {\n      const value = getter();\n      // we set the property on the object to avoid recalculating it\n      Object.defineProperty(req, prop, _objectSpread(_objectSpread({}, optsReset), {}, {\n        value\n      }));\n      return value;\n    },\n    set: value => {\n      Object.defineProperty(req, prop, _objectSpread(_objectSpread({}, optsReset), {}, {\n        value\n      }));\n    }\n  }));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/app-render/dynamic-rendering.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/app-render/dynamic-rendering.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Postpone: () => (/* binding */ Postpone),\n/* harmony export */   createPostponedAbortSignal: () => (/* binding */ createPostponedAbortSignal),\n/* harmony export */   createPrerenderState: () => (/* binding */ createPrerenderState),\n/* harmony export */   formatDynamicAPIAccesses: () => (/* binding */ formatDynamicAPIAccesses),\n/* harmony export */   markCurrentScopeAsDynamic: () => (/* binding */ markCurrentScopeAsDynamic),\n/* harmony export */   trackDynamicDataAccessed: () => (/* binding */ trackDynamicDataAccessed),\n/* harmony export */   trackDynamicFetch: () => (/* binding */ trackDynamicFetch),\n/* harmony export */   usedDynamicAPIs: () => (/* binding */ usedDynamicAPIs)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _client_components_hooks_server_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../client/components/hooks-server-context */ \"(middleware)/./node_modules/next/dist/esm/client/components/hooks-server-context.js\");\n/* harmony import */ var _client_components_static_generation_bailout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../client/components/static-generation-bailout */ \"(middleware)/./node_modules/next/dist/esm/client/components/static-generation-bailout.js\");\n/* harmony import */ var _lib_url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../lib/url */ \"(middleware)/./node_modules/next/dist/esm/lib/url.js\");\n/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */ // Once postpone is in stable we should switch to importing the postpone export directly\n\n\n\n\nconst hasPostpone = typeof (react__WEBPACK_IMPORTED_MODULE_0___default().unstable_postpone) === \"function\";\nfunction createPrerenderState(isDebugSkeleton) {\n  return {\n    isDebugSkeleton,\n    dynamicAccesses: []\n  };\n}\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree.\n */\nfunction markCurrentScopeAsDynamic(store, expression) {\n  const pathname = (0,_lib_url__WEBPACK_IMPORTED_MODULE_3__.getPathname)(store.urlPathname);\n  if (store.isUnstableCacheCallback) {\n    // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n    // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n    // forbidden inside a cache scope.\n    return;\n  } else if (store.dynamicShouldError) {\n    throw new _client_components_static_generation_bailout__WEBPACK_IMPORTED_MODULE_2__.StaticGenBailoutError(`Route ${pathname} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);\n  } else if (\n  // We are in a prerender (PPR enabled, during build)\n  store.prerenderState) {\n    // We track that we had a dynamic scope that postponed.\n    // This will be used by the renderer to decide whether\n    // the prerender requires a resume\n    postponeWithTracking(store.prerenderState, expression, pathname);\n  } else {\n    store.revalidate = 0;\n    if (store.isStaticGeneration) {\n      // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n      const err = new _client_components_hooks_server_context__WEBPACK_IMPORTED_MODULE_1__.DynamicServerError(`Route ${pathname} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`);\n      store.dynamicUsageDescription = expression;\n      store.dynamicUsageStack = err.stack;\n      throw err;\n    }\n  }\n}\n/**\n * This function communicates that some dynamic data was read. This typically would refer to accessing\n * a Request specific data store such as cookies or headers. This function is not how end-users will\n * describe reading from dynamic data sources which are valid to cache and up to the author to make\n * a determination of when to do so.\n *\n * If we are inside a cache scope we error\n * Also during a PPR Prerender we postpone\n */\nfunction trackDynamicDataAccessed(store, expression) {\n  const pathname = (0,_lib_url__WEBPACK_IMPORTED_MODULE_3__.getPathname)(store.urlPathname);\n  if (store.isUnstableCacheCallback) {\n    throw new Error(`Route ${pathname} used \"${expression}\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"${expression}\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`);\n  } else if (store.dynamicShouldError) {\n    throw new _client_components_static_generation_bailout__WEBPACK_IMPORTED_MODULE_2__.StaticGenBailoutError(`Route ${pathname} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`);\n  } else if (\n  // We are in a prerender (PPR enabled, during build)\n  store.prerenderState) {\n    // We track that we had a dynamic scope that postponed.\n    // This will be used by the renderer to decide whether\n    // the prerender requires a resume\n    postponeWithTracking(store.prerenderState, expression, pathname);\n  } else {\n    store.revalidate = 0;\n    if (store.isStaticGeneration) {\n      // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n      const err = new _client_components_hooks_server_context__WEBPACK_IMPORTED_MODULE_1__.DynamicServerError(`Route ${pathname} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`);\n      store.dynamicUsageDescription = expression;\n      store.dynamicUsageStack = err.stack;\n      throw err;\n    }\n  }\n}\nfunction Postpone({\n  reason,\n  prerenderState,\n  pathname\n}) {\n  postponeWithTracking(prerenderState, reason, pathname);\n}\n// @TODO refactor patch-fetch and this function to better model dynamic semantics. Currently this implementation\n// is too explicit about postponing if we are in a prerender and patch-fetch contains a lot of logic for determining\n// what makes the fetch \"dynamic\". It also doesn't handle Non PPR cases so it is isn't as consistent with the other\n// dynamic-rendering methods.\nfunction trackDynamicFetch(store, expression) {\n  if (store.prerenderState) {\n    postponeWithTracking(store.prerenderState, expression, store.urlPathname);\n  }\n}\nfunction postponeWithTracking(prerenderState, expression, pathname) {\n  assertPostpone();\n  const reason = `Route ${pathname} needs to bail out of prerendering at this point because it used ${expression}. ` + `React throws this special object to indicate where. It should not be caught by ` + `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`;\n  prerenderState.dynamicAccesses.push({\n    // When we aren't debugging, we don't need to create another error for the\n    // stack trace.\n    stack: prerenderState.isDebugSkeleton ? new Error().stack : undefined,\n    expression\n  });\n  react__WEBPACK_IMPORTED_MODULE_0___default().unstable_postpone(reason);\n}\nfunction usedDynamicAPIs(prerenderState) {\n  return prerenderState.dynamicAccesses.length > 0;\n}\nfunction formatDynamicAPIAccesses(prerenderState) {\n  return prerenderState.dynamicAccesses.filter(access => typeof access.stack === \"string\" && access.stack.length > 0).map(({\n    expression,\n    stack\n  }) => {\n    stack = stack.split(\"\\n\") // Remove the \"Error: \" prefix from the first line of the stack trace as\n    // well as the first 4 lines of the stack trace which is the distance\n    // from the user code and the `new Error().stack` call.\n    .slice(4).filter(line => {\n      // Exclude Next.js internals from the stack trace.\n      if (line.includes(\"node_modules/next/\")) {\n        return false;\n      }\n      // Exclude anonymous functions from the stack trace.\n      if (line.includes(\" (<anonymous>)\")) {\n        return false;\n      }\n      // Exclude Node.js internals from the stack trace.\n      if (line.includes(\" (node:\")) {\n        return false;\n      }\n      return true;\n    }).join(\"\\n\");\n    return `Dynamic API Usage Debug - ${expression}:\\n${stack}`;\n  });\n}\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(`Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`);\n  }\n}\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nfunction createPostponedAbortSignal(reason) {\n  assertPostpone();\n  const controller = new AbortController();\n  // We get our hands on a postpone instance by calling postpone and catching the throw\n  try {\n    react__WEBPACK_IMPORTED_MODULE_0___default().unstable_postpone(reason);\n  } catch (x) {\n    controller.abort(x);\n  }\n  return controller.signal;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/app-render/dynamic-rendering.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DraftModeProvider: () => (/* binding */ DraftModeProvider)\n/* harmony export */ });\n/* harmony import */ var _api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api-utils */ \"(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js\");\n\nclass DraftModeProvider {\n  constructor(previewProps, req, cookies, mutableCookies) {\n    var _cookies_get;\n    // The logic for draftMode() is very similar to tryGetPreviewData()\n    // but Draft Mode does not have any data associated with it.\n    const isOnDemandRevalidate = previewProps && (0,_api_utils__WEBPACK_IMPORTED_MODULE_0__.checkIsOnDemandRevalidate)(req, previewProps).isOnDemandRevalidate;\n    const cookieValue = (_cookies_get = cookies.get(_api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n    this.isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && cookieValue === previewProps.previewModeId);\n    this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n    this._mutableCookies = mutableCookies;\n  }\n  enable() {\n    if (!this._previewModeId) {\n      throw new Error(\"Invariant: previewProps missing previewModeId this should never happen\");\n    }\n    this._mutableCookies.set({\n      name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\n      value: this._previewModeId,\n      httpOnly: true,\n      sameSite:  false ? 0 : \"lax\",\n      secure: false,\n      path: \"/\"\n    });\n  }\n  disable() {\n    // To delete a cookie, set `expires` to a date in the past:\n    // https://tools.ietf.org/html/rfc6265#section-4.1.1\n    // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n    this._mutableCookies.set({\n      name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\n      value: \"\",\n      httpOnly: true,\n      sameSite:  false ? 0 : \"lax\",\n      secure: false,\n      path: \"/\",\n      expires: new Date(0)\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvZHJhZnQtbW9kZS1wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RjtBQUNoRixNQUFNRSxpQkFBaUIsQ0FBQztFQUMzQkMsV0FBV0EsQ0FBQ0MsWUFBWSxFQUFFQyxHQUFHLEVBQUVDLE9BQU8sRUFBRUMsY0FBYyxFQUFDO0lBQ25ELElBQUlDLFlBQVk7SUFDaEI7SUFDQTtJQUNBLE1BQU1DLG9CQUFvQixHQUFHTCxZQUFZLElBQUlILHFFQUF5QixDQUFDSSxHQUFHLEVBQUVELFlBQVksQ0FBQyxDQUFDSyxvQkFBb0I7SUFDOUcsTUFBTUMsV0FBVyxHQUFHLENBQUNGLFlBQVksR0FBR0YsT0FBTyxDQUFDSyxHQUFHLENBQUNYLG9FQUE0QixDQUFDLEtBQUssSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHUSxZQUFZLENBQUNJLEtBQUs7SUFDcEgsSUFBSSxDQUFDQyxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxDQUFDTCxvQkFBb0IsSUFBSUMsV0FBVyxJQUFJTixZQUFZLElBQUlNLFdBQVcsS0FBS04sWUFBWSxDQUFDVyxhQUFhLENBQUM7SUFDNUgsSUFBSSxDQUFDQyxjQUFjLEdBQUdaLFlBQVksSUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUdBLFlBQVksQ0FBQ1csYUFBYTtJQUNoRixJQUFJLENBQUNFLGVBQWUsR0FBR1YsY0FBYztFQUN6QztFQUNBVyxNQUFNQSxDQUFBLEVBQUc7SUFDTCxJQUFJLENBQUMsSUFBSSxDQUFDRixjQUFjLEVBQUU7TUFDdEIsTUFBTSxJQUFJRyxLQUFLLENBQUMsd0VBQXdFLENBQUM7SUFDN0Y7SUFDQSxJQUFJLENBQUNGLGVBQWUsQ0FBQ0csR0FBRyxDQUFDO01BQ3JCQyxJQUFJLEVBQUVyQixvRUFBNEI7TUFDbENZLEtBQUssRUFBRSxJQUFJLENBQUNJLGNBQWM7TUFDMUJNLFFBQVEsRUFBRSxJQUFJO01BQ2RDLFFBQVEsRUFBRSxTQUF5QyxDQUFNLEdBQUcsS0FBSztNQUNqRUMsTUFBTSxPQUF3QztNQUM5Q0MsSUFBSSxFQUFFO0lBQ1YsQ0FBQyxDQUFDO0VBQ047RUFDQUMsT0FBT0EsQ0FBQSxFQUFHO0lBQ047SUFDQTtJQUNBO0lBQ0EsSUFBSSxDQUFDVCxlQUFlLENBQUNHLEdBQUcsQ0FBQztNQUNyQkMsSUFBSSxFQUFFckIsb0VBQTRCO01BQ2xDWSxLQUFLLEVBQUUsRUFBRTtNQUNUVSxRQUFRLEVBQUUsSUFBSTtNQUNkQyxRQUFRLEVBQUUsU0FBeUMsQ0FBTSxHQUFHLEtBQUs7TUFDakVDLE1BQU0sT0FBd0M7TUFDOUNDLElBQUksRUFBRSxHQUFHO01BQ1RFLE9BQU8sRUFBRSxJQUFJQyxJQUFJLENBQUMsQ0FBQztJQUN2QixDQUFDLENBQUM7RUFDTjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci9hc3luYy1zdG9yYWdlL2RyYWZ0LW1vZGUtcHJvdmlkZXIuanM/ODdlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTLCBjaGVja0lzT25EZW1hbmRSZXZhbGlkYXRlIH0gZnJvbSBcIi4uL2FwaS11dGlsc1wiO1xuZXhwb3J0IGNsYXNzIERyYWZ0TW9kZVByb3ZpZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihwcmV2aWV3UHJvcHMsIHJlcSwgY29va2llcywgbXV0YWJsZUNvb2tpZXMpe1xuICAgICAgICB2YXIgX2Nvb2tpZXNfZ2V0O1xuICAgICAgICAvLyBUaGUgbG9naWMgZm9yIGRyYWZ0TW9kZSgpIGlzIHZlcnkgc2ltaWxhciB0byB0cnlHZXRQcmV2aWV3RGF0YSgpXG4gICAgICAgIC8vIGJ1dCBEcmFmdCBNb2RlIGRvZXMgbm90IGhhdmUgYW55IGRhdGEgYXNzb2NpYXRlZCB3aXRoIGl0LlxuICAgICAgICBjb25zdCBpc09uRGVtYW5kUmV2YWxpZGF0ZSA9IHByZXZpZXdQcm9wcyAmJiBjaGVja0lzT25EZW1hbmRSZXZhbGlkYXRlKHJlcSwgcHJldmlld1Byb3BzKS5pc09uRGVtYW5kUmV2YWxpZGF0ZTtcbiAgICAgICAgY29uc3QgY29va2llVmFsdWUgPSAoX2Nvb2tpZXNfZ2V0ID0gY29va2llcy5nZXQoQ09PS0lFX05BTUVfUFJFUkVOREVSX0JZUEFTUykpID09IG51bGwgPyB2b2lkIDAgOiBfY29va2llc19nZXQudmFsdWU7XG4gICAgICAgIHRoaXMuaXNFbmFibGVkID0gQm9vbGVhbighaXNPbkRlbWFuZFJldmFsaWRhdGUgJiYgY29va2llVmFsdWUgJiYgcHJldmlld1Byb3BzICYmIGNvb2tpZVZhbHVlID09PSBwcmV2aWV3UHJvcHMucHJldmlld01vZGVJZCk7XG4gICAgICAgIHRoaXMuX3ByZXZpZXdNb2RlSWQgPSBwcmV2aWV3UHJvcHMgPT0gbnVsbCA/IHZvaWQgMCA6IHByZXZpZXdQcm9wcy5wcmV2aWV3TW9kZUlkO1xuICAgICAgICB0aGlzLl9tdXRhYmxlQ29va2llcyA9IG11dGFibGVDb29raWVzO1xuICAgIH1cbiAgICBlbmFibGUoKSB7XG4gICAgICAgIGlmICghdGhpcy5fcHJldmlld01vZGVJZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YXJpYW50OiBwcmV2aWV3UHJvcHMgbWlzc2luZyBwcmV2aWV3TW9kZUlkIHRoaXMgc2hvdWxkIG5ldmVyIGhhcHBlblwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9tdXRhYmxlQ29va2llcy5zZXQoe1xuICAgICAgICAgICAgbmFtZTogQ09PS0lFX05BTUVfUFJFUkVOREVSX0JZUEFTUyxcbiAgICAgICAgICAgIHZhbHVlOiB0aGlzLl9wcmV2aWV3TW9kZUlkLFxuICAgICAgICAgICAgaHR0cE9ubHk6IHRydWUsXG4gICAgICAgICAgICBzYW1lU2l0ZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwiZGV2ZWxvcG1lbnRcIiA/IFwibm9uZVwiIDogXCJsYXhcIixcbiAgICAgICAgICAgIHNlY3VyZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwiZGV2ZWxvcG1lbnRcIixcbiAgICAgICAgICAgIHBhdGg6IFwiL1wiXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBkaXNhYmxlKCkge1xuICAgICAgICAvLyBUbyBkZWxldGUgYSBjb29raWUsIHNldCBgZXhwaXJlc2AgdG8gYSBkYXRlIGluIHRoZSBwYXN0OlxuICAgICAgICAvLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjI2NSNzZWN0aW9uLTQuMS4xXG4gICAgICAgIC8vIGBNYXgtQWdlOiAwYCBpcyBub3QgdmFsaWQsIHRodXMgaWdub3JlZCwgYW5kIHRoZSBjb29raWUgaXMgcGVyc2lzdGVkLlxuICAgICAgICB0aGlzLl9tdXRhYmxlQ29va2llcy5zZXQoe1xuICAgICAgICAgICAgbmFtZTogQ09PS0lFX05BTUVfUFJFUkVOREVSX0JZUEFTUyxcbiAgICAgICAgICAgIHZhbHVlOiBcIlwiLFxuICAgICAgICAgICAgaHR0cE9ubHk6IHRydWUsXG4gICAgICAgICAgICBzYW1lU2l0ZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwiZGV2ZWxvcG1lbnRcIiA/IFwibm9uZVwiIDogXCJsYXhcIixcbiAgICAgICAgICAgIHNlY3VyZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwiZGV2ZWxvcG1lbnRcIixcbiAgICAgICAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgICAgICAgZXhwaXJlczogbmV3IERhdGUoMClcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kcmFmdC1tb2RlLXByb3ZpZGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJDT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTIiwiY2hlY2tJc09uRGVtYW5kUmV2YWxpZGF0ZSIsIkRyYWZ0TW9kZVByb3ZpZGVyIiwiY29uc3RydWN0b3IiLCJwcmV2aWV3UHJvcHMiLCJyZXEiLCJjb29raWVzIiwibXV0YWJsZUNvb2tpZXMiLCJfY29va2llc19nZXQiLCJpc09uRGVtYW5kUmV2YWxpZGF0ZSIsImNvb2tpZVZhbHVlIiwiZ2V0IiwidmFsdWUiLCJpc0VuYWJsZWQiLCJCb29sZWFuIiwicHJldmlld01vZGVJZCIsIl9wcmV2aWV3TW9kZUlkIiwiX211dGFibGVDb29raWVzIiwiZW5hYmxlIiwiRXJyb3IiLCJzZXQiLCJuYW1lIiwiaHR0cE9ubHkiLCJzYW1lU2l0ZSIsInNlY3VyZSIsInBhdGgiLCJkaXNhYmxlIiwiZXhwaXJlcyIsIkRhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestAsyncStorageWrapper: () => (/* binding */ RequestAsyncStorageWrapper)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../web/spec-extension/adapters/request-cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\");\n/* harmony import */ var _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../web/spec-extension/cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./draft-mode-provider */ \"(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\");\n\n\n\n\n\nfunction getHeaders(headers) {\n  const cleaned = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers);\n  for (const param of _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.FLIGHT_PARAMETERS) {\n    cleaned.delete(param.toString().toLowerCase());\n  }\n  return _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.seal(cleaned);\n}\nfunction getCookies(headers) {\n  const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers));\n  return _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.RequestCookiesAdapter.seal(cookies);\n}\nfunction getMutableCookies(headers, onUpdateCookies) {\n  const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers));\n  return _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.MutableRequestCookiesAdapter.wrap(cookies, onUpdateCookies);\n}\nconst RequestAsyncStorageWrapper = {\n  /**\n  * Wrap the callback with the given store so it can access the underlying\n  * store using hooks.\n  *\n  * @param storage underlying storage object returned by the module\n  * @param context context to seed the store\n  * @param callback function to call within the scope of the context\n  * @returns the result returned by the callback\n  */\n  wrap(storage, {\n    req,\n    res,\n    renderOpts\n  }, callback) {\n    let previewProps = undefined;\n    if (renderOpts && \"previewProps\" in renderOpts) {\n      // TODO: investigate why previewProps isn't on RenderOpts\n      previewProps = renderOpts.previewProps;\n    }\n    function defaultOnUpdateCookies(cookies) {\n      if (res) {\n        res.setHeader(\"Set-Cookie\", cookies);\n      }\n    }\n    const cache = {};\n    const store = {\n      get headers() {\n        if (!cache.headers) {\n          // Seal the headers object that'll freeze out any methods that could\n          // mutate the underlying data.\n          cache.headers = getHeaders(req.headers);\n        }\n        return cache.headers;\n      },\n      get cookies() {\n        if (!cache.cookies) {\n          // Seal the cookies object that'll freeze out any methods that could\n          // mutate the underlying data.\n          cache.cookies = getCookies(req.headers);\n        }\n        return cache.cookies;\n      },\n      get mutableCookies() {\n        if (!cache.mutableCookies) {\n          cache.mutableCookies = getMutableCookies(req.headers, (renderOpts == null ? void 0 : renderOpts.onUpdateCookies) || (res ? defaultOnUpdateCookies : undefined));\n        }\n        return cache.mutableCookies;\n      },\n      get draftMode() {\n        if (!cache.draftMode) {\n          cache.draftMode = new _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__.DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\n        }\n        return cache.draftMode;\n      },\n      reactLoadableManifest: (renderOpts == null ? void 0 : renderOpts.reactLoadableManifest) || {},\n      assetPrefix: (renderOpts == null ? void 0 : renderOpts.assetPrefix) || \"\"\n    };\n    return storage.run(store, callback, store);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvcmVxdWVzdC1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStFO0FBQ1A7QUFDNkM7QUFDdEQ7QUFDTDtBQUMxRCxTQUFTTSxVQUFVQSxDQUFDQyxPQUFPLEVBQUU7RUFDekIsTUFBTUMsT0FBTyxHQUFHUCxnRkFBYyxDQUFDUSxJQUFJLENBQUNGLE9BQU8sQ0FBQztFQUM1QyxLQUFLLE1BQU1HLEtBQUssSUFBSVYsb0ZBQWlCLEVBQUM7SUFDbENRLE9BQU8sQ0FBQ0csTUFBTSxDQUFDRCxLQUFLLENBQUNFLFFBQVEsQ0FBQyxDQUFDLENBQUNDLFdBQVcsQ0FBQyxDQUFDLENBQUM7RUFDbEQ7RUFDQSxPQUFPWixnRkFBYyxDQUFDYSxJQUFJLENBQUNOLE9BQU8sQ0FBQztBQUN2QztBQUNBLFNBQVNPLFVBQVVBLENBQUNSLE9BQU8sRUFBRTtFQUN6QixNQUFNUyxPQUFPLEdBQUcsSUFBSVosdUVBQWMsQ0FBQ0gsZ0ZBQWMsQ0FBQ1EsSUFBSSxDQUFDRixPQUFPLENBQUMsQ0FBQztFQUNoRSxPQUFPSiwrRkFBcUIsQ0FBQ1csSUFBSSxDQUFDRSxPQUFPLENBQUM7QUFDOUM7QUFDQSxTQUFTQyxpQkFBaUJBLENBQUNWLE9BQU8sRUFBRVcsZUFBZSxFQUFFO0VBQ2pELE1BQU1GLE9BQU8sR0FBRyxJQUFJWix1RUFBYyxDQUFDSCxnRkFBYyxDQUFDUSxJQUFJLENBQUNGLE9BQU8sQ0FBQyxDQUFDO0VBQ2hFLE9BQU9MLHNHQUE0QixDQUFDaUIsSUFBSSxDQUFDSCxPQUFPLEVBQUVFLGVBQWUsQ0FBQztBQUN0RTtBQUNPLE1BQU1FLDBCQUEwQixHQUFHO0VBQ3RDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUFNRCxJQUFJQSxDQUFFRSxPQUFPLEVBQUU7SUFBRUMsR0FBRztJQUFFQyxHQUFHO0lBQUVDO0VBQVcsQ0FBQyxFQUFFQyxRQUFRLEVBQUU7SUFDakQsSUFBSUMsWUFBWSxHQUFHQyxTQUFTO0lBQzVCLElBQUlILFVBQVUsSUFBSSxjQUFjLElBQUlBLFVBQVUsRUFBRTtNQUM1QztNQUNBRSxZQUFZLEdBQUdGLFVBQVUsQ0FBQ0UsWUFBWTtJQUMxQztJQUNBLFNBQVNFLHNCQUFzQkEsQ0FBQ1osT0FBTyxFQUFFO01BQ3JDLElBQUlPLEdBQUcsRUFBRTtRQUNMQSxHQUFHLENBQUNNLFNBQVMsQ0FBQyxZQUFZLEVBQUViLE9BQU8sQ0FBQztNQUN4QztJQUNKO0lBQ0EsTUFBTWMsS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNoQixNQUFNQyxLQUFLLEdBQUc7TUFDVixJQUFJeEIsT0FBT0EsQ0FBQSxFQUFJO1FBQ1gsSUFBSSxDQUFDdUIsS0FBSyxDQUFDdkIsT0FBTyxFQUFFO1VBQ2hCO1VBQ0E7VUFDQXVCLEtBQUssQ0FBQ3ZCLE9BQU8sR0FBR0QsVUFBVSxDQUFDZ0IsR0FBRyxDQUFDZixPQUFPLENBQUM7UUFDM0M7UUFDQSxPQUFPdUIsS0FBSyxDQUFDdkIsT0FBTztNQUN4QixDQUFDO01BQ0QsSUFBSVMsT0FBT0EsQ0FBQSxFQUFJO1FBQ1gsSUFBSSxDQUFDYyxLQUFLLENBQUNkLE9BQU8sRUFBRTtVQUNoQjtVQUNBO1VBQ0FjLEtBQUssQ0FBQ2QsT0FBTyxHQUFHRCxVQUFVLENBQUNPLEdBQUcsQ0FBQ2YsT0FBTyxDQUFDO1FBQzNDO1FBQ0EsT0FBT3VCLEtBQUssQ0FBQ2QsT0FBTztNQUN4QixDQUFDO01BQ0QsSUFBSWdCLGNBQWNBLENBQUEsRUFBSTtRQUNsQixJQUFJLENBQUNGLEtBQUssQ0FBQ0UsY0FBYyxFQUFFO1VBQ3ZCRixLQUFLLENBQUNFLGNBQWMsR0FBR2YsaUJBQWlCLENBQUNLLEdBQUcsQ0FBQ2YsT0FBTyxFQUFFLENBQUNpQixVQUFVLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHQSxVQUFVLENBQUNOLGVBQWUsTUFBTUssR0FBRyxHQUFHSyxzQkFBc0IsR0FBR0QsU0FBUyxDQUFDLENBQUM7UUFDbks7UUFDQSxPQUFPRyxLQUFLLENBQUNFLGNBQWM7TUFDL0IsQ0FBQztNQUNELElBQUlDLFNBQVNBLENBQUEsRUFBSTtRQUNiLElBQUksQ0FBQ0gsS0FBSyxDQUFDRyxTQUFTLEVBQUU7VUFDbEJILEtBQUssQ0FBQ0csU0FBUyxHQUFHLElBQUk1QixtRUFBaUIsQ0FBQ3FCLFlBQVksRUFBRUosR0FBRyxFQUFFLElBQUksQ0FBQ04sT0FBTyxFQUFFLElBQUksQ0FBQ2dCLGNBQWMsQ0FBQztRQUNqRztRQUNBLE9BQU9GLEtBQUssQ0FBQ0csU0FBUztNQUMxQixDQUFDO01BQ0RDLHFCQUFxQixFQUFFLENBQUNWLFVBQVUsSUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUdBLFVBQVUsQ0FBQ1UscUJBQXFCLEtBQUssQ0FBQyxDQUFDO01BQzdGQyxXQUFXLEVBQUUsQ0FBQ1gsVUFBVSxJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsR0FBR0EsVUFBVSxDQUFDVyxXQUFXLEtBQUs7SUFDM0UsQ0FBQztJQUNELE9BQU9kLE9BQU8sQ0FBQ2UsR0FBRyxDQUFDTCxLQUFLLEVBQUVOLFFBQVEsRUFBRU0sS0FBSyxDQUFDO0VBQzlDO0FBQ0osQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvYXN5bmMtc3RvcmFnZS9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2Utd3JhcHBlci5qcz9jNjUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZMSUdIVF9QQVJBTUVURVJTIH0gZnJvbSBcIi4uLy4uL2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVyc1wiO1xuaW1wb3J0IHsgSGVhZGVyc0FkYXB0ZXIgfSBmcm9tIFwiLi4vd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL2hlYWRlcnNcIjtcbmltcG9ydCB7IE11dGFibGVSZXF1ZXN0Q29va2llc0FkYXB0ZXIsIFJlcXVlc3RDb29raWVzQWRhcHRlciB9IGZyb20gXCIuLi93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVxdWVzdC1jb29raWVzXCI7XG5pbXBvcnQgeyBSZXF1ZXN0Q29va2llcyB9IGZyb20gXCIuLi93ZWIvc3BlYy1leHRlbnNpb24vY29va2llc1wiO1xuaW1wb3J0IHsgRHJhZnRNb2RlUHJvdmlkZXIgfSBmcm9tIFwiLi9kcmFmdC1tb2RlLXByb3ZpZGVyXCI7XG5mdW5jdGlvbiBnZXRIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICBjb25zdCBjbGVhbmVkID0gSGVhZGVyc0FkYXB0ZXIuZnJvbShoZWFkZXJzKTtcbiAgICBmb3IgKGNvbnN0IHBhcmFtIG9mIEZMSUdIVF9QQVJBTUVURVJTKXtcbiAgICAgICAgY2xlYW5lZC5kZWxldGUocGFyYW0udG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKTtcbiAgICB9XG4gICAgcmV0dXJuIEhlYWRlcnNBZGFwdGVyLnNlYWwoY2xlYW5lZCk7XG59XG5mdW5jdGlvbiBnZXRDb29raWVzKGhlYWRlcnMpIHtcbiAgICBjb25zdCBjb29raWVzID0gbmV3IFJlcXVlc3RDb29raWVzKEhlYWRlcnNBZGFwdGVyLmZyb20oaGVhZGVycykpO1xuICAgIHJldHVybiBSZXF1ZXN0Q29va2llc0FkYXB0ZXIuc2VhbChjb29raWVzKTtcbn1cbmZ1bmN0aW9uIGdldE11dGFibGVDb29raWVzKGhlYWRlcnMsIG9uVXBkYXRlQ29va2llcykge1xuICAgIGNvbnN0IGNvb2tpZXMgPSBuZXcgUmVxdWVzdENvb2tpZXMoSGVhZGVyc0FkYXB0ZXIuZnJvbShoZWFkZXJzKSk7XG4gICAgcmV0dXJuIE11dGFibGVSZXF1ZXN0Q29va2llc0FkYXB0ZXIud3JhcChjb29raWVzLCBvblVwZGF0ZUNvb2tpZXMpO1xufVxuZXhwb3J0IGNvbnN0IFJlcXVlc3RBc3luY1N0b3JhZ2VXcmFwcGVyID0ge1xuICAgIC8qKlxuICAgKiBXcmFwIHRoZSBjYWxsYmFjayB3aXRoIHRoZSBnaXZlbiBzdG9yZSBzbyBpdCBjYW4gYWNjZXNzIHRoZSB1bmRlcmx5aW5nXG4gICAqIHN0b3JlIHVzaW5nIGhvb2tzLlxuICAgKlxuICAgKiBAcGFyYW0gc3RvcmFnZSB1bmRlcmx5aW5nIHN0b3JhZ2Ugb2JqZWN0IHJldHVybmVkIGJ5IHRoZSBtb2R1bGVcbiAgICogQHBhcmFtIGNvbnRleHQgY29udGV4dCB0byBzZWVkIHRoZSBzdG9yZVxuICAgKiBAcGFyYW0gY2FsbGJhY2sgZnVuY3Rpb24gdG8gY2FsbCB3aXRoaW4gdGhlIHNjb3BlIG9mIHRoZSBjb250ZXh0XG4gICAqIEByZXR1cm5zIHRoZSByZXN1bHQgcmV0dXJuZWQgYnkgdGhlIGNhbGxiYWNrXG4gICAqLyB3cmFwIChzdG9yYWdlLCB7IHJlcSwgcmVzLCByZW5kZXJPcHRzIH0sIGNhbGxiYWNrKSB7XG4gICAgICAgIGxldCBwcmV2aWV3UHJvcHMgPSB1bmRlZmluZWQ7XG4gICAgICAgIGlmIChyZW5kZXJPcHRzICYmIFwicHJldmlld1Byb3BzXCIgaW4gcmVuZGVyT3B0cykge1xuICAgICAgICAgICAgLy8gVE9ETzogaW52ZXN0aWdhdGUgd2h5IHByZXZpZXdQcm9wcyBpc24ndCBvbiBSZW5kZXJPcHRzXG4gICAgICAgICAgICBwcmV2aWV3UHJvcHMgPSByZW5kZXJPcHRzLnByZXZpZXdQcm9wcztcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBkZWZhdWx0T25VcGRhdGVDb29raWVzKGNvb2tpZXMpIHtcbiAgICAgICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICAgICAgICByZXMuc2V0SGVhZGVyKFwiU2V0LUNvb2tpZVwiLCBjb29raWVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjYWNoZSA9IHt9O1xuICAgICAgICBjb25zdCBzdG9yZSA9IHtcbiAgICAgICAgICAgIGdldCBoZWFkZXJzICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNhY2hlLmhlYWRlcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2VhbCB0aGUgaGVhZGVycyBvYmplY3QgdGhhdCdsbCBmcmVlemUgb3V0IGFueSBtZXRob2RzIHRoYXQgY291bGRcbiAgICAgICAgICAgICAgICAgICAgLy8gbXV0YXRlIHRoZSB1bmRlcmx5aW5nIGRhdGEuXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlLmhlYWRlcnMgPSBnZXRIZWFkZXJzKHJlcS5oZWFkZXJzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlLmhlYWRlcnM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNvb2tpZXMgKCkge1xuICAgICAgICAgICAgICAgIGlmICghY2FjaGUuY29va2llcykge1xuICAgICAgICAgICAgICAgICAgICAvLyBTZWFsIHRoZSBjb29raWVzIG9iamVjdCB0aGF0J2xsIGZyZWV6ZSBvdXQgYW55IG1ldGhvZHMgdGhhdCBjb3VsZFxuICAgICAgICAgICAgICAgICAgICAvLyBtdXRhdGUgdGhlIHVuZGVybHlpbmcgZGF0YS5cbiAgICAgICAgICAgICAgICAgICAgY2FjaGUuY29va2llcyA9IGdldENvb2tpZXMocmVxLmhlYWRlcnMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuY29va2llcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgbXV0YWJsZUNvb2tpZXMgKCkge1xuICAgICAgICAgICAgICAgIGlmICghY2FjaGUubXV0YWJsZUNvb2tpZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FjaGUubXV0YWJsZUNvb2tpZXMgPSBnZXRNdXRhYmxlQ29va2llcyhyZXEuaGVhZGVycywgKHJlbmRlck9wdHMgPT0gbnVsbCA/IHZvaWQgMCA6IHJlbmRlck9wdHMub25VcGRhdGVDb29raWVzKSB8fCAocmVzID8gZGVmYXVsdE9uVXBkYXRlQ29va2llcyA6IHVuZGVmaW5lZCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUubXV0YWJsZUNvb2tpZXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGRyYWZ0TW9kZSAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjYWNoZS5kcmFmdE1vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FjaGUuZHJhZnRNb2RlID0gbmV3IERyYWZ0TW9kZVByb3ZpZGVyKHByZXZpZXdQcm9wcywgcmVxLCB0aGlzLmNvb2tpZXMsIHRoaXMubXV0YWJsZUNvb2tpZXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuZHJhZnRNb2RlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlYWN0TG9hZGFibGVNYW5pZmVzdDogKHJlbmRlck9wdHMgPT0gbnVsbCA/IHZvaWQgMCA6IHJlbmRlck9wdHMucmVhY3RMb2FkYWJsZU1hbmlmZXN0KSB8fCB7fSxcbiAgICAgICAgICAgIGFzc2V0UHJlZml4OiAocmVuZGVyT3B0cyA9PSBudWxsID8gdm9pZCAwIDogcmVuZGVyT3B0cy5hc3NldFByZWZpeCkgfHwgXCJcIlxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gc3RvcmFnZS5ydW4oc3RvcmUsIGNhbGxiYWNrLCBzdG9yZSk7XG4gICAgfVxufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanMubWFwIl0sIm5hbWVzIjpbIkZMSUdIVF9QQVJBTUVURVJTIiwiSGVhZGVyc0FkYXB0ZXIiLCJNdXRhYmxlUmVxdWVzdENvb2tpZXNBZGFwdGVyIiwiUmVxdWVzdENvb2tpZXNBZGFwdGVyIiwiUmVxdWVzdENvb2tpZXMiLCJEcmFmdE1vZGVQcm92aWRlciIsImdldEhlYWRlcnMiLCJoZWFkZXJzIiwiY2xlYW5lZCIsImZyb20iLCJwYXJhbSIsImRlbGV0ZSIsInRvU3RyaW5nIiwidG9Mb3dlckNhc2UiLCJzZWFsIiwiZ2V0Q29va2llcyIsImNvb2tpZXMiLCJnZXRNdXRhYmxlQ29va2llcyIsIm9uVXBkYXRlQ29va2llcyIsIndyYXAiLCJSZXF1ZXN0QXN5bmNTdG9yYWdlV3JhcHBlciIsInN0b3JhZ2UiLCJyZXEiLCJyZXMiLCJyZW5kZXJPcHRzIiwiY2FsbGJhY2siLCJwcmV2aWV3UHJvcHMiLCJ1bmRlZmluZWQiLCJkZWZhdWx0T25VcGRhdGVDb29raWVzIiwic2V0SGVhZGVyIiwiY2FjaGUiLCJzdG9yZSIsIm11dGFibGVDb29raWVzIiwiZHJhZnRNb2RlIiwicmVhY3RMb2FkYWJsZU1hbmlmZXN0IiwiYXNzZXRQcmVmaXgiLCJydW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/internal-utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/internal-utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stripInternalHeaders: () => (/* binding */ stripInternalHeaders),\n/* harmony export */   stripInternalQueries: () => (/* binding */ stripInternalQueries),\n/* harmony export */   stripInternalSearchParams: () => (/* binding */ stripInternalSearchParams)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _shared_lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/lib/constants */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/constants.js\");\n\n\nconst INTERNAL_QUERY_NAMES = [\"__nextFallback\", \"__nextLocale\", \"__nextInferredLocaleFromDefault\", \"__nextDefaultLocale\", \"__nextIsNotFound\", _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.NEXT_RSC_UNION_QUERY];\nconst EDGE_EXTENDED_INTERNAL_QUERY_NAMES = [\"__nextDataReq\"];\nfunction stripInternalQueries(query) {\n  for (const name of INTERNAL_QUERY_NAMES) {\n    delete query[name];\n  }\n}\nfunction stripInternalSearchParams(url, isEdge) {\n  const isStringUrl = typeof url === \"string\";\n  const instance = isStringUrl ? new URL(url) : url;\n  for (const name of INTERNAL_QUERY_NAMES) {\n    instance.searchParams.delete(name);\n  }\n  if (isEdge) {\n    for (const name of EDGE_EXTENDED_INTERNAL_QUERY_NAMES) {\n      instance.searchParams.delete(name);\n    }\n  }\n  return isStringUrl ? instance.toString() : instance;\n}\n/**\n * Strip internal headers from the request headers.\n *\n * @param headers the headers to strip of internal headers\n */\nfunction stripInternalHeaders(headers) {\n  for (const key of _shared_lib_constants__WEBPACK_IMPORTED_MODULE_1__.INTERNAL_HEADERS) {\n    delete headers[key];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2ludGVybmFsLXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStFO0FBQ3BCO0FBQzNELE1BQU1FLG9CQUFvQixHQUFHLENBQ3pCLGdCQUFnQixFQUNoQixjQUFjLEVBQ2QsaUNBQWlDLEVBQ2pDLHFCQUFxQixFQUNyQixrQkFBa0IsRUFDbEJGLHVGQUFvQixDQUN2QjtBQUNELE1BQU1HLGtDQUFrQyxHQUFHLENBQ3ZDLGVBQWUsQ0FDbEI7QUFDTSxTQUFTQyxvQkFBb0JBLENBQUNDLEtBQUssRUFBRTtFQUN4QyxLQUFLLE1BQU1DLElBQUksSUFBSUosb0JBQW9CLEVBQUM7SUFDcEMsT0FBT0csS0FBSyxDQUFDQyxJQUFJLENBQUM7RUFDdEI7QUFDSjtBQUNPLFNBQVNDLHlCQUF5QkEsQ0FBQ0MsR0FBRyxFQUFFQyxNQUFNLEVBQUU7RUFDbkQsTUFBTUMsV0FBVyxHQUFHLE9BQU9GLEdBQUcsS0FBSyxRQUFRO0VBQzNDLE1BQU1HLFFBQVEsR0FBR0QsV0FBVyxHQUFHLElBQUlFLEdBQUcsQ0FBQ0osR0FBRyxDQUFDLEdBQUdBLEdBQUc7RUFDakQsS0FBSyxNQUFNRixJQUFJLElBQUlKLG9CQUFvQixFQUFDO0lBQ3BDUyxRQUFRLENBQUNFLFlBQVksQ0FBQ0MsTUFBTSxDQUFDUixJQUFJLENBQUM7RUFDdEM7RUFDQSxJQUFJRyxNQUFNLEVBQUU7SUFDUixLQUFLLE1BQU1ILElBQUksSUFBSUgsa0NBQWtDLEVBQUM7TUFDbERRLFFBQVEsQ0FBQ0UsWUFBWSxDQUFDQyxNQUFNLENBQUNSLElBQUksQ0FBQztJQUN0QztFQUNKO0VBQ0EsT0FBT0ksV0FBVyxHQUFHQyxRQUFRLENBQUNJLFFBQVEsQ0FBQyxDQUFDLEdBQUdKLFFBQVE7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQVcsU0FBU0ssb0JBQW9CQSxDQUFDQyxPQUFPLEVBQUU7RUFDOUMsS0FBSyxNQUFNQyxHQUFHLElBQUlqQixtRUFBZ0IsRUFBQztJQUMvQixPQUFPZ0IsT0FBTyxDQUFDQyxHQUFHLENBQUM7RUFDdkI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvaW50ZXJuYWwtdXRpbHMuanM/YjMyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBORVhUX1JTQ19VTklPTl9RVUVSWSB9IGZyb20gXCIuLi9jbGllbnQvY29tcG9uZW50cy9hcHAtcm91dGVyLWhlYWRlcnNcIjtcbmltcG9ydCB7IElOVEVSTkFMX0hFQURFUlMgfSBmcm9tIFwiLi4vc2hhcmVkL2xpYi9jb25zdGFudHNcIjtcbmNvbnN0IElOVEVSTkFMX1FVRVJZX05BTUVTID0gW1xuICAgIFwiX19uZXh0RmFsbGJhY2tcIixcbiAgICBcIl9fbmV4dExvY2FsZVwiLFxuICAgIFwiX19uZXh0SW5mZXJyZWRMb2NhbGVGcm9tRGVmYXVsdFwiLFxuICAgIFwiX19uZXh0RGVmYXVsdExvY2FsZVwiLFxuICAgIFwiX19uZXh0SXNOb3RGb3VuZFwiLFxuICAgIE5FWFRfUlNDX1VOSU9OX1FVRVJZXG5dO1xuY29uc3QgRURHRV9FWFRFTkRFRF9JTlRFUk5BTF9RVUVSWV9OQU1FUyA9IFtcbiAgICBcIl9fbmV4dERhdGFSZXFcIlxuXTtcbmV4cG9ydCBmdW5jdGlvbiBzdHJpcEludGVybmFsUXVlcmllcyhxdWVyeSkge1xuICAgIGZvciAoY29uc3QgbmFtZSBvZiBJTlRFUk5BTF9RVUVSWV9OQU1FUyl7XG4gICAgICAgIGRlbGV0ZSBxdWVyeVtuYW1lXTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc3RyaXBJbnRlcm5hbFNlYXJjaFBhcmFtcyh1cmwsIGlzRWRnZSkge1xuICAgIGNvbnN0IGlzU3RyaW5nVXJsID0gdHlwZW9mIHVybCA9PT0gXCJzdHJpbmdcIjtcbiAgICBjb25zdCBpbnN0YW5jZSA9IGlzU3RyaW5nVXJsID8gbmV3IFVSTCh1cmwpIDogdXJsO1xuICAgIGZvciAoY29uc3QgbmFtZSBvZiBJTlRFUk5BTF9RVUVSWV9OQU1FUyl7XG4gICAgICAgIGluc3RhbmNlLnNlYXJjaFBhcmFtcy5kZWxldGUobmFtZSk7XG4gICAgfVxuICAgIGlmIChpc0VkZ2UpIHtcbiAgICAgICAgZm9yIChjb25zdCBuYW1lIG9mIEVER0VfRVhURU5ERURfSU5URVJOQUxfUVVFUllfTkFNRVMpe1xuICAgICAgICAgICAgaW5zdGFuY2Uuc2VhcmNoUGFyYW1zLmRlbGV0ZShuYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaXNTdHJpbmdVcmwgPyBpbnN0YW5jZS50b1N0cmluZygpIDogaW5zdGFuY2U7XG59XG4vKipcbiAqIFN0cmlwIGludGVybmFsIGhlYWRlcnMgZnJvbSB0aGUgcmVxdWVzdCBoZWFkZXJzLlxuICpcbiAqIEBwYXJhbSBoZWFkZXJzIHRoZSBoZWFkZXJzIHRvIHN0cmlwIG9mIGludGVybmFsIGhlYWRlcnNcbiAqLyBleHBvcnQgZnVuY3Rpb24gc3RyaXBJbnRlcm5hbEhlYWRlcnMoaGVhZGVycykge1xuICAgIGZvciAoY29uc3Qga2V5IG9mIElOVEVSTkFMX0hFQURFUlMpe1xuICAgICAgICBkZWxldGUgaGVhZGVyc1trZXldO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJuYWwtdXRpbHMuanMubWFwIl0sIm5hbWVzIjpbIk5FWFRfUlNDX1VOSU9OX1FVRVJZIiwiSU5URVJOQUxfSEVBREVSUyIsIklOVEVSTkFMX1FVRVJZX05BTUVTIiwiRURHRV9FWFRFTkRFRF9JTlRFUk5BTF9RVUVSWV9OQU1FUyIsInN0cmlwSW50ZXJuYWxRdWVyaWVzIiwicXVlcnkiLCJuYW1lIiwic3RyaXBJbnRlcm5hbFNlYXJjaFBhcmFtcyIsInVybCIsImlzRWRnZSIsImlzU3RyaW5nVXJsIiwiaW5zdGFuY2UiLCJVUkwiLCJzZWFyY2hQYXJhbXMiLCJkZWxldGUiLCJ0b1N0cmluZyIsInN0cmlwSW50ZXJuYWxIZWFkZXJzIiwiaGVhZGVycyIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/internal-utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/lib/trace/constants.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppRenderSpan: () => (/* binding */ AppRenderSpan),\n/* harmony export */   AppRouteRouteHandlersSpan: () => (/* binding */ AppRouteRouteHandlersSpan),\n/* harmony export */   BaseServerSpan: () => (/* binding */ BaseServerSpan),\n/* harmony export */   LoadComponentsSpan: () => (/* binding */ LoadComponentsSpan),\n/* harmony export */   LogSpanAllowList: () => (/* binding */ LogSpanAllowList),\n/* harmony export */   MiddlewareSpan: () => (/* binding */ MiddlewareSpan),\n/* harmony export */   NextNodeServerSpan: () => (/* binding */ NextNodeServerSpan),\n/* harmony export */   NextServerSpan: () => (/* binding */ NextServerSpan),\n/* harmony export */   NextVanillaSpanAllowlist: () => (/* binding */ NextVanillaSpanAllowlist),\n/* harmony export */   NodeSpan: () => (/* binding */ NodeSpan),\n/* harmony export */   RenderSpan: () => (/* binding */ RenderSpan),\n/* harmony export */   ResolveMetadataSpan: () => (/* binding */ ResolveMetadataSpan),\n/* harmony export */   RouterSpan: () => (/* binding */ RouterSpan),\n/* harmony export */   StartServerSpan: () => (/* binding */ StartServerSpan)\n/* harmony export */ });\n/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */var BaseServerSpan;\n(function (BaseServerSpan) {\n  BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n  BaseServerSpan[\"run\"] = \"BaseServer.run\";\n  BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n  BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n  BaseServerSpan[\"render\"] = \"BaseServer.render\";\n  BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n  BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n  BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n  BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n  BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n  BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n  BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n})(BaseServerSpan || (BaseServerSpan = {}));\nvar LoadComponentsSpan;\n(function (LoadComponentsSpan) {\n  LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n  LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n})(LoadComponentsSpan || (LoadComponentsSpan = {}));\nvar NextServerSpan;\n(function (NextServerSpan) {\n  NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n  NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n  NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n  NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n})(NextServerSpan || (NextServerSpan = {}));\nvar NextNodeServerSpan;\n(function (NextNodeServerSpan) {\n  NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n  NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n  NextNodeServerSpan[\"createComponentTree\"] = \"NextNodeServer.createComponentTree\";\n  NextNodeServerSpan[\"clientComponentLoading\"] = \"NextNodeServer.clientComponentLoading\";\n  NextNodeServerSpan[\"getLayoutOrPageModule\"] = \"NextNodeServer.getLayoutOrPageModule\";\n  NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n  NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n  NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n  NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n  NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n  NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n  NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n  NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n  NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n  NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n  NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n  NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n  NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n  NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n  NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n  NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n  NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n  NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n  NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n  NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n  NextNodeServerSpan[\"startResponse\"] = \"NextNodeServer.startResponse\";\n  // nested inner span, does not require parent scope name\n  NextNodeServerSpan[\"route\"] = \"route\";\n  NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n  NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n  NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\n})(NextNodeServerSpan || (NextNodeServerSpan = {}));\nvar StartServerSpan;\n(function (StartServerSpan) {\n  StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n})(StartServerSpan || (StartServerSpan = {}));\nvar RenderSpan;\n(function (RenderSpan) {\n  RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n  RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n  RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n  RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n  RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n})(RenderSpan || (RenderSpan = {}));\nvar AppRenderSpan;\n(function (AppRenderSpan) {\n  AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n  AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n  AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n  AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n})(AppRenderSpan || (AppRenderSpan = {}));\nvar RouterSpan;\n(function (RouterSpan) {\n  RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n})(RouterSpan || (RouterSpan = {}));\nvar NodeSpan;\n(function (NodeSpan) {\n  NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n})(NodeSpan || (NodeSpan = {}));\nvar AppRouteRouteHandlersSpan;\n(function (AppRouteRouteHandlersSpan) {\n  AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n})(AppRouteRouteHandlersSpan || (AppRouteRouteHandlersSpan = {}));\nvar ResolveMetadataSpan;\n(function (ResolveMetadataSpan) {\n  ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n  ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\n})(ResolveMetadataSpan || (ResolveMetadataSpan = {}));\nvar MiddlewareSpan;\n(function (MiddlewareSpan) {\n  MiddlewareSpan[\"execute\"] = \"Middleware.execute\";\n})(MiddlewareSpan || (MiddlewareSpan = {}));\n// This list is used to filter out spans that are not relevant to the user\nconst NextVanillaSpanAllowlist = [\"Middleware.execute\", \"BaseServer.handleRequest\", \"Render.getServerSideProps\", \"Render.getStaticProps\", \"AppRender.fetch\", \"AppRender.getBodyResult\", \"Render.renderDocument\", \"Node.runHandler\", \"AppRouteRouteHandlers.runHandler\", \"ResolveMetadata.generateMetadata\", \"ResolveMetadata.generateViewport\", \"NextNodeServer.createComponentTree\", \"NextNodeServer.findPageComponents\", \"NextNodeServer.getLayoutOrPageModule\", \"NextNodeServer.startResponse\", \"NextNodeServer.clientComponentLoading\"];\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nconst LogSpanAllowList = [\"NextNodeServer.findPageComponents\", \"NextNodeServer.createComponentTree\", \"NextNodeServer.clientComponentLoading\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/lib/trace/tracer.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpanKind: () => (/* binding */ SpanKind),\n/* harmony export */   SpanStatusCode: () => (/* binding */ SpanStatusCode),\n/* harmony export */   getTracer: () => (/* binding */ getTracer)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (true) {\n  api = __webpack_require__(/*! @opentelemetry/api */ \"(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\");\n} else {}\nconst {\n  context,\n  propagation,\n  trace,\n  SpanStatusCode,\n  SpanKind,\n  ROOT_CONTEXT\n} = api;\nconst isPromise = p => {\n  return p !== null && typeof p === \"object\" && typeof p.then === \"function\";\n};\nconst closeSpanWithError = (span, error) => {\n  if ((error == null ? void 0 : error.bubble) === true) {\n    span.setAttribute(\"next.bubble\", true);\n  } else {\n    if (error) {\n      span.recordException(error);\n    }\n    span.setStatus({\n      code: SpanStatusCode.ERROR,\n      message: error == null ? void 0 : error.message\n    });\n  }\n  span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */\nconst rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey(\"next.rootSpanId\");\nlet lastSpanId = 0;\nconst getSpanId = () => lastSpanId++;\nclass NextTracerImpl {\n  /**\n  * Returns an instance to the trace with configured name.\n  * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n  * This should be lazily evaluated.\n  */\n  getTracerInstance() {\n    return trace.getTracer(\"next.js\", \"0.0.1\");\n  }\n  getContext() {\n    return context;\n  }\n  getActiveScopeSpan() {\n    return trace.getSpan(context == null ? void 0 : context.active());\n  }\n  withPropagatedContext(carrier, fn, getter) {\n    const activeContext = context.active();\n    if (trace.getSpanContext(activeContext)) {\n      // Active span is already set, too late to propagate.\n      return fn();\n    }\n    const remoteContext = propagation.extract(activeContext, carrier, getter);\n    return context.with(remoteContext, fn);\n  }\n  trace(...args) {\n    var _trace_getSpanContext;\n    const [type, fnOrOptions, fnOrEmpty] = args;\n    // coerce options form overload\n    const {\n      fn,\n      options\n    } = typeof fnOrOptions === \"function\" ? {\n      fn: fnOrOptions,\n      options: {}\n    } : {\n      fn: fnOrEmpty,\n      options: _objectSpread({}, fnOrOptions)\n    };\n    const spanName = options.spanName ?? type;\n    if (!_constants__WEBPACK_IMPORTED_MODULE_0__.NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== \"1\" || options.hideSpan) {\n      return fn();\n    }\n    // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n    let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n    let isRootSpan = false;\n    if (!spanContext) {\n      spanContext = (context == null ? void 0 : context.active()) ?? ROOT_CONTEXT;\n      isRootSpan = true;\n    } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {\n      isRootSpan = true;\n    }\n    const spanId = getSpanId();\n    options.attributes = _objectSpread({\n      \"next.span_name\": spanName,\n      \"next.span_type\": type\n    }, options.attributes);\n    return context.with(spanContext.setValue(rootSpanIdKey, spanId), () => this.getTracerInstance().startActiveSpan(spanName, options, span => {\n      const startTime = \"performance\" in globalThis ? globalThis.performance.now() : undefined;\n      const onCleanup = () => {\n        rootSpanAttributesStore.delete(spanId);\n        if (startTime && process.env.NEXT_OTEL_PERFORMANCE_PREFIX && _constants__WEBPACK_IMPORTED_MODULE_0__.LogSpanAllowList.includes(type || \"\")) {\n          performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(type.split(\".\").pop() || \"\").replace(/[A-Z]/g, match => \"-\" + match.toLowerCase())}`, {\n            start: startTime,\n            end: performance.now()\n          });\n        }\n      };\n      if (isRootSpan) {\n        rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n      }\n      try {\n        if (fn.length > 1) {\n          return fn(span, err => closeSpanWithError(span, err));\n        }\n        const result = fn(span);\n        if (isPromise(result)) {\n          // If there's error make sure it throws\n          return result.then(res => {\n            span.end();\n            // Need to pass down the promise result,\n            // it could be react stream response with error { error, stream }\n            return res;\n          }).catch(err => {\n            closeSpanWithError(span, err);\n            throw err;\n          }).finally(onCleanup);\n        } else {\n          span.end();\n          onCleanup();\n        }\n        return result;\n      } catch (err) {\n        closeSpanWithError(span, err);\n        onCleanup();\n        throw err;\n      }\n    }));\n  }\n  wrap(...args) {\n    const tracer = this;\n    const [name, options, fn] = args.length === 3 ? args : [args[0], {}, args[1]];\n    if (!_constants__WEBPACK_IMPORTED_MODULE_0__.NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== \"1\") {\n      return fn;\n    }\n    return function () {\n      let optionsObj = options;\n      if (typeof optionsObj === \"function\" && typeof fn === \"function\") {\n        optionsObj = optionsObj.apply(this, arguments);\n      }\n      const lastArgId = arguments.length - 1;\n      const cb = arguments[lastArgId];\n      if (typeof cb === \"function\") {\n        const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n        return tracer.trace(name, optionsObj, (_span, done) => {\n          arguments[lastArgId] = function (err) {\n            done == null ? void 0 : done(err);\n            return scopeBoundCb.apply(this, arguments);\n          };\n          return fn.apply(this, arguments);\n        });\n      } else {\n        return tracer.trace(name, optionsObj, () => fn.apply(this, arguments));\n      }\n    };\n  }\n  startSpan(...args) {\n    const [type, options] = args;\n    const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n    return this.getTracerInstance().startSpan(type, options, spanContext);\n  }\n  getSpanContext(parentSpan) {\n    const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n    return spanContext;\n  }\n  getRootSpanAttributes() {\n    const spanId = context.active().getValue(rootSpanIdKey);\n    return rootSpanAttributesStore.get(spanId);\n  }\n}\nconst getTracer = (() => {\n  const tracer = new NextTracerImpl();\n  return () => tracer;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/adapter.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/adapter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextRequestHint: () => (/* binding */ NextRequestHint),\n/* harmony export */   adapter: () => (/* binding */ adapter)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./spec-extension/fetch-event */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\");\n/* harmony import */ var _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./spec-extension/request */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\");\n/* harmony import */ var _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\");\n/* harmony import */ var _shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/lib/router/utils/relativize-url */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\");\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _internal_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../internal-utils */ \"(middleware)/./node_modules/next/dist/esm/server/internal-utils.js\");\n/* harmony import */ var _shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared/lib/router/utils/app-paths */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\");\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./globals */ \"(middleware)/./node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var _async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../async-storage/request-async-storage-wrapper */ \"(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\");\n/* harmony import */ var _client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../client/components/request-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n/* harmony import */ var _lib_trace_tracer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../lib/trace/tracer */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js\");\n/* harmony import */ var _lib_trace_constants__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../lib/trace/constants */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass NextRequestHint extends _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__.NextRequest {\n  constructor(params) {\n    super(params.input, params.init);\n    this.sourcePage = params.page;\n  }\n  get request() {\n    throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n      page: this.sourcePage\n    });\n  }\n  respondWith() {\n    throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n      page: this.sourcePage\n    });\n  }\n  waitUntil() {\n    throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n      page: this.sourcePage\n    });\n  }\n}\nconst headersGetter = {\n  keys: headers => Array.from(headers.keys()),\n  get: (headers, key) => headers.get(key) ?? undefined\n};\nlet propagator = (request, fn) => {\n  const tracer = (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_14__.getTracer)();\n  return tracer.withPropagatedContext(request.headers, fn, headersGetter);\n};\nlet testApisIntercepted = false;\nfunction ensureTestApisIntercepted() {\n  if (!testApisIntercepted) {\n    testApisIntercepted = true;\n    if (process.env.NEXT_PRIVATE_TEST_PROXY === \"true\") {\n      const {\n        interceptTestApis,\n        wrapRequestHandler\n      } = __webpack_require__(/*! next/dist/experimental/testmode/server-edge */ \"(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js\");\n      interceptTestApis();\n      propagator = wrapRequestHandler(propagator);\n    }\n  }\n}\nasync function adapter(params) {\n  ensureTestApisIntercepted();\n  await (0,_globals__WEBPACK_IMPORTED_MODULE_11__.ensureInstrumentationRegistered)();\n  // TODO-APP: use explicit marker for this\n  const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n  const prerenderManifest = typeof self.__PRERENDER_MANIFEST === \"string\" ? JSON.parse(self.__PRERENDER_MANIFEST) : undefined;\n  params.request.url = (0,_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__.normalizeRscURL)(params.request.url);\n  const requestUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(params.request.url, {\n    headers: params.request.headers,\n    nextConfig: params.request.nextConfig\n  });\n  // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n  // Instead we use the keys before iteration.\n  const keys = [...requestUrl.searchParams.keys()];\n  for (const key of keys) {\n    const value = requestUrl.searchParams.getAll(key);\n    if (key !== _lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX && key.startsWith(_lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX)) {\n      const normalizedKey = key.substring(_lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX.length);\n      requestUrl.searchParams.delete(normalizedKey);\n      for (const val of value) {\n        requestUrl.searchParams.append(normalizedKey, val);\n      }\n      requestUrl.searchParams.delete(key);\n    }\n  }\n  // Ensure users only see page requests, never data requests.\n  const buildId = requestUrl.buildId;\n  requestUrl.buildId = \"\";\n  const isDataReq = params.request.headers[\"x-nextjs-data\"];\n  if (isDataReq && requestUrl.pathname === \"/index\") {\n    requestUrl.pathname = \"/\";\n  }\n  const requestHeaders = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.fromNodeOutgoingHttpHeaders)(params.request.headers);\n  const flightHeaders = new Map();\n  // Parameters should only be stripped for middleware\n  if (!isEdgeRendering) {\n    for (const param of _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__.FLIGHT_PARAMETERS) {\n      const key = param.toString().toLowerCase();\n      const value = requestHeaders.get(key);\n      if (value) {\n        flightHeaders.set(key, requestHeaders.get(key));\n        requestHeaders.delete(key);\n      }\n    }\n  }\n  const normalizeUrl =  false ? 0 : requestUrl;\n  const request = new NextRequestHint({\n    page: params.page,\n    // Strip internal query parameters off the request.\n    input: (0,_internal_utils__WEBPACK_IMPORTED_MODULE_7__.stripInternalSearchParams)(normalizeUrl, true).toString(),\n    init: {\n      body: params.request.body,\n      geo: params.request.geo,\n      headers: requestHeaders,\n      ip: params.request.ip,\n      method: params.request.method,\n      nextConfig: params.request.nextConfig,\n      signal: params.request.signal\n    }\n  });\n  /**\n  * This allows to identify the request as a data request. The user doesn't\n  * need to know about this property neither use it. We add it for testing\n  * purposes.\n  */\n  if (isDataReq) {\n    Object.defineProperty(request, \"__isData\", {\n      enumerable: false,\n      value: true\n    });\n  }\n  if (!globalThis.__incrementalCache && params.IncrementalCache) {\n    globalThis.__incrementalCache = new params.IncrementalCache({\n      appDir: true,\n      fetchCache: true,\n      minimalMode: false,\n      fetchCacheKeyPrefix: \"\",\n      dev: true,\n      requestHeaders: params.request.headers,\n      requestProtocol: \"https\",\n      getPrerenderManifest: () => {\n        return {\n          version: -1,\n          routes: {},\n          dynamicRoutes: {},\n          notFoundRoutes: [],\n          preview: {\n            previewModeId: \"development-id\"\n          }\n        };\n      }\n    });\n  }\n  const event = new _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.NextFetchEvent({\n    request,\n    page: params.page\n  });\n  let response;\n  let cookiesFromResponse;\n  response = await propagator(request, () => {\n    // we only care to make async storage available for middleware\n    const isMiddleware = params.page === \"/middleware\" || params.page === \"/src/middleware\";\n    if (isMiddleware) {\n      return (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_14__.getTracer)().trace(_lib_trace_constants__WEBPACK_IMPORTED_MODULE_15__.MiddlewareSpan.execute, {\n        spanName: `middleware ${request.method} ${request.nextUrl.pathname}`,\n        attributes: {\n          \"http.target\": request.nextUrl.pathname,\n          \"http.method\": request.method\n        }\n      }, () => _async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_12__.RequestAsyncStorageWrapper.wrap(_client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_13__.requestAsyncStorage, {\n        req: request,\n        renderOpts: {\n          onUpdateCookies: cookies => {\n            cookiesFromResponse = cookies;\n          },\n          // @ts-expect-error: TODO: investigate why previewProps isn't on RenderOpts\n          previewProps: (prerenderManifest == null ? void 0 : prerenderManifest.preview) || {\n            previewModeId: \"development-id\",\n            previewModeEncryptionKey: \"\",\n            previewModeSigningKey: \"\"\n          }\n        }\n      }, () => params.handler(request, event)));\n    }\n    return params.handler(request, event);\n  });\n  // check if response is a Response object\n  if (response && !(response instanceof Response)) {\n    throw new TypeError(\"Expected an instance of Response to be returned\");\n  }\n  if (response && cookiesFromResponse) {\n    response.headers.set(\"set-cookie\", cookiesFromResponse);\n  }\n  /**\n  * For rewrites we must always include the locale in the final pathname\n  * so we re-create the NextURL forcing it to include it when the it is\n  * an internal rewrite. Also we make sure the outgoing rewrite URL is\n  * a data URL if the request was a data request.\n  */\n  const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n  if (response && rewrite) {\n    const rewriteUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(rewrite, {\n      forceLocale: true,\n      headers: params.request.headers,\n      nextConfig: params.request.nextConfig\n    });\n    if (true) {\n      if (rewriteUrl.host === request.nextUrl.host) {\n        rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n        response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n      }\n    }\n    /**\n    * When the request is a data request we must show if there was a rewrite\n    * with an internal header so the client knows which component to load\n    * from the data request.\n    */\n    const relativizedRewrite = (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(rewriteUrl), String(requestUrl));\n    if (isDataReq &&\n    // if the rewrite is external and external rewrite\n    // resolving config is enabled don't add this header\n    // so the upstream app can set it instead\n    !( false && 0)) {\n      response.headers.set(\"x-nextjs-rewrite\", relativizedRewrite);\n    }\n  }\n  /**\n  * For redirects we will not include the locale in case when it is the\n  * default and we must also make sure the outgoing URL is a data one if\n  * the incoming request was a data request.\n  */\n  const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n  if (response && redirect && !isEdgeRendering) {\n    const redirectURL = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(redirect, {\n      forceLocale: false,\n      headers: params.request.headers,\n      nextConfig: params.request.nextConfig\n    });\n    /**\n    * Responses created from redirects have immutable headers so we have\n    * to clone the response to be able to modify it.\n    */\n    response = new Response(response.body, response);\n    if (true) {\n      if (redirectURL.host === request.nextUrl.host) {\n        redirectURL.buildId = buildId || redirectURL.buildId;\n        response.headers.set(\"Location\", String(redirectURL));\n      }\n    }\n    /**\n    * When the request is a data request we can't use the location header as\n    * it may end up with CORS error. Instead we map to an internal header so\n    * the client knows the destination.\n    */\n    if (isDataReq) {\n      response.headers.delete(\"Location\");\n      response.headers.set(\"x-nextjs-redirect\", (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(redirectURL), String(requestUrl)));\n    }\n  }\n  const finalResponse = response ? response : _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__.NextResponse.next();\n  // Flight headers are not overridable / removable so they are applied at the end.\n  const middlewareOverrideHeaders = finalResponse.headers.get(\"x-middleware-override-headers\");\n  const overwrittenHeaders = [];\n  if (middlewareOverrideHeaders) {\n    for (const [key, value] of flightHeaders) {\n      finalResponse.headers.set(`x-middleware-request-${key}`, value);\n      overwrittenHeaders.push(key);\n    }\n    if (overwrittenHeaders.length > 0) {\n      finalResponse.headers.set(\"x-middleware-override-headers\", middlewareOverrideHeaders + \",\" + overwrittenHeaders.join(\",\"));\n    }\n  }\n  return {\n    response: finalResponse,\n    waitUntil: Promise.all(event[_spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.waitUntilSymbol]),\n    fetchMetrics: request.fetchMetrics\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9hZGFwdGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE2QztBQUNTO0FBQ1E7QUFDUDtBQUNFO0FBQ29CO0FBQ2Q7QUFDMUI7QUFDeUI7QUFDWTtBQUNLO0FBQ2pCO0FBQ0Y7QUFDZ0M7QUFDQztBQUM3QztBQUNRO0FBQ2pELE1BQU1pQixlQUFlLFNBQVNkLGdFQUFXLENBQUM7RUFDN0NlLFdBQVdBLENBQUNDLE1BQU0sRUFBQztJQUNmLEtBQUssQ0FBQ0EsTUFBTSxDQUFDQyxLQUFLLEVBQUVELE1BQU0sQ0FBQ0UsSUFBSSxDQUFDO0lBQ2hDLElBQUksQ0FBQ0MsVUFBVSxHQUFHSCxNQUFNLENBQUNJLElBQUk7RUFDakM7RUFDQSxJQUFJQyxPQUFPQSxDQUFBLEVBQUc7SUFDVixNQUFNLElBQUl4QixzREFBa0IsQ0FBQztNQUN6QnVCLElBQUksRUFBRSxJQUFJLENBQUNEO0lBQ2YsQ0FBQyxDQUFDO0VBQ047RUFDQUcsV0FBV0EsQ0FBQSxFQUFHO0lBQ1YsTUFBTSxJQUFJekIsc0RBQWtCLENBQUM7TUFDekJ1QixJQUFJLEVBQUUsSUFBSSxDQUFDRDtJQUNmLENBQUMsQ0FBQztFQUNOO0VBQ0FJLFNBQVNBLENBQUEsRUFBRztJQUNSLE1BQU0sSUFBSTFCLHNEQUFrQixDQUFDO01BQ3pCdUIsSUFBSSxFQUFFLElBQUksQ0FBQ0Q7SUFDZixDQUFDLENBQUM7RUFDTjtBQUNKO0FBQ0EsTUFBTUssYUFBYSxHQUFHO0VBQ2xCQyxJQUFJLEVBQUdDLE9BQU8sSUFBR0MsS0FBSyxDQUFDQyxJQUFJLENBQUNGLE9BQU8sQ0FBQ0QsSUFBSSxDQUFDLENBQUMsQ0FBQztFQUMzQ0ksR0FBRyxFQUFFQSxDQUFDSCxPQUFPLEVBQUVJLEdBQUcsS0FBR0osT0FBTyxDQUFDRyxHQUFHLENBQUNDLEdBQUcsQ0FBQyxJQUFJQztBQUM3QyxDQUFDO0FBQ0QsSUFBSUMsVUFBVSxHQUFHQSxDQUFDWCxPQUFPLEVBQUVZLEVBQUUsS0FBRztFQUM1QixNQUFNQyxNQUFNLEdBQUd0Qiw2REFBUyxDQUFDLENBQUM7RUFDMUIsT0FBT3NCLE1BQU0sQ0FBQ0MscUJBQXFCLENBQUNkLE9BQU8sQ0FBQ0ssT0FBTyxFQUFFTyxFQUFFLEVBQUVULGFBQWEsQ0FBQztBQUMzRSxDQUFDO0FBQ0QsSUFBSVksbUJBQW1CLEdBQUcsS0FBSztBQUMvQixTQUFTQyx5QkFBeUJBLENBQUEsRUFBRztFQUNqQyxJQUFJLENBQUNELG1CQUFtQixFQUFFO0lBQ3RCQSxtQkFBbUIsR0FBRyxJQUFJO0lBQzFCLElBQUlFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyx1QkFBdUIsS0FBSyxNQUFNLEVBQUU7TUFDaEQsTUFBTTtRQUFFQyxpQkFBaUI7UUFBRUM7TUFBbUIsQ0FBQyxHQUFHQyxtQkFBTyxDQUFDLCtIQUE2QyxDQUFDO01BQ3hHRixpQkFBaUIsQ0FBQyxDQUFDO01BQ25CVCxVQUFVLEdBQUdVLGtCQUFrQixDQUFDVixVQUFVLENBQUM7SUFDL0M7RUFDSjtBQUNKO0FBQ08sZUFBZVksT0FBT0EsQ0FBQzVCLE1BQU0sRUFBRTtFQUNsQ3FCLHlCQUF5QixDQUFDLENBQUM7RUFDM0IsTUFBTTVCLDBFQUErQixDQUFDLENBQUM7RUFDdkM7RUFDQSxNQUFNb0MsZUFBZSxHQUFHLE9BQU9DLElBQUksQ0FBQ0MsZ0JBQWdCLEtBQUssV0FBVztFQUNwRSxNQUFNQyxpQkFBaUIsR0FBRyxPQUFPRixJQUFJLENBQUNHLG9CQUFvQixLQUFLLFFBQVEsR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNMLElBQUksQ0FBQ0csb0JBQW9CLENBQUMsR0FBR2xCLFNBQVM7RUFDM0hmLE1BQU0sQ0FBQ0ssT0FBTyxDQUFDK0IsR0FBRyxHQUFHOUMsbUZBQWUsQ0FBQ1UsTUFBTSxDQUFDSyxPQUFPLENBQUMrQixHQUFHLENBQUM7RUFDeEQsTUFBTUMsVUFBVSxHQUFHLElBQUlqRCw4Q0FBTyxDQUFDWSxNQUFNLENBQUNLLE9BQU8sQ0FBQytCLEdBQUcsRUFBRTtJQUMvQzFCLE9BQU8sRUFBRVYsTUFBTSxDQUFDSyxPQUFPLENBQUNLLE9BQU87SUFDL0I0QixVQUFVLEVBQUV0QyxNQUFNLENBQUNLLE9BQU8sQ0FBQ2lDO0VBQy9CLENBQUMsQ0FBQztFQUNGO0VBQ0E7RUFDQSxNQUFNN0IsSUFBSSxHQUFHLENBQ1QsR0FBRzRCLFVBQVUsQ0FBQ0UsWUFBWSxDQUFDOUIsSUFBSSxDQUFDLENBQUMsQ0FDcEM7RUFDRCxLQUFLLE1BQU1LLEdBQUcsSUFBSUwsSUFBSSxFQUFDO0lBQ25CLE1BQU0rQixLQUFLLEdBQUdILFVBQVUsQ0FBQ0UsWUFBWSxDQUFDRSxNQUFNLENBQUMzQixHQUFHLENBQUM7SUFDakQsSUFBSUEsR0FBRyxLQUFLdEIsb0VBQXVCLElBQUlzQixHQUFHLENBQUM0QixVQUFVLENBQUNsRCxvRUFBdUIsQ0FBQyxFQUFFO01BQzVFLE1BQU1tRCxhQUFhLEdBQUc3QixHQUFHLENBQUM4QixTQUFTLENBQUNwRCxvRUFBdUIsQ0FBQ3FELE1BQU0sQ0FBQztNQUNuRVIsVUFBVSxDQUFDRSxZQUFZLENBQUNPLE1BQU0sQ0FBQ0gsYUFBYSxDQUFDO01BQzdDLEtBQUssTUFBTUksR0FBRyxJQUFJUCxLQUFLLEVBQUM7UUFDcEJILFVBQVUsQ0FBQ0UsWUFBWSxDQUFDUyxNQUFNLENBQUNMLGFBQWEsRUFBRUksR0FBRyxDQUFDO01BQ3REO01BQ0FWLFVBQVUsQ0FBQ0UsWUFBWSxDQUFDTyxNQUFNLENBQUNoQyxHQUFHLENBQUM7SUFDdkM7RUFDSjtFQUNBO0VBQ0EsTUFBTW1DLE9BQU8sR0FBR1osVUFBVSxDQUFDWSxPQUFPO0VBQ2xDWixVQUFVLENBQUNZLE9BQU8sR0FBRyxFQUFFO0VBQ3ZCLE1BQU1DLFNBQVMsR0FBR2xELE1BQU0sQ0FBQ0ssT0FBTyxDQUFDSyxPQUFPLENBQUMsZUFBZSxDQUFDO0VBQ3pELElBQUl3QyxTQUFTLElBQUliLFVBQVUsQ0FBQ2MsUUFBUSxLQUFLLFFBQVEsRUFBRTtJQUMvQ2QsVUFBVSxDQUFDYyxRQUFRLEdBQUcsR0FBRztFQUM3QjtFQUNBLE1BQU1DLGNBQWMsR0FBR3RFLG1FQUEyQixDQUFDa0IsTUFBTSxDQUFDSyxPQUFPLENBQUNLLE9BQU8sQ0FBQztFQUMxRSxNQUFNMkMsYUFBYSxHQUFHLElBQUlDLEdBQUcsQ0FBQyxDQUFDO0VBQy9CO0VBQ0EsSUFBSSxDQUFDekIsZUFBZSxFQUFFO0lBQ2xCLEtBQUssTUFBTTBCLEtBQUssSUFBSWhFLG9GQUFpQixFQUFDO01BQ2xDLE1BQU11QixHQUFHLEdBQUd5QyxLQUFLLENBQUNDLFFBQVEsQ0FBQyxDQUFDLENBQUNDLFdBQVcsQ0FBQyxDQUFDO01BQzFDLE1BQU1qQixLQUFLLEdBQUdZLGNBQWMsQ0FBQ3ZDLEdBQUcsQ0FBQ0MsR0FBRyxDQUFDO01BQ3JDLElBQUkwQixLQUFLLEVBQUU7UUFDUGEsYUFBYSxDQUFDSyxHQUFHLENBQUM1QyxHQUFHLEVBQUVzQyxjQUFjLENBQUN2QyxHQUFHLENBQUNDLEdBQUcsQ0FBQyxDQUFDO1FBQy9Dc0MsY0FBYyxDQUFDTixNQUFNLENBQUNoQyxHQUFHLENBQUM7TUFDOUI7SUFDSjtFQUNKO0VBQ0EsTUFBTTZDLFlBQVksR0FBR3JDLE1BQThDLEdBQUcsQ0FBMkIsR0FBR2UsVUFBVTtFQUM5RyxNQUFNaEMsT0FBTyxHQUFHLElBQUlQLGVBQWUsQ0FBQztJQUNoQ00sSUFBSSxFQUFFSixNQUFNLENBQUNJLElBQUk7SUFDakI7SUFDQUgsS0FBSyxFQUFFWiwwRUFBeUIsQ0FBQ3NFLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQ0gsUUFBUSxDQUFDLENBQUM7SUFDL0R0RCxJQUFJLEVBQUU7TUFDRjRELElBQUksRUFBRTlELE1BQU0sQ0FBQ0ssT0FBTyxDQUFDeUQsSUFBSTtNQUN6QkMsR0FBRyxFQUFFL0QsTUFBTSxDQUFDSyxPQUFPLENBQUMwRCxHQUFHO01BQ3ZCckQsT0FBTyxFQUFFMEMsY0FBYztNQUN2QlksRUFBRSxFQUFFaEUsTUFBTSxDQUFDSyxPQUFPLENBQUMyRCxFQUFFO01BQ3JCQyxNQUFNLEVBQUVqRSxNQUFNLENBQUNLLE9BQU8sQ0FBQzRELE1BQU07TUFDN0IzQixVQUFVLEVBQUV0QyxNQUFNLENBQUNLLE9BQU8sQ0FBQ2lDLFVBQVU7TUFDckM0QixNQUFNLEVBQUVsRSxNQUFNLENBQUNLLE9BQU8sQ0FBQzZEO0lBQzNCO0VBQ0osQ0FBQyxDQUFDO0VBQ0Y7QUFDSjtBQUNBO0FBQ0E7QUFDQTtFQUFNLElBQUloQixTQUFTLEVBQUU7SUFDYmlCLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDL0QsT0FBTyxFQUFFLFVBQVUsRUFBRTtNQUN2Q2dFLFVBQVUsRUFBRSxLQUFLO01BQ2pCN0IsS0FBSyxFQUFFO0lBQ1gsQ0FBQyxDQUFDO0VBQ047RUFDQSxJQUFJLENBQUM4QixVQUFVLENBQUNDLGtCQUFrQixJQUFJdkUsTUFBTSxDQUFDd0UsZ0JBQWdCLEVBQUU7SUFDM0RGLFVBQVUsQ0FBQ0Msa0JBQWtCLEdBQUcsSUFBSXZFLE1BQU0sQ0FBQ3dFLGdCQUFnQixDQUFDO01BQ3hEQyxNQUFNLEVBQUUsSUFBSTtNQUNaQyxVQUFVLEVBQUUsSUFBSTtNQUNoQkMsV0FBVyxPQUF3QztNQUNuREMsbUJBQW1CLEVBQUV0RCxFQUF5QztNQUM5RHdELEdBQUcsTUFBd0M7TUFDM0MxQixjQUFjLEVBQUVwRCxNQUFNLENBQUNLLE9BQU8sQ0FBQ0ssT0FBTztNQUN0Q3FFLGVBQWUsRUFBRSxPQUFPO01BQ3hCQyxvQkFBb0IsRUFBRUEsQ0FBQSxLQUFJO1FBQ3RCLE9BQU87VUFDSEMsT0FBTyxFQUFFLENBQUMsQ0FBQztVQUNYQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO1VBQ1ZDLGFBQWEsRUFBRSxDQUFDLENBQUM7VUFDakJDLGNBQWMsRUFBRSxFQUFFO1VBQ2xCQyxPQUFPLEVBQUU7WUFDTEMsYUFBYSxFQUFFO1VBQ25CO1FBQ0osQ0FBQztNQUNMO0lBQ0osQ0FBQyxDQUFDO0VBQ047RUFDQSxNQUFNQyxLQUFLLEdBQUcsSUFBSXhHLHVFQUFjLENBQUM7SUFDN0JzQixPQUFPO0lBQ1BELElBQUksRUFBRUosTUFBTSxDQUFDSTtFQUNqQixDQUFDLENBQUM7RUFDRixJQUFJb0YsUUFBUTtFQUNaLElBQUlDLG1CQUFtQjtFQUN2QkQsUUFBUSxHQUFHLE1BQU14RSxVQUFVLENBQUNYLE9BQU8sRUFBRSxNQUFJO0lBQ3JDO0lBQ0EsTUFBTXFGLFlBQVksR0FBRzFGLE1BQU0sQ0FBQ0ksSUFBSSxLQUFLLGFBQWEsSUFBSUosTUFBTSxDQUFDSSxJQUFJLEtBQUssaUJBQWlCO0lBQ3ZGLElBQUlzRixZQUFZLEVBQUU7TUFDZCxPQUFPOUYsNkRBQVMsQ0FBQyxDQUFDLENBQUMrRixLQUFLLENBQUM5RixpRUFBYyxDQUFDK0YsT0FBTyxFQUFFO1FBQzdDQyxRQUFRLEVBQUcsY0FBYXhGLE9BQU8sQ0FBQzRELE1BQU8sSUFBRzVELE9BQU8sQ0FBQ3lGLE9BQU8sQ0FBQzNDLFFBQVMsRUFBQztRQUNwRTRDLFVBQVUsRUFBRTtVQUNSLGFBQWEsRUFBRTFGLE9BQU8sQ0FBQ3lGLE9BQU8sQ0FBQzNDLFFBQVE7VUFDdkMsYUFBYSxFQUFFOUMsT0FBTyxDQUFDNEQ7UUFDM0I7TUFDSixDQUFDLEVBQUUsTUFBSXZFLHFHQUEwQixDQUFDc0csSUFBSSxDQUFDckcsbUdBQW1CLEVBQUU7UUFDcERzRyxHQUFHLEVBQUU1RixPQUFPO1FBQ1o2RixVQUFVLEVBQUU7VUFDUkMsZUFBZSxFQUFHQyxPQUFPLElBQUc7WUFDeEJYLG1CQUFtQixHQUFHVyxPQUFPO1VBQ2pDLENBQUM7VUFDRDtVQUNBQyxZQUFZLEVBQUUsQ0FBQ3JFLGlCQUFpQixJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsR0FBR0EsaUJBQWlCLENBQUNxRCxPQUFPLEtBQUs7WUFDOUVDLGFBQWEsRUFBRSxnQkFBZ0I7WUFDL0JnQix3QkFBd0IsRUFBRSxFQUFFO1lBQzVCQyxxQkFBcUIsRUFBRTtVQUMzQjtRQUNKO01BQ0osQ0FBQyxFQUFFLE1BQUl2RyxNQUFNLENBQUN3RyxPQUFPLENBQUNuRyxPQUFPLEVBQUVrRixLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQy9DO0lBQ0EsT0FBT3ZGLE1BQU0sQ0FBQ3dHLE9BQU8sQ0FBQ25HLE9BQU8sRUFBRWtGLEtBQUssQ0FBQztFQUN6QyxDQUFDLENBQUM7RUFDRjtFQUNBLElBQUlDLFFBQVEsSUFBSSxFQUFFQSxRQUFRLFlBQVlpQixRQUFRLENBQUMsRUFBRTtJQUM3QyxNQUFNLElBQUlDLFNBQVMsQ0FBQyxpREFBaUQsQ0FBQztFQUMxRTtFQUNBLElBQUlsQixRQUFRLElBQUlDLG1CQUFtQixFQUFFO0lBQ2pDRCxRQUFRLENBQUM5RSxPQUFPLENBQUNnRCxHQUFHLENBQUMsWUFBWSxFQUFFK0IsbUJBQW1CLENBQUM7RUFDM0Q7RUFDQTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFBTSxNQUFNa0IsT0FBTyxHQUFHbkIsUUFBUSxJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsR0FBR0EsUUFBUSxDQUFDOUUsT0FBTyxDQUFDRyxHQUFHLENBQUMsc0JBQXNCLENBQUM7RUFDMUYsSUFBSTJFLFFBQVEsSUFBSW1CLE9BQU8sRUFBRTtJQUNyQixNQUFNQyxVQUFVLEdBQUcsSUFBSXhILDhDQUFPLENBQUN1SCxPQUFPLEVBQUU7TUFDcENFLFdBQVcsRUFBRSxJQUFJO01BQ2pCbkcsT0FBTyxFQUFFVixNQUFNLENBQUNLLE9BQU8sQ0FBQ0ssT0FBTztNQUMvQjRCLFVBQVUsRUFBRXRDLE1BQU0sQ0FBQ0ssT0FBTyxDQUFDaUM7SUFDL0IsQ0FBQyxDQUFDO0lBQ0YsSUFBSSxJQUErQyxFQUFFO01BQ2pELElBQUlzRSxVQUFVLENBQUNFLElBQUksS0FBS3pHLE9BQU8sQ0FBQ3lGLE9BQU8sQ0FBQ2dCLElBQUksRUFBRTtRQUMxQ0YsVUFBVSxDQUFDM0QsT0FBTyxHQUFHQSxPQUFPLElBQUkyRCxVQUFVLENBQUMzRCxPQUFPO1FBQ2xEdUMsUUFBUSxDQUFDOUUsT0FBTyxDQUFDZ0QsR0FBRyxDQUFDLHNCQUFzQixFQUFFcUQsTUFBTSxDQUFDSCxVQUFVLENBQUMsQ0FBQztNQUNwRTtJQUNKO0lBQ0E7QUFDUjtBQUNBO0FBQ0E7QUFDQTtJQUFRLE1BQU1JLGtCQUFrQixHQUFHOUgsc0ZBQWEsQ0FBQzZILE1BQU0sQ0FBQ0gsVUFBVSxDQUFDLEVBQUVHLE1BQU0sQ0FBQzFFLFVBQVUsQ0FBQyxDQUFDO0lBQ2hGLElBQUlhLFNBQVM7SUFBSTtJQUNqQjtJQUNBO0lBQ0EsRUFBRTVCLE1BQXNELElBQUkwRixDQUF5QyxDQUFDLEVBQUU7TUFDcEd4QixRQUFRLENBQUM5RSxPQUFPLENBQUNnRCxHQUFHLENBQUMsa0JBQWtCLEVBQUVzRCxrQkFBa0IsQ0FBQztJQUNoRTtFQUNKO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtFQUFNLE1BQU1HLFFBQVEsR0FBRzNCLFFBQVEsSUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUdBLFFBQVEsQ0FBQzlFLE9BQU8sQ0FBQ0csR0FBRyxDQUFDLFVBQVUsQ0FBQztFQUMvRSxJQUFJMkUsUUFBUSxJQUFJMkIsUUFBUSxJQUFJLENBQUN0RixlQUFlLEVBQUU7SUFDMUMsTUFBTXVGLFdBQVcsR0FBRyxJQUFJaEksOENBQU8sQ0FBQytILFFBQVEsRUFBRTtNQUN0Q04sV0FBVyxFQUFFLEtBQUs7TUFDbEJuRyxPQUFPLEVBQUVWLE1BQU0sQ0FBQ0ssT0FBTyxDQUFDSyxPQUFPO01BQy9CNEIsVUFBVSxFQUFFdEMsTUFBTSxDQUFDSyxPQUFPLENBQUNpQztJQUMvQixDQUFDLENBQUM7SUFDRjtBQUNSO0FBQ0E7QUFDQTtJQUFRa0QsUUFBUSxHQUFHLElBQUlpQixRQUFRLENBQUNqQixRQUFRLENBQUMxQixJQUFJLEVBQUUwQixRQUFRLENBQUM7SUFDaEQsSUFBSSxJQUErQyxFQUFFO01BQ2pELElBQUk0QixXQUFXLENBQUNOLElBQUksS0FBS3pHLE9BQU8sQ0FBQ3lGLE9BQU8sQ0FBQ2dCLElBQUksRUFBRTtRQUMzQ00sV0FBVyxDQUFDbkUsT0FBTyxHQUFHQSxPQUFPLElBQUltRSxXQUFXLENBQUNuRSxPQUFPO1FBQ3BEdUMsUUFBUSxDQUFDOUUsT0FBTyxDQUFDZ0QsR0FBRyxDQUFDLFVBQVUsRUFBRXFELE1BQU0sQ0FBQ0ssV0FBVyxDQUFDLENBQUM7TUFDekQ7SUFDSjtJQUNBO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7SUFBUSxJQUFJbEUsU0FBUyxFQUFFO01BQ1hzQyxRQUFRLENBQUM5RSxPQUFPLENBQUNvQyxNQUFNLENBQUMsVUFBVSxDQUFDO01BQ25DMEMsUUFBUSxDQUFDOUUsT0FBTyxDQUFDZ0QsR0FBRyxDQUFDLG1CQUFtQixFQUFFeEUsc0ZBQWEsQ0FBQzZILE1BQU0sQ0FBQ0ssV0FBVyxDQUFDLEVBQUVMLE1BQU0sQ0FBQzFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDckc7RUFDSjtFQUNBLE1BQU1nRixhQUFhLEdBQUc3QixRQUFRLEdBQUdBLFFBQVEsR0FBR3ZHLGtFQUFZLENBQUNxSSxJQUFJLENBQUMsQ0FBQztFQUMvRDtFQUNBLE1BQU1DLHlCQUF5QixHQUFHRixhQUFhLENBQUMzRyxPQUFPLENBQUNHLEdBQUcsQ0FBQywrQkFBK0IsQ0FBQztFQUM1RixNQUFNMkcsa0JBQWtCLEdBQUcsRUFBRTtFQUM3QixJQUFJRCx5QkFBeUIsRUFBRTtJQUMzQixLQUFLLE1BQU0sQ0FBQ3pHLEdBQUcsRUFBRTBCLEtBQUssQ0FBQyxJQUFJYSxhQUFhLEVBQUM7TUFDckNnRSxhQUFhLENBQUMzRyxPQUFPLENBQUNnRCxHQUFHLENBQUUsd0JBQXVCNUMsR0FBSSxFQUFDLEVBQUUwQixLQUFLLENBQUM7TUFDL0RnRixrQkFBa0IsQ0FBQ0MsSUFBSSxDQUFDM0csR0FBRyxDQUFDO0lBQ2hDO0lBQ0EsSUFBSTBHLGtCQUFrQixDQUFDM0UsTUFBTSxHQUFHLENBQUMsRUFBRTtNQUMvQndFLGFBQWEsQ0FBQzNHLE9BQU8sQ0FBQ2dELEdBQUcsQ0FBQywrQkFBK0IsRUFBRTZELHlCQUF5QixHQUFHLEdBQUcsR0FBR0Msa0JBQWtCLENBQUNFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM5SDtFQUNKO0VBQ0EsT0FBTztJQUNIbEMsUUFBUSxFQUFFNkIsYUFBYTtJQUN2QjlHLFNBQVMsRUFBRW9ILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDckMsS0FBSyxDQUFDcEcsd0VBQWUsQ0FBQyxDQUFDO0lBQzlDMEksWUFBWSxFQUFFeEgsT0FBTyxDQUFDd0g7RUFDMUIsQ0FBQztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvYWRhcHRlci5qcz83ZDQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VTaWduYXR1cmVFcnJvciB9IGZyb20gXCIuL2Vycm9yXCI7XG5pbXBvcnQgeyBmcm9tTm9kZU91dGdvaW5nSHR0cEhlYWRlcnMgfSBmcm9tIFwiLi91dGlsc1wiO1xuaW1wb3J0IHsgTmV4dEZldGNoRXZlbnQgfSBmcm9tIFwiLi9zcGVjLWV4dGVuc2lvbi9mZXRjaC1ldmVudFwiO1xuaW1wb3J0IHsgTmV4dFJlcXVlc3QgfSBmcm9tIFwiLi9zcGVjLWV4dGVuc2lvbi9yZXF1ZXN0XCI7XG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tIFwiLi9zcGVjLWV4dGVuc2lvbi9yZXNwb25zZVwiO1xuaW1wb3J0IHsgcmVsYXRpdml6ZVVSTCB9IGZyb20gXCIuLi8uLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9yZWxhdGl2aXplLXVybFwiO1xuaW1wb3J0IHsgd2FpdFVudGlsU3ltYm9sIH0gZnJvbSBcIi4vc3BlYy1leHRlbnNpb24vZmV0Y2gtZXZlbnRcIjtcbmltcG9ydCB7IE5leHRVUkwgfSBmcm9tIFwiLi9uZXh0LXVybFwiO1xuaW1wb3J0IHsgc3RyaXBJbnRlcm5hbFNlYXJjaFBhcmFtcyB9IGZyb20gXCIuLi9pbnRlcm5hbC11dGlsc1wiO1xuaW1wb3J0IHsgbm9ybWFsaXplUnNjVVJMIH0gZnJvbSBcIi4uLy4uL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FwcC1wYXRoc1wiO1xuaW1wb3J0IHsgRkxJR0hUX1BBUkFNRVRFUlMgfSBmcm9tIFwiLi4vLi4vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzXCI7XG5pbXBvcnQgeyBORVhUX1FVRVJZX1BBUkFNX1BSRUZJWCB9IGZyb20gXCIuLi8uLi9saWIvY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBlbnN1cmVJbnN0cnVtZW50YXRpb25SZWdpc3RlcmVkIH0gZnJvbSBcIi4vZ2xvYmFsc1wiO1xuaW1wb3J0IHsgUmVxdWVzdEFzeW5jU3RvcmFnZVdyYXBwZXIgfSBmcm9tIFwiLi4vYXN5bmMtc3RvcmFnZS9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2Utd3JhcHBlclwiO1xuaW1wb3J0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSB9IGZyb20gXCIuLi8uLi9jbGllbnQvY29tcG9uZW50cy9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWxcIjtcbmltcG9ydCB7IGdldFRyYWNlciB9IGZyb20gXCIuLi9saWIvdHJhY2UvdHJhY2VyXCI7XG5pbXBvcnQgeyBNaWRkbGV3YXJlU3BhbiB9IGZyb20gXCIuLi9saWIvdHJhY2UvY29uc3RhbnRzXCI7XG5leHBvcnQgY2xhc3MgTmV4dFJlcXVlc3RIaW50IGV4dGVuZHMgTmV4dFJlcXVlc3Qge1xuICAgIGNvbnN0cnVjdG9yKHBhcmFtcyl7XG4gICAgICAgIHN1cGVyKHBhcmFtcy5pbnB1dCwgcGFyYW1zLmluaXQpO1xuICAgICAgICB0aGlzLnNvdXJjZVBhZ2UgPSBwYXJhbXMucGFnZTtcbiAgICB9XG4gICAgZ2V0IHJlcXVlc3QoKSB7XG4gICAgICAgIHRocm93IG5ldyBQYWdlU2lnbmF0dXJlRXJyb3Ioe1xuICAgICAgICAgICAgcGFnZTogdGhpcy5zb3VyY2VQYWdlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXNwb25kV2l0aCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFBhZ2VTaWduYXR1cmVFcnJvcih7XG4gICAgICAgICAgICBwYWdlOiB0aGlzLnNvdXJjZVBhZ2VcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHdhaXRVbnRpbCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFBhZ2VTaWduYXR1cmVFcnJvcih7XG4gICAgICAgICAgICBwYWdlOiB0aGlzLnNvdXJjZVBhZ2VcbiAgICAgICAgfSk7XG4gICAgfVxufVxuY29uc3QgaGVhZGVyc0dldHRlciA9IHtcbiAgICBrZXlzOiAoaGVhZGVycyk9PkFycmF5LmZyb20oaGVhZGVycy5rZXlzKCkpLFxuICAgIGdldDogKGhlYWRlcnMsIGtleSk9PmhlYWRlcnMuZ2V0KGtleSkgPz8gdW5kZWZpbmVkXG59O1xubGV0IHByb3BhZ2F0b3IgPSAocmVxdWVzdCwgZm4pPT57XG4gICAgY29uc3QgdHJhY2VyID0gZ2V0VHJhY2VyKCk7XG4gICAgcmV0dXJuIHRyYWNlci53aXRoUHJvcGFnYXRlZENvbnRleHQocmVxdWVzdC5oZWFkZXJzLCBmbiwgaGVhZGVyc0dldHRlcik7XG59O1xubGV0IHRlc3RBcGlzSW50ZXJjZXB0ZWQgPSBmYWxzZTtcbmZ1bmN0aW9uIGVuc3VyZVRlc3RBcGlzSW50ZXJjZXB0ZWQoKSB7XG4gICAgaWYgKCF0ZXN0QXBpc0ludGVyY2VwdGVkKSB7XG4gICAgICAgIHRlc3RBcGlzSW50ZXJjZXB0ZWQgPSB0cnVlO1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTkVYVF9QUklWQVRFX1RFU1RfUFJPWFkgPT09IFwidHJ1ZVwiKSB7XG4gICAgICAgICAgICBjb25zdCB7IGludGVyY2VwdFRlc3RBcGlzLCB3cmFwUmVxdWVzdEhhbmRsZXIgfSA9IHJlcXVpcmUoXCJuZXh0L2Rpc3QvZXhwZXJpbWVudGFsL3Rlc3Rtb2RlL3NlcnZlci1lZGdlXCIpO1xuICAgICAgICAgICAgaW50ZXJjZXB0VGVzdEFwaXMoKTtcbiAgICAgICAgICAgIHByb3BhZ2F0b3IgPSB3cmFwUmVxdWVzdEhhbmRsZXIocHJvcGFnYXRvcik7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYWRhcHRlcihwYXJhbXMpIHtcbiAgICBlbnN1cmVUZXN0QXBpc0ludGVyY2VwdGVkKCk7XG4gICAgYXdhaXQgZW5zdXJlSW5zdHJ1bWVudGF0aW9uUmVnaXN0ZXJlZCgpO1xuICAgIC8vIFRPRE8tQVBQOiB1c2UgZXhwbGljaXQgbWFya2VyIGZvciB0aGlzXG4gICAgY29uc3QgaXNFZGdlUmVuZGVyaW5nID0gdHlwZW9mIHNlbGYuX19CVUlMRF9NQU5JRkVTVCAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICBjb25zdCBwcmVyZW5kZXJNYW5pZmVzdCA9IHR5cGVvZiBzZWxmLl9fUFJFUkVOREVSX01BTklGRVNUID09PSBcInN0cmluZ1wiID8gSlNPTi5wYXJzZShzZWxmLl9fUFJFUkVOREVSX01BTklGRVNUKSA6IHVuZGVmaW5lZDtcbiAgICBwYXJhbXMucmVxdWVzdC51cmwgPSBub3JtYWxpemVSc2NVUkwocGFyYW1zLnJlcXVlc3QudXJsKTtcbiAgICBjb25zdCByZXF1ZXN0VXJsID0gbmV3IE5leHRVUkwocGFyYW1zLnJlcXVlc3QudXJsLCB7XG4gICAgICAgIGhlYWRlcnM6IHBhcmFtcy5yZXF1ZXN0LmhlYWRlcnMsXG4gICAgICAgIG5leHRDb25maWc6IHBhcmFtcy5yZXF1ZXN0Lm5leHRDb25maWdcbiAgICB9KTtcbiAgICAvLyBJdGVyYXRvciB1c2VzIGFuIGluZGV4IHRvIGtlZXAgdHJhY2sgb2YgdGhlIGN1cnJlbnQgaXRlcmF0aW9uLiBCZWNhdXNlIG9mIGRlbGV0aW5nIGFuZCBhcHBlbmRpbmcgYmVsb3cgd2UgY2FuJ3QganVzdCB1c2UgdGhlIGl0ZXJhdG9yLlxuICAgIC8vIEluc3RlYWQgd2UgdXNlIHRoZSBrZXlzIGJlZm9yZSBpdGVyYXRpb24uXG4gICAgY29uc3Qga2V5cyA9IFtcbiAgICAgICAgLi4ucmVxdWVzdFVybC5zZWFyY2hQYXJhbXMua2V5cygpXG4gICAgXTtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzKXtcbiAgICAgICAgY29uc3QgdmFsdWUgPSByZXF1ZXN0VXJsLnNlYXJjaFBhcmFtcy5nZXRBbGwoa2V5KTtcbiAgICAgICAgaWYgKGtleSAhPT0gTkVYVF9RVUVSWV9QQVJBTV9QUkVGSVggJiYga2V5LnN0YXJ0c1dpdGgoTkVYVF9RVUVSWV9QQVJBTV9QUkVGSVgpKSB7XG4gICAgICAgICAgICBjb25zdCBub3JtYWxpemVkS2V5ID0ga2V5LnN1YnN0cmluZyhORVhUX1FVRVJZX1BBUkFNX1BSRUZJWC5sZW5ndGgpO1xuICAgICAgICAgICAgcmVxdWVzdFVybC5zZWFyY2hQYXJhbXMuZGVsZXRlKG5vcm1hbGl6ZWRLZXkpO1xuICAgICAgICAgICAgZm9yIChjb25zdCB2YWwgb2YgdmFsdWUpe1xuICAgICAgICAgICAgICAgIHJlcXVlc3RVcmwuc2VhcmNoUGFyYW1zLmFwcGVuZChub3JtYWxpemVkS2V5LCB2YWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVxdWVzdFVybC5zZWFyY2hQYXJhbXMuZGVsZXRlKGtleSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gRW5zdXJlIHVzZXJzIG9ubHkgc2VlIHBhZ2UgcmVxdWVzdHMsIG5ldmVyIGRhdGEgcmVxdWVzdHMuXG4gICAgY29uc3QgYnVpbGRJZCA9IHJlcXVlc3RVcmwuYnVpbGRJZDtcbiAgICByZXF1ZXN0VXJsLmJ1aWxkSWQgPSBcIlwiO1xuICAgIGNvbnN0IGlzRGF0YVJlcSA9IHBhcmFtcy5yZXF1ZXN0LmhlYWRlcnNbXCJ4LW5leHRqcy1kYXRhXCJdO1xuICAgIGlmIChpc0RhdGFSZXEgJiYgcmVxdWVzdFVybC5wYXRobmFtZSA9PT0gXCIvaW5kZXhcIikge1xuICAgICAgICByZXF1ZXN0VXJsLnBhdGhuYW1lID0gXCIvXCI7XG4gICAgfVxuICAgIGNvbnN0IHJlcXVlc3RIZWFkZXJzID0gZnJvbU5vZGVPdXRnb2luZ0h0dHBIZWFkZXJzKHBhcmFtcy5yZXF1ZXN0LmhlYWRlcnMpO1xuICAgIGNvbnN0IGZsaWdodEhlYWRlcnMgPSBuZXcgTWFwKCk7XG4gICAgLy8gUGFyYW1ldGVycyBzaG91bGQgb25seSBiZSBzdHJpcHBlZCBmb3IgbWlkZGxld2FyZVxuICAgIGlmICghaXNFZGdlUmVuZGVyaW5nKSB7XG4gICAgICAgIGZvciAoY29uc3QgcGFyYW0gb2YgRkxJR0hUX1BBUkFNRVRFUlMpe1xuICAgICAgICAgICAgY29uc3Qga2V5ID0gcGFyYW0udG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSByZXF1ZXN0SGVhZGVycy5nZXQoa2V5KTtcbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIGZsaWdodEhlYWRlcnMuc2V0KGtleSwgcmVxdWVzdEhlYWRlcnMuZ2V0KGtleSkpO1xuICAgICAgICAgICAgICAgIHJlcXVlc3RIZWFkZXJzLmRlbGV0ZShrZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IG5vcm1hbGl6ZVVybCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9OT19NSURETEVXQVJFX1VSTF9OT1JNQUxJWkUgPyBuZXcgVVJMKHBhcmFtcy5yZXF1ZXN0LnVybCkgOiByZXF1ZXN0VXJsO1xuICAgIGNvbnN0IHJlcXVlc3QgPSBuZXcgTmV4dFJlcXVlc3RIaW50KHtcbiAgICAgICAgcGFnZTogcGFyYW1zLnBhZ2UsXG4gICAgICAgIC8vIFN0cmlwIGludGVybmFsIHF1ZXJ5IHBhcmFtZXRlcnMgb2ZmIHRoZSByZXF1ZXN0LlxuICAgICAgICBpbnB1dDogc3RyaXBJbnRlcm5hbFNlYXJjaFBhcmFtcyhub3JtYWxpemVVcmwsIHRydWUpLnRvU3RyaW5nKCksXG4gICAgICAgIGluaXQ6IHtcbiAgICAgICAgICAgIGJvZHk6IHBhcmFtcy5yZXF1ZXN0LmJvZHksXG4gICAgICAgICAgICBnZW86IHBhcmFtcy5yZXF1ZXN0LmdlbyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHJlcXVlc3RIZWFkZXJzLFxuICAgICAgICAgICAgaXA6IHBhcmFtcy5yZXF1ZXN0LmlwLFxuICAgICAgICAgICAgbWV0aG9kOiBwYXJhbXMucmVxdWVzdC5tZXRob2QsXG4gICAgICAgICAgICBuZXh0Q29uZmlnOiBwYXJhbXMucmVxdWVzdC5uZXh0Q29uZmlnLFxuICAgICAgICAgICAgc2lnbmFsOiBwYXJhbXMucmVxdWVzdC5zaWduYWxcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIC8qKlxuICAgKiBUaGlzIGFsbG93cyB0byBpZGVudGlmeSB0aGUgcmVxdWVzdCBhcyBhIGRhdGEgcmVxdWVzdC4gVGhlIHVzZXIgZG9lc24ndFxuICAgKiBuZWVkIHRvIGtub3cgYWJvdXQgdGhpcyBwcm9wZXJ0eSBuZWl0aGVyIHVzZSBpdC4gV2UgYWRkIGl0IGZvciB0ZXN0aW5nXG4gICAqIHB1cnBvc2VzLlxuICAgKi8gaWYgKGlzRGF0YVJlcSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocmVxdWVzdCwgXCJfX2lzRGF0YVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoIWdsb2JhbFRoaXMuX19pbmNyZW1lbnRhbENhY2hlICYmIHBhcmFtcy5JbmNyZW1lbnRhbENhY2hlKSB7XG4gICAgICAgIGdsb2JhbFRoaXMuX19pbmNyZW1lbnRhbENhY2hlID0gbmV3IHBhcmFtcy5JbmNyZW1lbnRhbENhY2hlKHtcbiAgICAgICAgICAgIGFwcERpcjogdHJ1ZSxcbiAgICAgICAgICAgIGZldGNoQ2FjaGU6IHRydWUsXG4gICAgICAgICAgICBtaW5pbWFsTW9kZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwiZGV2ZWxvcG1lbnRcIixcbiAgICAgICAgICAgIGZldGNoQ2FjaGVLZXlQcmVmaXg6IHByb2Nlc3MuZW52Ll9fTkVYVF9GRVRDSF9DQUNIRV9LRVlfUFJFRklYLFxuICAgICAgICAgICAgZGV2OiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiLFxuICAgICAgICAgICAgcmVxdWVzdEhlYWRlcnM6IHBhcmFtcy5yZXF1ZXN0LmhlYWRlcnMsXG4gICAgICAgICAgICByZXF1ZXN0UHJvdG9jb2w6IFwiaHR0cHNcIixcbiAgICAgICAgICAgIGdldFByZXJlbmRlck1hbmlmZXN0OiAoKT0+e1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHZlcnNpb246IC0xLFxuICAgICAgICAgICAgICAgICAgICByb3V0ZXM6IHt9LFxuICAgICAgICAgICAgICAgICAgICBkeW5hbWljUm91dGVzOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgbm90Rm91bmRSb3V0ZXM6IFtdLFxuICAgICAgICAgICAgICAgICAgICBwcmV2aWV3OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmV2aWV3TW9kZUlkOiBcImRldmVsb3BtZW50LWlkXCJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBldmVudCA9IG5ldyBOZXh0RmV0Y2hFdmVudCh7XG4gICAgICAgIHJlcXVlc3QsXG4gICAgICAgIHBhZ2U6IHBhcmFtcy5wYWdlXG4gICAgfSk7XG4gICAgbGV0IHJlc3BvbnNlO1xuICAgIGxldCBjb29raWVzRnJvbVJlc3BvbnNlO1xuICAgIHJlc3BvbnNlID0gYXdhaXQgcHJvcGFnYXRvcihyZXF1ZXN0LCAoKT0+e1xuICAgICAgICAvLyB3ZSBvbmx5IGNhcmUgdG8gbWFrZSBhc3luYyBzdG9yYWdlIGF2YWlsYWJsZSBmb3IgbWlkZGxld2FyZVxuICAgICAgICBjb25zdCBpc01pZGRsZXdhcmUgPSBwYXJhbXMucGFnZSA9PT0gXCIvbWlkZGxld2FyZVwiIHx8IHBhcmFtcy5wYWdlID09PSBcIi9zcmMvbWlkZGxld2FyZVwiO1xuICAgICAgICBpZiAoaXNNaWRkbGV3YXJlKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0VHJhY2VyKCkudHJhY2UoTWlkZGxld2FyZVNwYW4uZXhlY3V0ZSwge1xuICAgICAgICAgICAgICAgIHNwYW5OYW1lOiBgbWlkZGxld2FyZSAke3JlcXVlc3QubWV0aG9kfSAke3JlcXVlc3QubmV4dFVybC5wYXRobmFtZX1gLFxuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJodHRwLnRhcmdldFwiOiByZXF1ZXN0Lm5leHRVcmwucGF0aG5hbWUsXG4gICAgICAgICAgICAgICAgICAgIFwiaHR0cC5tZXRob2RcIjogcmVxdWVzdC5tZXRob2RcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCAoKT0+UmVxdWVzdEFzeW5jU3RvcmFnZVdyYXBwZXIud3JhcChyZXF1ZXN0QXN5bmNTdG9yYWdlLCB7XG4gICAgICAgICAgICAgICAgICAgIHJlcTogcmVxdWVzdCxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyT3B0czoge1xuICAgICAgICAgICAgICAgICAgICAgICAgb25VcGRhdGVDb29raWVzOiAoY29va2llcyk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb29raWVzRnJvbVJlc3BvbnNlID0gY29va2llcztcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yOiBUT0RPOiBpbnZlc3RpZ2F0ZSB3aHkgcHJldmlld1Byb3BzIGlzbid0IG9uIFJlbmRlck9wdHNcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpZXdQcm9wczogKHByZXJlbmRlck1hbmlmZXN0ID09IG51bGwgPyB2b2lkIDAgOiBwcmVyZW5kZXJNYW5pZmVzdC5wcmV2aWV3KSB8fCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlld01vZGVJZDogXCJkZXZlbG9wbWVudC1pZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpZXdNb2RlRW5jcnlwdGlvbktleTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2aWV3TW9kZVNpZ25pbmdLZXk6IFwiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sICgpPT5wYXJhbXMuaGFuZGxlcihyZXF1ZXN0LCBldmVudCkpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGFyYW1zLmhhbmRsZXIocmVxdWVzdCwgZXZlbnQpO1xuICAgIH0pO1xuICAgIC8vIGNoZWNrIGlmIHJlc3BvbnNlIGlzIGEgUmVzcG9uc2Ugb2JqZWN0XG4gICAgaWYgKHJlc3BvbnNlICYmICEocmVzcG9uc2UgaW5zdGFuY2VvZiBSZXNwb25zZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkV4cGVjdGVkIGFuIGluc3RhbmNlIG9mIFJlc3BvbnNlIHRvIGJlIHJldHVybmVkXCIpO1xuICAgIH1cbiAgICBpZiAocmVzcG9uc2UgJiYgY29va2llc0Zyb21SZXNwb25zZSkge1xuICAgICAgICByZXNwb25zZS5oZWFkZXJzLnNldChcInNldC1jb29raWVcIiwgY29va2llc0Zyb21SZXNwb25zZSk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBGb3IgcmV3cml0ZXMgd2UgbXVzdCBhbHdheXMgaW5jbHVkZSB0aGUgbG9jYWxlIGluIHRoZSBmaW5hbCBwYXRobmFtZVxuICAgKiBzbyB3ZSByZS1jcmVhdGUgdGhlIE5leHRVUkwgZm9yY2luZyBpdCB0byBpbmNsdWRlIGl0IHdoZW4gdGhlIGl0IGlzXG4gICAqIGFuIGludGVybmFsIHJld3JpdGUuIEFsc28gd2UgbWFrZSBzdXJlIHRoZSBvdXRnb2luZyByZXdyaXRlIFVSTCBpc1xuICAgKiBhIGRhdGEgVVJMIGlmIHRoZSByZXF1ZXN0IHdhcyBhIGRhdGEgcmVxdWVzdC5cbiAgICovIGNvbnN0IHJld3JpdGUgPSByZXNwb25zZSA9PSBudWxsID8gdm9pZCAwIDogcmVzcG9uc2UuaGVhZGVycy5nZXQoXCJ4LW1pZGRsZXdhcmUtcmV3cml0ZVwiKTtcbiAgICBpZiAocmVzcG9uc2UgJiYgcmV3cml0ZSkge1xuICAgICAgICBjb25zdCByZXdyaXRlVXJsID0gbmV3IE5leHRVUkwocmV3cml0ZSwge1xuICAgICAgICAgICAgZm9yY2VMb2NhbGU6IHRydWUsXG4gICAgICAgICAgICBoZWFkZXJzOiBwYXJhbXMucmVxdWVzdC5oZWFkZXJzLFxuICAgICAgICAgICAgbmV4dENvbmZpZzogcGFyYW1zLnJlcXVlc3QubmV4dENvbmZpZ1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKCFwcm9jZXNzLmVudi5fX05FWFRfTk9fTUlERExFV0FSRV9VUkxfTk9STUFMSVpFKSB7XG4gICAgICAgICAgICBpZiAocmV3cml0ZVVybC5ob3N0ID09PSByZXF1ZXN0Lm5leHRVcmwuaG9zdCkge1xuICAgICAgICAgICAgICAgIHJld3JpdGVVcmwuYnVpbGRJZCA9IGJ1aWxkSWQgfHwgcmV3cml0ZVVybC5idWlsZElkO1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlLmhlYWRlcnMuc2V0KFwieC1taWRkbGV3YXJlLXJld3JpdGVcIiwgU3RyaW5nKHJld3JpdGVVcmwpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvKipcbiAgICAgKiBXaGVuIHRoZSByZXF1ZXN0IGlzIGEgZGF0YSByZXF1ZXN0IHdlIG11c3Qgc2hvdyBpZiB0aGVyZSB3YXMgYSByZXdyaXRlXG4gICAgICogd2l0aCBhbiBpbnRlcm5hbCBoZWFkZXIgc28gdGhlIGNsaWVudCBrbm93cyB3aGljaCBjb21wb25lbnQgdG8gbG9hZFxuICAgICAqIGZyb20gdGhlIGRhdGEgcmVxdWVzdC5cbiAgICAgKi8gY29uc3QgcmVsYXRpdml6ZWRSZXdyaXRlID0gcmVsYXRpdml6ZVVSTChTdHJpbmcocmV3cml0ZVVybCksIFN0cmluZyhyZXF1ZXN0VXJsKSk7XG4gICAgICAgIGlmIChpc0RhdGFSZXEgJiYgLy8gaWYgdGhlIHJld3JpdGUgaXMgZXh0ZXJuYWwgYW5kIGV4dGVybmFsIHJld3JpdGVcbiAgICAgICAgLy8gcmVzb2x2aW5nIGNvbmZpZyBpcyBlbmFibGVkIGRvbid0IGFkZCB0aGlzIGhlYWRlclxuICAgICAgICAvLyBzbyB0aGUgdXBzdHJlYW0gYXBwIGNhbiBzZXQgaXQgaW5zdGVhZFxuICAgICAgICAhKHByb2Nlc3MuZW52Ll9fTkVYVF9FWFRFUk5BTF9NSURETEVXQVJFX1JFV1JJVEVfUkVTT0xWRSAmJiByZWxhdGl2aXplZFJld3JpdGUubWF0Y2goL2h0dHAocyk/OlxcL1xcLy8pKSkge1xuICAgICAgICAgICAgcmVzcG9uc2UuaGVhZGVycy5zZXQoXCJ4LW5leHRqcy1yZXdyaXRlXCIsIHJlbGF0aXZpemVkUmV3cml0ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAqIEZvciByZWRpcmVjdHMgd2Ugd2lsbCBub3QgaW5jbHVkZSB0aGUgbG9jYWxlIGluIGNhc2Ugd2hlbiBpdCBpcyB0aGVcbiAgICogZGVmYXVsdCBhbmQgd2UgbXVzdCBhbHNvIG1ha2Ugc3VyZSB0aGUgb3V0Z29pbmcgVVJMIGlzIGEgZGF0YSBvbmUgaWZcbiAgICogdGhlIGluY29taW5nIHJlcXVlc3Qgd2FzIGEgZGF0YSByZXF1ZXN0LlxuICAgKi8gY29uc3QgcmVkaXJlY3QgPSByZXNwb25zZSA9PSBudWxsID8gdm9pZCAwIDogcmVzcG9uc2UuaGVhZGVycy5nZXQoXCJMb2NhdGlvblwiKTtcbiAgICBpZiAocmVzcG9uc2UgJiYgcmVkaXJlY3QgJiYgIWlzRWRnZVJlbmRlcmluZykge1xuICAgICAgICBjb25zdCByZWRpcmVjdFVSTCA9IG5ldyBOZXh0VVJMKHJlZGlyZWN0LCB7XG4gICAgICAgICAgICBmb3JjZUxvY2FsZTogZmFsc2UsXG4gICAgICAgICAgICBoZWFkZXJzOiBwYXJhbXMucmVxdWVzdC5oZWFkZXJzLFxuICAgICAgICAgICAgbmV4dENvbmZpZzogcGFyYW1zLnJlcXVlc3QubmV4dENvbmZpZ1xuICAgICAgICB9KTtcbiAgICAgICAgLyoqXG4gICAgICogUmVzcG9uc2VzIGNyZWF0ZWQgZnJvbSByZWRpcmVjdHMgaGF2ZSBpbW11dGFibGUgaGVhZGVycyBzbyB3ZSBoYXZlXG4gICAgICogdG8gY2xvbmUgdGhlIHJlc3BvbnNlIHRvIGJlIGFibGUgdG8gbW9kaWZ5IGl0LlxuICAgICAqLyByZXNwb25zZSA9IG5ldyBSZXNwb25zZShyZXNwb25zZS5ib2R5LCByZXNwb25zZSk7XG4gICAgICAgIGlmICghcHJvY2Vzcy5lbnYuX19ORVhUX05PX01JRERMRVdBUkVfVVJMX05PUk1BTElaRSkge1xuICAgICAgICAgICAgaWYgKHJlZGlyZWN0VVJMLmhvc3QgPT09IHJlcXVlc3QubmV4dFVybC5ob3N0KSB7XG4gICAgICAgICAgICAgICAgcmVkaXJlY3RVUkwuYnVpbGRJZCA9IGJ1aWxkSWQgfHwgcmVkaXJlY3RVUkwuYnVpbGRJZDtcbiAgICAgICAgICAgICAgICByZXNwb25zZS5oZWFkZXJzLnNldChcIkxvY2F0aW9uXCIsIFN0cmluZyhyZWRpcmVjdFVSTCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8qKlxuICAgICAqIFdoZW4gdGhlIHJlcXVlc3QgaXMgYSBkYXRhIHJlcXVlc3Qgd2UgY2FuJ3QgdXNlIHRoZSBsb2NhdGlvbiBoZWFkZXIgYXNcbiAgICAgKiBpdCBtYXkgZW5kIHVwIHdpdGggQ09SUyBlcnJvci4gSW5zdGVhZCB3ZSBtYXAgdG8gYW4gaW50ZXJuYWwgaGVhZGVyIHNvXG4gICAgICogdGhlIGNsaWVudCBrbm93cyB0aGUgZGVzdGluYXRpb24uXG4gICAgICovIGlmIChpc0RhdGFSZXEpIHtcbiAgICAgICAgICAgIHJlc3BvbnNlLmhlYWRlcnMuZGVsZXRlKFwiTG9jYXRpb25cIik7XG4gICAgICAgICAgICByZXNwb25zZS5oZWFkZXJzLnNldChcIngtbmV4dGpzLXJlZGlyZWN0XCIsIHJlbGF0aXZpemVVUkwoU3RyaW5nKHJlZGlyZWN0VVJMKSwgU3RyaW5nKHJlcXVlc3RVcmwpKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgZmluYWxSZXNwb25zZSA9IHJlc3BvbnNlID8gcmVzcG9uc2UgOiBOZXh0UmVzcG9uc2UubmV4dCgpO1xuICAgIC8vIEZsaWdodCBoZWFkZXJzIGFyZSBub3Qgb3ZlcnJpZGFibGUgLyByZW1vdmFibGUgc28gdGhleSBhcmUgYXBwbGllZCBhdCB0aGUgZW5kLlxuICAgIGNvbnN0IG1pZGRsZXdhcmVPdmVycmlkZUhlYWRlcnMgPSBmaW5hbFJlc3BvbnNlLmhlYWRlcnMuZ2V0KFwieC1taWRkbGV3YXJlLW92ZXJyaWRlLWhlYWRlcnNcIik7XG4gICAgY29uc3Qgb3ZlcndyaXR0ZW5IZWFkZXJzID0gW107XG4gICAgaWYgKG1pZGRsZXdhcmVPdmVycmlkZUhlYWRlcnMpIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgZmxpZ2h0SGVhZGVycyl7XG4gICAgICAgICAgICBmaW5hbFJlc3BvbnNlLmhlYWRlcnMuc2V0KGB4LW1pZGRsZXdhcmUtcmVxdWVzdC0ke2tleX1gLCB2YWx1ZSk7XG4gICAgICAgICAgICBvdmVyd3JpdHRlbkhlYWRlcnMucHVzaChrZXkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvdmVyd3JpdHRlbkhlYWRlcnMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgZmluYWxSZXNwb25zZS5oZWFkZXJzLnNldChcIngtbWlkZGxld2FyZS1vdmVycmlkZS1oZWFkZXJzXCIsIG1pZGRsZXdhcmVPdmVycmlkZUhlYWRlcnMgKyBcIixcIiArIG92ZXJ3cml0dGVuSGVhZGVycy5qb2luKFwiLFwiKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzcG9uc2U6IGZpbmFsUmVzcG9uc2UsXG4gICAgICAgIHdhaXRVbnRpbDogUHJvbWlzZS5hbGwoZXZlbnRbd2FpdFVudGlsU3ltYm9sXSksXG4gICAgICAgIGZldGNoTWV0cmljczogcmVxdWVzdC5mZXRjaE1ldHJpY3NcbiAgICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGFwdGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJQYWdlU2lnbmF0dXJlRXJyb3IiLCJmcm9tTm9kZU91dGdvaW5nSHR0cEhlYWRlcnMiLCJOZXh0RmV0Y2hFdmVudCIsIk5leHRSZXF1ZXN0IiwiTmV4dFJlc3BvbnNlIiwicmVsYXRpdml6ZVVSTCIsIndhaXRVbnRpbFN5bWJvbCIsIk5leHRVUkwiLCJzdHJpcEludGVybmFsU2VhcmNoUGFyYW1zIiwibm9ybWFsaXplUnNjVVJMIiwiRkxJR0hUX1BBUkFNRVRFUlMiLCJORVhUX1FVRVJZX1BBUkFNX1BSRUZJWCIsImVuc3VyZUluc3RydW1lbnRhdGlvblJlZ2lzdGVyZWQiLCJSZXF1ZXN0QXN5bmNTdG9yYWdlV3JhcHBlciIsInJlcXVlc3RBc3luY1N0b3JhZ2UiLCJnZXRUcmFjZXIiLCJNaWRkbGV3YXJlU3BhbiIsIk5leHRSZXF1ZXN0SGludCIsImNvbnN0cnVjdG9yIiwicGFyYW1zIiwiaW5wdXQiLCJpbml0Iiwic291cmNlUGFnZSIsInBhZ2UiLCJyZXF1ZXN0IiwicmVzcG9uZFdpdGgiLCJ3YWl0VW50aWwiLCJoZWFkZXJzR2V0dGVyIiwia2V5cyIsImhlYWRlcnMiLCJBcnJheSIsImZyb20iLCJnZXQiLCJrZXkiLCJ1bmRlZmluZWQiLCJwcm9wYWdhdG9yIiwiZm4iLCJ0cmFjZXIiLCJ3aXRoUHJvcGFnYXRlZENvbnRleHQiLCJ0ZXN0QXBpc0ludGVyY2VwdGVkIiwiZW5zdXJlVGVzdEFwaXNJbnRlcmNlcHRlZCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BSSVZBVEVfVEVTVF9QUk9YWSIsImludGVyY2VwdFRlc3RBcGlzIiwid3JhcFJlcXVlc3RIYW5kbGVyIiwicmVxdWlyZSIsImFkYXB0ZXIiLCJpc0VkZ2VSZW5kZXJpbmciLCJzZWxmIiwiX19CVUlMRF9NQU5JRkVTVCIsInByZXJlbmRlck1hbmlmZXN0IiwiX19QUkVSRU5ERVJfTUFOSUZFU1QiLCJKU09OIiwicGFyc2UiLCJ1cmwiLCJyZXF1ZXN0VXJsIiwibmV4dENvbmZpZyIsInNlYXJjaFBhcmFtcyIsInZhbHVlIiwiZ2V0QWxsIiwic3RhcnRzV2l0aCIsIm5vcm1hbGl6ZWRLZXkiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJkZWxldGUiLCJ2YWwiLCJhcHBlbmQiLCJidWlsZElkIiwiaXNEYXRhUmVxIiwicGF0aG5hbWUiLCJyZXF1ZXN0SGVhZGVycyIsImZsaWdodEhlYWRlcnMiLCJNYXAiLCJwYXJhbSIsInRvU3RyaW5nIiwidG9Mb3dlckNhc2UiLCJzZXQiLCJub3JtYWxpemVVcmwiLCJfX05FWFRfTk9fTUlERExFV0FSRV9VUkxfTk9STUFMSVpFIiwiVVJMIiwiYm9keSIsImdlbyIsImlwIiwibWV0aG9kIiwic2lnbmFsIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2xvYmFsVGhpcyIsIl9faW5jcmVtZW50YWxDYWNoZSIsIkluY3JlbWVudGFsQ2FjaGUiLCJhcHBEaXIiLCJmZXRjaENhY2hlIiwibWluaW1hbE1vZGUiLCJmZXRjaENhY2hlS2V5UHJlZml4IiwiX19ORVhUX0ZFVENIX0NBQ0hFX0tFWV9QUkVGSVgiLCJkZXYiLCJyZXF1ZXN0UHJvdG9jb2wiLCJnZXRQcmVyZW5kZXJNYW5pZmVzdCIsInZlcnNpb24iLCJyb3V0ZXMiLCJkeW5hbWljUm91dGVzIiwibm90Rm91bmRSb3V0ZXMiLCJwcmV2aWV3IiwicHJldmlld01vZGVJZCIsImV2ZW50IiwicmVzcG9uc2UiLCJjb29raWVzRnJvbVJlc3BvbnNlIiwiaXNNaWRkbGV3YXJlIiwidHJhY2UiLCJleGVjdXRlIiwic3Bhbk5hbWUiLCJuZXh0VXJsIiwiYXR0cmlidXRlcyIsIndyYXAiLCJyZXEiLCJyZW5kZXJPcHRzIiwib25VcGRhdGVDb29raWVzIiwiY29va2llcyIsInByZXZpZXdQcm9wcyIsInByZXZpZXdNb2RlRW5jcnlwdGlvbktleSIsInByZXZpZXdNb2RlU2lnbmluZ0tleSIsImhhbmRsZXIiLCJSZXNwb25zZSIsIlR5cGVFcnJvciIsInJld3JpdGUiLCJyZXdyaXRlVXJsIiwiZm9yY2VMb2NhbGUiLCJob3N0IiwiU3RyaW5nIiwicmVsYXRpdml6ZWRSZXdyaXRlIiwiX19ORVhUX0VYVEVSTkFMX01JRERMRVdBUkVfUkVXUklURV9SRVNPTFZFIiwibWF0Y2giLCJyZWRpcmVjdCIsInJlZGlyZWN0VVJMIiwiZmluYWxSZXNwb25zZSIsIm5leHQiLCJtaWRkbGV3YXJlT3ZlcnJpZGVIZWFkZXJzIiwib3ZlcndyaXR0ZW5IZWFkZXJzIiwicHVzaCIsImpvaW4iLCJQcm9taXNlIiwiYWxsIiwiZmV0Y2hNZXRyaWNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/adapter.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/error.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/error.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageSignatureError: () => (/* binding */ PageSignatureError),\n/* harmony export */   RemovedPageError: () => (/* binding */ RemovedPageError),\n/* harmony export */   RemovedUAError: () => (/* binding */ RemovedUAError)\n/* harmony export */ });\nclass PageSignatureError extends Error {\n  constructor({\n    page\n  }) {\n    super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n  }\n}\nclass RemovedPageError extends Error {\n  constructor() {\n    super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n  }\n}\nclass RemovedUAError extends Error {\n  constructor() {\n    super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxNQUFNQSxrQkFBa0IsU0FBU0MsS0FBSyxDQUFDO0VBQzFDQyxXQUFXQSxDQUFDO0lBQUVDO0VBQUssQ0FBQyxFQUFDO0lBQ2pCLEtBQUssQ0FBRSxtQkFBa0JBLElBQUs7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxDQUFDO0VBQ0E7QUFDSjtBQUNPLE1BQU1DLGdCQUFnQixTQUFTSCxLQUFLLENBQUM7RUFDeENDLFdBQVdBLENBQUEsRUFBRTtJQUNULEtBQUssQ0FBRTtBQUNmO0FBQ0EsR0FBRyxDQUFDO0VBQ0E7QUFDSjtBQUNPLE1BQU1HLGNBQWMsU0FBU0osS0FBSyxDQUFDO0VBQ3RDQyxXQUFXQSxDQUFBLEVBQUU7SUFDVCxLQUFLLENBQUU7QUFDZjtBQUNBLEdBQUcsQ0FBQztFQUNBO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9lcnJvci5qcz9lYWQzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBQYWdlU2lnbmF0dXJlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoeyBwYWdlIH0pe1xuICAgICAgICBzdXBlcihgVGhlIG1pZGRsZXdhcmUgXCIke3BhZ2V9XCIgYWNjZXB0cyBhbiBhc3luYyBBUEkgZGlyZWN0bHkgd2l0aCB0aGUgZm9ybTpcbiAgXG4gIGV4cG9ydCBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3QsIGV2ZW50KSB7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCgnL25ldy1sb2NhdGlvbicpXG4gIH1cbiAgXG4gIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1uZXctc2lnbmF0dXJlXG4gIGApO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBSZW1vdmVkUGFnZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIHN1cGVyKGBUaGUgcmVxdWVzdC5wYWdlIGhhcyBiZWVuIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIFxcYFVSTFBhdHRlcm5cXGAuXG4gIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1yZXF1ZXN0LXBhZ2VcbiAgYCk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFJlbW92ZWRVQUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIHN1cGVyKGBUaGUgcmVxdWVzdC51YSBoYXMgYmVlbiByZW1vdmVkIGluIGZhdm91ciBvZiBcXGB1c2VyQWdlbnRcXGAgZnVuY3Rpb24uXG4gIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1wYXJzZS11c2VyLWFnZW50XG4gIGApO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbIlBhZ2VTaWduYXR1cmVFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJwYWdlIiwiUmVtb3ZlZFBhZ2VFcnJvciIsIlJlbW92ZWRVQUVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/error.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/exports/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/exports/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageResponse: () => (/* reexport safe */ _spec_extension_image_response__WEBPACK_IMPORTED_MODULE_0__.ImageResponse),\n/* harmony export */   NextRequest: () => (/* reexport safe */ _spec_extension_request__WEBPACK_IMPORTED_MODULE_1__.NextRequest),\n/* harmony export */   NextResponse: () => (/* reexport safe */ _spec_extension_response__WEBPACK_IMPORTED_MODULE_2__.NextResponse),\n/* harmony export */   URLPattern: () => (/* reexport safe */ _spec_extension_url_pattern__WEBPACK_IMPORTED_MODULE_4__.URLPattern),\n/* harmony export */   userAgent: () => (/* reexport safe */ _spec_extension_user_agent__WEBPACK_IMPORTED_MODULE_3__.userAgent),\n/* harmony export */   userAgentFromString: () => (/* reexport safe */ _spec_extension_user_agent__WEBPACK_IMPORTED_MODULE_3__.userAgentFromString)\n/* harmony export */ });\n/* harmony import */ var _spec_extension_image_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../spec-extension/image-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/image-response.js\");\n/* harmony import */ var _spec_extension_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../spec-extension/request */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\");\n/* harmony import */ var _spec_extension_response__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\");\n/* harmony import */ var _spec_extension_user_agent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../spec-extension/user-agent */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/user-agent.js\");\n/* harmony import */ var _spec_extension_url_pattern__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../spec-extension/url-pattern */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/url-pattern.js\");\n// Alias index file of next/server for edge runtime for tree-shaking purpose\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9leHBvcnRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDaUU7QUFDVDtBQUNFO0FBQ29CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZXhwb3J0cy9pbmRleC5qcz81NWZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEFsaWFzIGluZGV4IGZpbGUgb2YgbmV4dC9zZXJ2ZXIgZm9yIGVkZ2UgcnVudGltZSBmb3IgdHJlZS1zaGFraW5nIHB1cnBvc2VcbmV4cG9ydCB7IEltYWdlUmVzcG9uc2UgfSBmcm9tIFwiLi4vc3BlYy1leHRlbnNpb24vaW1hZ2UtcmVzcG9uc2VcIjtcbmV4cG9ydCB7IE5leHRSZXF1ZXN0IH0gZnJvbSBcIi4uL3NwZWMtZXh0ZW5zaW9uL3JlcXVlc3RcIjtcbmV4cG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gXCIuLi9zcGVjLWV4dGVuc2lvbi9yZXNwb25zZVwiO1xuZXhwb3J0IHsgdXNlckFnZW50LCB1c2VyQWdlbnRGcm9tU3RyaW5nIH0gZnJvbSBcIi4uL3NwZWMtZXh0ZW5zaW9uL3VzZXItYWdlbnRcIjtcbmV4cG9ydCB7IFVSTFBhdHRlcm4gfSBmcm9tIFwiLi4vc3BlYy1leHRlbnNpb24vdXJsLXBhdHRlcm5cIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIkltYWdlUmVzcG9uc2UiLCJOZXh0UmVxdWVzdCIsIk5leHRSZXNwb25zZSIsInVzZXJBZ2VudCIsInVzZXJBZ2VudEZyb21TdHJpbmciLCJVUkxQYXR0ZXJuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/exports/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/globals.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/globals.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureInstrumentationRegistered: () => (/* binding */ ensureInstrumentationRegistered)\n/* harmony export */ });\nasync function registerInstrumentation() {\n  const register = \"_ENTRIES\" in globalThis && _ENTRIES.middleware_instrumentation && (await _ENTRIES.middleware_instrumentation).register;\n  if (register) {\n    try {\n      await register();\n    } catch (err) {\n      err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n      throw err;\n    }\n  }\n}\nlet registerInstrumentationPromise = null;\nfunction ensureInstrumentationRegistered() {\n  if (!registerInstrumentationPromise) {\n    registerInstrumentationPromise = registerInstrumentation();\n  }\n  return registerInstrumentationPromise;\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n  // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n  return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n  const proxy = new Proxy(function () {}, {\n    get(_obj, prop) {\n      if (prop === \"then\") {\n        return {};\n      }\n      throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n    },\n    construct() {\n      throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n    },\n    apply(_target, _this, args) {\n      if (typeof args[0] === \"function\") {\n        return args[0](proxy);\n      }\n      throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n    }\n  });\n  return new Proxy({}, {\n    get: () => proxy\n  });\n}\nfunction enhanceGlobals() {\n  // The condition is true when the \"process\" module is provided\n  if (process !== __webpack_require__.g.process) {\n    // prefer local process but global.process has correct \"env\"\n    process.env = __webpack_require__.g.process.env;\n    __webpack_require__.g.process = process;\n  }\n  // to allow building code that import but does not use node.js modules,\n  // webpack will expect this function to exist in global scope\n  Object.defineProperty(globalThis, \"__import_unsupported\", {\n    value: __import_unsupported,\n    enumerable: false,\n    configurable: false\n  });\n  // Eagerly fire instrumentation hook to make the startup faster.\n  void ensureInstrumentationRegistered();\n}\nenhanceGlobals();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9nbG9iYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxlQUFlQSx1QkFBdUJBLENBQUEsRUFBRztFQUNyQyxNQUFNQyxRQUFRLEdBQUcsVUFBVSxJQUFJQyxVQUFVLElBQUlDLFFBQVEsQ0FBQ0MsMEJBQTBCLElBQUksQ0FBQyxNQUFNRCxRQUFRLENBQUNDLDBCQUEwQixFQUFFSCxRQUFRO0VBQ3hJLElBQUlBLFFBQVEsRUFBRTtJQUNWLElBQUk7TUFDQSxNQUFNQSxRQUFRLENBQUMsQ0FBQztJQUNwQixDQUFDLENBQUMsT0FBT0ksR0FBRyxFQUFFO01BQ1ZBLEdBQUcsQ0FBQ0MsT0FBTyxHQUFJLHlEQUF3REQsR0FBRyxDQUFDQyxPQUFRLEVBQUM7TUFDcEYsTUFBTUQsR0FBRztJQUNiO0VBQ0o7QUFDSjtBQUNBLElBQUlFLDhCQUE4QixHQUFHLElBQUk7QUFDbEMsU0FBU0MsK0JBQStCQSxDQUFBLEVBQUc7RUFDOUMsSUFBSSxDQUFDRCw4QkFBOEIsRUFBRTtJQUNqQ0EsOEJBQThCLEdBQUdQLHVCQUF1QixDQUFDLENBQUM7RUFDOUQ7RUFDQSxPQUFPTyw4QkFBOEI7QUFDekM7QUFDQSxTQUFTRSxnQ0FBZ0NBLENBQUNDLE1BQU0sRUFBRTtFQUM5QztFQUNBLE9BQVEsOENBQTZDQSxNQUFPO0FBQ2hFLHlFQUF5RTtBQUN6RTtBQUNBLFNBQVNDLG9CQUFvQkEsQ0FBQ0MsVUFBVSxFQUFFO0VBQ3RDLE1BQU1DLEtBQUssR0FBRyxJQUFJQyxLQUFLLENBQUMsWUFBVyxDQUFDLENBQUMsRUFBRTtJQUNuQ0MsR0FBR0EsQ0FBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUU7TUFDYixJQUFJQSxJQUFJLEtBQUssTUFBTSxFQUFFO1FBQ2pCLE9BQU8sQ0FBQyxDQUFDO01BQ2I7TUFDQSxNQUFNLElBQUlDLEtBQUssQ0FBQ1QsZ0NBQWdDLENBQUNHLFVBQVUsQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFDRE8sU0FBU0EsQ0FBQSxFQUFJO01BQ1QsTUFBTSxJQUFJRCxLQUFLLENBQUNULGdDQUFnQyxDQUFDRyxVQUFVLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBQ0RRLEtBQUtBLENBQUVDLE9BQU8sRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUU7TUFDekIsSUFBSSxPQUFPQSxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssVUFBVSxFQUFFO1FBQy9CLE9BQU9BLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQ1YsS0FBSyxDQUFDO01BQ3pCO01BQ0EsTUFBTSxJQUFJSyxLQUFLLENBQUNULGdDQUFnQyxDQUFDRyxVQUFVLENBQUMsQ0FBQztJQUNqRTtFQUNKLENBQUMsQ0FBQztFQUNGLE9BQU8sSUFBSUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFO0lBQ2pCQyxHQUFHLEVBQUVBLENBQUEsS0FBSUY7RUFDYixDQUFDLENBQUM7QUFDTjtBQUNBLFNBQVNXLGNBQWNBLENBQUEsRUFBRztFQUN0QjtFQUNBLElBQUlDLE9BQU8sS0FBS0MscUJBQU0sQ0FBQ0QsT0FBTyxFQUFFO0lBQzVCO0lBQ0FBLE9BQU8sQ0FBQ0UsR0FBRyxHQUFHRCxxQkFBTSxDQUFDRCxPQUFPLENBQUNFLEdBQUc7SUFDaENELHFCQUFNLENBQUNELE9BQU8sR0FBR0EsT0FBTztFQUM1QjtFQUNBO0VBQ0E7RUFDQUcsTUFBTSxDQUFDQyxjQUFjLENBQUMzQixVQUFVLEVBQUUsc0JBQXNCLEVBQUU7SUFDdEQ0QixLQUFLLEVBQUVuQixvQkFBb0I7SUFDM0JvQixVQUFVLEVBQUUsS0FBSztJQUNqQkMsWUFBWSxFQUFFO0VBQ2xCLENBQUMsQ0FBQztFQUNGO0VBQ0EsS0FBS3hCLCtCQUErQixDQUFDLENBQUM7QUFDMUM7QUFDQWdCLGNBQWMsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZ2xvYmFscy5qcz81YzZhIl0sInNvdXJjZXNDb250ZW50IjpbImFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uKCkge1xuICAgIGNvbnN0IHJlZ2lzdGVyID0gXCJfRU5UUklFU1wiIGluIGdsb2JhbFRoaXMgJiYgX0VOVFJJRVMubWlkZGxld2FyZV9pbnN0cnVtZW50YXRpb24gJiYgKGF3YWl0IF9FTlRSSUVTLm1pZGRsZXdhcmVfaW5zdHJ1bWVudGF0aW9uKS5yZWdpc3RlcjtcbiAgICBpZiAocmVnaXN0ZXIpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGF3YWl0IHJlZ2lzdGVyKCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgZXJyLm1lc3NhZ2UgPSBgQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgbG9hZGluZyBpbnN0cnVtZW50YXRpb24gaG9vazogJHtlcnIubWVzc2FnZX1gO1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgfVxufVxubGV0IHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uUHJvbWlzZSA9IG51bGw7XG5leHBvcnQgZnVuY3Rpb24gZW5zdXJlSW5zdHJ1bWVudGF0aW9uUmVnaXN0ZXJlZCgpIHtcbiAgICBpZiAoIXJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uUHJvbWlzZSkge1xuICAgICAgICByZWdpc3Rlckluc3RydW1lbnRhdGlvblByb21pc2UgPSByZWdpc3Rlckluc3RydW1lbnRhdGlvbigpO1xuICAgIH1cbiAgICByZXR1cm4gcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25Qcm9taXNlO1xufVxuZnVuY3Rpb24gZ2V0VW5zdXBwb3J0ZWRNb2R1bGVFcnJvck1lc3NhZ2UobW9kdWxlKSB7XG4gICAgLy8gd2FybmluZzogaWYgeW91IGNoYW5nZSB0aGVzZSBtZXNzYWdlcywgeW91IG11c3QgYWRqdXN0IGhvdyByZWFjdC1kZXYtb3ZlcmxheSdzIG1pZGRsZXdhcmUgZGV0ZWN0cyBtb2R1bGVzIG5vdCBmb3VuZFxuICAgIHJldHVybiBgVGhlIGVkZ2UgcnVudGltZSBkb2VzIG5vdCBzdXBwb3J0IE5vZGUuanMgJyR7bW9kdWxlfScgbW9kdWxlLlxuTGVhcm4gTW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbm9kZS1tb2R1bGUtaW4tZWRnZS1ydW50aW1lYDtcbn1cbmZ1bmN0aW9uIF9faW1wb3J0X3Vuc3VwcG9ydGVkKG1vZHVsZU5hbWUpIHtcbiAgICBjb25zdCBwcm94eSA9IG5ldyBQcm94eShmdW5jdGlvbigpIHt9LCB7XG4gICAgICAgIGdldCAoX29iaiwgcHJvcCkge1xuICAgICAgICAgICAgaWYgKHByb3AgPT09IFwidGhlblwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGdldFVuc3VwcG9ydGVkTW9kdWxlRXJyb3JNZXNzYWdlKG1vZHVsZU5hbWUpKTtcbiAgICAgICAgfSxcbiAgICAgICAgY29uc3RydWN0ICgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihnZXRVbnN1cHBvcnRlZE1vZHVsZUVycm9yTWVzc2FnZShtb2R1bGVOYW1lKSk7XG4gICAgICAgIH0sXG4gICAgICAgIGFwcGx5IChfdGFyZ2V0LCBfdGhpcywgYXJncykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBhcmdzWzBdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXJnc1swXShwcm94eSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZ2V0VW5zdXBwb3J0ZWRNb2R1bGVFcnJvck1lc3NhZ2UobW9kdWxlTmFtZSkpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIG5ldyBQcm94eSh7fSwge1xuICAgICAgICBnZXQ6ICgpPT5wcm94eVxuICAgIH0pO1xufVxuZnVuY3Rpb24gZW5oYW5jZUdsb2JhbHMoKSB7XG4gICAgLy8gVGhlIGNvbmRpdGlvbiBpcyB0cnVlIHdoZW4gdGhlIFwicHJvY2Vzc1wiIG1vZHVsZSBpcyBwcm92aWRlZFxuICAgIGlmIChwcm9jZXNzICE9PSBnbG9iYWwucHJvY2Vzcykge1xuICAgICAgICAvLyBwcmVmZXIgbG9jYWwgcHJvY2VzcyBidXQgZ2xvYmFsLnByb2Nlc3MgaGFzIGNvcnJlY3QgXCJlbnZcIlxuICAgICAgICBwcm9jZXNzLmVudiA9IGdsb2JhbC5wcm9jZXNzLmVudjtcbiAgICAgICAgZ2xvYmFsLnByb2Nlc3MgPSBwcm9jZXNzO1xuICAgIH1cbiAgICAvLyB0byBhbGxvdyBidWlsZGluZyBjb2RlIHRoYXQgaW1wb3J0IGJ1dCBkb2VzIG5vdCB1c2Ugbm9kZS5qcyBtb2R1bGVzLFxuICAgIC8vIHdlYnBhY2sgd2lsbCBleHBlY3QgdGhpcyBmdW5jdGlvbiB0byBleGlzdCBpbiBnbG9iYWwgc2NvcGVcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZ2xvYmFsVGhpcywgXCJfX2ltcG9ydF91bnN1cHBvcnRlZFwiLCB7XG4gICAgICAgIHZhbHVlOiBfX2ltcG9ydF91bnN1cHBvcnRlZCxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2VcbiAgICB9KTtcbiAgICAvLyBFYWdlcmx5IGZpcmUgaW5zdHJ1bWVudGF0aW9uIGhvb2sgdG8gbWFrZSB0aGUgc3RhcnR1cCBmYXN0ZXIuXG4gICAgdm9pZCBlbnN1cmVJbnN0cnVtZW50YXRpb25SZWdpc3RlcmVkKCk7XG59XG5lbmhhbmNlR2xvYmFscygpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbG9iYWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJyZWdpc3Rlckluc3RydW1lbnRhdGlvbiIsInJlZ2lzdGVyIiwiZ2xvYmFsVGhpcyIsIl9FTlRSSUVTIiwibWlkZGxld2FyZV9pbnN0cnVtZW50YXRpb24iLCJlcnIiLCJtZXNzYWdlIiwicmVnaXN0ZXJJbnN0cnVtZW50YXRpb25Qcm9taXNlIiwiZW5zdXJlSW5zdHJ1bWVudGF0aW9uUmVnaXN0ZXJlZCIsImdldFVuc3VwcG9ydGVkTW9kdWxlRXJyb3JNZXNzYWdlIiwibW9kdWxlIiwiX19pbXBvcnRfdW5zdXBwb3J0ZWQiLCJtb2R1bGVOYW1lIiwicHJveHkiLCJQcm94eSIsImdldCIsIl9vYmoiLCJwcm9wIiwiRXJyb3IiLCJjb25zdHJ1Y3QiLCJhcHBseSIsIl90YXJnZXQiLCJfdGhpcyIsImFyZ3MiLCJlbmhhbmNlR2xvYmFscyIsInByb2Nlc3MiLCJnbG9iYWwiLCJlbnYiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/globals.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/next-url.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/next-url.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextURL: () => (/* binding */ NextURL)\n/* harmony export */ });\n/* harmony import */ var _shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/lib/i18n/detect-domain-locale */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\");\n/* harmony import */ var _shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/lib/router/utils/format-next-pathname-info */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\");\n/* harmony import */ var _shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/lib/get-hostname */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js\");\n/* harmony import */ var _shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared/lib/router/utils/get-next-pathname-info */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\");\n\n\n\n\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n  return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nclass NextURL {\n  constructor(input, baseOrOpts, opts) {\n    let base;\n    let options;\n    if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n      base = baseOrOpts;\n      options = opts || {};\n    } else {\n      options = opts || baseOrOpts || {};\n    }\n    this[Internal] = {\n      url: parseURL(input, base ?? options.base),\n      options: options,\n      basePath: \"\"\n    };\n    this.analyze();\n  }\n  analyze() {\n    var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n    const info = (0,_shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__.getNextPathnameInfo)(this[Internal].url.pathname, {\n      nextConfig: this[Internal].options.nextConfig,\n      parseData: !undefined,\n      i18nProvider: this[Internal].options.i18nProvider\n    });\n    const hostname = (0,_shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__.getHostname)(this[Internal].url, this[Internal].options.headers);\n    this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : (0,_shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__.detectDomainLocale)((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n    const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n    this[Internal].url.pathname = info.pathname;\n    this[Internal].defaultLocale = defaultLocale;\n    this[Internal].basePath = info.basePath ?? \"\";\n    this[Internal].buildId = info.buildId;\n    this[Internal].locale = info.locale ?? defaultLocale;\n    this[Internal].trailingSlash = info.trailingSlash;\n  }\n  formatPathname() {\n    return (0,_shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__.formatNextPathnameInfo)({\n      basePath: this[Internal].basePath,\n      buildId: this[Internal].buildId,\n      defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n      locale: this[Internal].locale,\n      pathname: this[Internal].url.pathname,\n      trailingSlash: this[Internal].trailingSlash\n    });\n  }\n  formatSearch() {\n    return this[Internal].url.search;\n  }\n  get buildId() {\n    return this[Internal].buildId;\n  }\n  set buildId(buildId) {\n    this[Internal].buildId = buildId;\n  }\n  get locale() {\n    return this[Internal].locale ?? \"\";\n  }\n  set locale(locale) {\n    var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n    if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n      throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n    }\n    this[Internal].locale = locale;\n  }\n  get defaultLocale() {\n    return this[Internal].defaultLocale;\n  }\n  get domainLocale() {\n    return this[Internal].domainLocale;\n  }\n  get searchParams() {\n    return this[Internal].url.searchParams;\n  }\n  get host() {\n    return this[Internal].url.host;\n  }\n  set host(value) {\n    this[Internal].url.host = value;\n  }\n  get hostname() {\n    return this[Internal].url.hostname;\n  }\n  set hostname(value) {\n    this[Internal].url.hostname = value;\n  }\n  get port() {\n    return this[Internal].url.port;\n  }\n  set port(value) {\n    this[Internal].url.port = value;\n  }\n  get protocol() {\n    return this[Internal].url.protocol;\n  }\n  set protocol(value) {\n    this[Internal].url.protocol = value;\n  }\n  get href() {\n    const pathname = this.formatPathname();\n    const search = this.formatSearch();\n    return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n  }\n  set href(url) {\n    this[Internal].url = parseURL(url);\n    this.analyze();\n  }\n  get origin() {\n    return this[Internal].url.origin;\n  }\n  get pathname() {\n    return this[Internal].url.pathname;\n  }\n  set pathname(value) {\n    this[Internal].url.pathname = value;\n  }\n  get hash() {\n    return this[Internal].url.hash;\n  }\n  set hash(value) {\n    this[Internal].url.hash = value;\n  }\n  get search() {\n    return this[Internal].url.search;\n  }\n  set search(value) {\n    this[Internal].url.search = value;\n  }\n  get password() {\n    return this[Internal].url.password;\n  }\n  set password(value) {\n    this[Internal].url.password = value;\n  }\n  get username() {\n    return this[Internal].url.username;\n  }\n  set username(value) {\n    this[Internal].url.username = value;\n  }\n  get basePath() {\n    return this[Internal].basePath;\n  }\n  set basePath(value) {\n    this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n  }\n  toString() {\n    return this.href;\n  }\n  toJSON() {\n    return this.href;\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return {\n      href: this.href,\n      origin: this.origin,\n      protocol: this.protocol,\n      username: this.username,\n      password: this.password,\n      host: this.host,\n      hostname: this.hostname,\n      port: this.port,\n      pathname: this.pathname,\n      search: this.search,\n      searchParams: this.searchParams,\n      hash: this.hash\n    };\n  }\n  clone() {\n    return new NextURL(String(this), this[Internal].options);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9uZXh0LXVybC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnRjtBQUNpQjtBQUNyQztBQUMrQjtBQUMzRixNQUFNSSx3QkFBd0IsR0FBRywwRkFBMEY7QUFDM0gsU0FBU0MsUUFBUUEsQ0FBQ0MsR0FBRyxFQUFFQyxJQUFJLEVBQUU7RUFDekIsT0FBTyxJQUFJQyxHQUFHLENBQUNDLE1BQU0sQ0FBQ0gsR0FBRyxDQUFDLENBQUNJLE9BQU8sQ0FBQ04sd0JBQXdCLEVBQUUsV0FBVyxDQUFDLEVBQUVHLElBQUksSUFBSUUsTUFBTSxDQUFDRixJQUFJLENBQUMsQ0FBQ0csT0FBTyxDQUFDTix3QkFBd0IsRUFBRSxXQUFXLENBQUMsQ0FBQztBQUNuSjtBQUNBLE1BQU1PLFFBQVEsR0FBR0MsTUFBTSxDQUFDLGlCQUFpQixDQUFDO0FBQ25DLE1BQU1DLE9BQU8sQ0FBQztFQUNqQkMsV0FBV0EsQ0FBQ0MsS0FBSyxFQUFFQyxVQUFVLEVBQUVDLElBQUksRUFBQztJQUNoQyxJQUFJVixJQUFJO0lBQ1IsSUFBSVcsT0FBTztJQUNYLElBQUksT0FBT0YsVUFBVSxLQUFLLFFBQVEsSUFBSSxVQUFVLElBQUlBLFVBQVUsSUFBSSxPQUFPQSxVQUFVLEtBQUssUUFBUSxFQUFFO01BQzlGVCxJQUFJLEdBQUdTLFVBQVU7TUFDakJFLE9BQU8sR0FBR0QsSUFBSSxJQUFJLENBQUMsQ0FBQztJQUN4QixDQUFDLE1BQU07TUFDSEMsT0FBTyxHQUFHRCxJQUFJLElBQUlELFVBQVUsSUFBSSxDQUFDLENBQUM7SUFDdEM7SUFDQSxJQUFJLENBQUNMLFFBQVEsQ0FBQyxHQUFHO01BQ2JMLEdBQUcsRUFBRUQsUUFBUSxDQUFDVSxLQUFLLEVBQUVSLElBQUksSUFBSVcsT0FBTyxDQUFDWCxJQUFJLENBQUM7TUFDMUNXLE9BQU8sRUFBRUEsT0FBTztNQUNoQkMsUUFBUSxFQUFFO0lBQ2QsQ0FBQztJQUNELElBQUksQ0FBQ0MsT0FBTyxDQUFDLENBQUM7RUFDbEI7RUFDQUEsT0FBT0EsQ0FBQSxFQUFHO0lBQ04sSUFBSUMsc0NBQXNDLEVBQUVDLGlDQUFpQyxFQUFFQywyQkFBMkIsRUFBRUMsdUNBQXVDLEVBQUVDLGtDQUFrQztJQUN2TCxNQUFNQyxJQUFJLEdBQUd2QixvR0FBbUIsQ0FBQyxJQUFJLENBQUNRLFFBQVEsQ0FBQyxDQUFDTCxHQUFHLENBQUNxQixRQUFRLEVBQUU7TUFDMURDLFVBQVUsRUFBRSxJQUFJLENBQUNqQixRQUFRLENBQUMsQ0FBQ08sT0FBTyxDQUFDVSxVQUFVO01BQzdDQyxTQUFTLEVBQUUsQ0FBQ0MsU0FBOEM7TUFDMURHLFlBQVksRUFBRSxJQUFJLENBQUN0QixRQUFRLENBQUMsQ0FBQ08sT0FBTyxDQUFDZTtJQUN6QyxDQUFDLENBQUM7SUFDRixNQUFNQyxRQUFRLEdBQUdoQyxxRUFBVyxDQUFDLElBQUksQ0FBQ1MsUUFBUSxDQUFDLENBQUNMLEdBQUcsRUFBRSxJQUFJLENBQUNLLFFBQVEsQ0FBQyxDQUFDTyxPQUFPLENBQUNpQixPQUFPLENBQUM7SUFDaEYsSUFBSSxDQUFDeEIsUUFBUSxDQUFDLENBQUN5QixZQUFZLEdBQUcsSUFBSSxDQUFDekIsUUFBUSxDQUFDLENBQUNPLE9BQU8sQ0FBQ2UsWUFBWSxHQUFHLElBQUksQ0FBQ3RCLFFBQVEsQ0FBQyxDQUFDTyxPQUFPLENBQUNlLFlBQVksQ0FBQ2pDLGtCQUFrQixDQUFDa0MsUUFBUSxDQUFDLEdBQUdsQyx5RkFBa0IsQ0FBQyxDQUFDc0IsaUNBQWlDLEdBQUcsSUFBSSxDQUFDWCxRQUFRLENBQUMsQ0FBQ08sT0FBTyxDQUFDVSxVQUFVLEtBQUssSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUNQLHNDQUFzQyxHQUFHQyxpQ0FBaUMsQ0FBQ2UsSUFBSSxLQUFLLElBQUksR0FBRyxLQUFLLENBQUMsR0FBR2hCLHNDQUFzQyxDQUFDaUIsT0FBTyxFQUFFSixRQUFRLENBQUM7SUFDblosTUFBTUssYUFBYSxHQUFHLENBQUMsQ0FBQ2hCLDJCQUEyQixHQUFHLElBQUksQ0FBQ1osUUFBUSxDQUFDLENBQUN5QixZQUFZLEtBQUssSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHYiwyQkFBMkIsQ0FBQ2dCLGFBQWEsTUFBTSxDQUFDZCxrQ0FBa0MsR0FBRyxJQUFJLENBQUNkLFFBQVEsQ0FBQyxDQUFDTyxPQUFPLENBQUNVLFVBQVUsS0FBSyxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQ0osdUNBQXVDLEdBQUdDLGtDQUFrQyxDQUFDWSxJQUFJLEtBQUssSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHYix1Q0FBdUMsQ0FBQ2UsYUFBYSxDQUFDO0lBQzlZLElBQUksQ0FBQzVCLFFBQVEsQ0FBQyxDQUFDTCxHQUFHLENBQUNxQixRQUFRLEdBQUdELElBQUksQ0FBQ0MsUUFBUTtJQUMzQyxJQUFJLENBQUNoQixRQUFRLENBQUMsQ0FBQzRCLGFBQWEsR0FBR0EsYUFBYTtJQUM1QyxJQUFJLENBQUM1QixRQUFRLENBQUMsQ0FBQ1EsUUFBUSxHQUFHTyxJQUFJLENBQUNQLFFBQVEsSUFBSSxFQUFFO0lBQzdDLElBQUksQ0FBQ1IsUUFBUSxDQUFDLENBQUM2QixPQUFPLEdBQUdkLElBQUksQ0FBQ2MsT0FBTztJQUNyQyxJQUFJLENBQUM3QixRQUFRLENBQUMsQ0FBQzhCLE1BQU0sR0FBR2YsSUFBSSxDQUFDZSxNQUFNLElBQUlGLGFBQWE7SUFDcEQsSUFBSSxDQUFDNUIsUUFBUSxDQUFDLENBQUMrQixhQUFhLEdBQUdoQixJQUFJLENBQUNnQixhQUFhO0VBQ3JEO0VBQ0FDLGNBQWNBLENBQUEsRUFBRztJQUNiLE9BQU8xQywwR0FBc0IsQ0FBQztNQUMxQmtCLFFBQVEsRUFBRSxJQUFJLENBQUNSLFFBQVEsQ0FBQyxDQUFDUSxRQUFRO01BQ2pDcUIsT0FBTyxFQUFFLElBQUksQ0FBQzdCLFFBQVEsQ0FBQyxDQUFDNkIsT0FBTztNQUMvQkQsYUFBYSxFQUFFLENBQUMsSUFBSSxDQUFDNUIsUUFBUSxDQUFDLENBQUNPLE9BQU8sQ0FBQzBCLFdBQVcsR0FBRyxJQUFJLENBQUNqQyxRQUFRLENBQUMsQ0FBQzRCLGFBQWEsR0FBR00sU0FBUztNQUM3RkosTUFBTSxFQUFFLElBQUksQ0FBQzlCLFFBQVEsQ0FBQyxDQUFDOEIsTUFBTTtNQUM3QmQsUUFBUSxFQUFFLElBQUksQ0FBQ2hCLFFBQVEsQ0FBQyxDQUFDTCxHQUFHLENBQUNxQixRQUFRO01BQ3JDZSxhQUFhLEVBQUUsSUFBSSxDQUFDL0IsUUFBUSxDQUFDLENBQUMrQjtJQUNsQyxDQUFDLENBQUM7RUFDTjtFQUNBSSxZQUFZQSxDQUFBLEVBQUc7SUFDWCxPQUFPLElBQUksQ0FBQ25DLFFBQVEsQ0FBQyxDQUFDTCxHQUFHLENBQUN5QyxNQUFNO0VBQ3BDO0VBQ0EsSUFBSVAsT0FBT0EsQ0FBQSxFQUFHO0lBQ1YsT0FBTyxJQUFJLENBQUM3QixRQUFRLENBQUMsQ0FBQzZCLE9BQU87RUFDakM7RUFDQSxJQUFJQSxPQUFPQSxDQUFDQSxPQUFPLEVBQUU7SUFDakIsSUFBSSxDQUFDN0IsUUFBUSxDQUFDLENBQUM2QixPQUFPLEdBQUdBLE9BQU87RUFDcEM7RUFDQSxJQUFJQyxNQUFNQSxDQUFBLEVBQUc7SUFDVCxPQUFPLElBQUksQ0FBQzlCLFFBQVEsQ0FBQyxDQUFDOEIsTUFBTSxJQUFJLEVBQUU7RUFDdEM7RUFDQSxJQUFJQSxNQUFNQSxDQUFDQSxNQUFNLEVBQUU7SUFDZixJQUFJcEIsc0NBQXNDLEVBQUVDLGlDQUFpQztJQUM3RSxJQUFJLENBQUMsSUFBSSxDQUFDWCxRQUFRLENBQUMsQ0FBQzhCLE1BQU0sSUFBSSxFQUFFLENBQUNuQixpQ0FBaUMsR0FBRyxJQUFJLENBQUNYLFFBQVEsQ0FBQyxDQUFDTyxPQUFPLENBQUNVLFVBQVUsS0FBSyxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQ1Asc0NBQXNDLEdBQUdDLGlDQUFpQyxDQUFDZSxJQUFJLEtBQUssSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHaEIsc0NBQXNDLENBQUMyQixPQUFPLENBQUNDLFFBQVEsQ0FBQ1IsTUFBTSxDQUFDLENBQUMsRUFBRTtNQUM5UixNQUFNLElBQUlTLFNBQVMsQ0FBRSxpREFBZ0RULE1BQU8sR0FBRSxDQUFDO0lBQ25GO0lBQ0EsSUFBSSxDQUFDOUIsUUFBUSxDQUFDLENBQUM4QixNQUFNLEdBQUdBLE1BQU07RUFDbEM7RUFDQSxJQUFJRixhQUFhQSxDQUFBLEVBQUc7SUFDaEIsT0FBTyxJQUFJLENBQUM1QixRQUFRLENBQUMsQ0FBQzRCLGFBQWE7RUFDdkM7RUFDQSxJQUFJSCxZQUFZQSxDQUFBLEVBQUc7SUFDZixPQUFPLElBQUksQ0FBQ3pCLFFBQVEsQ0FBQyxDQUFDeUIsWUFBWTtFQUN0QztFQUNBLElBQUllLFlBQVlBLENBQUEsRUFBRztJQUNmLE9BQU8sSUFBSSxDQUFDeEMsUUFBUSxDQUFDLENBQUNMLEdBQUcsQ0FBQzZDLFlBQVk7RUFDMUM7RUFDQSxJQUFJQyxJQUFJQSxDQUFBLEVBQUc7SUFDUCxPQUFPLElBQUksQ0FBQ3pDLFFBQVEsQ0FBQyxDQUFDTCxHQUFHLENBQUM4QyxJQUFJO0VBQ2xDO0VBQ0EsSUFBSUEsSUFBSUEsQ0FBQ0MsS0FBSyxFQUFFO0lBQ1osSUFBSSxDQUFDMUMsUUFBUSxDQUFDLENBQUNMLEdBQUcsQ0FBQzhDLElBQUksR0FBR0MsS0FBSztFQUNuQztFQUNBLElBQUluQixRQUFRQSxDQUFBLEVBQUc7SUFDWCxPQUFPLElBQUksQ0FBQ3ZCLFFBQVEsQ0FBQyxDQUFDTCxHQUFHLENBQUM0QixRQUFRO0VBQ3RDO0VBQ0EsSUFBSUEsUUFBUUEsQ0FBQ21CLEtBQUssRUFBRTtJQUNoQixJQUFJLENBQUMxQyxRQUFRLENBQUMsQ0FBQ0wsR0FBRyxDQUFDNEIsUUFBUSxHQUFHbUIsS0FBSztFQUN2QztFQUNBLElBQUlDLElBQUlBLENBQUEsRUFBRztJQUNQLE9BQU8sSUFBSSxDQUFDM0MsUUFBUSxDQUFDLENBQUNMLEdBQUcsQ0FBQ2dELElBQUk7RUFDbEM7RUFDQSxJQUFJQSxJQUFJQSxDQUFDRCxLQUFLLEVBQUU7SUFDWixJQUFJLENBQUMxQyxRQUFRLENBQUMsQ0FBQ0wsR0FBRyxDQUFDZ0QsSUFBSSxHQUFHRCxLQUFLO0VBQ25DO0VBQ0EsSUFBSUUsUUFBUUEsQ0FBQSxFQUFHO0lBQ1gsT0FBTyxJQUFJLENBQUM1QyxRQUFRLENBQUMsQ0FBQ0wsR0FBRyxDQUFDaUQsUUFBUTtFQUN0QztFQUNBLElBQUlBLFFBQVFBLENBQUNGLEtBQUssRUFBRTtJQUNoQixJQUFJLENBQUMxQyxRQUFRLENBQUMsQ0FBQ0wsR0FBRyxDQUFDaUQsUUFBUSxHQUFHRixLQUFLO0VBQ3ZDO0VBQ0EsSUFBSUcsSUFBSUEsQ0FBQSxFQUFHO0lBQ1AsTUFBTTdCLFFBQVEsR0FBRyxJQUFJLENBQUNnQixjQUFjLENBQUMsQ0FBQztJQUN0QyxNQUFNSSxNQUFNLEdBQUcsSUFBSSxDQUFDRCxZQUFZLENBQUMsQ0FBQztJQUNsQyxPQUFRLEdBQUUsSUFBSSxDQUFDUyxRQUFTLEtBQUksSUFBSSxDQUFDSCxJQUFLLEdBQUV6QixRQUFTLEdBQUVvQixNQUFPLEdBQUUsSUFBSSxDQUFDVSxJQUFLLEVBQUM7RUFDM0U7RUFDQSxJQUFJRCxJQUFJQSxDQUFDbEQsR0FBRyxFQUFFO0lBQ1YsSUFBSSxDQUFDSyxRQUFRLENBQUMsQ0FBQ0wsR0FBRyxHQUFHRCxRQUFRLENBQUNDLEdBQUcsQ0FBQztJQUNsQyxJQUFJLENBQUNjLE9BQU8sQ0FBQyxDQUFDO0VBQ2xCO0VBQ0EsSUFBSXNDLE1BQU1BLENBQUEsRUFBRztJQUNULE9BQU8sSUFBSSxDQUFDL0MsUUFBUSxDQUFDLENBQUNMLEdBQUcsQ0FBQ29ELE1BQU07RUFDcEM7RUFDQSxJQUFJL0IsUUFBUUEsQ0FBQSxFQUFHO0lBQ1gsT0FBTyxJQUFJLENBQUNoQixRQUFRLENBQUMsQ0FBQ0wsR0FBRyxDQUFDcUIsUUFBUTtFQUN0QztFQUNBLElBQUlBLFFBQVFBLENBQUMwQixLQUFLLEVBQUU7SUFDaEIsSUFBSSxDQUFDMUMsUUFBUSxDQUFDLENBQUNMLEdBQUcsQ0FBQ3FCLFFBQVEsR0FBRzBCLEtBQUs7RUFDdkM7RUFDQSxJQUFJSSxJQUFJQSxDQUFBLEVBQUc7SUFDUCxPQUFPLElBQUksQ0FBQzlDLFFBQVEsQ0FBQyxDQUFDTCxHQUFHLENBQUNtRCxJQUFJO0VBQ2xDO0VBQ0EsSUFBSUEsSUFBSUEsQ0FBQ0osS0FBSyxFQUFFO0lBQ1osSUFBSSxDQUFDMUMsUUFBUSxDQUFDLENBQUNMLEdBQUcsQ0FBQ21ELElBQUksR0FBR0osS0FBSztFQUNuQztFQUNBLElBQUlOLE1BQU1BLENBQUEsRUFBRztJQUNULE9BQU8sSUFBSSxDQUFDcEMsUUFBUSxDQUFDLENBQUNMLEdBQUcsQ0FBQ3lDLE1BQU07RUFDcEM7RUFDQSxJQUFJQSxNQUFNQSxDQUFDTSxLQUFLLEVBQUU7SUFDZCxJQUFJLENBQUMxQyxRQUFRLENBQUMsQ0FBQ0wsR0FBRyxDQUFDeUMsTUFBTSxHQUFHTSxLQUFLO0VBQ3JDO0VBQ0EsSUFBSU0sUUFBUUEsQ0FBQSxFQUFHO0lBQ1gsT0FBTyxJQUFJLENBQUNoRCxRQUFRLENBQUMsQ0FBQ0wsR0FBRyxDQUFDcUQsUUFBUTtFQUN0QztFQUNBLElBQUlBLFFBQVFBLENBQUNOLEtBQUssRUFBRTtJQUNoQixJQUFJLENBQUMxQyxRQUFRLENBQUMsQ0FBQ0wsR0FBRyxDQUFDcUQsUUFBUSxHQUFHTixLQUFLO0VBQ3ZDO0VBQ0EsSUFBSU8sUUFBUUEsQ0FBQSxFQUFHO0lBQ1gsT0FBTyxJQUFJLENBQUNqRCxRQUFRLENBQUMsQ0FBQ0wsR0FBRyxDQUFDc0QsUUFBUTtFQUN0QztFQUNBLElBQUlBLFFBQVFBLENBQUNQLEtBQUssRUFBRTtJQUNoQixJQUFJLENBQUMxQyxRQUFRLENBQUMsQ0FBQ0wsR0FBRyxDQUFDc0QsUUFBUSxHQUFHUCxLQUFLO0VBQ3ZDO0VBQ0EsSUFBSWxDLFFBQVFBLENBQUEsRUFBRztJQUNYLE9BQU8sSUFBSSxDQUFDUixRQUFRLENBQUMsQ0FBQ1EsUUFBUTtFQUNsQztFQUNBLElBQUlBLFFBQVFBLENBQUNrQyxLQUFLLEVBQUU7SUFDaEIsSUFBSSxDQUFDMUMsUUFBUSxDQUFDLENBQUNRLFFBQVEsR0FBR2tDLEtBQUssQ0FBQ1EsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHUixLQUFLLEdBQUksSUFBR0EsS0FBTSxFQUFDO0VBQ3pFO0VBQ0FTLFFBQVFBLENBQUEsRUFBRztJQUNQLE9BQU8sSUFBSSxDQUFDTixJQUFJO0VBQ3BCO0VBQ0FPLE1BQU1BLENBQUEsRUFBRztJQUNMLE9BQU8sSUFBSSxDQUFDUCxJQUFJO0VBQ3BCO0VBQ0EsQ0FBQzVDLE1BQU0sQ0FBQ29ELEdBQUcsQ0FBQyw2QkFBNkIsQ0FBQyxJQUFJO0lBQzFDLE9BQU87TUFDSFIsSUFBSSxFQUFFLElBQUksQ0FBQ0EsSUFBSTtNQUNmRSxNQUFNLEVBQUUsSUFBSSxDQUFDQSxNQUFNO01BQ25CSCxRQUFRLEVBQUUsSUFBSSxDQUFDQSxRQUFRO01BQ3ZCSyxRQUFRLEVBQUUsSUFBSSxDQUFDQSxRQUFRO01BQ3ZCRCxRQUFRLEVBQUUsSUFBSSxDQUFDQSxRQUFRO01BQ3ZCUCxJQUFJLEVBQUUsSUFBSSxDQUFDQSxJQUFJO01BQ2ZsQixRQUFRLEVBQUUsSUFBSSxDQUFDQSxRQUFRO01BQ3ZCb0IsSUFBSSxFQUFFLElBQUksQ0FBQ0EsSUFBSTtNQUNmM0IsUUFBUSxFQUFFLElBQUksQ0FBQ0EsUUFBUTtNQUN2Qm9CLE1BQU0sRUFBRSxJQUFJLENBQUNBLE1BQU07TUFDbkJJLFlBQVksRUFBRSxJQUFJLENBQUNBLFlBQVk7TUFDL0JNLElBQUksRUFBRSxJQUFJLENBQUNBO0lBQ2YsQ0FBQztFQUNMO0VBQ0FRLEtBQUtBLENBQUEsRUFBRztJQUNKLE9BQU8sSUFBSXBELE9BQU8sQ0FBQ0osTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksQ0FBQ0UsUUFBUSxDQUFDLENBQUNPLE9BQU8sQ0FBQztFQUM1RDtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvbmV4dC11cmwuanM/NmE1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZXRlY3REb21haW5Mb2NhbGUgfSBmcm9tIFwiLi4vLi4vc2hhcmVkL2xpYi9pMThuL2RldGVjdC1kb21haW4tbG9jYWxlXCI7XG5pbXBvcnQgeyBmb3JtYXROZXh0UGF0aG5hbWVJbmZvIH0gZnJvbSBcIi4uLy4uL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2Zvcm1hdC1uZXh0LXBhdGhuYW1lLWluZm9cIjtcbmltcG9ydCB7IGdldEhvc3RuYW1lIH0gZnJvbSBcIi4uLy4uL3NoYXJlZC9saWIvZ2V0LWhvc3RuYW1lXCI7XG5pbXBvcnQgeyBnZXROZXh0UGF0aG5hbWVJbmZvIH0gZnJvbSBcIi4uLy4uL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2dldC1uZXh0LXBhdGhuYW1lLWluZm9cIjtcbmNvbnN0IFJFR0VYX0xPQ0FMSE9TVF9IT1NUTkFNRSA9IC8oPyFeaHR0cHM/OlxcL1xcLykoMTI3KD86XFwuKD86MjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KSl7M318XFxbOjoxXFxdfGxvY2FsaG9zdCkvO1xuZnVuY3Rpb24gcGFyc2VVUkwodXJsLCBiYXNlKSB7XG4gICAgcmV0dXJuIG5ldyBVUkwoU3RyaW5nKHVybCkucmVwbGFjZShSRUdFWF9MT0NBTEhPU1RfSE9TVE5BTUUsIFwibG9jYWxob3N0XCIpLCBiYXNlICYmIFN0cmluZyhiYXNlKS5yZXBsYWNlKFJFR0VYX0xPQ0FMSE9TVF9IT1NUTkFNRSwgXCJsb2NhbGhvc3RcIikpO1xufVxuY29uc3QgSW50ZXJuYWwgPSBTeW1ib2woXCJOZXh0VVJMSW50ZXJuYWxcIik7XG5leHBvcnQgY2xhc3MgTmV4dFVSTCB7XG4gICAgY29uc3RydWN0b3IoaW5wdXQsIGJhc2VPck9wdHMsIG9wdHMpe1xuICAgICAgICBsZXQgYmFzZTtcbiAgICAgICAgbGV0IG9wdGlvbnM7XG4gICAgICAgIGlmICh0eXBlb2YgYmFzZU9yT3B0cyA9PT0gXCJvYmplY3RcIiAmJiBcInBhdGhuYW1lXCIgaW4gYmFzZU9yT3B0cyB8fCB0eXBlb2YgYmFzZU9yT3B0cyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgYmFzZSA9IGJhc2VPck9wdHM7XG4gICAgICAgICAgICBvcHRpb25zID0gb3B0cyB8fCB7fTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9wdGlvbnMgPSBvcHRzIHx8IGJhc2VPck9wdHMgfHwge307XG4gICAgICAgIH1cbiAgICAgICAgdGhpc1tJbnRlcm5hbF0gPSB7XG4gICAgICAgICAgICB1cmw6IHBhcnNlVVJMKGlucHV0LCBiYXNlID8/IG9wdGlvbnMuYmFzZSksXG4gICAgICAgICAgICBvcHRpb25zOiBvcHRpb25zLFxuICAgICAgICAgICAgYmFzZVBhdGg6IFwiXCJcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5hbmFseXplKCk7XG4gICAgfVxuICAgIGFuYWx5emUoKSB7XG4gICAgICAgIHZhciBfdGhpc19JbnRlcm5hbF9vcHRpb25zX25leHRDb25maWdfaTE4biwgX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnLCBfdGhpc19JbnRlcm5hbF9kb21haW5Mb2NhbGUsIF90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZ19pMThuMSwgX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnMTtcbiAgICAgICAgY29uc3QgaW5mbyA9IGdldE5leHRQYXRobmFtZUluZm8odGhpc1tJbnRlcm5hbF0udXJsLnBhdGhuYW1lLCB7XG4gICAgICAgICAgICBuZXh0Q29uZmlnOiB0aGlzW0ludGVybmFsXS5vcHRpb25zLm5leHRDb25maWcsXG4gICAgICAgICAgICBwYXJzZURhdGE6ICFwcm9jZXNzLmVudi5fX05FWFRfTk9fTUlERExFV0FSRV9VUkxfTk9STUFMSVpFLFxuICAgICAgICAgICAgaTE4blByb3ZpZGVyOiB0aGlzW0ludGVybmFsXS5vcHRpb25zLmkxOG5Qcm92aWRlclxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgaG9zdG5hbWUgPSBnZXRIb3N0bmFtZSh0aGlzW0ludGVybmFsXS51cmwsIHRoaXNbSW50ZXJuYWxdLm9wdGlvbnMuaGVhZGVycyk7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLmRvbWFpbkxvY2FsZSA9IHRoaXNbSW50ZXJuYWxdLm9wdGlvbnMuaTE4blByb3ZpZGVyID8gdGhpc1tJbnRlcm5hbF0ub3B0aW9ucy5pMThuUHJvdmlkZXIuZGV0ZWN0RG9tYWluTG9jYWxlKGhvc3RuYW1lKSA6IGRldGVjdERvbWFpbkxvY2FsZSgoX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnID0gdGhpc1tJbnRlcm5hbF0ub3B0aW9ucy5uZXh0Q29uZmlnKSA9PSBudWxsID8gdm9pZCAwIDogKF90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZ19pMThuID0gX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnLmkxOG4pID09IG51bGwgPyB2b2lkIDAgOiBfdGhpc19JbnRlcm5hbF9vcHRpb25zX25leHRDb25maWdfaTE4bi5kb21haW5zLCBob3N0bmFtZSk7XG4gICAgICAgIGNvbnN0IGRlZmF1bHRMb2NhbGUgPSAoKF90aGlzX0ludGVybmFsX2RvbWFpbkxvY2FsZSA9IHRoaXNbSW50ZXJuYWxdLmRvbWFpbkxvY2FsZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzX0ludGVybmFsX2RvbWFpbkxvY2FsZS5kZWZhdWx0TG9jYWxlKSB8fCAoKF90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZzEgPSB0aGlzW0ludGVybmFsXS5vcHRpb25zLm5leHRDb25maWcpID09IG51bGwgPyB2b2lkIDAgOiAoX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnX2kxOG4xID0gX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnMS5pMThuKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnX2kxOG4xLmRlZmF1bHRMb2NhbGUpO1xuICAgICAgICB0aGlzW0ludGVybmFsXS51cmwucGF0aG5hbWUgPSBpbmZvLnBhdGhuYW1lO1xuICAgICAgICB0aGlzW0ludGVybmFsXS5kZWZhdWx0TG9jYWxlID0gZGVmYXVsdExvY2FsZTtcbiAgICAgICAgdGhpc1tJbnRlcm5hbF0uYmFzZVBhdGggPSBpbmZvLmJhc2VQYXRoID8/IFwiXCI7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLmJ1aWxkSWQgPSBpbmZvLmJ1aWxkSWQ7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLmxvY2FsZSA9IGluZm8ubG9jYWxlID8/IGRlZmF1bHRMb2NhbGU7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnRyYWlsaW5nU2xhc2ggPSBpbmZvLnRyYWlsaW5nU2xhc2g7XG4gICAgfVxuICAgIGZvcm1hdFBhdGhuYW1lKCkge1xuICAgICAgICByZXR1cm4gZm9ybWF0TmV4dFBhdGhuYW1lSW5mbyh7XG4gICAgICAgICAgICBiYXNlUGF0aDogdGhpc1tJbnRlcm5hbF0uYmFzZVBhdGgsXG4gICAgICAgICAgICBidWlsZElkOiB0aGlzW0ludGVybmFsXS5idWlsZElkLFxuICAgICAgICAgICAgZGVmYXVsdExvY2FsZTogIXRoaXNbSW50ZXJuYWxdLm9wdGlvbnMuZm9yY2VMb2NhbGUgPyB0aGlzW0ludGVybmFsXS5kZWZhdWx0TG9jYWxlIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgbG9jYWxlOiB0aGlzW0ludGVybmFsXS5sb2NhbGUsXG4gICAgICAgICAgICBwYXRobmFtZTogdGhpc1tJbnRlcm5hbF0udXJsLnBhdGhuYW1lLFxuICAgICAgICAgICAgdHJhaWxpbmdTbGFzaDogdGhpc1tJbnRlcm5hbF0udHJhaWxpbmdTbGFzaFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZm9ybWF0U2VhcmNoKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0udXJsLnNlYXJjaDtcbiAgICB9XG4gICAgZ2V0IGJ1aWxkSWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0ludGVybmFsXS5idWlsZElkO1xuICAgIH1cbiAgICBzZXQgYnVpbGRJZChidWlsZElkKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLmJ1aWxkSWQgPSBidWlsZElkO1xuICAgIH1cbiAgICBnZXQgbG9jYWxlKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0ubG9jYWxlID8/IFwiXCI7XG4gICAgfVxuICAgIHNldCBsb2NhbGUobG9jYWxlKSB7XG4gICAgICAgIHZhciBfdGhpc19JbnRlcm5hbF9vcHRpb25zX25leHRDb25maWdfaTE4biwgX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnO1xuICAgICAgICBpZiAoIXRoaXNbSW50ZXJuYWxdLmxvY2FsZSB8fCAhKChfdGhpc19JbnRlcm5hbF9vcHRpb25zX25leHRDb25maWcgPSB0aGlzW0ludGVybmFsXS5vcHRpb25zLm5leHRDb25maWcpID09IG51bGwgPyB2b2lkIDAgOiAoX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnX2kxOG4gPSBfdGhpc19JbnRlcm5hbF9vcHRpb25zX25leHRDb25maWcuaTE4bikgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZ19pMThuLmxvY2FsZXMuaW5jbHVkZXMobG9jYWxlKSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFRoZSBOZXh0VVJMIGNvbmZpZ3VyYXRpb24gaW5jbHVkZXMgbm8gbG9jYWxlIFwiJHtsb2NhbGV9XCJgKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzW0ludGVybmFsXS5sb2NhbGUgPSBsb2NhbGU7XG4gICAgfVxuICAgIGdldCBkZWZhdWx0TG9jYWxlKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0uZGVmYXVsdExvY2FsZTtcbiAgICB9XG4gICAgZ2V0IGRvbWFpbkxvY2FsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSW50ZXJuYWxdLmRvbWFpbkxvY2FsZTtcbiAgICB9XG4gICAgZ2V0IHNlYXJjaFBhcmFtcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSW50ZXJuYWxdLnVybC5zZWFyY2hQYXJhbXM7XG4gICAgfVxuICAgIGdldCBob3N0KCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0udXJsLmhvc3Q7XG4gICAgfVxuICAgIHNldCBob3N0KHZhbHVlKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnVybC5ob3N0ID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCBob3N0bmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSW50ZXJuYWxdLnVybC5ob3N0bmFtZTtcbiAgICB9XG4gICAgc2V0IGhvc3RuYW1lKHZhbHVlKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnVybC5ob3N0bmFtZSA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXQgcG9ydCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSW50ZXJuYWxdLnVybC5wb3J0O1xuICAgIH1cbiAgICBzZXQgcG9ydCh2YWx1ZSkge1xuICAgICAgICB0aGlzW0ludGVybmFsXS51cmwucG9ydCA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXQgcHJvdG9jb2woKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0ludGVybmFsXS51cmwucHJvdG9jb2w7XG4gICAgfVxuICAgIHNldCBwcm90b2NvbCh2YWx1ZSkge1xuICAgICAgICB0aGlzW0ludGVybmFsXS51cmwucHJvdG9jb2wgPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0IGhyZWYoKSB7XG4gICAgICAgIGNvbnN0IHBhdGhuYW1lID0gdGhpcy5mb3JtYXRQYXRobmFtZSgpO1xuICAgICAgICBjb25zdCBzZWFyY2ggPSB0aGlzLmZvcm1hdFNlYXJjaCgpO1xuICAgICAgICByZXR1cm4gYCR7dGhpcy5wcm90b2NvbH0vLyR7dGhpcy5ob3N0fSR7cGF0aG5hbWV9JHtzZWFyY2h9JHt0aGlzLmhhc2h9YDtcbiAgICB9XG4gICAgc2V0IGhyZWYodXJsKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnVybCA9IHBhcnNlVVJMKHVybCk7XG4gICAgICAgIHRoaXMuYW5hbHl6ZSgpO1xuICAgIH1cbiAgICBnZXQgb3JpZ2luKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0udXJsLm9yaWdpbjtcbiAgICB9XG4gICAgZ2V0IHBhdGhuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0udXJsLnBhdGhuYW1lO1xuICAgIH1cbiAgICBzZXQgcGF0aG5hbWUodmFsdWUpIHtcbiAgICAgICAgdGhpc1tJbnRlcm5hbF0udXJsLnBhdGhuYW1lID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCBoYXNoKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0udXJsLmhhc2g7XG4gICAgfVxuICAgIHNldCBoYXNoKHZhbHVlKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnVybC5oYXNoID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCBzZWFyY2goKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0ludGVybmFsXS51cmwuc2VhcmNoO1xuICAgIH1cbiAgICBzZXQgc2VhcmNoKHZhbHVlKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnVybC5zZWFyY2ggPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0IHBhc3N3b3JkKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0udXJsLnBhc3N3b3JkO1xuICAgIH1cbiAgICBzZXQgcGFzc3dvcmQodmFsdWUpIHtcbiAgICAgICAgdGhpc1tJbnRlcm5hbF0udXJsLnBhc3N3b3JkID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCB1c2VybmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSW50ZXJuYWxdLnVybC51c2VybmFtZTtcbiAgICB9XG4gICAgc2V0IHVzZXJuYW1lKHZhbHVlKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnVybC51c2VybmFtZSA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXQgYmFzZVBhdGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0ludGVybmFsXS5iYXNlUGF0aDtcbiAgICB9XG4gICAgc2V0IGJhc2VQYXRoKHZhbHVlKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLmJhc2VQYXRoID0gdmFsdWUuc3RhcnRzV2l0aChcIi9cIikgPyB2YWx1ZSA6IGAvJHt2YWx1ZX1gO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHJlZjtcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ocmVmO1xuICAgIH1cbiAgICBbU3ltYm9sLmZvcihcImVkZ2UtcnVudGltZS5pbnNwZWN0LmN1c3RvbVwiKV0oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBocmVmOiB0aGlzLmhyZWYsXG4gICAgICAgICAgICBvcmlnaW46IHRoaXMub3JpZ2luLFxuICAgICAgICAgICAgcHJvdG9jb2w6IHRoaXMucHJvdG9jb2wsXG4gICAgICAgICAgICB1c2VybmFtZTogdGhpcy51c2VybmFtZSxcbiAgICAgICAgICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkLFxuICAgICAgICAgICAgaG9zdDogdGhpcy5ob3N0LFxuICAgICAgICAgICAgaG9zdG5hbWU6IHRoaXMuaG9zdG5hbWUsXG4gICAgICAgICAgICBwb3J0OiB0aGlzLnBvcnQsXG4gICAgICAgICAgICBwYXRobmFtZTogdGhpcy5wYXRobmFtZSxcbiAgICAgICAgICAgIHNlYXJjaDogdGhpcy5zZWFyY2gsXG4gICAgICAgICAgICBzZWFyY2hQYXJhbXM6IHRoaXMuc2VhcmNoUGFyYW1zLFxuICAgICAgICAgICAgaGFzaDogdGhpcy5oYXNoXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNsb25lKCkge1xuICAgICAgICByZXR1cm4gbmV3IE5leHRVUkwoU3RyaW5nKHRoaXMpLCB0aGlzW0ludGVybmFsXS5vcHRpb25zKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5leHQtdXJsLmpzLm1hcCJdLCJuYW1lcyI6WyJkZXRlY3REb21haW5Mb2NhbGUiLCJmb3JtYXROZXh0UGF0aG5hbWVJbmZvIiwiZ2V0SG9zdG5hbWUiLCJnZXROZXh0UGF0aG5hbWVJbmZvIiwiUkVHRVhfTE9DQUxIT1NUX0hPU1ROQU1FIiwicGFyc2VVUkwiLCJ1cmwiLCJiYXNlIiwiVVJMIiwiU3RyaW5nIiwicmVwbGFjZSIsIkludGVybmFsIiwiU3ltYm9sIiwiTmV4dFVSTCIsImNvbnN0cnVjdG9yIiwiaW5wdXQiLCJiYXNlT3JPcHRzIiwib3B0cyIsIm9wdGlvbnMiLCJiYXNlUGF0aCIsImFuYWx5emUiLCJfdGhpc19JbnRlcm5hbF9vcHRpb25zX25leHRDb25maWdfaTE4biIsIl90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZyIsIl90aGlzX0ludGVybmFsX2RvbWFpbkxvY2FsZSIsIl90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZ19pMThuMSIsIl90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZzEiLCJpbmZvIiwicGF0aG5hbWUiLCJuZXh0Q29uZmlnIiwicGFyc2VEYXRhIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9OT19NSURETEVXQVJFX1VSTF9OT1JNQUxJWkUiLCJpMThuUHJvdmlkZXIiLCJob3N0bmFtZSIsImhlYWRlcnMiLCJkb21haW5Mb2NhbGUiLCJpMThuIiwiZG9tYWlucyIsImRlZmF1bHRMb2NhbGUiLCJidWlsZElkIiwibG9jYWxlIiwidHJhaWxpbmdTbGFzaCIsImZvcm1hdFBhdGhuYW1lIiwiZm9yY2VMb2NhbGUiLCJ1bmRlZmluZWQiLCJmb3JtYXRTZWFyY2giLCJzZWFyY2giLCJsb2NhbGVzIiwiaW5jbHVkZXMiLCJUeXBlRXJyb3IiLCJzZWFyY2hQYXJhbXMiLCJob3N0IiwidmFsdWUiLCJwb3J0IiwicHJvdG9jb2wiLCJocmVmIiwiaGFzaCIsIm9yaWdpbiIsInBhc3N3b3JkIiwidXNlcm5hbWUiLCJzdGFydHNXaXRoIiwidG9TdHJpbmciLCJ0b0pTT04iLCJmb3IiLCJjbG9uZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HeadersAdapter: () => (/* binding */ HeadersAdapter),\n/* harmony export */   ReadonlyHeadersError: () => (/* binding */ ReadonlyHeadersError)\n/* harmony export */ });\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n\n/**\n * @internal\n */\nclass ReadonlyHeadersError extends Error {\n  constructor() {\n    super(\"Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers\");\n  }\n  static callable() {\n    throw new ReadonlyHeadersError();\n  }\n}\nclass HeadersAdapter extends Headers {\n  constructor(headers) {\n    // We've already overridden the methods that would be called, so we're just\n    // calling the super constructor to ensure that the instanceof check works.\n    super();\n    this.headers = new Proxy(headers, {\n      get(target, prop, receiver) {\n        // Because this is just an object, we expect that all \"get\" operations\n        // are for properties. If it's a \"get\" for a symbol, we'll just return\n        // the symbol.\n        if (typeof prop === \"symbol\") {\n          return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\n        }\n        const lowercased = prop.toLowerCase();\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(o => o.toLowerCase() === lowercased);\n        // If the original casing doesn't exist, return undefined.\n        if (typeof original === \"undefined\") return;\n        // If the original casing exists, return the value.\n        return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, original, receiver);\n      },\n      set(target, prop, value, receiver) {\n        if (typeof prop === \"symbol\") {\n          return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, prop, value, receiver);\n        }\n        const lowercased = prop.toLowerCase();\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(o => o.toLowerCase() === lowercased);\n        // If the original casing doesn't exist, use the prop as the key.\n        return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, original ?? prop, value, receiver);\n      },\n      has(target, prop) {\n        if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, prop);\n        const lowercased = prop.toLowerCase();\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(o => o.toLowerCase() === lowercased);\n        // If the original casing doesn't exist, return false.\n        if (typeof original === \"undefined\") return false;\n        // If the original casing exists, return true.\n        return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, original);\n      },\n      deleteProperty(target, prop) {\n        if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, prop);\n        const lowercased = prop.toLowerCase();\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(o => o.toLowerCase() === lowercased);\n        // If the original casing doesn't exist, return true.\n        if (typeof original === \"undefined\") return true;\n        // If the original casing exists, delete the property.\n        return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, original);\n      }\n    });\n  }\n  /**\n  * Seals a Headers instance to prevent modification by throwing an error when\n  * any mutating method is called.\n  */\n  static seal(headers) {\n    return new Proxy(headers, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case \"append\":\n          case \"delete\":\n          case \"set\":\n            return ReadonlyHeadersError.callable;\n          default:\n            return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\n        }\n      }\n    });\n  }\n  /**\n  * Merges a header value into a string. This stores multiple values as an\n  * array, so we need to merge them into a string.\n  *\n  * @param value a header value\n  * @returns a merged header value (a string)\n  */\n  merge(value) {\n    if (Array.isArray(value)) return value.join(\", \");\n    return value;\n  }\n  /**\n  * Creates a Headers instance from a plain object or a Headers instance.\n  *\n  * @param headers a plain object or a Headers instance\n  * @returns a headers instance\n  */\n  static from(headers) {\n    if (headers instanceof Headers) return headers;\n    return new HeadersAdapter(headers);\n  }\n  append(name, value) {\n    const existing = this.headers[name];\n    if (typeof existing === \"string\") {\n      this.headers[name] = [existing, value];\n    } else if (Array.isArray(existing)) {\n      existing.push(value);\n    } else {\n      this.headers[name] = value;\n    }\n  }\n  delete(name) {\n    delete this.headers[name];\n  }\n  get(name) {\n    const value = this.headers[name];\n    if (typeof value !== \"undefined\") return this.merge(value);\n    return null;\n  }\n  has(name) {\n    return typeof this.headers[name] !== \"undefined\";\n  }\n  set(name, value) {\n    this.headers[name] = value;\n  }\n  forEach(callbackfn, thisArg) {\n    for (const [name, value] of this.entries()) {\n      callbackfn.call(thisArg, value, name, this);\n    }\n  }\n  *entries() {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase();\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(name);\n      yield [name, value];\n    }\n  }\n  *keys() {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase();\n      yield name;\n    }\n  }\n  *values() {\n    for (const key of Object.keys(this.headers)) {\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(key);\n      yield value;\n    }\n  }\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReflectAdapter: () => (/* binding */ ReflectAdapter)\n/* harmony export */ });\nclass ReflectAdapter {\n  static get(target, prop, receiver) {\n    const value = Reflect.get(target, prop, receiver);\n    if (typeof value === \"function\") {\n      return value.bind(target);\n    }\n    return value;\n  }\n  static set(target, prop, value, receiver) {\n    return Reflect.set(target, prop, value, receiver);\n  }\n  static has(target, prop) {\n    return Reflect.has(target, prop);\n  }\n  static deleteProperty(target, prop) {\n    return Reflect.deleteProperty(target, prop);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZWZsZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxjQUFjLENBQUM7RUFDeEIsT0FBT0MsR0FBR0EsQ0FBQ0MsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLFFBQVEsRUFBRTtJQUMvQixNQUFNQyxLQUFLLEdBQUdDLE9BQU8sQ0FBQ0wsR0FBRyxDQUFDQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsUUFBUSxDQUFDO0lBQ2pELElBQUksT0FBT0MsS0FBSyxLQUFLLFVBQVUsRUFBRTtNQUM3QixPQUFPQSxLQUFLLENBQUNFLElBQUksQ0FBQ0wsTUFBTSxDQUFDO0lBQzdCO0lBQ0EsT0FBT0csS0FBSztFQUNoQjtFQUNBLE9BQU9HLEdBQUdBLENBQUNOLE1BQU0sRUFBRUMsSUFBSSxFQUFFRSxLQUFLLEVBQUVELFFBQVEsRUFBRTtJQUN0QyxPQUFPRSxPQUFPLENBQUNFLEdBQUcsQ0FBQ04sTUFBTSxFQUFFQyxJQUFJLEVBQUVFLEtBQUssRUFBRUQsUUFBUSxDQUFDO0VBQ3JEO0VBQ0EsT0FBT0ssR0FBR0EsQ0FBQ1AsTUFBTSxFQUFFQyxJQUFJLEVBQUU7SUFDckIsT0FBT0csT0FBTyxDQUFDRyxHQUFHLENBQUNQLE1BQU0sRUFBRUMsSUFBSSxDQUFDO0VBQ3BDO0VBQ0EsT0FBT08sY0FBY0EsQ0FBQ1IsTUFBTSxFQUFFQyxJQUFJLEVBQUU7SUFDaEMsT0FBT0csT0FBTyxDQUFDSSxjQUFjLENBQUNSLE1BQU0sRUFBRUMsSUFBSSxDQUFDO0VBQy9DO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZWZsZWN0LmpzPzIwNjciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFJlZmxlY3RBZGFwdGVyIHtcbiAgICBzdGF0aWMgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBSZWZsZWN0LmdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUuYmluZCh0YXJnZXQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgc3RhdGljIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcikge1xuICAgICAgICByZXR1cm4gUmVmbGVjdC5zZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSwgcmVjZWl2ZXIpO1xuICAgIH1cbiAgICBzdGF0aWMgaGFzKHRhcmdldCwgcHJvcCkge1xuICAgICAgICByZXR1cm4gUmVmbGVjdC5oYXModGFyZ2V0LCBwcm9wKTtcbiAgICB9XG4gICAgc3RhdGljIGRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcCkge1xuICAgICAgICByZXR1cm4gUmVmbGVjdC5kZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3ApO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVmbGVjdC5qcy5tYXAiXSwibmFtZXMiOlsiUmVmbGVjdEFkYXB0ZXIiLCJnZXQiLCJ0YXJnZXQiLCJwcm9wIiwicmVjZWl2ZXIiLCJ2YWx1ZSIsIlJlZmxlY3QiLCJiaW5kIiwic2V0IiwiaGFzIiwiZGVsZXRlUHJvcGVydHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutableRequestCookiesAdapter: () => (/* binding */ MutableRequestCookiesAdapter),\n/* harmony export */   ReadonlyRequestCookiesError: () => (/* binding */ ReadonlyRequestCookiesError),\n/* harmony export */   RequestCookiesAdapter: () => (/* binding */ RequestCookiesAdapter),\n/* harmony export */   appendMutableCookies: () => (/* binding */ appendMutableCookies),\n/* harmony export */   getModifiedCookieValues: () => (/* binding */ getModifiedCookieValues)\n/* harmony export */ });\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n/* harmony import */ var _client_components_static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../client/components/static-generation-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\");\n\n\n\n/**\n * @internal\n */\nclass ReadonlyRequestCookiesError extends Error {\n  constructor() {\n    super(\"Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options\");\n  }\n  static callable() {\n    throw new ReadonlyRequestCookiesError();\n  }\n}\nclass RequestCookiesAdapter {\n  static seal(cookies) {\n    return new Proxy(cookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case \"clear\":\n          case \"delete\":\n          case \"set\":\n            return ReadonlyRequestCookiesError.callable;\n          default:\n            return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\n        }\n      }\n    });\n  }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for(\"next.mutated.cookies\");\nfunction getModifiedCookieValues(cookies) {\n  const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n  if (!modified || !Array.isArray(modified) || modified.length === 0) {\n    return [];\n  }\n  return modified;\n}\nfunction appendMutableCookies(headers, mutableCookies) {\n  const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n  if (modifiedCookieValues.length === 0) {\n    return false;\n  }\n  // Return a new response that extends the response with\n  // the modified cookies as fallbacks. `res` cookies\n  // will still take precedence.\n  const resCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(headers);\n  const returnedCookies = resCookies.getAll();\n  // Set the modified cookies as fallbacks.\n  for (const cookie of modifiedCookieValues) {\n    resCookies.set(cookie);\n  }\n  // Set the original cookies as the final values.\n  for (const cookie of returnedCookies) {\n    resCookies.set(cookie);\n  }\n  return true;\n}\nclass MutableRequestCookiesAdapter {\n  static wrap(cookies, onUpdateCookies) {\n    const responseCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\n    for (const cookie of cookies.getAll()) {\n      responseCookies.set(cookie);\n    }\n    let modifiedValues = [];\n    const modifiedCookies = new Set();\n    const updateResponseCookies = () => {\n      // TODO-APP: change method of getting staticGenerationAsyncStore\n      const staticGenerationAsyncStore = _client_components_static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_2__.staticGenerationAsyncStorage.getStore();\n      if (staticGenerationAsyncStore) {\n        staticGenerationAsyncStore.pathWasRevalidated = true;\n      }\n      const allCookies = responseCookies.getAll();\n      modifiedValues = allCookies.filter(c => modifiedCookies.has(c.name));\n      if (onUpdateCookies) {\n        const serializedCookies = [];\n        for (const cookie of modifiedValues) {\n          const tempCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\n          tempCookies.set(cookie);\n          serializedCookies.push(tempCookies.toString());\n        }\n        onUpdateCookies(serializedCookies);\n      }\n    };\n    return new Proxy(responseCookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          // A special symbol to get the modified cookie values\n          case SYMBOL_MODIFY_COOKIE_VALUES:\n            return modifiedValues;\n          // TODO: Throw error if trying to set a cookie after the response\n          // headers have been set.\n          case \"delete\":\n            return function (...args) {\n              modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n              try {\n                target.delete(...args);\n              } finally {\n                updateResponseCookies();\n              }\n            };\n          case \"set\":\n            return function (...args) {\n              modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n              try {\n                return target.set(...args);\n              } finally {\n                updateResponseCookies();\n              }\n            };\n          default:\n            return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\n        }\n      }\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/cookies.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RequestCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.RequestCookies),
/* harmony export */   ResponseCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies)
/* harmony export */ });
/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/compiled/@edge-runtime/cookies */ "(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js");
/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__);


/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextFetchEvent: () => (/* binding */ NextFetchEvent),\n/* harmony export */   waitUntilSymbol: () => (/* binding */ waitUntilSymbol)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nconst waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(_request) {\n    this[waitUntilSymbol] = [];\n    this[passThroughSymbol] = false;\n  }\n  respondWith(response) {\n    if (!this[responseSymbol]) {\n      this[responseSymbol] = Promise.resolve(response);\n    }\n  }\n  passThroughOnException() {\n    this[passThroughSymbol] = true;\n  }\n  waitUntil(promise) {\n    this[waitUntilSymbol].push(promise);\n  }\n}\nclass NextFetchEvent extends FetchEvent {\n  constructor(params) {\n    super(params.request);\n    this.sourcePage = params.page;\n  }\n  /**\n  * @deprecated The `request` is now the first parameter and the API is now async.\n  *\n  * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  */\n  get request() {\n    throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n      page: this.sourcePage\n    });\n  }\n  /**\n  * @deprecated Using `respondWith` is no longer needed.\n  *\n  * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  */\n  respondWith() {\n    throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n      page: this.sourcePage\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9mZXRjaC1ldmVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFDOUMsTUFBTUMsY0FBYyxHQUFHQyxNQUFNLENBQUMsVUFBVSxDQUFDO0FBQ3pDLE1BQU1DLGlCQUFpQixHQUFHRCxNQUFNLENBQUMsYUFBYSxDQUFDO0FBQ3hDLE1BQU1FLGVBQWUsR0FBR0YsTUFBTSxDQUFDLFdBQVcsQ0FBQztBQUNsRCxNQUFNRyxVQUFVLENBQUM7RUFDYjtFQUNBQyxXQUFXQSxDQUFDQyxRQUFRLEVBQUM7SUFDakIsSUFBSSxDQUFDSCxlQUFlLENBQUMsR0FBRyxFQUFFO0lBQzFCLElBQUksQ0FBQ0QsaUJBQWlCLENBQUMsR0FBRyxLQUFLO0VBQ25DO0VBQ0FLLFdBQVdBLENBQUNDLFFBQVEsRUFBRTtJQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDUixjQUFjLENBQUMsRUFBRTtNQUN2QixJQUFJLENBQUNBLGNBQWMsQ0FBQyxHQUFHUyxPQUFPLENBQUNDLE9BQU8sQ0FBQ0YsUUFBUSxDQUFDO0lBQ3BEO0VBQ0o7RUFDQUcsc0JBQXNCQSxDQUFBLEVBQUc7SUFDckIsSUFBSSxDQUFDVCxpQkFBaUIsQ0FBQyxHQUFHLElBQUk7RUFDbEM7RUFDQVUsU0FBU0EsQ0FBQ0MsT0FBTyxFQUFFO0lBQ2YsSUFBSSxDQUFDVixlQUFlLENBQUMsQ0FBQ1csSUFBSSxDQUFDRCxPQUFPLENBQUM7RUFDdkM7QUFDSjtBQUNPLE1BQU1FLGNBQWMsU0FBU1gsVUFBVSxDQUFDO0VBQzNDQyxXQUFXQSxDQUFDVyxNQUFNLEVBQUM7SUFDZixLQUFLLENBQUNBLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDO0lBQ3JCLElBQUksQ0FBQ0MsVUFBVSxHQUFHRixNQUFNLENBQUNHLElBQUk7RUFDakM7RUFDQTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0VBQU0sSUFBSUYsT0FBT0EsQ0FBQSxFQUFHO0lBQ1osTUFBTSxJQUFJbEIsc0RBQWtCLENBQUM7TUFDekJvQixJQUFJLEVBQUUsSUFBSSxDQUFDRDtJQUNmLENBQUMsQ0FBQztFQUNOO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtFQUFNWCxXQUFXQSxDQUFBLEVBQUc7SUFDWixNQUFNLElBQUlSLHNEQUFrQixDQUFDO01BQ3pCb0IsSUFBSSxFQUFFLElBQUksQ0FBQ0Q7SUFDZixDQUFDLENBQUM7RUFDTjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vZmV0Y2gtZXZlbnQuanM/OTJiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlU2lnbmF0dXJlRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JcIjtcbmNvbnN0IHJlc3BvbnNlU3ltYm9sID0gU3ltYm9sKFwicmVzcG9uc2VcIik7XG5jb25zdCBwYXNzVGhyb3VnaFN5bWJvbCA9IFN5bWJvbChcInBhc3NUaHJvdWdoXCIpO1xuZXhwb3J0IGNvbnN0IHdhaXRVbnRpbFN5bWJvbCA9IFN5bWJvbChcIndhaXRVbnRpbFwiKTtcbmNsYXNzIEZldGNoRXZlbnQge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlbGVzcy1jb25zdHJ1Y3RvclxuICAgIGNvbnN0cnVjdG9yKF9yZXF1ZXN0KXtcbiAgICAgICAgdGhpc1t3YWl0VW50aWxTeW1ib2xdID0gW107XG4gICAgICAgIHRoaXNbcGFzc1Rocm91Z2hTeW1ib2xdID0gZmFsc2U7XG4gICAgfVxuICAgIHJlc3BvbmRXaXRoKHJlc3BvbnNlKSB7XG4gICAgICAgIGlmICghdGhpc1tyZXNwb25zZVN5bWJvbF0pIHtcbiAgICAgICAgICAgIHRoaXNbcmVzcG9uc2VTeW1ib2xdID0gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwYXNzVGhyb3VnaE9uRXhjZXB0aW9uKCkge1xuICAgICAgICB0aGlzW3Bhc3NUaHJvdWdoU3ltYm9sXSA9IHRydWU7XG4gICAgfVxuICAgIHdhaXRVbnRpbChwcm9taXNlKSB7XG4gICAgICAgIHRoaXNbd2FpdFVudGlsU3ltYm9sXS5wdXNoKHByb21pc2UpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBOZXh0RmV0Y2hFdmVudCBleHRlbmRzIEZldGNoRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKHBhcmFtcyl7XG4gICAgICAgIHN1cGVyKHBhcmFtcy5yZXF1ZXN0KTtcbiAgICAgICAgdGhpcy5zb3VyY2VQYWdlID0gcGFyYW1zLnBhZ2U7XG4gICAgfVxuICAgIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBUaGUgYHJlcXVlc3RgIGlzIG5vdyB0aGUgZmlyc3QgcGFyYW1ldGVyIGFuZCB0aGUgQVBJIGlzIG5vdyBhc3luYy5cbiAgICpcbiAgICogUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9taWRkbGV3YXJlLW5ldy1zaWduYXR1cmVcbiAgICovIGdldCByZXF1ZXN0KCkge1xuICAgICAgICB0aHJvdyBuZXcgUGFnZVNpZ25hdHVyZUVycm9yKHtcbiAgICAgICAgICAgIHBhZ2U6IHRoaXMuc291cmNlUGFnZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzaW5nIGByZXNwb25kV2l0aGAgaXMgbm8gbG9uZ2VyIG5lZWRlZC5cbiAgICpcbiAgICogUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9taWRkbGV3YXJlLW5ldy1zaWduYXR1cmVcbiAgICovIHJlc3BvbmRXaXRoKCkge1xuICAgICAgICB0aHJvdyBuZXcgUGFnZVNpZ25hdHVyZUVycm9yKHtcbiAgICAgICAgICAgIHBhZ2U6IHRoaXMuc291cmNlUGFnZVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLWV2ZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJQYWdlU2lnbmF0dXJlRXJyb3IiLCJyZXNwb25zZVN5bWJvbCIsIlN5bWJvbCIsInBhc3NUaHJvdWdoU3ltYm9sIiwid2FpdFVudGlsU3ltYm9sIiwiRmV0Y2hFdmVudCIsImNvbnN0cnVjdG9yIiwiX3JlcXVlc3QiLCJyZXNwb25kV2l0aCIsInJlc3BvbnNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJwYXNzVGhyb3VnaE9uRXhjZXB0aW9uIiwid2FpdFVudGlsIiwicHJvbWlzZSIsInB1c2giLCJOZXh0RmV0Y2hFdmVudCIsInBhcmFtcyIsInJlcXVlc3QiLCJzb3VyY2VQYWdlIiwicGFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/image-response.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/image-response.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageResponse: () => (/* binding */ ImageResponse)\n/* harmony export */ });\n/**\n * @deprecated ImageResponse moved from \"next/server\" to \"next/og\" since Next.js 14, please import from \"next/og\" instead.\n * Migration with codemods: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#next-og-import\n */function ImageResponse() {\n  throw new Error('ImageResponse moved from \"next/server\" to \"next/og\" since Next.js 14, please import from \"next/og\" instead');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9pbWFnZS1yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsR0FBVyxTQUFTQSxhQUFhQSxDQUFBLEVBQUc7RUFDaEMsTUFBTSxJQUFJQyxLQUFLLENBQUMsNEdBQTRHLENBQUM7QUFDakkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9pbWFnZS1yZXNwb25zZS5qcz8yYzk1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGRlcHJlY2F0ZWQgSW1hZ2VSZXNwb25zZSBtb3ZlZCBmcm9tIFwibmV4dC9zZXJ2ZXJcIiB0byBcIm5leHQvb2dcIiBzaW5jZSBOZXh0LmpzIDE0LCBwbGVhc2UgaW1wb3J0IGZyb20gXCJuZXh0L29nXCIgaW5zdGVhZC5cbiAqIE1pZ3JhdGlvbiB3aXRoIGNvZGVtb2RzOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYnVpbGRpbmcteW91ci1hcHBsaWNhdGlvbi91cGdyYWRpbmcvY29kZW1vZHMjbmV4dC1vZy1pbXBvcnRcbiAqLyBleHBvcnQgZnVuY3Rpb24gSW1hZ2VSZXNwb25zZSgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ltYWdlUmVzcG9uc2UgbW92ZWQgZnJvbSBcIm5leHQvc2VydmVyXCIgdG8gXCJuZXh0L29nXCIgc2luY2UgTmV4dC5qcyAxNCwgcGxlYXNlIGltcG9ydCBmcm9tIFwibmV4dC9vZ1wiIGluc3RlYWQnKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2UtcmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbIkltYWdlUmVzcG9uc2UiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/image-response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/request.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INTERNALS: () => (/* binding */ INTERNALS),\n/* harmony export */   NextRequest: () => (/* binding */ NextRequest)\n/* harmony export */ });\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n\n\n\n\nconst INTERNALS = Symbol(\"internal request\");\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */\nclass NextRequest extends Request {\n  constructor(input, init = {}) {\n    const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n    (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(url);\n    if (input instanceof Request) super(input, init);else super(url, init);\n    const nextUrl = new _next_url__WEBPACK_IMPORTED_MODULE_0__.NextURL(url, {\n      headers: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toNodeOutgoingHttpHeaders)(this.headers),\n      nextConfig: init.nextConfig\n    });\n    this[INTERNALS] = {\n      cookies: new _cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(this.headers),\n      geo: init.geo || {},\n      ip: init.ip,\n      nextUrl,\n      url:  false ? 0 : nextUrl.toString()\n    };\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return {\n      cookies: this.cookies,\n      geo: this.geo,\n      ip: this.ip,\n      nextUrl: this.nextUrl,\n      url: this.url,\n      // rest of props come from Request\n      bodyUsed: this.bodyUsed,\n      cache: this.cache,\n      credentials: this.credentials,\n      destination: this.destination,\n      headers: Object.fromEntries(this.headers),\n      integrity: this.integrity,\n      keepalive: this.keepalive,\n      method: this.method,\n      mode: this.mode,\n      redirect: this.redirect,\n      referrer: this.referrer,\n      referrerPolicy: this.referrerPolicy,\n      signal: this.signal\n    };\n  }\n  get cookies() {\n    return this[INTERNALS].cookies;\n  }\n  get geo() {\n    return this[INTERNALS].geo;\n  }\n  get ip() {\n    return this[INTERNALS].ip;\n  }\n  get nextUrl() {\n    return this[INTERNALS].nextUrl;\n  }\n  /**\n  * @deprecated\n  * `page` has been deprecated in favour of `URLPattern`.\n  * Read more: https://nextjs.org/docs/messages/middleware-request-page\n  */\n  get page() {\n    throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedPageError();\n  }\n  /**\n  * @deprecated\n  * `ua` has been removed in favour of \\`userAgent\\` function.\n  * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  */\n  get ua() {\n    throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedUAError();\n  }\n  get url() {\n    return this[INTERNALS].url;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzQztBQUM0QjtBQUNOO0FBQ2pCO0FBQ3BDLE1BQU1NLFNBQVMsR0FBR0MsTUFBTSxDQUFDLGtCQUFrQixDQUFDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBVyxNQUFNQyxXQUFXLFNBQVNDLE9BQU8sQ0FBQztFQUN6Q0MsV0FBV0EsQ0FBQ0MsS0FBSyxFQUFFQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLEVBQUM7SUFDekIsTUFBTUMsR0FBRyxHQUFHLE9BQU9GLEtBQUssS0FBSyxRQUFRLElBQUksS0FBSyxJQUFJQSxLQUFLLEdBQUdBLEtBQUssQ0FBQ0UsR0FBRyxHQUFHQyxNQUFNLENBQUNILEtBQUssQ0FBQztJQUNuRlQsbURBQVcsQ0FBQ1csR0FBRyxDQUFDO0lBQ2hCLElBQUlGLEtBQUssWUFBWUYsT0FBTyxFQUFFLEtBQUssQ0FBQ0UsS0FBSyxFQUFFQyxJQUFJLENBQUMsQ0FBQyxLQUM1QyxLQUFLLENBQUNDLEdBQUcsRUFBRUQsSUFBSSxDQUFDO0lBQ3JCLE1BQU1HLE9BQU8sR0FBRyxJQUFJZiw4Q0FBTyxDQUFDYSxHQUFHLEVBQUU7TUFDN0JHLE9BQU8sRUFBRWYsaUVBQXlCLENBQUMsSUFBSSxDQUFDZSxPQUFPLENBQUM7TUFDaERDLFVBQVUsRUFBRUwsSUFBSSxDQUFDSztJQUNyQixDQUFDLENBQUM7SUFDRixJQUFJLENBQUNYLFNBQVMsQ0FBQyxHQUFHO01BQ2RZLE9BQU8sRUFBRSxJQUFJYixvREFBYyxDQUFDLElBQUksQ0FBQ1csT0FBTyxDQUFDO01BQ3pDRyxHQUFHLEVBQUVQLElBQUksQ0FBQ08sR0FBRyxJQUFJLENBQUMsQ0FBQztNQUNuQkMsRUFBRSxFQUFFUixJQUFJLENBQUNRLEVBQUU7TUFDWEwsT0FBTztNQUNQRixHQUFHLEVBQUVRLE1BQThDLEdBQUdSLENBQUcsR0FBR0UsT0FBTyxDQUFDUyxRQUFRLENBQUM7SUFDakYsQ0FBQztFQUNMO0VBQ0EsQ0FBQ2pCLE1BQU0sQ0FBQ2tCLEdBQUcsQ0FBQyw2QkFBNkIsQ0FBQyxJQUFJO0lBQzFDLE9BQU87TUFDSFAsT0FBTyxFQUFFLElBQUksQ0FBQ0EsT0FBTztNQUNyQkMsR0FBRyxFQUFFLElBQUksQ0FBQ0EsR0FBRztNQUNiQyxFQUFFLEVBQUUsSUFBSSxDQUFDQSxFQUFFO01BQ1hMLE9BQU8sRUFBRSxJQUFJLENBQUNBLE9BQU87TUFDckJGLEdBQUcsRUFBRSxJQUFJLENBQUNBLEdBQUc7TUFDYjtNQUNBYSxRQUFRLEVBQUUsSUFBSSxDQUFDQSxRQUFRO01BQ3ZCQyxLQUFLLEVBQUUsSUFBSSxDQUFDQSxLQUFLO01BQ2pCQyxXQUFXLEVBQUUsSUFBSSxDQUFDQSxXQUFXO01BQzdCQyxXQUFXLEVBQUUsSUFBSSxDQUFDQSxXQUFXO01BQzdCYixPQUFPLEVBQUVjLE1BQU0sQ0FBQ0MsV0FBVyxDQUFDLElBQUksQ0FBQ2YsT0FBTyxDQUFDO01BQ3pDZ0IsU0FBUyxFQUFFLElBQUksQ0FBQ0EsU0FBUztNQUN6QkMsU0FBUyxFQUFFLElBQUksQ0FBQ0EsU0FBUztNQUN6QkMsTUFBTSxFQUFFLElBQUksQ0FBQ0EsTUFBTTtNQUNuQkMsSUFBSSxFQUFFLElBQUksQ0FBQ0EsSUFBSTtNQUNmQyxRQUFRLEVBQUUsSUFBSSxDQUFDQSxRQUFRO01BQ3ZCQyxRQUFRLEVBQUUsSUFBSSxDQUFDQSxRQUFRO01BQ3ZCQyxjQUFjLEVBQUUsSUFBSSxDQUFDQSxjQUFjO01BQ25DQyxNQUFNLEVBQUUsSUFBSSxDQUFDQTtJQUNqQixDQUFDO0VBQ0w7RUFDQSxJQUFJckIsT0FBT0EsQ0FBQSxFQUFHO0lBQ1YsT0FBTyxJQUFJLENBQUNaLFNBQVMsQ0FBQyxDQUFDWSxPQUFPO0VBQ2xDO0VBQ0EsSUFBSUMsR0FBR0EsQ0FBQSxFQUFHO0lBQ04sT0FBTyxJQUFJLENBQUNiLFNBQVMsQ0FBQyxDQUFDYSxHQUFHO0VBQzlCO0VBQ0EsSUFBSUMsRUFBRUEsQ0FBQSxFQUFHO0lBQ0wsT0FBTyxJQUFJLENBQUNkLFNBQVMsQ0FBQyxDQUFDYyxFQUFFO0VBQzdCO0VBQ0EsSUFBSUwsT0FBT0EsQ0FBQSxFQUFHO0lBQ1YsT0FBTyxJQUFJLENBQUNULFNBQVMsQ0FBQyxDQUFDUyxPQUFPO0VBQ2xDO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtFQUFNLElBQUl5QixJQUFJQSxDQUFBLEVBQUc7SUFDVCxNQUFNLElBQUlwQyxvREFBZ0IsQ0FBQyxDQUFDO0VBQ2hDO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtFQUFNLElBQUlxQyxFQUFFQSxDQUFBLEVBQUc7SUFDUCxNQUFNLElBQUl0QyxrREFBYyxDQUFDLENBQUM7RUFDOUI7RUFDQSxJQUFJVSxHQUFHQSxDQUFBLEVBQUc7SUFDTixPQUFPLElBQUksQ0FBQ1AsU0FBUyxDQUFDLENBQUNPLEdBQUc7RUFDOUI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL3JlcXVlc3QuanM/MTVkMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0VVJMIH0gZnJvbSBcIi4uL25leHQtdXJsXCI7XG5pbXBvcnQgeyB0b05vZGVPdXRnb2luZ0h0dHBIZWFkZXJzLCB2YWxpZGF0ZVVSTCB9IGZyb20gXCIuLi91dGlsc1wiO1xuaW1wb3J0IHsgUmVtb3ZlZFVBRXJyb3IsIFJlbW92ZWRQYWdlRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JcIjtcbmltcG9ydCB7IFJlcXVlc3RDb29raWVzIH0gZnJvbSBcIi4vY29va2llc1wiO1xuZXhwb3J0IGNvbnN0IElOVEVSTkFMUyA9IFN5bWJvbChcImludGVybmFsIHJlcXVlc3RcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgZXh0ZW5kcyB0aGUgW1dlYiBgUmVxdWVzdGAgQVBJXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9BUEkvUmVxdWVzdCkgd2l0aCBhZGRpdGlvbmFsIGNvbnZlbmllbmNlIG1ldGhvZHMuXG4gKlxuICogUmVhZCBtb3JlOiBbTmV4dC5qcyBEb2NzOiBgTmV4dFJlcXVlc3RgXShodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYXBpLXJlZmVyZW5jZS9mdW5jdGlvbnMvbmV4dC1yZXF1ZXN0KVxuICovIGV4cG9ydCBjbGFzcyBOZXh0UmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuICAgIGNvbnN0cnVjdG9yKGlucHV0LCBpbml0ID0ge30pe1xuICAgICAgICBjb25zdCB1cmwgPSB0eXBlb2YgaW5wdXQgIT09IFwic3RyaW5nXCIgJiYgXCJ1cmxcIiBpbiBpbnB1dCA/IGlucHV0LnVybCA6IFN0cmluZyhpbnB1dCk7XG4gICAgICAgIHZhbGlkYXRlVVJMKHVybCk7XG4gICAgICAgIGlmIChpbnB1dCBpbnN0YW5jZW9mIFJlcXVlc3QpIHN1cGVyKGlucHV0LCBpbml0KTtcbiAgICAgICAgZWxzZSBzdXBlcih1cmwsIGluaXQpO1xuICAgICAgICBjb25zdCBuZXh0VXJsID0gbmV3IE5leHRVUkwodXJsLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB0b05vZGVPdXRnb2luZ0h0dHBIZWFkZXJzKHRoaXMuaGVhZGVycyksXG4gICAgICAgICAgICBuZXh0Q29uZmlnOiBpbml0Lm5leHRDb25maWdcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXNbSU5URVJOQUxTXSA9IHtcbiAgICAgICAgICAgIGNvb2tpZXM6IG5ldyBSZXF1ZXN0Q29va2llcyh0aGlzLmhlYWRlcnMpLFxuICAgICAgICAgICAgZ2VvOiBpbml0LmdlbyB8fCB7fSxcbiAgICAgICAgICAgIGlwOiBpbml0LmlwLFxuICAgICAgICAgICAgbmV4dFVybCxcbiAgICAgICAgICAgIHVybDogcHJvY2Vzcy5lbnYuX19ORVhUX05PX01JRERMRVdBUkVfVVJMX05PUk1BTElaRSA/IHVybCA6IG5leHRVcmwudG9TdHJpbmcoKVxuICAgICAgICB9O1xuICAgIH1cbiAgICBbU3ltYm9sLmZvcihcImVkZ2UtcnVudGltZS5pbnNwZWN0LmN1c3RvbVwiKV0oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb29raWVzOiB0aGlzLmNvb2tpZXMsXG4gICAgICAgICAgICBnZW86IHRoaXMuZ2VvLFxuICAgICAgICAgICAgaXA6IHRoaXMuaXAsXG4gICAgICAgICAgICBuZXh0VXJsOiB0aGlzLm5leHRVcmwsXG4gICAgICAgICAgICB1cmw6IHRoaXMudXJsLFxuICAgICAgICAgICAgLy8gcmVzdCBvZiBwcm9wcyBjb21lIGZyb20gUmVxdWVzdFxuICAgICAgICAgICAgYm9keVVzZWQ6IHRoaXMuYm9keVVzZWQsXG4gICAgICAgICAgICBjYWNoZTogdGhpcy5jYWNoZSxcbiAgICAgICAgICAgIGNyZWRlbnRpYWxzOiB0aGlzLmNyZWRlbnRpYWxzLFxuICAgICAgICAgICAgZGVzdGluYXRpb246IHRoaXMuZGVzdGluYXRpb24sXG4gICAgICAgICAgICBoZWFkZXJzOiBPYmplY3QuZnJvbUVudHJpZXModGhpcy5oZWFkZXJzKSxcbiAgICAgICAgICAgIGludGVncml0eTogdGhpcy5pbnRlZ3JpdHksXG4gICAgICAgICAgICBrZWVwYWxpdmU6IHRoaXMua2VlcGFsaXZlLFxuICAgICAgICAgICAgbWV0aG9kOiB0aGlzLm1ldGhvZCxcbiAgICAgICAgICAgIG1vZGU6IHRoaXMubW9kZSxcbiAgICAgICAgICAgIHJlZGlyZWN0OiB0aGlzLnJlZGlyZWN0LFxuICAgICAgICAgICAgcmVmZXJyZXI6IHRoaXMucmVmZXJyZXIsXG4gICAgICAgICAgICByZWZlcnJlclBvbGljeTogdGhpcy5yZWZlcnJlclBvbGljeSxcbiAgICAgICAgICAgIHNpZ25hbDogdGhpcy5zaWduYWxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZ2V0IGNvb2tpZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10uY29va2llcztcbiAgICB9XG4gICAgZ2V0IGdlbygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5nZW87XG4gICAgfVxuICAgIGdldCBpcCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5pcDtcbiAgICB9XG4gICAgZ2V0IG5leHRVcmwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10ubmV4dFVybDtcbiAgICB9XG4gICAgLyoqXG4gICAqIEBkZXByZWNhdGVkXG4gICAqIGBwYWdlYCBoYXMgYmVlbiBkZXByZWNhdGVkIGluIGZhdm91ciBvZiBgVVJMUGF0dGVybmAuXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1yZXF1ZXN0LXBhZ2VcbiAgICovIGdldCBwYWdlKCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVtb3ZlZFBhZ2VFcnJvcigpO1xuICAgIH1cbiAgICAvKipcbiAgICogQGRlcHJlY2F0ZWRcbiAgICogYHVhYCBoYXMgYmVlbiByZW1vdmVkIGluIGZhdm91ciBvZiBcXGB1c2VyQWdlbnRcXGAgZnVuY3Rpb24uXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1wYXJzZS11c2VyLWFnZW50XG4gICAqLyBnZXQgdWEoKSB7XG4gICAgICAgIHRocm93IG5ldyBSZW1vdmVkVUFFcnJvcigpO1xuICAgIH1cbiAgICBnZXQgdXJsKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJTlRFUk5BTFNdLnVybDtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbIk5leHRVUkwiLCJ0b05vZGVPdXRnb2luZ0h0dHBIZWFkZXJzIiwidmFsaWRhdGVVUkwiLCJSZW1vdmVkVUFFcnJvciIsIlJlbW92ZWRQYWdlRXJyb3IiLCJSZXF1ZXN0Q29va2llcyIsIklOVEVSTkFMUyIsIlN5bWJvbCIsIk5leHRSZXF1ZXN0IiwiUmVxdWVzdCIsImNvbnN0cnVjdG9yIiwiaW5wdXQiLCJpbml0IiwidXJsIiwiU3RyaW5nIiwibmV4dFVybCIsImhlYWRlcnMiLCJuZXh0Q29uZmlnIiwiY29va2llcyIsImdlbyIsImlwIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9OT19NSURETEVXQVJFX1VSTF9OT1JNQUxJWkUiLCJ0b1N0cmluZyIsImZvciIsImJvZHlVc2VkIiwiY2FjaGUiLCJjcmVkZW50aWFscyIsImRlc3RpbmF0aW9uIiwiT2JqZWN0IiwiZnJvbUVudHJpZXMiLCJpbnRlZ3JpdHkiLCJrZWVwYWxpdmUiLCJtZXRob2QiLCJtb2RlIiwicmVkaXJlY3QiLCJyZWZlcnJlciIsInJlZmVycmVyUG9saWN5Iiwic2lnbmFsIiwicGFnZSIsInVhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/response.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextResponse: () => (/* binding */ NextResponse)\n/* harmony export */ });\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([301, 302, 303, 307, 308]);\nfunction handleMiddlewareField(init, headers) {\n  var _init_request;\n  if (init == null ? void 0 : (_init_request = init.request) == null ? void 0 : _init_request.headers) {\n    if (!(init.request.headers instanceof Headers)) {\n      throw new Error(\"request.headers must be an instance of Headers\");\n    }\n    const keys = [];\n    for (const [key, value] of init.request.headers) {\n      headers.set(\"x-middleware-request-\" + key, value);\n      keys.push(key);\n    }\n    headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n  }\n}\n/**\n * This class extends the [Web `Response` API](https://developer.mozilla.org/docs/Web/API/Response) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextResponse`](https://nextjs.org/docs/app/api-reference/functions/next-response)\n */\nclass NextResponse extends Response {\n  constructor(body, init = {}) {\n    super(body, init);\n    this[INTERNALS] = {\n      cookies: new _cookies__WEBPACK_IMPORTED_MODULE_2__.ResponseCookies(this.headers),\n      url: init.url ? new _next_url__WEBPACK_IMPORTED_MODULE_0__.NextURL(init.url, {\n        headers: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toNodeOutgoingHttpHeaders)(this.headers),\n        nextConfig: init.nextConfig\n      }) : undefined\n    };\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return {\n      cookies: this.cookies,\n      url: this.url,\n      // rest of props come from Response\n      body: this.body,\n      bodyUsed: this.bodyUsed,\n      headers: Object.fromEntries(this.headers),\n      ok: this.ok,\n      redirected: this.redirected,\n      status: this.status,\n      statusText: this.statusText,\n      type: this.type\n    };\n  }\n  get cookies() {\n    return this[INTERNALS].cookies;\n  }\n  static json(body, init) {\n    const response = Response.json(body, init);\n    return new NextResponse(response.body, response);\n  }\n  static redirect(url, init) {\n    const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n    if (!REDIRECTS.has(status)) {\n      throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n    }\n    const initObj = typeof init === \"object\" ? init : {};\n    const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n    headers.set(\"Location\", (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(url));\n    return new NextResponse(null, _objectSpread(_objectSpread({}, initObj), {}, {\n      headers,\n      status\n    }));\n  }\n  static rewrite(destination, init) {\n    const headers = new Headers(init == null ? void 0 : init.headers);\n    headers.set(\"x-middleware-rewrite\", (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(destination));\n    handleMiddlewareField(init, headers);\n    return new NextResponse(null, _objectSpread(_objectSpread({}, init), {}, {\n      headers\n    }));\n  }\n  static next(init) {\n    const headers = new Headers(init == null ? void 0 : init.headers);\n    headers.set(\"x-middleware-next\", \"1\");\n    handleMiddlewareField(init, headers);\n    return new NextResponse(null, _objectSpread(_objectSpread({}, init), {}, {\n      headers\n    }));\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/url-pattern.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/url-pattern.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   URLPattern: () => (/* binding */ GlobalURLPattern)\n/* harmony export */ });\nconst GlobalURLPattern =\n// @ts-expect-error: URLPattern is not available in Node.js\ntypeof URLPattern === \"undefined\" ? undefined : URLPattern;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi91cmwtcGF0dGVybi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsZ0JBQWdCO0FBQUc7QUFDekIsT0FBT0MsVUFBVSxLQUFLLFdBQVcsR0FBR0MsU0FBUyxHQUFHRCxVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vdXJsLXBhdHRlcm4uanM/NzIzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBHbG9iYWxVUkxQYXR0ZXJuID0gLy8gQHRzLWV4cGVjdC1lcnJvcjogVVJMUGF0dGVybiBpcyBub3QgYXZhaWxhYmxlIGluIE5vZGUuanNcbnR5cGVvZiBVUkxQYXR0ZXJuID09PSBcInVuZGVmaW5lZFwiID8gdW5kZWZpbmVkIDogVVJMUGF0dGVybjtcbmV4cG9ydCB7IEdsb2JhbFVSTFBhdHRlcm4gYXMgVVJMUGF0dGVybiB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmwtcGF0dGVybi5qcy5tYXAiXSwibmFtZXMiOlsiR2xvYmFsVVJMUGF0dGVybiIsIlVSTFBhdHRlcm4iLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/url-pattern.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/user-agent.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/user-agent.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBot: () => (/* binding */ isBot),\n/* harmony export */   userAgent: () => (/* binding */ userAgent),\n/* harmony export */   userAgentFromString: () => (/* binding */ userAgentFromString)\n/* harmony export */ });\n/* harmony import */ var next_dist_compiled_ua_parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/compiled/ua-parser-js */ \"(middleware)/./node_modules/next/dist/compiled/ua-parser-js/ua-parser.js\");\n/* harmony import */ var next_dist_compiled_ua_parser_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_compiled_ua_parser_js__WEBPACK_IMPORTED_MODULE_0__);\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction isBot(input) {\n  return /Googlebot|Mediapartners-Google|AdsBot-Google|googleweblight|Storebot-Google|Google-PageRenderer|Google-InspectionTool|Bingbot|BingPreview|Slurp|DuckDuckBot|baiduspider|yandex|sogou|LinkedInBot|bitlybot|tumblr|vkShare|quora link preview|facebookexternalhit|facebookcatalog|Twitterbot|applebot|redditbot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|ia_archiver/i.test(input);\n}\nfunction userAgentFromString(input) {\n  return _objectSpread(_objectSpread({}, next_dist_compiled_ua_parser_js__WEBPACK_IMPORTED_MODULE_0___default()(input)), {}, {\n    isBot: input === undefined ? false : isBot(input)\n  });\n}\nfunction userAgent({\n  headers\n}) {\n  return userAgentFromString(headers.get(\"user-agent\") || undefined);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi91c2VyLWFnZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBc0Q7QUFDL0MsU0FBU0MsS0FBS0EsQ0FBQ0MsS0FBSyxFQUFFO0VBQ3pCLE9BQU8seVdBQXlXLENBQUNDLElBQUksQ0FBQ0QsS0FBSyxDQUFDO0FBQ2hZO0FBQ08sU0FBU0UsbUJBQW1CQSxDQUFDRixLQUFLLEVBQUU7RUFDdkMsT0FBQUcsYUFBQSxDQUFBQSxhQUFBLEtBQ09MLHNFQUFPLENBQUNFLEtBQUssQ0FBQztJQUNqQkQsS0FBSyxFQUFFQyxLQUFLLEtBQUtJLFNBQVMsR0FBRyxLQUFLLEdBQUdMLEtBQUssQ0FBQ0MsS0FBSztFQUFDO0FBRXpEO0FBQ08sU0FBU0ssU0FBU0EsQ0FBQztFQUFFQztBQUFRLENBQUMsRUFBRTtFQUNuQyxPQUFPSixtQkFBbUIsQ0FBQ0ksT0FBTyxDQUFDQyxHQUFHLENBQUMsWUFBWSxDQUFDLElBQUlILFNBQVMsQ0FBQztBQUN0RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL3VzZXItYWdlbnQuanM/ZGJkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGFyc2V1YSBmcm9tIFwibmV4dC9kaXN0L2NvbXBpbGVkL3VhLXBhcnNlci1qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGlzQm90KGlucHV0KSB7XG4gICAgcmV0dXJuIC9Hb29nbGVib3R8TWVkaWFwYXJ0bmVycy1Hb29nbGV8QWRzQm90LUdvb2dsZXxnb29nbGV3ZWJsaWdodHxTdG9yZWJvdC1Hb29nbGV8R29vZ2xlLVBhZ2VSZW5kZXJlcnxHb29nbGUtSW5zcGVjdGlvblRvb2x8QmluZ2JvdHxCaW5nUHJldmlld3xTbHVycHxEdWNrRHVja0JvdHxiYWlkdXNwaWRlcnx5YW5kZXh8c29nb3V8TGlua2VkSW5Cb3R8Yml0bHlib3R8dHVtYmxyfHZrU2hhcmV8cXVvcmEgbGluayBwcmV2aWV3fGZhY2Vib29rZXh0ZXJuYWxoaXR8ZmFjZWJvb2tjYXRhbG9nfFR3aXR0ZXJib3R8YXBwbGVib3R8cmVkZGl0Ym90fFNsYWNrYm90fERpc2NvcmRib3R8V2hhdHNBcHB8U2t5cGVVcmlQcmV2aWV3fGlhX2FyY2hpdmVyL2kudGVzdChpbnB1dCk7XG59XG5leHBvcnQgZnVuY3Rpb24gdXNlckFnZW50RnJvbVN0cmluZyhpbnB1dCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIC4uLnBhcnNldWEoaW5wdXQpLFxuICAgICAgICBpc0JvdDogaW5wdXQgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogaXNCb3QoaW5wdXQpXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB1c2VyQWdlbnQoeyBoZWFkZXJzIH0pIHtcbiAgICByZXR1cm4gdXNlckFnZW50RnJvbVN0cmluZyhoZWFkZXJzLmdldChcInVzZXItYWdlbnRcIikgfHwgdW5kZWZpbmVkKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlci1hZ2VudC5qcy5tYXAiXSwibmFtZXMiOlsicGFyc2V1YSIsImlzQm90IiwiaW5wdXQiLCJ0ZXN0IiwidXNlckFnZW50RnJvbVN0cmluZyIsIl9vYmplY3RTcHJlYWQiLCJ1bmRlZmluZWQiLCJ1c2VyQWdlbnQiLCJoZWFkZXJzIiwiZ2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/user-agent.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromNodeOutgoingHttpHeaders: () => (/* binding */ fromNodeOutgoingHttpHeaders),\n/* harmony export */   splitCookiesString: () => (/* binding */ splitCookiesString),\n/* harmony export */   toNodeOutgoingHttpHeaders: () => (/* binding */ toNodeOutgoingHttpHeaders),\n/* harmony export */   validateURL: () => (/* binding */ validateURL)\n/* harmony export */ });\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n  const headers = new Headers();\n  for (let [key, value] of Object.entries(nodeHeaders)) {\n    const values = Array.isArray(value) ? value : [value];\n    for (let v of values) {\n      if (typeof v === \"undefined\") continue;\n      if (typeof v === \"number\") {\n        v = v.toString();\n      }\n      headers.append(key, v);\n    }\n  }\n  return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */\nfunction toNodeOutgoingHttpHeaders(headers) {\n  const nodeHeaders = {};\n  const cookies = [];\n  if (headers) {\n    for (const [key, value] of headers.entries()) {\n      if (key.toLowerCase() === \"set-cookie\") {\n        // We may have gotten a comma joined string of cookies, or multiple\n        // set-cookie headers. We need to merge them into one header array\n        // to represent all the cookies.\n        cookies.push(...splitCookiesString(value));\n        nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n      } else {\n        nodeHeaders[key] = value;\n      }\n    }\n  }\n  return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */\nfunction validateURL(url) {\n  try {\n    return String(new URL(String(url)));\n  } catch (error) {\n    throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n      cause: error\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppRouterContext: () => (/* binding */ AppRouterContext),\n/* harmony export */   GlobalLayoutRouterContext: () => (/* binding */ GlobalLayoutRouterContext),\n/* harmony export */   LayoutRouterContext: () => (/* binding */ LayoutRouterContext),\n/* harmony export */   MissingSlotContext: () => (/* binding */ MissingSlotContext),\n/* harmony export */   TemplateContext: () => (/* binding */ TemplateContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\"use client\";\n\nconst AppRouterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nconst LayoutRouterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nconst GlobalLayoutRouterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nconst TemplateContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nif (true) {\n    AppRouterContext.displayName = \"AppRouterContext\";\n    LayoutRouterContext.displayName = \"LayoutRouterContext\";\n    GlobalLayoutRouterContext.displayName = \"GlobalLayoutRouterContext\";\n    TemplateContext.displayName = \"TemplateContext\";\n}\nconst MissingSlotContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(new Set());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9hcHAtcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBRXlCO0FBQ2xCLE1BQU1DLG1CQUFnQixjQUFHRCwwREFBbUIsQ0FBQyxNQUFLO0FBQ2xELE1BQU1HLHNCQUFtQixjQUFHSCwwREFBbUIsQ0FBQyxNQUFLO0FBQ3JELE1BQU1JLDRCQUF5QixjQUFHSiwwREFBbUIsQ0FBQyxNQUFLO0FBQzNELE1BQU1LLGtCQUFlLGNBQUdMLDBEQUFtQixDQUFDLE1BQUs7QUFDeEQsVUFBMkM7SUFDdkNDLGlCQUFpQkssV0FBVyxHQUFHO0lBQy9CSCxvQkFBb0JHLFdBQVcsR0FBRztJQUNsQ0YsMEJBQTBCRSxXQUFXLEdBQUc7SUFDeENELGdCQUFnQkMsV0FBVyxHQUFHO0FBQ2xDO0FBQ08sTUFBTUMscUJBQWtCLGNBQUdQLDBEQUFtQixDQUFDLElBQUlRLE9BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9hcHAtcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUuanM/Y2I3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuZXhwb3J0IGNvbnN0IEFwcFJvdXRlckNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuZXhwb3J0IGNvbnN0IExheW91dFJvdXRlckNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuZXhwb3J0IGNvbnN0IEdsb2JhbExheW91dFJvdXRlckNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuZXhwb3J0IGNvbnN0IFRlbXBsYXRlQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgQXBwUm91dGVyQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiQXBwUm91dGVyQ29udGV4dFwiO1xuICAgIExheW91dFJvdXRlckNvbnRleHQuZGlzcGxheU5hbWUgPSBcIkxheW91dFJvdXRlckNvbnRleHRcIjtcbiAgICBHbG9iYWxMYXlvdXRSb3V0ZXJDb250ZXh0LmRpc3BsYXlOYW1lID0gXCJHbG9iYWxMYXlvdXRSb3V0ZXJDb250ZXh0XCI7XG4gICAgVGVtcGxhdGVDb250ZXh0LmRpc3BsYXlOYW1lID0gXCJUZW1wbGF0ZUNvbnRleHRcIjtcbn1cbmV4cG9ydCBjb25zdCBNaXNzaW5nU2xvdENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG5ldyBTZXQoKSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZXItY29udGV4dC5zaGFyZWQtcnVudGltZS5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJBcHBSb3V0ZXJDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsIkxheW91dFJvdXRlckNvbnRleHQiLCJHbG9iYWxMYXlvdXRSb3V0ZXJDb250ZXh0IiwiVGVtcGxhdGVDb250ZXh0IiwiZGlzcGxheU5hbWUiLCJNaXNzaW5nU2xvdENvbnRleHQiLCJTZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/constants.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/constants.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APP_BUILD_MANIFEST: () => (/* binding */ APP_BUILD_MANIFEST),\n/* harmony export */   APP_CLIENT_INTERNALS: () => (/* binding */ APP_CLIENT_INTERNALS),\n/* harmony export */   APP_PATHS_MANIFEST: () => (/* binding */ APP_PATHS_MANIFEST),\n/* harmony export */   APP_PATH_ROUTES_MANIFEST: () => (/* binding */ APP_PATH_ROUTES_MANIFEST),\n/* harmony export */   AUTOMATIC_FONT_OPTIMIZATION_MANIFEST: () => (/* binding */ AUTOMATIC_FONT_OPTIMIZATION_MANIFEST),\n/* harmony export */   BARREL_OPTIMIZATION_PREFIX: () => (/* binding */ BARREL_OPTIMIZATION_PREFIX),\n/* harmony export */   BLOCKED_PAGES: () => (/* binding */ BLOCKED_PAGES),\n/* harmony export */   BUILD_ID_FILE: () => (/* binding */ BUILD_ID_FILE),\n/* harmony export */   BUILD_MANIFEST: () => (/* binding */ BUILD_MANIFEST),\n/* harmony export */   CLIENT_PUBLIC_FILES_PATH: () => (/* binding */ CLIENT_PUBLIC_FILES_PATH),\n/* harmony export */   CLIENT_REFERENCE_MANIFEST: () => (/* binding */ CLIENT_REFERENCE_MANIFEST),\n/* harmony export */   CLIENT_STATIC_FILES_PATH: () => (/* binding */ CLIENT_STATIC_FILES_PATH),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_AMP: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_AMP),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_MAIN: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_MAIN),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_MAIN_APP: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_MAIN_APP),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_POLYFILLS: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_POLYFILLS),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_WEBPACK: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_WEBPACK),\n/* harmony export */   COMPILER_INDEXES: () => (/* binding */ COMPILER_INDEXES),\n/* harmony export */   COMPILER_NAMES: () => (/* binding */ COMPILER_NAMES),\n/* harmony export */   CONFIG_FILES: () => (/* binding */ CONFIG_FILES),\n/* harmony export */   DEFAULT_RUNTIME_WEBPACK: () => (/* binding */ DEFAULT_RUNTIME_WEBPACK),\n/* harmony export */   DEFAULT_SANS_SERIF_FONT: () => (/* binding */ DEFAULT_SANS_SERIF_FONT),\n/* harmony export */   DEFAULT_SERIF_FONT: () => (/* binding */ DEFAULT_SERIF_FONT),\n/* harmony export */   DEV_CLIENT_PAGES_MANIFEST: () => (/* binding */ DEV_CLIENT_PAGES_MANIFEST),\n/* harmony export */   DEV_MIDDLEWARE_MANIFEST: () => (/* binding */ DEV_MIDDLEWARE_MANIFEST),\n/* harmony export */   EDGE_RUNTIME_WEBPACK: () => (/* binding */ EDGE_RUNTIME_WEBPACK),\n/* harmony export */   EDGE_UNSUPPORTED_NODE_APIS: () => (/* binding */ EDGE_UNSUPPORTED_NODE_APIS),\n/* harmony export */   EXPORT_DETAIL: () => (/* binding */ EXPORT_DETAIL),\n/* harmony export */   EXPORT_MARKER: () => (/* binding */ EXPORT_MARKER),\n/* harmony export */   FUNCTIONS_CONFIG_MANIFEST: () => (/* binding */ FUNCTIONS_CONFIG_MANIFEST),\n/* harmony export */   GOOGLE_FONT_PROVIDER: () => (/* binding */ GOOGLE_FONT_PROVIDER),\n/* harmony export */   IMAGES_MANIFEST: () => (/* binding */ IMAGES_MANIFEST),\n/* harmony export */   INTERCEPTION_ROUTE_REWRITE_MANIFEST: () => (/* binding */ INTERCEPTION_ROUTE_REWRITE_MANIFEST),\n/* harmony export */   INTERNAL_HEADERS: () => (/* binding */ INTERNAL_HEADERS),\n/* harmony export */   MIDDLEWARE_BUILD_MANIFEST: () => (/* binding */ MIDDLEWARE_BUILD_MANIFEST),\n/* harmony export */   MIDDLEWARE_MANIFEST: () => (/* binding */ MIDDLEWARE_MANIFEST),\n/* harmony export */   MIDDLEWARE_REACT_LOADABLE_MANIFEST: () => (/* binding */ MIDDLEWARE_REACT_LOADABLE_MANIFEST),\n/* harmony export */   MODERN_BROWSERSLIST_TARGET: () => (/* reexport default from dynamic */ _modern_browserslist_target__WEBPACK_IMPORTED_MODULE_0___default.a),\n/* harmony export */   NEXT_BUILTIN_DOCUMENT: () => (/* binding */ NEXT_BUILTIN_DOCUMENT),\n/* harmony export */   NEXT_FONT_MANIFEST: () => (/* binding */ NEXT_FONT_MANIFEST),\n/* harmony export */   OPTIMIZED_FONT_PROVIDERS: () => (/* binding */ OPTIMIZED_FONT_PROVIDERS),\n/* harmony export */   PAGES_MANIFEST: () => (/* binding */ PAGES_MANIFEST),\n/* harmony export */   PHASE_DEVELOPMENT_SERVER: () => (/* binding */ PHASE_DEVELOPMENT_SERVER),\n/* harmony export */   PHASE_EXPORT: () => (/* binding */ PHASE_EXPORT),\n/* harmony export */   PHASE_INFO: () => (/* binding */ PHASE_INFO),\n/* harmony export */   PHASE_PRODUCTION_BUILD: () => (/* binding */ PHASE_PRODUCTION_BUILD),\n/* harmony export */   PHASE_PRODUCTION_SERVER: () => (/* binding */ PHASE_PRODUCTION_SERVER),\n/* harmony export */   PHASE_TEST: () => (/* binding */ PHASE_TEST),\n/* harmony export */   PRERENDER_MANIFEST: () => (/* binding */ PRERENDER_MANIFEST),\n/* harmony export */   REACT_LOADABLE_MANIFEST: () => (/* binding */ REACT_LOADABLE_MANIFEST),\n/* harmony export */   ROUTES_MANIFEST: () => (/* binding */ ROUTES_MANIFEST),\n/* harmony export */   RSC_MODULE_TYPES: () => (/* binding */ RSC_MODULE_TYPES),\n/* harmony export */   SERVER_DIRECTORY: () => (/* binding */ SERVER_DIRECTORY),\n/* harmony export */   SERVER_FILES_MANIFEST: () => (/* binding */ SERVER_FILES_MANIFEST),\n/* harmony export */   SERVER_PROPS_ID: () => (/* binding */ SERVER_PROPS_ID),\n/* harmony export */   SERVER_REFERENCE_MANIFEST: () => (/* binding */ SERVER_REFERENCE_MANIFEST),\n/* harmony export */   STATIC_PROPS_ID: () => (/* binding */ STATIC_PROPS_ID),\n/* harmony export */   STATIC_STATUS_PAGES: () => (/* binding */ STATIC_STATUS_PAGES),\n/* harmony export */   STRING_LITERAL_DROP_BUNDLE: () => (/* binding */ STRING_LITERAL_DROP_BUNDLE),\n/* harmony export */   SUBRESOURCE_INTEGRITY_MANIFEST: () => (/* binding */ SUBRESOURCE_INTEGRITY_MANIFEST),\n/* harmony export */   SYSTEM_ENTRYPOINTS: () => (/* binding */ SYSTEM_ENTRYPOINTS),\n/* harmony export */   TRACE_OUTPUT_VERSION: () => (/* binding */ TRACE_OUTPUT_VERSION),\n/* harmony export */   TURBO_TRACE_DEFAULT_MEMORY_LIMIT: () => (/* binding */ TURBO_TRACE_DEFAULT_MEMORY_LIMIT),\n/* harmony export */   UNDERSCORE_NOT_FOUND_ROUTE: () => (/* binding */ UNDERSCORE_NOT_FOUND_ROUTE),\n/* harmony export */   UNDERSCORE_NOT_FOUND_ROUTE_ENTRY: () => (/* binding */ UNDERSCORE_NOT_FOUND_ROUTE_ENTRY)\n/* harmony export */ });\n/* harmony import */ var _modern_browserslist_target__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modern-browserslist-target */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/modern-browserslist-target.js\");\n/* harmony import */ var _modern_browserslist_target__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modern_browserslist_target__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst COMPILER_NAMES = {\n    client: \"client\",\n    server: \"server\",\n    edgeServer: \"edge-server\"\n};\n/**\n * Headers that are set by the Next.js server and should be stripped from the\n * request headers going to the user's application.\n */ const INTERNAL_HEADERS = [\n    \"x-invoke-error\",\n    \"x-invoke-output\",\n    \"x-invoke-path\",\n    \"x-invoke-query\",\n    \"x-invoke-status\",\n    \"x-middleware-invoke\"\n];\nconst COMPILER_INDEXES = {\n    [COMPILER_NAMES.client]: 0,\n    [COMPILER_NAMES.server]: 1,\n    [COMPILER_NAMES.edgeServer]: 2\n};\nconst UNDERSCORE_NOT_FOUND_ROUTE = \"/_not-found\";\nconst UNDERSCORE_NOT_FOUND_ROUTE_ENTRY = \"\" + UNDERSCORE_NOT_FOUND_ROUTE + \"/page\";\nconst PHASE_EXPORT = \"phase-export\";\nconst PHASE_PRODUCTION_BUILD = \"phase-production-build\";\nconst PHASE_PRODUCTION_SERVER = \"phase-production-server\";\nconst PHASE_DEVELOPMENT_SERVER = \"phase-development-server\";\nconst PHASE_TEST = \"phase-test\";\nconst PHASE_INFO = \"phase-info\";\nconst PAGES_MANIFEST = \"pages-manifest.json\";\nconst APP_PATHS_MANIFEST = \"app-paths-manifest.json\";\nconst APP_PATH_ROUTES_MANIFEST = \"app-path-routes-manifest.json\";\nconst BUILD_MANIFEST = \"build-manifest.json\";\nconst APP_BUILD_MANIFEST = \"app-build-manifest.json\";\nconst FUNCTIONS_CONFIG_MANIFEST = \"functions-config-manifest.json\";\nconst SUBRESOURCE_INTEGRITY_MANIFEST = \"subresource-integrity-manifest\";\nconst NEXT_FONT_MANIFEST = \"next-font-manifest\";\nconst EXPORT_MARKER = \"export-marker.json\";\nconst EXPORT_DETAIL = \"export-detail.json\";\nconst PRERENDER_MANIFEST = \"prerender-manifest.json\";\nconst ROUTES_MANIFEST = \"routes-manifest.json\";\nconst IMAGES_MANIFEST = \"images-manifest.json\";\nconst SERVER_FILES_MANIFEST = \"required-server-files.json\";\nconst DEV_CLIENT_PAGES_MANIFEST = \"_devPagesManifest.json\";\nconst MIDDLEWARE_MANIFEST = \"middleware-manifest.json\";\nconst DEV_MIDDLEWARE_MANIFEST = \"_devMiddlewareManifest.json\";\nconst REACT_LOADABLE_MANIFEST = \"react-loadable-manifest.json\";\nconst AUTOMATIC_FONT_OPTIMIZATION_MANIFEST = \"font-manifest.json\";\nconst SERVER_DIRECTORY = \"server\";\nconst CONFIG_FILES = [\n    \"next.config.js\",\n    \"next.config.mjs\"\n];\nconst BUILD_ID_FILE = \"BUILD_ID\";\nconst BLOCKED_PAGES = [\n    \"/_document\",\n    \"/_app\",\n    \"/_error\"\n];\nconst CLIENT_PUBLIC_FILES_PATH = \"public\";\nconst CLIENT_STATIC_FILES_PATH = \"static\";\nconst STRING_LITERAL_DROP_BUNDLE = \"__NEXT_DROP_CLIENT_FILE__\";\nconst NEXT_BUILTIN_DOCUMENT = \"__NEXT_BUILTIN_DOCUMENT__\";\nconst BARREL_OPTIMIZATION_PREFIX = \"__barrel_optimize__\";\n// server/[entry]/page_client-reference-manifest.js\nconst CLIENT_REFERENCE_MANIFEST = \"client-reference-manifest\";\n// server/server-reference-manifest\nconst SERVER_REFERENCE_MANIFEST = \"server-reference-manifest\";\n// server/middleware-build-manifest.js\nconst MIDDLEWARE_BUILD_MANIFEST = \"middleware-build-manifest\";\n// server/middleware-react-loadable-manifest.js\nconst MIDDLEWARE_REACT_LOADABLE_MANIFEST = \"middleware-react-loadable-manifest\";\n// server/interception-route-rewrite-manifest.js\nconst INTERCEPTION_ROUTE_REWRITE_MANIFEST = \"interception-route-rewrite-manifest\";\n// static/runtime/main.js\nconst CLIENT_STATIC_FILES_RUNTIME_MAIN = \"main\";\nconst CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = \"\" + CLIENT_STATIC_FILES_RUNTIME_MAIN + \"-app\";\n// next internal client components chunk for layouts\nconst APP_CLIENT_INTERNALS = \"app-pages-internals\";\n// static/runtime/react-refresh.js\nconst CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = \"react-refresh\";\n// static/runtime/amp.js\nconst CLIENT_STATIC_FILES_RUNTIME_AMP = \"amp\";\n// static/runtime/webpack.js\nconst CLIENT_STATIC_FILES_RUNTIME_WEBPACK = \"webpack\";\n// static/runtime/polyfills.js\nconst CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = \"polyfills\";\nconst CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(CLIENT_STATIC_FILES_RUNTIME_POLYFILLS);\nconst DEFAULT_RUNTIME_WEBPACK = \"webpack-runtime\";\nconst EDGE_RUNTIME_WEBPACK = \"edge-runtime-webpack\";\nconst STATIC_PROPS_ID = \"__N_SSG\";\nconst SERVER_PROPS_ID = \"__N_SSP\";\nconst GOOGLE_FONT_PROVIDER = \"https://fonts.googleapis.com/\";\nconst OPTIMIZED_FONT_PROVIDERS = [\n    {\n        url: GOOGLE_FONT_PROVIDER,\n        preconnect: \"https://fonts.gstatic.com\"\n    },\n    {\n        url: \"https://use.typekit.net\",\n        preconnect: \"https://use.typekit.net\"\n    }\n];\nconst DEFAULT_SERIF_FONT = {\n    name: \"Times New Roman\",\n    xAvgCharWidth: 821,\n    azAvgWidth: 854.3953488372093,\n    unitsPerEm: 2048\n};\nconst DEFAULT_SANS_SERIF_FONT = {\n    name: \"Arial\",\n    xAvgCharWidth: 904,\n    azAvgWidth: 934.5116279069767,\n    unitsPerEm: 2048\n};\nconst STATIC_STATUS_PAGES = [\n    \"/500\"\n];\nconst TRACE_OUTPUT_VERSION = 1;\n// in `MB`\nconst TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000;\nconst RSC_MODULE_TYPES = {\n    client: \"client\",\n    server: \"server\"\n};\n// comparing\n// https://nextjs.org/docs/api-reference/edge-runtime\n// with\n// https://nodejs.org/docs/latest/api/globals.html\nconst EDGE_UNSUPPORTED_NODE_APIS = [\n    \"clearImmediate\",\n    \"setImmediate\",\n    \"BroadcastChannel\",\n    \"ByteLengthQueuingStrategy\",\n    \"CompressionStream\",\n    \"CountQueuingStrategy\",\n    \"DecompressionStream\",\n    \"DomException\",\n    \"MessageChannel\",\n    \"MessageEvent\",\n    \"MessagePort\",\n    \"ReadableByteStreamController\",\n    \"ReadableStreamBYOBRequest\",\n    \"ReadableStreamDefaultController\",\n    \"TransformStreamDefaultController\",\n    \"WritableStreamDefaultController\"\n];\nconst SYSTEM_ENTRYPOINTS = new Set([\n    CLIENT_STATIC_FILES_RUNTIME_MAIN,\n    CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n    CLIENT_STATIC_FILES_RUNTIME_AMP,\n    CLIENT_STATIC_FILES_RUNTIME_MAIN_APP\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/get-hostname.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHostname: () => (/* binding */ getHostname)\n/* harmony export */ });\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ function getHostname(parsed, headers) {\n    // Get the hostname from the headers if it exists, otherwise use the parsed\n    // hostname.\n    let hostname;\n    if ((headers == null ? void 0 : headers.host) && !Array.isArray(headers.host)) {\n        hostname = headers.host.toString().split(\":\", 1)[0];\n    } else if (parsed.hostname) {\n        hostname = parsed.hostname;\n    } else return;\n    return hostname.toLowerCase();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9nZXQtaG9zdG5hbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztDQUtBLEdBQVcsU0FBU0EsWUFBWUMsTUFBTSxFQUFFQyxPQUFPO0lBQzNDO0lBQ0E7SUFDQSxJQUFJQztJQUNKLElBQUksQ0FBQ0QsV0FBVyxPQUFPLEtBQUssSUFBSUEsUUFBUUUsSUFBSSxLQUFLLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ0osUUFBUUUsSUFBSSxHQUFHO1FBQzNFRCxXQUFXRCxRQUFRRSxJQUFJLENBQUNHLFFBQVEsR0FBR0MsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUU7SUFDdkQsT0FBTyxJQUFJUCxPQUFPRSxRQUFRLEVBQUU7UUFDeEJBLFdBQVdGLE9BQU9FLFFBQVE7SUFDOUIsT0FBTztJQUNQLE9BQU9BLFNBQVNNLFdBQVc7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9nZXQtaG9zdG5hbWUuanM/NzYzMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRha2VzIGFuIG9iamVjdCB3aXRoIGEgaG9zdG5hbWUgcHJvcGVydHkgKGxpa2UgYSBwYXJzZWQgVVJMKSBhbmQgc29tZVxuICogaGVhZGVycyB0aGF0IG1heSBjb250YWluIEhvc3QgYW5kIHJldHVybnMgdGhlIHByZWZlcnJlZCBob3N0bmFtZS5cbiAqIEBwYXJhbSBwYXJzZWQgQW4gb2JqZWN0IGNvbnRhaW5pbmcgYSBob3N0bmFtZSBwcm9wZXJ0eS5cbiAqIEBwYXJhbSBoZWFkZXJzIEEgZGljdGlvbmFyeSB3aXRoIGhlYWRlcnMgY29udGFpbmluZyBhIGBob3N0YC5cbiAqLyBleHBvcnQgZnVuY3Rpb24gZ2V0SG9zdG5hbWUocGFyc2VkLCBoZWFkZXJzKSB7XG4gICAgLy8gR2V0IHRoZSBob3N0bmFtZSBmcm9tIHRoZSBoZWFkZXJzIGlmIGl0IGV4aXN0cywgb3RoZXJ3aXNlIHVzZSB0aGUgcGFyc2VkXG4gICAgLy8gaG9zdG5hbWUuXG4gICAgbGV0IGhvc3RuYW1lO1xuICAgIGlmICgoaGVhZGVycyA9PSBudWxsID8gdm9pZCAwIDogaGVhZGVycy5ob3N0KSAmJiAhQXJyYXkuaXNBcnJheShoZWFkZXJzLmhvc3QpKSB7XG4gICAgICAgIGhvc3RuYW1lID0gaGVhZGVycy5ob3N0LnRvU3RyaW5nKCkuc3BsaXQoXCI6XCIsIDEpWzBdO1xuICAgIH0gZWxzZSBpZiAocGFyc2VkLmhvc3RuYW1lKSB7XG4gICAgICAgIGhvc3RuYW1lID0gcGFyc2VkLmhvc3RuYW1lO1xuICAgIH0gZWxzZSByZXR1cm47XG4gICAgcmV0dXJuIGhvc3RuYW1lLnRvTG93ZXJDYXNlKCk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1ob3N0bmFtZS5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0SG9zdG5hbWUiLCJwYXJzZWQiLCJoZWFkZXJzIiwiaG9zdG5hbWUiLCJob3N0IiwiQXJyYXkiLCJpc0FycmF5IiwidG9TdHJpbmciLCJzcGxpdCIsInRvTG93ZXJDYXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PathParamsContext: () => (/* binding */ PathParamsContext),\n/* harmony export */   PathnameContext: () => (/* binding */ PathnameContext),\n/* harmony export */   SearchParamsContext: () => (/* binding */ SearchParamsContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\"use client\";\n\nconst SearchParamsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nconst PathnameContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nconst PathParamsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nif (true) {\n    SearchParamsContext.displayName = \"SearchParamsContext\";\n    PathnameContext.displayName = \"PathnameContext\";\n    PathParamsContext.displayName = \"PathParamsContext\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9ob29rcy1jbGllbnQtY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBRXFDO0FBQzlCLE1BQU1DLHNCQUFtQixjQUFHRCxvREFBYUEsQ0FBQyxNQUFLO0FBQy9DLE1BQU1FLGtCQUFlLGNBQUdGLG9EQUFhQSxDQUFDLE1BQUs7QUFDM0MsTUFBTUcsb0JBQWlCLGNBQUdILG9EQUFhQSxDQUFDLE1BQUs7QUFDcEQsVUFBMkM7SUFDdkNDLG9CQUFvQkcsV0FBVyxHQUFHO0lBQ2xDRixnQkFBZ0JFLFdBQVcsR0FBRztJQUM5QkQsa0JBQWtCQyxXQUFXLEdBQUc7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9ob29rcy1jbGllbnQtY29udGV4dC5zaGFyZWQtcnVudGltZS5qcz84OTZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0IH0gZnJvbSBcInJlYWN0XCI7XG5leHBvcnQgY29uc3QgU2VhcmNoUGFyYW1zQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQobnVsbCk7XG5leHBvcnQgY29uc3QgUGF0aG5hbWVDb250ZXh0ID0gY3JlYXRlQ29udGV4dChudWxsKTtcbmV4cG9ydCBjb25zdCBQYXRoUGFyYW1zQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQobnVsbCk7XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgU2VhcmNoUGFyYW1zQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiU2VhcmNoUGFyYW1zQ29udGV4dFwiO1xuICAgIFBhdGhuYW1lQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiUGF0aG5hbWVDb250ZXh0XCI7XG4gICAgUGF0aFBhcmFtc0NvbnRleHQuZGlzcGxheU5hbWUgPSBcIlBhdGhQYXJhbXNDb250ZXh0XCI7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhvb2tzLWNsaWVudC1jb250ZXh0LnNoYXJlZC1ydW50aW1lLmpzLm1hcCJdLCJuYW1lcyI6WyJjcmVhdGVDb250ZXh0IiwiU2VhcmNoUGFyYW1zQ29udGV4dCIsIlBhdGhuYW1lQ29udGV4dCIsIlBhdGhQYXJhbXNDb250ZXh0IiwiZGlzcGxheU5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectDomainLocale: () => (/* binding */ detectDomainLocale)\n/* harmony export */ });\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    if (!domainItems) return;\n    if (detectedLocale) {\n        detectedLocale = detectedLocale.toLowerCase();\n    }\n    for (const item of domainItems){\n        var _item_domain, _item_locales;\n        // remove port if present\n        const domainHostname = (_item_domain = item.domain) == null ? void 0 : _item_domain.split(\":\", 1)[0].toLowerCase();\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((_item_locales = item.locales) == null ? void 0 : _item_locales.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n            return item;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL2RldGVjdC1kb21haW4tbG9jYWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxtQkFBbUJDLFdBQVcsRUFBRUMsUUFBUSxFQUFFQyxjQUFjO0lBQ3BFLElBQUksQ0FBQ0YsYUFBYTtJQUNsQixJQUFJRSxnQkFBZ0I7UUFDaEJBLGlCQUFpQkEsZUFBZUMsV0FBVztJQUMvQztJQUNBLEtBQUssTUFBTUMsUUFBUUosWUFBWTtRQUMzQixJQUFJSyxjQUFjQztRQUNsQjtRQUNBLE1BQU1DLGlCQUFpQixDQUFDRixlQUFlRCxLQUFLSSxNQUFNLEtBQUssT0FBTyxLQUFLLElBQUlILGFBQWFJLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUNOLFdBQVc7UUFDaEgsSUFBSUYsYUFBYU0sa0JBQWtCTCxtQkFBbUJFLEtBQUtNLGFBQWEsQ0FBQ1AsV0FBVyxNQUFPLEVBQUNHLGdCQUFnQkYsS0FBS08sT0FBTyxLQUFLLE9BQU8sS0FBSyxJQUFJTCxjQUFjTSxJQUFJLENBQUVDLENBQUFBLFNBQVNBLE9BQU9WLFdBQVcsT0FBT0QsZUFBYyxHQUFJO1lBQ2pOLE9BQU9FO1FBQ1g7SUFDSjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvaTE4bi9kZXRlY3QtZG9tYWluLWxvY2FsZS5qcz9iY2E3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBkZXRlY3REb21haW5Mb2NhbGUoZG9tYWluSXRlbXMsIGhvc3RuYW1lLCBkZXRlY3RlZExvY2FsZSkge1xuICAgIGlmICghZG9tYWluSXRlbXMpIHJldHVybjtcbiAgICBpZiAoZGV0ZWN0ZWRMb2NhbGUpIHtcbiAgICAgICAgZGV0ZWN0ZWRMb2NhbGUgPSBkZXRlY3RlZExvY2FsZS50b0xvd2VyQ2FzZSgpO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgZG9tYWluSXRlbXMpe1xuICAgICAgICB2YXIgX2l0ZW1fZG9tYWluLCBfaXRlbV9sb2NhbGVzO1xuICAgICAgICAvLyByZW1vdmUgcG9ydCBpZiBwcmVzZW50XG4gICAgICAgIGNvbnN0IGRvbWFpbkhvc3RuYW1lID0gKF9pdGVtX2RvbWFpbiA9IGl0ZW0uZG9tYWluKSA9PSBudWxsID8gdm9pZCAwIDogX2l0ZW1fZG9tYWluLnNwbGl0KFwiOlwiLCAxKVswXS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBpZiAoaG9zdG5hbWUgPT09IGRvbWFpbkhvc3RuYW1lIHx8IGRldGVjdGVkTG9jYWxlID09PSBpdGVtLmRlZmF1bHRMb2NhbGUudG9Mb3dlckNhc2UoKSB8fCAoKF9pdGVtX2xvY2FsZXMgPSBpdGVtLmxvY2FsZXMpID09IG51bGwgPyB2b2lkIDAgOiBfaXRlbV9sb2NhbGVzLnNvbWUoKGxvY2FsZSk9PmxvY2FsZS50b0xvd2VyQ2FzZSgpID09PSBkZXRlY3RlZExvY2FsZSkpKSB7XG4gICAgICAgICAgICByZXR1cm4gaXRlbTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGV0ZWN0LWRvbWFpbi1sb2NhbGUuanMubWFwIl0sIm5hbWVzIjpbImRldGVjdERvbWFpbkxvY2FsZSIsImRvbWFpbkl0ZW1zIiwiaG9zdG5hbWUiLCJkZXRlY3RlZExvY2FsZSIsInRvTG93ZXJDYXNlIiwiaXRlbSIsIl9pdGVtX2RvbWFpbiIsIl9pdGVtX2xvY2FsZXMiLCJkb21haW5Ib3N0bmFtZSIsImRvbWFpbiIsInNwbGl0IiwiZGVmYXVsdExvY2FsZSIsImxvY2FsZXMiLCJzb21lIiwibG9jYWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeLocalePath: () => (/* binding */ normalizeLocalePath)\n/* harmony export */ });\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split(\"/\");\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join(\"/\") || \"/\";\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7O0NBUUEsR0FBVyxTQUFTQSxvQkFBb0JDLFFBQVEsRUFBRUMsT0FBTztJQUNyRCxJQUFJQztJQUNKO0lBQ0EsTUFBTUMsZ0JBQWdCSCxTQUFTSSxLQUFLLENBQUM7SUFDcENILENBQUFBLFdBQVcsRUFBRSxFQUFFSSxJQUFJLENBQUVDLENBQUFBO1FBQ2xCLElBQUlILGFBQWEsQ0FBQyxFQUFFLElBQUlBLGFBQWEsQ0FBQyxFQUFFLENBQUNJLFdBQVcsT0FBT0QsT0FBT0MsV0FBVyxJQUFJO1lBQzdFTCxpQkFBaUJJO1lBQ2pCSCxjQUFjSyxNQUFNLENBQUMsR0FBRztZQUN4QlIsV0FBV0csY0FBY00sSUFBSSxDQUFDLFFBQVE7WUFDdEMsT0FBTztRQUNYO1FBQ0EsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNIVDtRQUNBRTtJQUNKO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aC5qcz82Zjg2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRm9yIGEgcGF0aG5hbWUgdGhhdCBtYXkgaW5jbHVkZSBhIGxvY2FsZSBmcm9tIGEgbGlzdCBvZiBsb2NhbGVzLCBpdFxuICogcmVtb3ZlcyB0aGUgbG9jYWxlIGZyb20gdGhlIHBhdGhuYW1lIHJldHVybmluZyBpdCBhbG9uZ3NpZGUgd2l0aCB0aGVcbiAqIGRldGVjdGVkIGxvY2FsZS5cbiAqXG4gKiBAcGFyYW0gcGF0aG5hbWUgQSBwYXRobmFtZSB0aGF0IG1heSBpbmNsdWRlIGEgbG9jYWxlLlxuICogQHBhcmFtIGxvY2FsZXMgQSBsaXN0IG9mIGxvY2FsZXMuXG4gKiBAcmV0dXJucyBUaGUgZGV0ZWN0ZWQgbG9jYWxlIGFuZCBwYXRobmFtZSB3aXRob3V0IGxvY2FsZVxuICovIGV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVMb2NhbGVQYXRoKHBhdGhuYW1lLCBsb2NhbGVzKSB7XG4gICAgbGV0IGRldGVjdGVkTG9jYWxlO1xuICAgIC8vIGZpcnN0IGl0ZW0gd2lsbCBiZSBlbXB0eSBzdHJpbmcgZnJvbSBzcGxpdHRpbmcgYXQgZmlyc3QgY2hhclxuICAgIGNvbnN0IHBhdGhuYW1lUGFydHMgPSBwYXRobmFtZS5zcGxpdChcIi9cIik7XG4gICAgKGxvY2FsZXMgfHwgW10pLnNvbWUoKGxvY2FsZSk9PntcbiAgICAgICAgaWYgKHBhdGhuYW1lUGFydHNbMV0gJiYgcGF0aG5hbWVQYXJ0c1sxXS50b0xvd2VyQ2FzZSgpID09PSBsb2NhbGUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICAgICAgZGV0ZWN0ZWRMb2NhbGUgPSBsb2NhbGU7XG4gICAgICAgICAgICBwYXRobmFtZVBhcnRzLnNwbGljZSgxLCAxKTtcbiAgICAgICAgICAgIHBhdGhuYW1lID0gcGF0aG5hbWVQYXJ0cy5qb2luKFwiL1wiKSB8fCBcIi9cIjtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgZGV0ZWN0ZWRMb2NhbGVcbiAgICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3JtYWxpemUtbG9jYWxlLXBhdGguanMubWFwIl0sIm5hbWVzIjpbIm5vcm1hbGl6ZUxvY2FsZVBhdGgiLCJwYXRobmFtZSIsImxvY2FsZXMiLCJkZXRlY3RlZExvY2FsZSIsInBhdGhuYW1lUGFydHMiLCJzcGxpdCIsInNvbWUiLCJsb2NhbGUiLCJ0b0xvd2VyQ2FzZSIsInNwbGljZSIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/lazy-dynamic/bailout-to-csr.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/lazy-dynamic/bailout-to-csr.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BailoutToCSRError: () => (/* binding */ BailoutToCSRError),\n/* harmony export */   isBailoutToCSRError: () => (/* binding */ isBailoutToCSRError)\n/* harmony export */ });\n// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = \"BAILOUT_TO_CLIENT_SIDE_RENDERING\";\n/** An error that should be thrown when we want to bail out to client-side rendering. */ class BailoutToCSRError extends Error {\n    constructor(reason){\n        super(\"Bail out to client-side rendering: \" + reason);\n        this.reason = reason;\n        this.digest = BAILOUT_TO_CSR;\n    }\n}\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */ function isBailoutToCSRError(err) {\n    if (typeof err !== \"object\" || err === null || !(\"digest\" in err)) {\n        return false;\n    }\n    return err.digest === BAILOUT_TO_CSR;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9sYXp5LWR5bmFtaWMvYmFpbG91dC10by1jc3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLE1BQU1BLGlCQUFpQjtBQUN2Qix5RkFBZ0csTUFBTUMsMEJBQTBCQztJQUM1SEMsWUFBWUMsTUFBTSxDQUFDO1FBQ2YsS0FBSyxDQUFDLHdDQUF3Q0E7UUFDOUMsSUFBSSxDQUFDQSxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDQyxNQUFNLEdBQUdMO0lBQ2xCO0FBQ0o7QUFDQSwrR0FBc0gsU0FBU00sb0JBQW9CQyxHQUFHO0lBQ2xKLElBQUksT0FBT0EsUUFBUSxZQUFZQSxRQUFRLFFBQVEsQ0FBRSxhQUFZQSxHQUFBQSxHQUFNO1FBQy9ELE9BQU87SUFDWDtJQUNBLE9BQU9BLElBQUlGLE1BQU0sS0FBS0w7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9sYXp5LWR5bmFtaWMvYmFpbG91dC10by1jc3IuanM/MDk0YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGhhcyB0byBiZSBhIHNoYXJlZCBtb2R1bGUgd2hpY2ggaXMgc2hhcmVkIGJldHdlZW4gY2xpZW50IGNvbXBvbmVudCBlcnJvciBib3VuZGFyeSBhbmQgZHluYW1pYyBjb21wb25lbnRcbmNvbnN0IEJBSUxPVVRfVE9fQ1NSID0gXCJCQUlMT1VUX1RPX0NMSUVOVF9TSURFX1JFTkRFUklOR1wiO1xuLyoqIEFuIGVycm9yIHRoYXQgc2hvdWxkIGJlIHRocm93biB3aGVuIHdlIHdhbnQgdG8gYmFpbCBvdXQgdG8gY2xpZW50LXNpZGUgcmVuZGVyaW5nLiAqLyBleHBvcnQgY2xhc3MgQmFpbG91dFRvQ1NSRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IocmVhc29uKXtcbiAgICAgICAgc3VwZXIoXCJCYWlsIG91dCB0byBjbGllbnQtc2lkZSByZW5kZXJpbmc6IFwiICsgcmVhc29uKTtcbiAgICAgICAgdGhpcy5yZWFzb24gPSByZWFzb247XG4gICAgICAgIHRoaXMuZGlnZXN0ID0gQkFJTE9VVF9UT19DU1I7XG4gICAgfVxufVxuLyoqIENoZWNrcyBpZiBhIHBhc3NlZCBhcmd1bWVudCBpcyBhbiBlcnJvciB0aGF0IGlzIHRocm93biBpZiB3ZSB3YW50IHRvIGJhaWwgb3V0IHRvIGNsaWVudC1zaWRlIHJlbmRlcmluZy4gKi8gZXhwb3J0IGZ1bmN0aW9uIGlzQmFpbG91dFRvQ1NSRXJyb3IoZXJyKSB7XG4gICAgaWYgKHR5cGVvZiBlcnIgIT09IFwib2JqZWN0XCIgfHwgZXJyID09PSBudWxsIHx8ICEoXCJkaWdlc3RcIiBpbiBlcnIpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIGVyci5kaWdlc3QgPT09IEJBSUxPVVRfVE9fQ1NSO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYWlsb3V0LXRvLWNzci5qcy5tYXAiXSwibmFtZXMiOlsiQkFJTE9VVF9UT19DU1IiLCJCYWlsb3V0VG9DU1JFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJyZWFzb24iLCJkaWdlc3QiLCJpc0JhaWxvdXRUb0NTUkVycm9yIiwiZXJyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/lazy-dynamic/bailout-to-csr.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/modern-browserslist-target.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/modern-browserslist-target.js ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
eval("// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */ \nconst MODERN_BROWSERSLIST_TARGET = [\n    \"chrome 64\",\n    \"edge 79\",\n    \"firefox 67\",\n    \"opera 51\",\n    \"safari 12\"\n];\nmodule.exports = MODERN_BROWSERSLIST_TARGET;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9tb2Rlcm4tYnJvd3NlcnNsaXN0LXRhcmdldC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7Ozs7O0NBS0E7QUFBSSxNQUFNQSw2QkFBNkI7SUFDbkM7SUFDQTtJQUNBO0lBQ0E7SUFDQTtDQUNIO0FBQ0RDLE9BQU9DLE9BQU8sR0FBR0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9tb2Rlcm4tYnJvd3NlcnNsaXN0LXRhcmdldC5qcz8xMTAzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE5vdGU6IFRoaXMgZmlsZSBpcyBKUyBiZWNhdXNlIGl0J3MgdXNlZCBieSB0aGUgdGFza2ZpbGUtc3djLmpzIGZpbGUsIHdoaWNoIGlzIEpTLlxuLy8gS2VlcCBmaWxlIGNoYW5nZXMgaW4gc3luYyB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIGAuZC50c2AgZmlsZXMuXG4vKipcbiAqIFRoZXNlIGFyZSB0aGUgYnJvd3NlciB2ZXJzaW9ucyB0aGF0IHN1cHBvcnQgYWxsIG9mIHRoZSBmb2xsb3dpbmc6XG4gKiBzdGF0aWMgaW1wb3J0OiBodHRwczovL2Nhbml1c2UuY29tL2VzNi1tb2R1bGVcbiAqIGR5bmFtaWMgaW1wb3J0OiBodHRwczovL2Nhbml1c2UuY29tL2VzNi1tb2R1bGUtZHluYW1pYy1pbXBvcnRcbiAqIGltcG9ydC5tZXRhOiBodHRwczovL2Nhbml1c2UuY29tL21kbi1qYXZhc2NyaXB0X29wZXJhdG9yc19pbXBvcnRfbWV0YVxuICovIGNvbnN0IE1PREVSTl9CUk9XU0VSU0xJU1RfVEFSR0VUID0gW1xuICAgIFwiY2hyb21lIDY0XCIsXG4gICAgXCJlZGdlIDc5XCIsXG4gICAgXCJmaXJlZm94IDY3XCIsXG4gICAgXCJvcGVyYSA1MVwiLFxuICAgIFwic2FmYXJpIDEyXCJcbl07XG5tb2R1bGUuZXhwb3J0cyA9IE1PREVSTl9CUk9XU0VSU0xJU1RfVEFSR0VUO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1tb2Rlcm4tYnJvd3NlcnNsaXN0LXRhcmdldC5qcy5tYXAiXSwibmFtZXMiOlsiTU9ERVJOX0JST1dTRVJTTElTVF9UQVJHRVQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/modern-browserslist-target.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureLeadingSlash: () => (/* binding */ ensureLeadingSlash)\n/* harmony export */ });\n/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */ function ensureLeadingSlash(path) {\n    return path.startsWith(\"/\") ? path : \"/\" + path;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9wYWdlLXBhdGgvZW5zdXJlLWxlYWRpbmctc2xhc2guanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQSxHQUFXLFNBQVNBLG1CQUFtQkMsSUFBSTtJQUN2QyxPQUFPQSxLQUFLQyxVQUFVLENBQUMsT0FBT0QsT0FBTyxNQUFNQTtBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3BhZ2UtcGF0aC9lbnN1cmUtbGVhZGluZy1zbGFzaC5qcz8wNDY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRm9yIGEgZ2l2ZW4gcGFnZSBwYXRoLCB0aGlzIGZ1bmN0aW9uIGVuc3VyZXMgdGhhdCB0aGVyZSBpcyBhIGxlYWRpbmcgc2xhc2guXG4gKiBJZiB0aGVyZSBpcyBub3QgYSBsZWFkaW5nIHNsYXNoLCBvbmUgaXMgYWRkZWQsIG90aGVyd2lzZSBpdCBpcyBub29wLlxuICovIGV4cG9ydCBmdW5jdGlvbiBlbnN1cmVMZWFkaW5nU2xhc2gocGF0aCkge1xuICAgIHJldHVybiBwYXRoLnN0YXJ0c1dpdGgoXCIvXCIpID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5zdXJlLWxlYWRpbmctc2xhc2guanMubWFwIl0sIm5hbWVzIjpbImVuc3VyZUxlYWRpbmdTbGFzaCIsInBhdGgiLCJzdGFydHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addLocale: () => (/* binding */ addLocale)\n/* harmony export */ });\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    // If no locale was given or the locale is the default locale, we don't need\n    // to prefix the path.\n    if (!locale || locale === defaultLocale) return path;\n    const lower = path.toLowerCase();\n    // If the path is an API path or the path already has the locale prefix, we\n    // don't need to prefix the path.\n    if (!ignorePrefix) {\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/api\")) return path;\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/\" + locale.toLowerCase())) return path;\n    }\n    // Add the locale prefix to the path.\n    return (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_0__.addPathPrefix)(path, \"/\" + locale);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLWxvY2FsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0I7QUFDQTtBQUN0Qjs7OztDQUlBLEdBQVcsU0FBU0UsVUFBVUMsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLGFBQWEsRUFBRUMsWUFBWTtJQUNuRTtJQUNBO0lBQ0EsSUFBSSxDQUFDRixVQUFVQSxXQUFXQyxlQUFlLE9BQU9GO0lBQ2hELE1BQU1JLFFBQVFKLEtBQUtLLFdBQVc7SUFDOUI7SUFDQTtJQUNBLElBQUksQ0FBQ0YsY0FBYztRQUNmLElBQUlMLCtEQUFhQSxDQUFDTSxPQUFPLFNBQVMsT0FBT0o7UUFDekMsSUFBSUYsK0RBQWFBLENBQUNNLE9BQU8sTUFBTUgsT0FBT0ksV0FBVyxLQUFLLE9BQU9MO0lBQ2pFO0lBQ0E7SUFDQSxPQUFPSCwrREFBYUEsQ0FBQ0csTUFBTSxNQUFNQztBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtbG9jYWxlLmpzP2Y4MzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWRkUGF0aFByZWZpeCB9IGZyb20gXCIuL2FkZC1wYXRoLXByZWZpeFwiO1xuaW1wb3J0IHsgcGF0aEhhc1ByZWZpeCB9IGZyb20gXCIuL3BhdGgtaGFzLXByZWZpeFwiO1xuLyoqXG4gKiBGb3IgYSBnaXZlbiBwYXRoIGFuZCBhIGxvY2FsZSwgaWYgdGhlIGxvY2FsZSBpcyBnaXZlbiwgaXQgd2lsbCBwcmVmaXggdGhlXG4gKiBsb2NhbGUuIFRoZSBwYXRoIHNob3VsZG4ndCBiZSBhbiBBUEkgcGF0aC4gSWYgYSBkZWZhdWx0IGxvY2FsZSBpcyBnaXZlbiB0aGVcbiAqIHByZWZpeCB3aWxsIGJlIG9taXR0ZWQgaWYgdGhlIGxvY2FsZSBpcyBhbHJlYWR5IHRoZSBkZWZhdWx0IGxvY2FsZS5cbiAqLyBleHBvcnQgZnVuY3Rpb24gYWRkTG9jYWxlKHBhdGgsIGxvY2FsZSwgZGVmYXVsdExvY2FsZSwgaWdub3JlUHJlZml4KSB7XG4gICAgLy8gSWYgbm8gbG9jYWxlIHdhcyBnaXZlbiBvciB0aGUgbG9jYWxlIGlzIHRoZSBkZWZhdWx0IGxvY2FsZSwgd2UgZG9uJ3QgbmVlZFxuICAgIC8vIHRvIHByZWZpeCB0aGUgcGF0aC5cbiAgICBpZiAoIWxvY2FsZSB8fCBsb2NhbGUgPT09IGRlZmF1bHRMb2NhbGUpIHJldHVybiBwYXRoO1xuICAgIGNvbnN0IGxvd2VyID0gcGF0aC50b0xvd2VyQ2FzZSgpO1xuICAgIC8vIElmIHRoZSBwYXRoIGlzIGFuIEFQSSBwYXRoIG9yIHRoZSBwYXRoIGFscmVhZHkgaGFzIHRoZSBsb2NhbGUgcHJlZml4LCB3ZVxuICAgIC8vIGRvbid0IG5lZWQgdG8gcHJlZml4IHRoZSBwYXRoLlxuICAgIGlmICghaWdub3JlUHJlZml4KSB7XG4gICAgICAgIGlmIChwYXRoSGFzUHJlZml4KGxvd2VyLCBcIi9hcGlcIikpIHJldHVybiBwYXRoO1xuICAgICAgICBpZiAocGF0aEhhc1ByZWZpeChsb3dlciwgXCIvXCIgKyBsb2NhbGUudG9Mb3dlckNhc2UoKSkpIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICAvLyBBZGQgdGhlIGxvY2FsZSBwcmVmaXggdG8gdGhlIHBhdGguXG4gICAgcmV0dXJuIGFkZFBhdGhQcmVmaXgocGF0aCwgXCIvXCIgKyBsb2NhbGUpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGQtbG9jYWxlLmpzLm1hcCJdLCJuYW1lcyI6WyJhZGRQYXRoUHJlZml4IiwicGF0aEhhc1ByZWZpeCIsImFkZExvY2FsZSIsInBhdGgiLCJsb2NhbGUiLCJkZWZhdWx0TG9jYWxlIiwiaWdub3JlUHJlZml4IiwibG93ZXIiLCJ0b0xvd2VyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathPrefix: () => (/* binding */ addPathPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ function addPathPrefix(path, prefix) {\n    if (!path.startsWith(\"/\") || !prefix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + prefix + pathname + query + hash;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtCO0FBQ2xCOzs7Q0FHQSxHQUFXLFNBQVNDLGNBQWNDLElBQUksRUFBRUMsTUFBTTtJQUMxQyxJQUFJLENBQUNELEtBQUtFLFVBQVUsQ0FBQyxRQUFRLENBQUNELFFBQVE7UUFDbEMsT0FBT0Q7SUFDWDtJQUNBLE1BQU0sRUFBRUcsUUFBUSxFQUFFQyxLQUFLLEVBQUVDLElBQUFBLEVBQU0sR0FBR1Asc0RBQVNBLENBQUNFO0lBQzVDLE9BQU8sS0FBS0MsU0FBU0UsV0FBV0MsUUFBUUM7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtcHJlZml4LmpzPzEwN2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VQYXRoIH0gZnJvbSBcIi4vcGFyc2UtcGF0aFwiO1xuLyoqXG4gKiBBZGRzIHRoZSBwcm92aWRlZCBwcmVmaXggdG8gdGhlIGdpdmVuIHBhdGguIEl0IGZpcnN0IGVuc3VyZXMgdGhhdCB0aGUgcGF0aFxuICogaXMgaW5kZWVkIHN0YXJ0aW5nIHdpdGggYSBzbGFzaC5cbiAqLyBleHBvcnQgZnVuY3Rpb24gYWRkUGF0aFByZWZpeChwYXRoLCBwcmVmaXgpIHtcbiAgICBpZiAoIXBhdGguc3RhcnRzV2l0aChcIi9cIikgfHwgIXByZWZpeCkge1xuICAgICAgICByZXR1cm4gcGF0aDtcbiAgICB9XG4gICAgY29uc3QgeyBwYXRobmFtZSwgcXVlcnksIGhhc2ggfSA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICByZXR1cm4gXCJcIiArIHByZWZpeCArIHBhdGhuYW1lICsgcXVlcnkgKyBoYXNoO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGQtcGF0aC1wcmVmaXguanMubWFwIl0sIm5hbWVzIjpbInBhcnNlUGF0aCIsImFkZFBhdGhQcmVmaXgiLCJwYXRoIiwicHJlZml4Iiwic3RhcnRzV2l0aCIsInBhdGhuYW1lIiwicXVlcnkiLCJoYXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathSuffix: () => (/* binding */ addPathSuffix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ function addPathSuffix(path, suffix) {\n    if (!path.startsWith(\"/\") || !suffix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + pathname + suffix + query + hash;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtc3VmZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtCO0FBQ2xCOzs7O0NBSUEsR0FBVyxTQUFTQyxjQUFjQyxJQUFJLEVBQUVDLE1BQU07SUFDMUMsSUFBSSxDQUFDRCxLQUFLRSxVQUFVLENBQUMsUUFBUSxDQUFDRCxRQUFRO1FBQ2xDLE9BQU9EO0lBQ1g7SUFDQSxNQUFNLEVBQUVHLFFBQVEsRUFBRUMsS0FBSyxFQUFFQyxJQUFBQSxFQUFNLEdBQUdQLHNEQUFTQSxDQUFDRTtJQUM1QyxPQUFPLEtBQUtHLFdBQVdGLFNBQVNHLFFBQVFDO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1wYXRoLXN1ZmZpeC5qcz9kZmNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlUGF0aCB9IGZyb20gXCIuL3BhcnNlLXBhdGhcIjtcbi8qKlxuICogU2ltaWxhcmx5IHRvIGBhZGRQYXRoUHJlZml4YCwgdGhpcyBmdW5jdGlvbiBhZGRzIGEgc3VmZml4IGF0IHRoZSBlbmQgb24gdGhlXG4gKiBwcm92aWRlZCBwYXRoLiBJdCBhbHNvIHdvcmtzIG9ubHkgZm9yIHBhdGhzIGVuc3VyaW5nIHRoZSBhcmd1bWVudCBzdGFydHNcbiAqIHdpdGggYSBzbGFzaC5cbiAqLyBleHBvcnQgZnVuY3Rpb24gYWRkUGF0aFN1ZmZpeChwYXRoLCBzdWZmaXgpIHtcbiAgICBpZiAoIXBhdGguc3RhcnRzV2l0aChcIi9cIikgfHwgIXN1ZmZpeCkge1xuICAgICAgICByZXR1cm4gcGF0aDtcbiAgICB9XG4gICAgY29uc3QgeyBwYXRobmFtZSwgcXVlcnksIGhhc2ggfSA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICByZXR1cm4gXCJcIiArIHBhdGhuYW1lICsgc3VmZml4ICsgcXVlcnkgKyBoYXNoO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGQtcGF0aC1zdWZmaXguanMubWFwIl0sIm5hbWVzIjpbInBhcnNlUGF0aCIsImFkZFBhdGhTdWZmaXgiLCJwYXRoIiwic3VmZml4Iiwic3RhcnRzV2l0aCIsInBhdGhuYW1lIiwicXVlcnkiLCJoYXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeAppPath: () => (/* binding */ normalizeAppPath),\n/* harmony export */   normalizeRscURL: () => (/* binding */ normalizeRscURL)\n/* harmony export */ });\n/* harmony import */ var _page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../page-path/ensure-leading-slash */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\");\n/* harmony import */ var _segment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../segment */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\");\n\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ function normalizeAppPath(route) {\n    return (0,_page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__.ensureLeadingSlash)(route.split(\"/\").reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if ((0,_segment__WEBPACK_IMPORTED_MODULE_1__.isGroupSegment)(segment)) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment[0] === \"@\") {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === \"page\" || segment === \"route\") && index === segments.length - 1) {\n            return pathname;\n        }\n        return pathname + \"/\" + segment;\n    }, \"\"));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ function normalizeRscURL(url) {\n    return url.replace(/\\.rsc($|\\?)/, // $1 ensures `?` is preserved\n    \"$1\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYXBwLXBhdGhzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkI7QUFDSjtBQUN2Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBa0JBLEdBQVcsU0FBU0UsaUJBQWlCQyxLQUFLO0lBQ3RDLE9BQU9ILG1GQUFrQkEsQ0FBQ0csTUFBTUMsS0FBSyxDQUFDLEtBQUtDLE1BQU0sQ0FBQyxDQUFDQyxVQUFVQyxTQUFTQyxPQUFPQztRQUN6RTtRQUNBLElBQUksQ0FBQ0YsU0FBUztZQUNWLE9BQU9EO1FBQ1g7UUFDQTtRQUNBLElBQUlMLHdEQUFjQSxDQUFDTSxVQUFVO1lBQ3pCLE9BQU9EO1FBQ1g7UUFDQTtRQUNBLElBQUlDLE9BQU8sQ0FBQyxFQUFFLEtBQUssS0FBSztZQUNwQixPQUFPRDtRQUNYO1FBQ0E7UUFDQSxJQUFJLENBQUNDLFlBQVksVUFBVUEsWUFBWSxZQUFZQyxVQUFVQyxTQUFTQyxNQUFNLEdBQUcsR0FBRztZQUM5RSxPQUFPSjtRQUNYO1FBQ0EsT0FBT0EsV0FBVyxNQUFNQztJQUM1QixHQUFHO0FBQ1A7QUFDQTs7O0NBR0EsR0FBVyxTQUFTSSxnQkFBZ0JDLEdBQUc7SUFDbkMsT0FBT0EsSUFBSUMsT0FBTyxDQUFDLGVBQWU7SUFDbEM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hcHAtcGF0aHMuanM/YjY4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbnN1cmVMZWFkaW5nU2xhc2ggfSBmcm9tIFwiLi4vLi4vcGFnZS1wYXRoL2Vuc3VyZS1sZWFkaW5nLXNsYXNoXCI7XG5pbXBvcnQgeyBpc0dyb3VwU2VnbWVudCB9IGZyb20gXCIuLi8uLi9zZWdtZW50XCI7XG4vKipcbiAqIE5vcm1hbGl6ZXMgYW4gYXBwIHJvdXRlIHNvIGl0IHJlcHJlc2VudHMgdGhlIGFjdHVhbCByZXF1ZXN0IHBhdGguIEVzc2VudGlhbGx5XG4gKiBwZXJmb3JtaW5nIHRoZSBmb2xsb3dpbmcgdHJhbnNmb3JtYXRpb25zOlxuICpcbiAqIC0gYC8oZGFzaGJvYXJkKS91c2VyL1tpZF0vcGFnZWAgdG8gYC91c2VyL1tpZF1gXG4gKiAtIGAvKGRhc2hib2FyZCkvYWNjb3VudC9wYWdlYCB0byBgL2FjY291bnRgXG4gKiAtIGAvdXNlci9baWRdL3BhZ2VgIHRvIGAvdXNlci9baWRdYFxuICogLSBgL2FjY291bnQvcGFnZWAgdG8gYC9hY2NvdW50YFxuICogLSBgL3BhZ2VgIHRvIGAvYFxuICogLSBgLyhkYXNoYm9hcmQpL3VzZXIvW2lkXS9yb3V0ZWAgdG8gYC91c2VyL1tpZF1gXG4gKiAtIGAvKGRhc2hib2FyZCkvYWNjb3VudC9yb3V0ZWAgdG8gYC9hY2NvdW50YFxuICogLSBgL3VzZXIvW2lkXS9yb3V0ZWAgdG8gYC91c2VyL1tpZF1gXG4gKiAtIGAvYWNjb3VudC9yb3V0ZWAgdG8gYC9hY2NvdW50YFxuICogLSBgL3JvdXRlYCB0byBgL2BcbiAqIC0gYC9gIHRvIGAvYFxuICpcbiAqIEBwYXJhbSByb3V0ZSB0aGUgYXBwIHJvdXRlIHRvIG5vcm1hbGl6ZVxuICogQHJldHVybnMgdGhlIG5vcm1hbGl6ZWQgcGF0aG5hbWVcbiAqLyBleHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplQXBwUGF0aChyb3V0ZSkge1xuICAgIHJldHVybiBlbnN1cmVMZWFkaW5nU2xhc2gocm91dGUuc3BsaXQoXCIvXCIpLnJlZHVjZSgocGF0aG5hbWUsIHNlZ21lbnQsIGluZGV4LCBzZWdtZW50cyk9PntcbiAgICAgICAgLy8gRW1wdHkgc2VnbWVudHMgYXJlIGlnbm9yZWQuXG4gICAgICAgIGlmICghc2VnbWVudCkge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGhuYW1lO1xuICAgICAgICB9XG4gICAgICAgIC8vIEdyb3VwcyBhcmUgaWdub3JlZC5cbiAgICAgICAgaWYgKGlzR3JvdXBTZWdtZW50KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aG5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUGFyYWxsZWwgc2VnbWVudHMgYXJlIGlnbm9yZWQuXG4gICAgICAgIGlmIChzZWdtZW50WzBdID09PSBcIkBcIikge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGhuYW1lO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRoZSBsYXN0IHNlZ21lbnQgKGlmIGl0J3MgYSBsZWFmKSBzaG91bGQgYmUgaWdub3JlZC5cbiAgICAgICAgaWYgKChzZWdtZW50ID09PSBcInBhZ2VcIiB8fCBzZWdtZW50ID09PSBcInJvdXRlXCIpICYmIGluZGV4ID09PSBzZWdtZW50cy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aG5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBhdGhuYW1lICsgXCIvXCIgKyBzZWdtZW50O1xuICAgIH0sIFwiXCIpKTtcbn1cbi8qKlxuICogU3RyaXBzIHRoZSBgLnJzY2AgZXh0ZW5zaW9uIGlmIGl0J3MgaW4gdGhlIHBhdGhuYW1lLlxuICogU2luY2UgdGhpcyBmdW5jdGlvbiBpcyB1c2VkIG9uIGZ1bGwgdXJscyBpdCBjaGVja3MgYD9gIGZvciBzZWFyY2hQYXJhbXMgaGFuZGxpbmcuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZVJzY1VSTCh1cmwpIHtcbiAgICByZXR1cm4gdXJsLnJlcGxhY2UoL1xcLnJzYygkfFxcPykvLCAvLyAkMSBlbnN1cmVzIGA/YCBpcyBwcmVzZXJ2ZWRcbiAgICBcIiQxXCIpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcGF0aHMuanMubWFwIl0sIm5hbWVzIjpbImVuc3VyZUxlYWRpbmdTbGFzaCIsImlzR3JvdXBTZWdtZW50Iiwibm9ybWFsaXplQXBwUGF0aCIsInJvdXRlIiwic3BsaXQiLCJyZWR1Y2UiLCJwYXRobmFtZSIsInNlZ21lbnQiLCJpbmRleCIsInNlZ21lbnRzIiwibGVuZ3RoIiwibm9ybWFsaXplUnNjVVJMIiwidXJsIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatNextPathnameInfo: () => (/* binding */ formatNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./remove-trailing-slash */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\");\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _add_path_suffix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-path-suffix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\");\n/* harmony import */ var _add_locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-locale */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\");\n\n\n\n\nfunction formatNextPathnameInfo(info) {\n    let pathname = (0,_add_locale__WEBPACK_IMPORTED_MODULE_3__.addLocale)(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n    }\n    if (info.buildId) {\n        pathname = (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)((0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, \"/_next/data/\" + info.buildId), info.pathname === \"/\" ? \"index.json\" : \".json\");\n    }\n    pathname = (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith(\"/\") ? (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)(pathname, \"/\") : pathname : (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LW5leHQtcGF0aG5hbWUtaW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0QjtBQUNOO0FBQ0E7QUFDSjtBQUNYLFNBQVNJLHVCQUF1QkMsSUFBSTtJQUN2QyxJQUFJQyxXQUFXSCxzREFBU0EsQ0FBQ0UsS0FBS0MsUUFBUSxFQUFFRCxLQUFLRSxNQUFNLEVBQUVGLEtBQUtHLE9BQU8sR0FBR0MsWUFBWUosS0FBS0ssYUFBYSxFQUFFTCxLQUFLTSxZQUFZO0lBQ3JILElBQUlOLEtBQUtHLE9BQU8sSUFBSSxDQUFDSCxLQUFLTyxhQUFhLEVBQUU7UUFDckNOLFdBQVdOLDJFQUFtQkEsQ0FBQ007SUFDbkM7SUFDQSxJQUFJRCxLQUFLRyxPQUFPLEVBQUU7UUFDZEYsV0FBV0osK0RBQWFBLENBQUNELCtEQUFhQSxDQUFDSyxVQUFVLGlCQUFpQkQsS0FBS0csT0FBTyxHQUFHSCxLQUFLQyxRQUFRLEtBQUssTUFBTSxlQUFlO0lBQzVIO0lBQ0FBLFdBQVdMLCtEQUFhQSxDQUFDSyxVQUFVRCxLQUFLUSxRQUFRO0lBQ2hELE9BQU8sQ0FBQ1IsS0FBS0csT0FBTyxJQUFJSCxLQUFLTyxhQUFhLEdBQUcsQ0FBQ04sU0FBU1EsUUFBUSxDQUFDLE9BQU9aLCtEQUFhQSxDQUFDSSxVQUFVLE9BQU9BLFdBQVdOLDJFQUFtQkEsQ0FBQ007QUFDekkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LW5leHQtcGF0aG5hbWUtaW5mby5qcz81NDdiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbW92ZVRyYWlsaW5nU2xhc2ggfSBmcm9tIFwiLi9yZW1vdmUtdHJhaWxpbmctc2xhc2hcIjtcbmltcG9ydCB7IGFkZFBhdGhQcmVmaXggfSBmcm9tIFwiLi9hZGQtcGF0aC1wcmVmaXhcIjtcbmltcG9ydCB7IGFkZFBhdGhTdWZmaXggfSBmcm9tIFwiLi9hZGQtcGF0aC1zdWZmaXhcIjtcbmltcG9ydCB7IGFkZExvY2FsZSB9IGZyb20gXCIuL2FkZC1sb2NhbGVcIjtcbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXROZXh0UGF0aG5hbWVJbmZvKGluZm8pIHtcbiAgICBsZXQgcGF0aG5hbWUgPSBhZGRMb2NhbGUoaW5mby5wYXRobmFtZSwgaW5mby5sb2NhbGUsIGluZm8uYnVpbGRJZCA/IHVuZGVmaW5lZCA6IGluZm8uZGVmYXVsdExvY2FsZSwgaW5mby5pZ25vcmVQcmVmaXgpO1xuICAgIGlmIChpbmZvLmJ1aWxkSWQgfHwgIWluZm8udHJhaWxpbmdTbGFzaCkge1xuICAgICAgICBwYXRobmFtZSA9IHJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpO1xuICAgIH1cbiAgICBpZiAoaW5mby5idWlsZElkKSB7XG4gICAgICAgIHBhdGhuYW1lID0gYWRkUGF0aFN1ZmZpeChhZGRQYXRoUHJlZml4KHBhdGhuYW1lLCBcIi9fbmV4dC9kYXRhL1wiICsgaW5mby5idWlsZElkKSwgaW5mby5wYXRobmFtZSA9PT0gXCIvXCIgPyBcImluZGV4Lmpzb25cIiA6IFwiLmpzb25cIik7XG4gICAgfVxuICAgIHBhdGhuYW1lID0gYWRkUGF0aFByZWZpeChwYXRobmFtZSwgaW5mby5iYXNlUGF0aCk7XG4gICAgcmV0dXJuICFpbmZvLmJ1aWxkSWQgJiYgaW5mby50cmFpbGluZ1NsYXNoID8gIXBhdGhuYW1lLmVuZHNXaXRoKFwiL1wiKSA/IGFkZFBhdGhTdWZmaXgocGF0aG5hbWUsIFwiL1wiKSA6IHBhdGhuYW1lIDogcmVtb3ZlVHJhaWxpbmdTbGFzaChwYXRobmFtZSk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvcm1hdC1uZXh0LXBhdGhuYW1lLWluZm8uanMubWFwIl0sIm5hbWVzIjpbInJlbW92ZVRyYWlsaW5nU2xhc2giLCJhZGRQYXRoUHJlZml4IiwiYWRkUGF0aFN1ZmZpeCIsImFkZExvY2FsZSIsImZvcm1hdE5leHRQYXRobmFtZUluZm8iLCJpbmZvIiwicGF0aG5hbWUiLCJsb2NhbGUiLCJidWlsZElkIiwidW5kZWZpbmVkIiwiZGVmYXVsdExvY2FsZSIsImlnbm9yZVByZWZpeCIsInRyYWlsaW5nU2xhc2giLCJiYXNlUGF0aCIsImVuZHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNextPathnameInfo: () => (/* binding */ getNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../i18n/normalize-locale-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\");\n/* harmony import */ var _remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./remove-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n\nfunction getNextPathnameInfo(pathname, options) {\n    var _options_nextConfig;\n    const { basePath, i18n, trailingSlash } = (_options_nextConfig = options.nextConfig) != null ? _options_nextConfig : {};\n    const info = {\n        pathname,\n        trailingSlash: pathname !== \"/\" ? pathname.endsWith(\"/\") : trailingSlash\n    };\n    if (basePath && (0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_2__.pathHasPrefix)(info.pathname, basePath)) {\n        info.pathname = (0,_remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__.removePathPrefix)(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    let pathnameNoDataPrefix = info.pathname;\n    if (info.pathname.startsWith(\"/_next/data/\") && info.pathname.endsWith(\".json\")) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, \"\").replace(/\\.json$/, \"\").split(\"/\");\n        const buildId = paths[0];\n        info.buildId = buildId;\n        pathnameNoDataPrefix = paths[1] !== \"index\" ? \"/\" + paths.slice(1).join(\"/\") : \"/\";\n        // update pathname with normalized if enabled although\n        // we use normalized to populate locale info still\n        if (options.parseData === true) {\n            info.pathname = pathnameNoDataPrefix;\n        }\n    }\n    // If provided, use the locale route normalizer to detect the locale instead\n    // of the function below.\n    if (i18n) {\n        let result = options.i18nProvider ? options.i18nProvider.analyze(info.pathname) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(info.pathname, i18n.locales);\n        info.locale = result.detectedLocale;\n        var _result_pathname;\n        info.pathname = (_result_pathname = result.pathname) != null ? _result_pathname : info.pathname;\n        if (!result.detectedLocale && info.buildId) {\n            result = options.i18nProvider ? options.i18nProvider.analyze(pathnameNoDataPrefix) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(pathnameNoDataPrefix, i18n.locales);\n            if (result.detectedLocale) {\n                info.locale = result.detectedLocale;\n            }\n        }\n    }\n    return info;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZ2V0LW5leHQtcGF0aG5hbWUtaW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTRCO0FBQ0g7QUFDSDtBQUNmLFNBQVNHLG9CQUFvQkMsUUFBUSxFQUFFQyxPQUFPO0lBQ2pELElBQUlDO0lBQ0osTUFBTSxFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsYUFBQUEsRUFBZSxHQUFHLENBQUNILHNCQUFzQkQsUUFBUUssVUFBVSxLQUFLLE9BQU9KLHNCQUFzQixDQUFDO0lBQ3RILE1BQU1LLE9BQU87UUFDVFA7UUFDQUssZUFBZUwsYUFBYSxNQUFNQSxTQUFTUSxRQUFRLENBQUMsT0FBT0g7SUFDL0Q7SUFDQSxJQUFJRixZQUFZTCwrREFBYUEsQ0FBQ1MsS0FBS1AsUUFBUSxFQUFFRyxXQUFXO1FBQ3BESSxLQUFLUCxRQUFRLEdBQUdILHFFQUFnQkEsQ0FBQ1UsS0FBS1AsUUFBUSxFQUFFRztRQUNoREksS0FBS0osUUFBUSxHQUFHQTtJQUNwQjtJQUNBLElBQUlNLHVCQUF1QkYsS0FBS1AsUUFBUTtJQUN4QyxJQUFJTyxLQUFLUCxRQUFRLENBQUNVLFVBQVUsQ0FBQyxtQkFBbUJILEtBQUtQLFFBQVEsQ0FBQ1EsUUFBUSxDQUFDLFVBQVU7UUFDN0UsTUFBTUcsUUFBUUosS0FBS1AsUUFBUSxDQUFDWSxPQUFPLENBQUMsb0JBQW9CLElBQUlBLE9BQU8sQ0FBQyxXQUFXLElBQUlDLEtBQUssQ0FBQztRQUN6RixNQUFNQyxVQUFVSCxLQUFLLENBQUMsRUFBRTtRQUN4QkosS0FBS08sT0FBTyxHQUFHQTtRQUNmTCx1QkFBdUJFLEtBQUssQ0FBQyxFQUFFLEtBQUssVUFBVSxNQUFNQSxNQUFNSSxLQUFLLENBQUMsR0FBR0MsSUFBSSxDQUFDLE9BQU87UUFDL0U7UUFDQTtRQUNBLElBQUlmLFFBQVFnQixTQUFTLEtBQUssTUFBTTtZQUM1QlYsS0FBS1AsUUFBUSxHQUFHUztRQUNwQjtJQUNKO0lBQ0E7SUFDQTtJQUNBLElBQUlMLE1BQU07UUFDTixJQUFJYyxTQUFTakIsUUFBUWtCLFlBQVksR0FBR2xCLFFBQVFrQixZQUFZLENBQUNDLE9BQU8sQ0FBQ2IsS0FBS1AsUUFBUSxJQUFJSixnRkFBbUJBLENBQUNXLEtBQUtQLFFBQVEsRUFBRUksS0FBS2lCLE9BQU87UUFDaklkLEtBQUtlLE1BQU0sR0FBR0osT0FBT0ssY0FBYztRQUNuQyxJQUFJQztRQUNKakIsS0FBS1AsUUFBUSxHQUFHLENBQUN3QixtQkFBbUJOLE9BQU9sQixRQUFRLEtBQUssT0FBT3dCLG1CQUFtQmpCLEtBQUtQLFFBQVE7UUFDL0YsSUFBSSxDQUFDa0IsT0FBT0ssY0FBYyxJQUFJaEIsS0FBS08sT0FBTyxFQUFFO1lBQ3hDSSxTQUFTakIsUUFBUWtCLFlBQVksR0FBR2xCLFFBQVFrQixZQUFZLENBQUNDLE9BQU8sQ0FBQ1gsd0JBQXdCYixnRkFBbUJBLENBQUNhLHNCQUFzQkwsS0FBS2lCLE9BQU87WUFDM0ksSUFBSUgsT0FBT0ssY0FBYyxFQUFFO2dCQUN2QmhCLEtBQUtlLE1BQU0sR0FBR0osT0FBT0ssY0FBYztZQUN2QztRQUNKO0lBQ0o7SUFDQSxPQUFPaEI7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9nZXQtbmV4dC1wYXRobmFtZS1pbmZvLmpzPzE0NTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbm9ybWFsaXplTG9jYWxlUGF0aCB9IGZyb20gXCIuLi8uLi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aFwiO1xuaW1wb3J0IHsgcmVtb3ZlUGF0aFByZWZpeCB9IGZyb20gXCIuL3JlbW92ZS1wYXRoLXByZWZpeFwiO1xuaW1wb3J0IHsgcGF0aEhhc1ByZWZpeCB9IGZyb20gXCIuL3BhdGgtaGFzLXByZWZpeFwiO1xuZXhwb3J0IGZ1bmN0aW9uIGdldE5leHRQYXRobmFtZUluZm8ocGF0aG5hbWUsIG9wdGlvbnMpIHtcbiAgICB2YXIgX29wdGlvbnNfbmV4dENvbmZpZztcbiAgICBjb25zdCB7IGJhc2VQYXRoLCBpMThuLCB0cmFpbGluZ1NsYXNoIH0gPSAoX29wdGlvbnNfbmV4dENvbmZpZyA9IG9wdGlvbnMubmV4dENvbmZpZykgIT0gbnVsbCA/IF9vcHRpb25zX25leHRDb25maWcgOiB7fTtcbiAgICBjb25zdCBpbmZvID0ge1xuICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgdHJhaWxpbmdTbGFzaDogcGF0aG5hbWUgIT09IFwiL1wiID8gcGF0aG5hbWUuZW5kc1dpdGgoXCIvXCIpIDogdHJhaWxpbmdTbGFzaFxuICAgIH07XG4gICAgaWYgKGJhc2VQYXRoICYmIHBhdGhIYXNQcmVmaXgoaW5mby5wYXRobmFtZSwgYmFzZVBhdGgpKSB7XG4gICAgICAgIGluZm8ucGF0aG5hbWUgPSByZW1vdmVQYXRoUHJlZml4KGluZm8ucGF0aG5hbWUsIGJhc2VQYXRoKTtcbiAgICAgICAgaW5mby5iYXNlUGF0aCA9IGJhc2VQYXRoO1xuICAgIH1cbiAgICBsZXQgcGF0aG5hbWVOb0RhdGFQcmVmaXggPSBpbmZvLnBhdGhuYW1lO1xuICAgIGlmIChpbmZvLnBhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvX25leHQvZGF0YS9cIikgJiYgaW5mby5wYXRobmFtZS5lbmRzV2l0aChcIi5qc29uXCIpKSB7XG4gICAgICAgIGNvbnN0IHBhdGhzID0gaW5mby5wYXRobmFtZS5yZXBsYWNlKC9eXFwvX25leHRcXC9kYXRhXFwvLywgXCJcIikucmVwbGFjZSgvXFwuanNvbiQvLCBcIlwiKS5zcGxpdChcIi9cIik7XG4gICAgICAgIGNvbnN0IGJ1aWxkSWQgPSBwYXRoc1swXTtcbiAgICAgICAgaW5mby5idWlsZElkID0gYnVpbGRJZDtcbiAgICAgICAgcGF0aG5hbWVOb0RhdGFQcmVmaXggPSBwYXRoc1sxXSAhPT0gXCJpbmRleFwiID8gXCIvXCIgKyBwYXRocy5zbGljZSgxKS5qb2luKFwiL1wiKSA6IFwiL1wiO1xuICAgICAgICAvLyB1cGRhdGUgcGF0aG5hbWUgd2l0aCBub3JtYWxpemVkIGlmIGVuYWJsZWQgYWx0aG91Z2hcbiAgICAgICAgLy8gd2UgdXNlIG5vcm1hbGl6ZWQgdG8gcG9wdWxhdGUgbG9jYWxlIGluZm8gc3RpbGxcbiAgICAgICAgaWYgKG9wdGlvbnMucGFyc2VEYXRhID09PSB0cnVlKSB7XG4gICAgICAgICAgICBpbmZvLnBhdGhuYW1lID0gcGF0aG5hbWVOb0RhdGFQcmVmaXg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gSWYgcHJvdmlkZWQsIHVzZSB0aGUgbG9jYWxlIHJvdXRlIG5vcm1hbGl6ZXIgdG8gZGV0ZWN0IHRoZSBsb2NhbGUgaW5zdGVhZFxuICAgIC8vIG9mIHRoZSBmdW5jdGlvbiBiZWxvdy5cbiAgICBpZiAoaTE4bikge1xuICAgICAgICBsZXQgcmVzdWx0ID0gb3B0aW9ucy5pMThuUHJvdmlkZXIgPyBvcHRpb25zLmkxOG5Qcm92aWRlci5hbmFseXplKGluZm8ucGF0aG5hbWUpIDogbm9ybWFsaXplTG9jYWxlUGF0aChpbmZvLnBhdGhuYW1lLCBpMThuLmxvY2FsZXMpO1xuICAgICAgICBpbmZvLmxvY2FsZSA9IHJlc3VsdC5kZXRlY3RlZExvY2FsZTtcbiAgICAgICAgdmFyIF9yZXN1bHRfcGF0aG5hbWU7XG4gICAgICAgIGluZm8ucGF0aG5hbWUgPSAoX3Jlc3VsdF9wYXRobmFtZSA9IHJlc3VsdC5wYXRobmFtZSkgIT0gbnVsbCA/IF9yZXN1bHRfcGF0aG5hbWUgOiBpbmZvLnBhdGhuYW1lO1xuICAgICAgICBpZiAoIXJlc3VsdC5kZXRlY3RlZExvY2FsZSAmJiBpbmZvLmJ1aWxkSWQpIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IG9wdGlvbnMuaTE4blByb3ZpZGVyID8gb3B0aW9ucy5pMThuUHJvdmlkZXIuYW5hbHl6ZShwYXRobmFtZU5vRGF0YVByZWZpeCkgOiBub3JtYWxpemVMb2NhbGVQYXRoKHBhdGhuYW1lTm9EYXRhUHJlZml4LCBpMThuLmxvY2FsZXMpO1xuICAgICAgICAgICAgaWYgKHJlc3VsdC5kZXRlY3RlZExvY2FsZSkge1xuICAgICAgICAgICAgICAgIGluZm8ubG9jYWxlID0gcmVzdWx0LmRldGVjdGVkTG9jYWxlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBpbmZvO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtbmV4dC1wYXRobmFtZS1pbmZvLmpzLm1hcCJdLCJuYW1lcyI6WyJub3JtYWxpemVMb2NhbGVQYXRoIiwicmVtb3ZlUGF0aFByZWZpeCIsInBhdGhIYXNQcmVmaXgiLCJnZXROZXh0UGF0aG5hbWVJbmZvIiwicGF0aG5hbWUiLCJvcHRpb25zIiwiX29wdGlvbnNfbmV4dENvbmZpZyIsImJhc2VQYXRoIiwiaTE4biIsInRyYWlsaW5nU2xhc2giLCJuZXh0Q29uZmlnIiwiaW5mbyIsImVuZHNXaXRoIiwicGF0aG5hbWVOb0RhdGFQcmVmaXgiLCJzdGFydHNXaXRoIiwicGF0aHMiLCJyZXBsYWNlIiwic3BsaXQiLCJidWlsZElkIiwic2xpY2UiLCJqb2luIiwicGFyc2VEYXRhIiwicmVzdWx0IiwiaTE4blByb3ZpZGVyIiwiYW5hbHl6ZSIsImxvY2FsZXMiLCJsb2NhbGUiLCJkZXRlY3RlZExvY2FsZSIsIl9yZXN1bHRfcGF0aG5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePath: () => (/* binding */ parsePath)\n/* harmony export */ });\n/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ function parsePath(path) {\n    const hashIndex = path.indexOf(\"#\");\n    const queryIndex = path.indexOf(\"?\");\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : \"\",\n            hash: hashIndex > -1 ? path.slice(hashIndex) : \"\"\n        };\n    }\n    return {\n        pathname: path,\n        query: \"\",\n        hash: \"\"\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQSxHQUFXLFNBQVNBLFVBQVVDLElBQUk7SUFDOUIsTUFBTUMsWUFBWUQsS0FBS0UsT0FBTyxDQUFDO0lBQy9CLE1BQU1DLGFBQWFILEtBQUtFLE9BQU8sQ0FBQztJQUNoQyxNQUFNRSxXQUFXRCxhQUFhLENBQUMsS0FBTUYsQ0FBQUEsWUFBWSxLQUFLRSxhQUFhRixTQUFBQTtJQUNuRSxJQUFJRyxZQUFZSCxZQUFZLENBQUMsR0FBRztRQUM1QixPQUFPO1lBQ0hJLFVBQVVMLEtBQUtNLFNBQVMsQ0FBQyxHQUFHRixXQUFXRCxhQUFhRjtZQUNwRE0sT0FBT0gsV0FBV0osS0FBS00sU0FBUyxDQUFDSCxZQUFZRixZQUFZLENBQUMsSUFBSUEsWUFBWU8sYUFBYTtZQUN2RkMsTUFBTVIsWUFBWSxDQUFDLElBQUlELEtBQUtVLEtBQUssQ0FBQ1QsYUFBYTtRQUNuRDtJQUNKO0lBQ0EsT0FBTztRQUNISSxVQUFVTDtRQUNWTyxPQUFPO1FBQ1BFLE1BQU07SUFDVjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhcnNlLXBhdGguanM/YjNjNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdpdmVuIGEgcGF0aCB0aGlzIGZ1bmN0aW9uIHdpbGwgZmluZCB0aGUgcGF0aG5hbWUsIHF1ZXJ5IGFuZCBoYXNoIGFuZCByZXR1cm5cbiAqIHRoZW0uIFRoaXMgaXMgdXNlZnVsIHRvIHBhcnNlIGZ1bGwgcGF0aHMgb24gdGhlIGNsaWVudCBzaWRlLlxuICogQHBhcmFtIHBhdGggQSBwYXRoIHRvIHBhcnNlIGUuZy4gL2Zvby9iYXI/aWQ9MSNoYXNoXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gICAgY29uc3QgaGFzaEluZGV4ID0gcGF0aC5pbmRleE9mKFwiI1wiKTtcbiAgICBjb25zdCBxdWVyeUluZGV4ID0gcGF0aC5pbmRleE9mKFwiP1wiKTtcbiAgICBjb25zdCBoYXNRdWVyeSA9IHF1ZXJ5SW5kZXggPiAtMSAmJiAoaGFzaEluZGV4IDwgMCB8fCBxdWVyeUluZGV4IDwgaGFzaEluZGV4KTtcbiAgICBpZiAoaGFzUXVlcnkgfHwgaGFzaEluZGV4ID4gLTEpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHBhdGhuYW1lOiBwYXRoLnN1YnN0cmluZygwLCBoYXNRdWVyeSA/IHF1ZXJ5SW5kZXggOiBoYXNoSW5kZXgpLFxuICAgICAgICAgICAgcXVlcnk6IGhhc1F1ZXJ5ID8gcGF0aC5zdWJzdHJpbmcocXVlcnlJbmRleCwgaGFzaEluZGV4ID4gLTEgPyBoYXNoSW5kZXggOiB1bmRlZmluZWQpIDogXCJcIixcbiAgICAgICAgICAgIGhhc2g6IGhhc2hJbmRleCA+IC0xID8gcGF0aC5zbGljZShoYXNoSW5kZXgpIDogXCJcIlxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBwYXRobmFtZTogcGF0aCxcbiAgICAgICAgcXVlcnk6IFwiXCIsXG4gICAgICAgIGhhc2g6IFwiXCJcbiAgICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJwYXJzZVBhdGgiLCJwYXRoIiwiaGFzaEluZGV4IiwiaW5kZXhPZiIsInF1ZXJ5SW5kZXgiLCJoYXNRdWVyeSIsInBhdGhuYW1lIiwic3Vic3RyaW5nIiwicXVlcnkiLCJ1bmRlZmluZWQiLCJoYXNoIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pathHasPrefix: () => (/* binding */ pathHasPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ function pathHasPrefix(path, prefix) {\n    if (typeof path !== \"string\") {\n        return false;\n    }\n    const { pathname } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return pathname === prefix || pathname.startsWith(prefix + \"/\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1oYXMtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtCO0FBQ2xCOzs7Ozs7Q0FNQSxHQUFXLFNBQVNDLGNBQWNDLElBQUksRUFBRUMsTUFBTTtJQUMxQyxJQUFJLE9BQU9ELFNBQVMsVUFBVTtRQUMxQixPQUFPO0lBQ1g7SUFDQSxNQUFNLEVBQUVFLFFBQUFBLEVBQVUsR0FBR0osc0RBQVNBLENBQUNFO0lBQy9CLE9BQU9FLGFBQWFELFVBQVVDLFNBQVNDLFVBQVUsQ0FBQ0YsU0FBUztBQUMvRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9wYXRoLWhhcy1wcmVmaXguanM/NjRiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZVBhdGggfSBmcm9tIFwiLi9wYXJzZS1wYXRoXCI7XG4vKipcbiAqIENoZWNrcyBpZiBhIGdpdmVuIHBhdGggc3RhcnRzIHdpdGggYSBnaXZlbiBwcmVmaXguIEl0IGVuc3VyZXMgaXQgbWF0Y2hlc1xuICogZXhhY3RseSB3aXRob3V0IGNvbnRhaW5pbmcgZXh0cmEgY2hhcnMuIGUuZy4gcHJlZml4IC9kb2NzIHNob3VsZCByZXBsYWNlXG4gKiBmb3IgL2RvY3MsIC9kb2NzLywgL2RvY3MvYSBidXQgbm90IC9kb2Nzc3NcbiAqIEBwYXJhbSBwYXRoIFRoZSBwYXRoIHRvIGNoZWNrLlxuICogQHBhcmFtIHByZWZpeCBUaGUgcHJlZml4IHRvIGNoZWNrIGFnYWluc3QuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHBhdGhIYXNQcmVmaXgocGF0aCwgcHJlZml4KSB7XG4gICAgaWYgKHR5cGVvZiBwYXRoICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgeyBwYXRobmFtZSB9ID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIHJldHVybiBwYXRobmFtZSA9PT0gcHJlZml4IHx8IHBhdGhuYW1lLnN0YXJ0c1dpdGgocHJlZml4ICsgXCIvXCIpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRoLWhhcy1wcmVmaXguanMubWFwIl0sIm5hbWVzIjpbInBhcnNlUGF0aCIsInBhdGhIYXNQcmVmaXgiLCJwYXRoIiwicHJlZml4IiwicGF0aG5hbWUiLCJzdGFydHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   relativizeURL: () => (/* binding */ relativizeURL)\n/* harmony export */ });\n/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ function relativizeURL(url, base) {\n    const baseURL = typeof base === \"string\" ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = baseURL.protocol + \"//\" + baseURL.host;\n    return relative.protocol + \"//\" + relative.host === origin ? relative.toString().replace(origin, \"\") : relative.toString();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVsYXRpdml6ZS11cmwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0NBSUEsR0FBVyxTQUFTQSxjQUFjQyxHQUFHLEVBQUVDLElBQUk7SUFDdkMsTUFBTUMsVUFBVSxPQUFPRCxTQUFTLFdBQVcsSUFBSUUsSUFBSUYsUUFBUUE7SUFDM0QsTUFBTUcsV0FBVyxJQUFJRCxJQUFJSCxLQUFLQztJQUM5QixNQUFNSSxTQUFTSCxRQUFRSSxRQUFRLEdBQUcsT0FBT0osUUFBUUssSUFBSTtJQUNyRCxPQUFPSCxTQUFTRSxRQUFRLEdBQUcsT0FBT0YsU0FBU0csSUFBSSxLQUFLRixTQUFTRCxTQUFTSSxRQUFRLEdBQUdDLE9BQU8sQ0FBQ0osUUFBUSxNQUFNRCxTQUFTSSxRQUFRO0FBQzVIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbGF0aXZpemUtdXJsLmpzPzczZDIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHaXZlbiBhIFVSTCBhcyBhIHN0cmluZyBhbmQgYSBiYXNlIFVSTCBpdCB3aWxsIG1ha2UgdGhlIFVSTCByZWxhdGl2ZVxuICogaWYgdGhlIHBhcnNlZCBwcm90b2NvbCBhbmQgaG9zdCBpcyB0aGUgc2FtZSBhcyB0aGUgb25lIGluIHRoZSBiYXNlXG4gKiBVUkwuIE90aGVyd2lzZSBpdCByZXR1cm5zIHRoZSBzYW1lIFVSTCBzdHJpbmcuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHJlbGF0aXZpemVVUkwodXJsLCBiYXNlKSB7XG4gICAgY29uc3QgYmFzZVVSTCA9IHR5cGVvZiBiYXNlID09PSBcInN0cmluZ1wiID8gbmV3IFVSTChiYXNlKSA6IGJhc2U7XG4gICAgY29uc3QgcmVsYXRpdmUgPSBuZXcgVVJMKHVybCwgYmFzZSk7XG4gICAgY29uc3Qgb3JpZ2luID0gYmFzZVVSTC5wcm90b2NvbCArIFwiLy9cIiArIGJhc2VVUkwuaG9zdDtcbiAgICByZXR1cm4gcmVsYXRpdmUucHJvdG9jb2wgKyBcIi8vXCIgKyByZWxhdGl2ZS5ob3N0ID09PSBvcmlnaW4gPyByZWxhdGl2ZS50b1N0cmluZygpLnJlcGxhY2Uob3JpZ2luLCBcIlwiKSA6IHJlbGF0aXZlLnRvU3RyaW5nKCk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbGF0aXZpemUtdXJsLmpzLm1hcCJdLCJuYW1lcyI6WyJyZWxhdGl2aXplVVJMIiwidXJsIiwiYmFzZSIsImJhc2VVUkwiLCJVUkwiLCJyZWxhdGl2ZSIsIm9yaWdpbiIsInByb3RvY29sIiwiaG9zdCIsInRvU3RyaW5nIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removePathPrefix: () => (/* binding */ removePathPrefix)\n/* harmony export */ });\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ function removePathPrefix(path, prefix) {\n    // If the path doesn't start with the prefix we can return it as is. This\n    // protects us from situations where the prefix is a substring of the path\n    // prefix such as:\n    //\n    // For prefix: /blog\n    //\n    //   /blog -> true\n    //   /blog/ -> true\n    //   /blog/1 -> true\n    //   /blogging -> false\n    //   /blogging/ -> false\n    //   /blogging/1 -> false\n    if (!(0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_0__.pathHasPrefix)(path, prefix)) {\n        return path;\n    }\n    // Remove the prefix from the path via slicing.\n    const withoutPrefix = path.slice(prefix.length);\n    // If the path without the prefix starts with a `/` we can return it as is.\n    if (withoutPrefix.startsWith(\"/\")) {\n        return withoutPrefix;\n    }\n    // If the path without the prefix doesn't start with a `/` we need to add it\n    // back to the path to make sure it's a valid path.\n    return \"/\" + withoutPrefix;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXBhdGgtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNCO0FBQ3RCOzs7Ozs7O0NBT0EsR0FBVyxTQUFTQyxpQkFBaUJDLElBQUksRUFBRUMsTUFBTTtJQUM3QztJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQSxJQUFJLENBQUNILCtEQUFhQSxDQUFDRSxNQUFNQyxTQUFTO1FBQzlCLE9BQU9EO0lBQ1g7SUFDQTtJQUNBLE1BQU1FLGdCQUFnQkYsS0FBS0csS0FBSyxDQUFDRixPQUFPRyxNQUFNO0lBQzlDO0lBQ0EsSUFBSUYsY0FBY0csVUFBVSxDQUFDLE1BQU07UUFDL0IsT0FBT0g7SUFDWDtJQUNBO0lBQ0E7SUFDQSxPQUFPLE1BQU1BO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbW92ZS1wYXRoLXByZWZpeC5qcz8xMWE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhdGhIYXNQcmVmaXggfSBmcm9tIFwiLi9wYXRoLWhhcy1wcmVmaXhcIjtcbi8qKlxuICogR2l2ZW4gYSBwYXRoIGFuZCBhIHByZWZpeCBpdCB3aWxsIHJlbW92ZSB0aGUgcHJlZml4IHdoZW4gaXQgZXhpc3RzIGluIHRoZVxuICogZ2l2ZW4gcGF0aC4gSXQgZW5zdXJlcyBpdCBtYXRjaGVzIGV4YWN0bHkgd2l0aG91dCBjb250YWluaW5nIGV4dHJhIGNoYXJzXG4gKiBhbmQgaWYgdGhlIHByZWZpeCBpcyBub3QgdGhlcmUgaXQgd2lsbCBiZSBub29wLlxuICpcbiAqIEBwYXJhbSBwYXRoIFRoZSBwYXRoIHRvIHJlbW92ZSB0aGUgcHJlZml4IGZyb20uXG4gKiBAcGFyYW0gcHJlZml4IFRoZSBwcmVmaXggdG8gYmUgcmVtb3ZlZC5cbiAqLyBleHBvcnQgZnVuY3Rpb24gcmVtb3ZlUGF0aFByZWZpeChwYXRoLCBwcmVmaXgpIHtcbiAgICAvLyBJZiB0aGUgcGF0aCBkb2Vzbid0IHN0YXJ0IHdpdGggdGhlIHByZWZpeCB3ZSBjYW4gcmV0dXJuIGl0IGFzIGlzLiBUaGlzXG4gICAgLy8gcHJvdGVjdHMgdXMgZnJvbSBzaXR1YXRpb25zIHdoZXJlIHRoZSBwcmVmaXggaXMgYSBzdWJzdHJpbmcgb2YgdGhlIHBhdGhcbiAgICAvLyBwcmVmaXggc3VjaCBhczpcbiAgICAvL1xuICAgIC8vIEZvciBwcmVmaXg6IC9ibG9nXG4gICAgLy9cbiAgICAvLyAgIC9ibG9nIC0+IHRydWVcbiAgICAvLyAgIC9ibG9nLyAtPiB0cnVlXG4gICAgLy8gICAvYmxvZy8xIC0+IHRydWVcbiAgICAvLyAgIC9ibG9nZ2luZyAtPiBmYWxzZVxuICAgIC8vICAgL2Jsb2dnaW5nLyAtPiBmYWxzZVxuICAgIC8vICAgL2Jsb2dnaW5nLzEgLT4gZmFsc2VcbiAgICBpZiAoIXBhdGhIYXNQcmVmaXgocGF0aCwgcHJlZml4KSkge1xuICAgICAgICByZXR1cm4gcGF0aDtcbiAgICB9XG4gICAgLy8gUmVtb3ZlIHRoZSBwcmVmaXggZnJvbSB0aGUgcGF0aCB2aWEgc2xpY2luZy5cbiAgICBjb25zdCB3aXRob3V0UHJlZml4ID0gcGF0aC5zbGljZShwcmVmaXgubGVuZ3RoKTtcbiAgICAvLyBJZiB0aGUgcGF0aCB3aXRob3V0IHRoZSBwcmVmaXggc3RhcnRzIHdpdGggYSBgL2Agd2UgY2FuIHJldHVybiBpdCBhcyBpcy5cbiAgICBpZiAod2l0aG91dFByZWZpeC5zdGFydHNXaXRoKFwiL1wiKSkge1xuICAgICAgICByZXR1cm4gd2l0aG91dFByZWZpeDtcbiAgICB9XG4gICAgLy8gSWYgdGhlIHBhdGggd2l0aG91dCB0aGUgcHJlZml4IGRvZXNuJ3Qgc3RhcnQgd2l0aCBhIGAvYCB3ZSBuZWVkIHRvIGFkZCBpdFxuICAgIC8vIGJhY2sgdG8gdGhlIHBhdGggdG8gbWFrZSBzdXJlIGl0J3MgYSB2YWxpZCBwYXRoLlxuICAgIHJldHVybiBcIi9cIiArIHdpdGhvdXRQcmVmaXg7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbW92ZS1wYXRoLXByZWZpeC5qcy5tYXAiXSwibmFtZXMiOlsicGF0aEhhc1ByZWZpeCIsInJlbW92ZVBhdGhQcmVmaXgiLCJwYXRoIiwicHJlZml4Iiwid2l0aG91dFByZWZpeCIsInNsaWNlIiwibGVuZ3RoIiwic3RhcnRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeTrailingSlash: () => (/* binding */ removeTrailingSlash)\n/* harmony export */ });\n/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, \"\") || \"/\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXRyYWlsaW5nLXNsYXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0NBTUEsR0FBVyxTQUFTQSxvQkFBb0JDLEtBQUs7SUFDekMsT0FBT0EsTUFBTUMsT0FBTyxDQUFDLE9BQU8sT0FBTztBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9yZW1vdmUtdHJhaWxpbmctc2xhc2guanM/ODJmNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlbW92ZXMgdGhlIHRyYWlsaW5nIHNsYXNoIGZvciBhIGdpdmVuIHJvdXRlIG9yIHBhZ2UgcGF0aC4gUHJlc2VydmVzIHRoZVxuICogcm9vdCBwYWdlLiBFeGFtcGxlczpcbiAqICAgLSBgL2Zvby9iYXIvYCAtPiBgL2Zvby9iYXJgXG4gKiAgIC0gYC9mb28vYmFyYCAtPiBgL2Zvby9iYXJgXG4gKiAgIC0gYC9gIC0+IGAvYFxuICovIGV4cG9ydCBmdW5jdGlvbiByZW1vdmVUcmFpbGluZ1NsYXNoKHJvdXRlKSB7XG4gICAgcmV0dXJuIHJvdXRlLnJlcGxhY2UoL1xcLyQvLCBcIlwiKSB8fCBcIi9cIjtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZlLXRyYWlsaW5nLXNsYXNoLmpzLm1hcCJdLCJuYW1lcyI6WyJyZW1vdmVUcmFpbGluZ1NsYXNoIiwicm91dGUiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/segment.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_SEGMENT_KEY: () => (/* binding */ DEFAULT_SEGMENT_KEY),\n/* harmony export */   PAGE_SEGMENT_KEY: () => (/* binding */ PAGE_SEGMENT_KEY),\n/* harmony export */   isGroupSegment: () => (/* binding */ isGroupSegment)\n/* harmony export */ });\nfunction isGroupSegment(segment) {\n    // Use array[0] for performant purpose\n    return segment[0] === \"(\" && segment.endsWith(\")\");\n}\nconst PAGE_SEGMENT_KEY = \"__PAGE__\";\nconst DEFAULT_SEGMENT_KEY = \"__DEFAULT__\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9zZWdtZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLFNBQVNBLGVBQWVDLE9BQU87SUFDbEM7SUFDQSxPQUFPQSxPQUFPLENBQUMsRUFBRSxLQUFLLE9BQU9BLFFBQVFDLFFBQVEsQ0FBQztBQUNsRDtBQUNPLE1BQU1DLG1CQUFtQixXQUFVO0FBQ25DLE1BQU1DLHNCQUFzQixjQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvc2VnbWVudC5qcz9mY2Q2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0dyb3VwU2VnbWVudChzZWdtZW50KSB7XG4gICAgLy8gVXNlIGFycmF5WzBdIGZvciBwZXJmb3JtYW50IHB1cnBvc2VcbiAgICByZXR1cm4gc2VnbWVudFswXSA9PT0gXCIoXCIgJiYgc2VnbWVudC5lbmRzV2l0aChcIilcIik7XG59XG5leHBvcnQgY29uc3QgUEFHRV9TRUdNRU5UX0tFWSA9IFwiX19QQUdFX19cIjtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1NFR01FTlRfS0VZID0gXCJfX0RFRkFVTFRfX1wiO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWdtZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJpc0dyb3VwU2VnbWVudCIsInNlZ21lbnQiLCJlbmRzV2l0aCIsIlBBR0VfU0VHTUVOVF9LRVkiLCJERUZBVUxUX1NFR01FTlRfS0VZIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerInsertedHTMLContext: () => (/* binding */ ServerInsertedHTMLContext),\n/* harmony export */   useServerInsertedHTML: () => (/* binding */ useServerInsertedHTML)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\"use client\";\n\n// Use `React.createContext` to avoid errors from the RSC checks because\n// it can't be imported directly in Server Components:\n//\n//   import { createContext } from 'react'\n//\n// More info: https://github.com/vercel/next.js/pull/40686\nconst ServerInsertedHTMLContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nfunction useServerInsertedHTML(callback) {\n    const addInsertedServerHTMLCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ServerInsertedHTMLContext);\n    // Should have no effects on client where there's no flush effects provider\n    if (addInsertedServerHTMLCallback) {\n        addInsertedServerHTMLCallback(callback);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9zZXJ2ZXItaW5zZXJ0ZWQtaHRtbC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFFeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sTUFBTUUsNEJBQTRCLGNBQWNGLDBEQUFtQixDQUFDLE1BQUs7QUFDekUsU0FBU0ksc0JBQXNCQyxRQUFRO0lBQzFDLE1BQU1DLGdDQUFnQ0wsaURBQVVBLENBQUNDO0lBQ2pEO0lBQ0EsSUFBSUksK0JBQStCO1FBQy9CQSw4QkFBOEJEO0lBQ2xDO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9zZXJ2ZXItaW5zZXJ0ZWQtaHRtbC5zaGFyZWQtcnVudGltZS5qcz82NTA5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuLy8gVXNlIGBSZWFjdC5jcmVhdGVDb250ZXh0YCB0byBhdm9pZCBlcnJvcnMgZnJvbSB0aGUgUlNDIGNoZWNrcyBiZWNhdXNlXG4vLyBpdCBjYW4ndCBiZSBpbXBvcnRlZCBkaXJlY3RseSBpbiBTZXJ2ZXIgQ29tcG9uZW50czpcbi8vXG4vLyAgIGltcG9ydCB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tICdyZWFjdCdcbi8vXG4vLyBNb3JlIGluZm86IGh0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qcy9wdWxsLzQwNjg2XG5leHBvcnQgY29uc3QgU2VydmVySW5zZXJ0ZWRIVE1MQ29udGV4dCA9IC8qI19fUFVSRV9fKi8gUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbmV4cG9ydCBmdW5jdGlvbiB1c2VTZXJ2ZXJJbnNlcnRlZEhUTUwoY2FsbGJhY2spIHtcbiAgICBjb25zdCBhZGRJbnNlcnRlZFNlcnZlckhUTUxDYWxsYmFjayA9IHVzZUNvbnRleHQoU2VydmVySW5zZXJ0ZWRIVE1MQ29udGV4dCk7XG4gICAgLy8gU2hvdWxkIGhhdmUgbm8gZWZmZWN0cyBvbiBjbGllbnQgd2hlcmUgdGhlcmUncyBubyBmbHVzaCBlZmZlY3RzIHByb3ZpZGVyXG4gICAgaWYgKGFkZEluc2VydGVkU2VydmVySFRNTENhbGxiYWNrKSB7XG4gICAgICAgIGFkZEluc2VydGVkU2VydmVySFRNTENhbGxiYWNrKGNhbGxiYWNrKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcnZlci1pbnNlcnRlZC1odG1sLnNoYXJlZC1ydW50aW1lLmpzLm1hcCJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUNvbnRleHQiLCJTZXJ2ZXJJbnNlcnRlZEhUTUxDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsInVzZVNlcnZlckluc2VydGVkSFRNTCIsImNhbGxiYWNrIiwiYWRkSW5zZXJ0ZWRTZXJ2ZXJIVE1MQ2FsbGJhY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/context.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  getTestReqInfo: function () {\n    return getTestReqInfo;\n  },\n  withRequest: function () {\n    return withRequest;\n  }\n});\nconst _nodeasync_hooks = __webpack_require__(/*! node:async_hooks */ \"node:async_hooks\");\nconst testStorage = new _nodeasync_hooks.AsyncLocalStorage();\nfunction extractTestInfoFromRequest(req, reader) {\n  const proxyPortHeader = reader.header(req, \"next-test-proxy-port\");\n  if (!proxyPortHeader) {\n    return undefined;\n  }\n  const url = reader.url(req);\n  const proxyPort = Number(proxyPortHeader);\n  const testData = reader.header(req, \"next-test-data\") || \"\";\n  return {\n    url,\n    proxyPort,\n    testData\n  };\n}\nfunction withRequest(req, reader, fn) {\n  const testReqInfo = extractTestInfoFromRequest(req, reader);\n  if (!testReqInfo) {\n    return fn();\n  }\n  return testStorage.run(testReqInfo, fn);\n}\nfunction getTestReqInfo(req, reader) {\n  const testReqInfo = testStorage.getStore();\n  if (testReqInfo) {\n    return testReqInfo;\n  }\n  if (req && reader) {\n    return extractTestInfoFromRequest(req, reader);\n  }\n  return undefined;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvY29udGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQ3pDRyxLQUFLLEVBQUU7QUFDWCxDQUFDLEVBQUM7QUFDRixDQUFDLEtBQUtDLENBR0wsQ0FBQztBQUNGLFNBQVNHLE9BQU9BLENBQUNDLE1BQU0sRUFBRUMsR0FBRyxFQUFFO0VBQzFCLEtBQUksSUFBSUMsSUFBSSxJQUFJRCxHQUFHLEVBQUNULE1BQU0sQ0FBQ0MsY0FBYyxDQUFDTyxNQUFNLEVBQUVFLElBQUksRUFBRTtJQUNwREMsVUFBVSxFQUFFLElBQUk7SUFDaEJDLEdBQUcsRUFBRUgsR0FBRyxDQUFDQyxJQUFJO0VBQ2pCLENBQUMsQ0FBQztBQUNOO0FBQ0FILE9BQU8sQ0FBQ0wsT0FBTyxFQUFFO0VBQ2JHLGNBQWMsRUFBRSxTQUFBQSxDQUFBLEVBQVc7SUFDdkIsT0FBT0EsY0FBYztFQUN6QixDQUFDO0VBQ0RDLFdBQVcsRUFBRSxTQUFBQSxDQUFBLEVBQVc7SUFDcEIsT0FBT0EsV0FBVztFQUN0QjtBQUNKLENBQUMsQ0FBQztBQUNGLE1BQU1PLGdCQUFnQixHQUFHQyxtQkFBTyxDQUFDLDBDQUFrQixDQUFDO0FBQ3BELE1BQU1DLFdBQVcsR0FBRyxJQUFJRixnQkFBZ0IsQ0FBQ0csaUJBQWlCLENBQUMsQ0FBQztBQUM1RCxTQUFTQywwQkFBMEJBLENBQUNDLEdBQUcsRUFBRUMsTUFBTSxFQUFFO0VBQzdDLE1BQU1DLGVBQWUsR0FBR0QsTUFBTSxDQUFDRSxNQUFNLENBQUNILEdBQUcsRUFBRSxzQkFBc0IsQ0FBQztFQUNsRSxJQUFJLENBQUNFLGVBQWUsRUFBRTtJQUNsQixPQUFPRSxTQUFTO0VBQ3BCO0VBQ0EsTUFBTUMsR0FBRyxHQUFHSixNQUFNLENBQUNJLEdBQUcsQ0FBQ0wsR0FBRyxDQUFDO0VBQzNCLE1BQU1NLFNBQVMsR0FBR0MsTUFBTSxDQUFDTCxlQUFlLENBQUM7RUFDekMsTUFBTU0sUUFBUSxHQUFHUCxNQUFNLENBQUNFLE1BQU0sQ0FBQ0gsR0FBRyxFQUFFLGdCQUFnQixDQUFDLElBQUksRUFBRTtFQUMzRCxPQUFPO0lBQ0hLLEdBQUc7SUFDSEMsU0FBUztJQUNURTtFQUNKLENBQUM7QUFDTDtBQUNBLFNBQVNwQixXQUFXQSxDQUFDWSxHQUFHLEVBQUVDLE1BQU0sRUFBRVEsRUFBRSxFQUFFO0VBQ2xDLE1BQU1DLFdBQVcsR0FBR1gsMEJBQTBCLENBQUNDLEdBQUcsRUFBRUMsTUFBTSxDQUFDO0VBQzNELElBQUksQ0FBQ1MsV0FBVyxFQUFFO0lBQ2QsT0FBT0QsRUFBRSxDQUFDLENBQUM7RUFDZjtFQUNBLE9BQU9aLFdBQVcsQ0FBQ2MsR0FBRyxDQUFDRCxXQUFXLEVBQUVELEVBQUUsQ0FBQztBQUMzQztBQUNBLFNBQVN0QixjQUFjQSxDQUFDYSxHQUFHLEVBQUVDLE1BQU0sRUFBRTtFQUNqQyxNQUFNUyxXQUFXLEdBQUdiLFdBQVcsQ0FBQ2UsUUFBUSxDQUFDLENBQUM7RUFDMUMsSUFBSUYsV0FBVyxFQUFFO0lBQ2IsT0FBT0EsV0FBVztFQUN0QjtFQUNBLElBQUlWLEdBQUcsSUFBSUMsTUFBTSxFQUFFO0lBQ2YsT0FBT0YsMEJBQTBCLENBQUNDLEdBQUcsRUFBRUMsTUFBTSxDQUFDO0VBQ2xEO0VBQ0EsT0FBT0csU0FBUztBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2V4cGVyaW1lbnRhbC90ZXN0bW9kZS9jb250ZXh0LmpzPzkzNTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRUZXN0UmVxSW5mbzogbnVsbCxcbiAgICB3aXRoUmVxdWVzdDogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBnZXRUZXN0UmVxSW5mbzogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRUZXN0UmVxSW5mbztcbiAgICB9LFxuICAgIHdpdGhSZXF1ZXN0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHdpdGhSZXF1ZXN0O1xuICAgIH1cbn0pO1xuY29uc3QgX25vZGVhc3luY19ob29rcyA9IHJlcXVpcmUoXCJub2RlOmFzeW5jX2hvb2tzXCIpO1xuY29uc3QgdGVzdFN0b3JhZ2UgPSBuZXcgX25vZGVhc3luY19ob29rcy5Bc3luY0xvY2FsU3RvcmFnZSgpO1xuZnVuY3Rpb24gZXh0cmFjdFRlc3RJbmZvRnJvbVJlcXVlc3QocmVxLCByZWFkZXIpIHtcbiAgICBjb25zdCBwcm94eVBvcnRIZWFkZXIgPSByZWFkZXIuaGVhZGVyKHJlcSwgXCJuZXh0LXRlc3QtcHJveHktcG9ydFwiKTtcbiAgICBpZiAoIXByb3h5UG9ydEhlYWRlcikge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjb25zdCB1cmwgPSByZWFkZXIudXJsKHJlcSk7XG4gICAgY29uc3QgcHJveHlQb3J0ID0gTnVtYmVyKHByb3h5UG9ydEhlYWRlcik7XG4gICAgY29uc3QgdGVzdERhdGEgPSByZWFkZXIuaGVhZGVyKHJlcSwgXCJuZXh0LXRlc3QtZGF0YVwiKSB8fCBcIlwiO1xuICAgIHJldHVybiB7XG4gICAgICAgIHVybCxcbiAgICAgICAgcHJveHlQb3J0LFxuICAgICAgICB0ZXN0RGF0YVxuICAgIH07XG59XG5mdW5jdGlvbiB3aXRoUmVxdWVzdChyZXEsIHJlYWRlciwgZm4pIHtcbiAgICBjb25zdCB0ZXN0UmVxSW5mbyA9IGV4dHJhY3RUZXN0SW5mb0Zyb21SZXF1ZXN0KHJlcSwgcmVhZGVyKTtcbiAgICBpZiAoIXRlc3RSZXFJbmZvKSB7XG4gICAgICAgIHJldHVybiBmbigpO1xuICAgIH1cbiAgICByZXR1cm4gdGVzdFN0b3JhZ2UucnVuKHRlc3RSZXFJbmZvLCBmbik7XG59XG5mdW5jdGlvbiBnZXRUZXN0UmVxSW5mbyhyZXEsIHJlYWRlcikge1xuICAgIGNvbnN0IHRlc3RSZXFJbmZvID0gdGVzdFN0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAodGVzdFJlcUluZm8pIHtcbiAgICAgICAgcmV0dXJuIHRlc3RSZXFJbmZvO1xuICAgIH1cbiAgICBpZiAocmVxICYmIHJlYWRlcikge1xuICAgICAgICByZXR1cm4gZXh0cmFjdFRlc3RJbmZvRnJvbVJlcXVlc3QocmVxLCByZWFkZXIpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb250ZXh0LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1vZHVsZSIsImdldFRlc3RSZXFJbmZvIiwid2l0aFJlcXVlc3QiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJfbm9kZWFzeW5jX2hvb2tzIiwicmVxdWlyZSIsInRlc3RTdG9yYWdlIiwiQXN5bmNMb2NhbFN0b3JhZ2UiLCJleHRyYWN0VGVzdEluZm9Gcm9tUmVxdWVzdCIsInJlcSIsInJlYWRlciIsInByb3h5UG9ydEhlYWRlciIsImhlYWRlciIsInVuZGVmaW5lZCIsInVybCIsInByb3h5UG9ydCIsIk51bWJlciIsInRlc3REYXRhIiwiZm4iLCJ0ZXN0UmVxSW5mbyIsInJ1biIsImdldFN0b3JlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/context.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/fetch.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  handleFetch: function () {\n    return handleFetch;\n  },\n  interceptFetch: function () {\n    return interceptFetch;\n  },\n  reader: function () {\n    return reader;\n  }\n});\nconst _context = __webpack_require__(/*! ./context */ \"(middleware)/./node_modules/next/dist/experimental/testmode/context.js\");\nconst reader = {\n  url(req) {\n    return req.url;\n  },\n  header(req, name) {\n    return req.headers.get(name);\n  }\n};\nfunction getTestStack() {\n  let stack = (new Error().stack ?? \"\").split(\"\\n\");\n  // Skip the first line and find first non-empty line.\n  for (let i = 1; i < stack.length; i++) {\n    if (stack[i].length > 0) {\n      stack = stack.slice(i);\n      break;\n    }\n  }\n  // Filter out franmework lines.\n  stack = stack.filter(f => !f.includes(\"/next/dist/\"));\n  // At most 5 lines.\n  stack = stack.slice(0, 5);\n  // Cleanup some internal info and trim.\n  stack = stack.map(s => s.replace(\"webpack-internal:///(rsc)/\", \"\").trim());\n  return stack.join(\"    \");\n}\nasync function buildProxyRequest(testData, request) {\n  const {\n    url,\n    method,\n    headers,\n    body,\n    cache,\n    credentials,\n    integrity,\n    mode,\n    redirect,\n    referrer,\n    referrerPolicy\n  } = request;\n  return {\n    testData,\n    api: \"fetch\",\n    request: {\n      url,\n      method,\n      headers: [...Array.from(headers), [\"next-test-stack\", getTestStack()]],\n      body: body ? Buffer.from(await request.arrayBuffer()).toString(\"base64\") : null,\n      cache,\n      credentials,\n      integrity,\n      mode,\n      redirect,\n      referrer,\n      referrerPolicy\n    }\n  };\n}\nfunction buildResponse(proxyResponse) {\n  const {\n    status,\n    headers,\n    body\n  } = proxyResponse.response;\n  return new Response(body ? Buffer.from(body, \"base64\") : null, {\n    status,\n    headers: new Headers(headers)\n  });\n}\nasync function handleFetch(originalFetch, request) {\n  const testInfo = (0, _context.getTestReqInfo)(request, reader);\n  if (!testInfo) {\n    // Passthrough non-test requests.\n    return originalFetch(request);\n  }\n  const {\n    testData,\n    proxyPort\n  } = testInfo;\n  const proxyRequest = await buildProxyRequest(testData, request);\n  const resp = await originalFetch(`http://localhost:${proxyPort}`, {\n    method: \"POST\",\n    body: JSON.stringify(proxyRequest),\n    next: {\n      // @ts-ignore\n      internal: true\n    }\n  });\n  if (!resp.ok) {\n    throw new Error(`Proxy request failed: ${resp.status}`);\n  }\n  const proxyResponse = await resp.json();\n  const {\n    api\n  } = proxyResponse;\n  switch (api) {\n    case \"continue\":\n      return originalFetch(request);\n    case \"abort\":\n    case \"unhandled\":\n      throw new Error(`Proxy request aborted [${request.method} ${request.url}]`);\n    default:\n      break;\n  }\n  return buildResponse(proxyResponse);\n}\nfunction interceptFetch(originalFetch) {\n  __webpack_require__.g.fetch = function testFetch(input, init) {\n    var _init_next;\n    // Passthrough internal requests.\n    // @ts-ignore\n    if (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) {\n      return originalFetch(input, init);\n    }\n    return handleFetch(originalFetch, new Request(input, init));\n  };\n  return () => {\n    __webpack_require__.g.fetch = originalFetch;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/server-edge.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  interceptTestApis: function () {\n    return interceptTestApis;\n  },\n  wrapRequestHandler: function () {\n    return wrapRequestHandler;\n  }\n});\nconst _context = __webpack_require__(/*! ./context */ \"(middleware)/./node_modules/next/dist/experimental/testmode/context.js\");\nconst _fetch = __webpack_require__(/*! ./fetch */ \"(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js\");\nfunction interceptTestApis() {\n  return (0, _fetch.interceptFetch)(__webpack_require__.g.fetch);\n}\nfunction wrapRequestHandler(handler) {\n  return (req, fn) => (0, _context.withRequest)(req, _fetch.reader, () => handler(req, fn));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvc2VydmVyLWVkZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUN6Q0csS0FBSyxFQUFFO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsQ0FBQyxLQUFLQyxDQUdMLENBQUM7QUFDRixTQUFTRyxPQUFPQSxDQUFDQyxNQUFNLEVBQUVDLEdBQUcsRUFBRTtFQUMxQixLQUFJLElBQUlDLElBQUksSUFBSUQsR0FBRyxFQUFDVCxNQUFNLENBQUNDLGNBQWMsQ0FBQ08sTUFBTSxFQUFFRSxJQUFJLEVBQUU7SUFDcERDLFVBQVUsRUFBRSxJQUFJO0lBQ2hCQyxHQUFHLEVBQUVILEdBQUcsQ0FBQ0MsSUFBSTtFQUNqQixDQUFDLENBQUM7QUFDTjtBQUNBSCxPQUFPLENBQUNMLE9BQU8sRUFBRTtFQUNiRyxpQkFBaUIsRUFBRSxTQUFBQSxDQUFBLEVBQVc7SUFDMUIsT0FBT0EsaUJBQWlCO0VBQzVCLENBQUM7RUFDREMsa0JBQWtCLEVBQUUsU0FBQUEsQ0FBQSxFQUFXO0lBQzNCLE9BQU9BLGtCQUFrQjtFQUM3QjtBQUNKLENBQUMsQ0FBQztBQUNGLE1BQU1PLFFBQVEsR0FBR0MsbUJBQU8sQ0FBQyx5RkFBVyxDQUFDO0FBQ3JDLE1BQU1DLE1BQU0sR0FBR0QsbUJBQU8sQ0FBQyxxRkFBUyxDQUFDO0FBQ2pDLFNBQVNULGlCQUFpQkEsQ0FBQSxFQUFHO0VBQ3pCLE9BQU8sQ0FBQyxDQUFDLEVBQUVVLE1BQU0sQ0FBQ0MsY0FBYyxFQUFFQyxxQkFBTSxDQUFDQyxLQUFLLENBQUM7QUFDbkQ7QUFDQSxTQUFTWixrQkFBa0JBLENBQUNhLE9BQU8sRUFBRTtFQUNqQyxPQUFPLENBQUNDLEdBQUcsRUFBRUMsRUFBRSxLQUFHLENBQUMsQ0FBQyxFQUFFUixRQUFRLENBQUNTLFdBQVcsRUFBRUYsR0FBRyxFQUFFTCxNQUFNLENBQUNRLE1BQU0sRUFBRSxNQUFJSixPQUFPLENBQUNDLEdBQUcsRUFBRUMsRUFBRSxDQUFDLENBQUM7QUFDekYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvc2VydmVyLWVkZ2UuanM/NDcxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGludGVyY2VwdFRlc3RBcGlzOiBudWxsLFxuICAgIHdyYXBSZXF1ZXN0SGFuZGxlcjogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBpbnRlcmNlcHRUZXN0QXBpczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBpbnRlcmNlcHRUZXN0QXBpcztcbiAgICB9LFxuICAgIHdyYXBSZXF1ZXN0SGFuZGxlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB3cmFwUmVxdWVzdEhhbmRsZXI7XG4gICAgfVxufSk7XG5jb25zdCBfY29udGV4dCA9IHJlcXVpcmUoXCIuL2NvbnRleHRcIik7XG5jb25zdCBfZmV0Y2ggPSByZXF1aXJlKFwiLi9mZXRjaFwiKTtcbmZ1bmN0aW9uIGludGVyY2VwdFRlc3RBcGlzKCkge1xuICAgIHJldHVybiAoMCwgX2ZldGNoLmludGVyY2VwdEZldGNoKShnbG9iYWwuZmV0Y2gpO1xufVxuZnVuY3Rpb24gd3JhcFJlcXVlc3RIYW5kbGVyKGhhbmRsZXIpIHtcbiAgICByZXR1cm4gKHJlcSwgZm4pPT4oMCwgX2NvbnRleHQud2l0aFJlcXVlc3QpKHJlcSwgX2ZldGNoLnJlYWRlciwgKCk9PmhhbmRsZXIocmVxLCBmbikpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJ2ZXItZWRnZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJpbnRlcmNlcHRUZXN0QXBpcyIsIndyYXBSZXF1ZXN0SGFuZGxlciIsIl9leHBvcnQiLCJ0YXJnZXQiLCJhbGwiLCJuYW1lIiwiZW51bWVyYWJsZSIsImdldCIsIl9jb250ZXh0IiwicmVxdWlyZSIsIl9mZXRjaCIsImludGVyY2VwdEZldGNoIiwiZ2xvYmFsIiwiZmV0Y2giLCJoYW5kbGVyIiwicmVxIiwiZm4iLCJ3aXRoUmVxdWVzdCIsInJlYWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/no-case/dist.es2015/index.js":
/*!***************************************************!*\
  !*** ./node_modules/no-case/dist.es2015/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   noCase: () => (/* binding */ noCase)\n/* harmony export */ });\n/* harmony import */ var lower_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lower-case */ \"(middleware)/./node_modules/lower-case/dist.es2015/index.js\");\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nfunction noCase(input, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _a = options.splitRegexp,\n    splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a,\n    _b = options.stripRegexp,\n    stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b,\n    _c = options.transform,\n    transform = _c === void 0 ? lower_case__WEBPACK_IMPORTED_MODULE_0__.lowerCase : _c,\n    _d = options.delimiter,\n    delimiter = _d === void 0 ? \" \" : _d;\n  var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n  var start = 0;\n  var end = result.length;\n  // Trim the delimiter from around the output string.\n  while (result.charAt(start) === \"\\0\") start++;\n  while (result.charAt(end - 1) === \"\\0\") end--;\n  // Transform each token independently.\n  return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n  if (re instanceof RegExp) return input.replace(re, value);\n  return re.reduce(function (input, re) {\n    return input.replace(re, value);\n  }, input);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25vLWNhc2UvZGlzdC5lczIwMTUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUM7QUFDdkM7QUFDQSxJQUFJQyxvQkFBb0IsR0FBRyxDQUFDLG9CQUFvQixFQUFFLHNCQUFzQixDQUFDO0FBQ3pFO0FBQ0EsSUFBSUMsb0JBQW9CLEdBQUcsY0FBYztBQUN6QztBQUNBO0FBQ0E7QUFDTyxTQUFTQyxNQUFNQSxDQUFDQyxLQUFLLEVBQUVDLE9BQU8sRUFBRTtFQUNuQyxJQUFJQSxPQUFPLEtBQUssS0FBSyxDQUFDLEVBQUU7SUFBRUEsT0FBTyxHQUFHLENBQUMsQ0FBQztFQUFFO0VBQ3hDLElBQUlDLEVBQUUsR0FBR0QsT0FBTyxDQUFDRSxXQUFXO0lBQUVBLFdBQVcsR0FBR0QsRUFBRSxLQUFLLEtBQUssQ0FBQyxHQUFHTCxvQkFBb0IsR0FBR0ssRUFBRTtJQUFFRSxFQUFFLEdBQUdILE9BQU8sQ0FBQ0ksV0FBVztJQUFFQSxXQUFXLEdBQUdELEVBQUUsS0FBSyxLQUFLLENBQUMsR0FBR04sb0JBQW9CLEdBQUdNLEVBQUU7SUFBRUUsRUFBRSxHQUFHTCxPQUFPLENBQUNNLFNBQVM7SUFBRUEsU0FBUyxHQUFHRCxFQUFFLEtBQUssS0FBSyxDQUFDLEdBQUdWLGlEQUFTLEdBQUdVLEVBQUU7SUFBRUUsRUFBRSxHQUFHUCxPQUFPLENBQUNRLFNBQVM7SUFBRUEsU0FBUyxHQUFHRCxFQUFFLEtBQUssS0FBSyxDQUFDLEdBQUcsR0FBRyxHQUFHQSxFQUFFO0VBQzFTLElBQUlFLE1BQU0sR0FBR0MsT0FBTyxDQUFDQSxPQUFPLENBQUNYLEtBQUssRUFBRUcsV0FBVyxFQUFFLFFBQVEsQ0FBQyxFQUFFRSxXQUFXLEVBQUUsSUFBSSxDQUFDO0VBQzlFLElBQUlPLEtBQUssR0FBRyxDQUFDO0VBQ2IsSUFBSUMsR0FBRyxHQUFHSCxNQUFNLENBQUNJLE1BQU07RUFDdkI7RUFDQSxPQUFPSixNQUFNLENBQUNLLE1BQU0sQ0FBQ0gsS0FBSyxDQUFDLEtBQUssSUFBSSxFQUNoQ0EsS0FBSyxFQUFFO0VBQ1gsT0FBT0YsTUFBTSxDQUFDSyxNQUFNLENBQUNGLEdBQUcsR0FBRyxDQUFDLENBQUMsS0FBSyxJQUFJLEVBQ2xDQSxHQUFHLEVBQUU7RUFDVDtFQUNBLE9BQU9ILE1BQU0sQ0FBQ00sS0FBSyxDQUFDSixLQUFLLEVBQUVDLEdBQUcsQ0FBQyxDQUFDSSxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUNDLEdBQUcsQ0FBQ1gsU0FBUyxDQUFDLENBQUNZLElBQUksQ0FBQ1YsU0FBUyxDQUFDO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU0UsT0FBT0EsQ0FBQ1gsS0FBSyxFQUFFb0IsRUFBRSxFQUFFQyxLQUFLLEVBQUU7RUFDL0IsSUFBSUQsRUFBRSxZQUFZRSxNQUFNLEVBQ3BCLE9BQU90QixLQUFLLENBQUNXLE9BQU8sQ0FBQ1MsRUFBRSxFQUFFQyxLQUFLLENBQUM7RUFDbkMsT0FBT0QsRUFBRSxDQUFDRyxNQUFNLENBQUMsVUFBVXZCLEtBQUssRUFBRW9CLEVBQUUsRUFBRTtJQUFFLE9BQU9wQixLQUFLLENBQUNXLE9BQU8sQ0FBQ1MsRUFBRSxFQUFFQyxLQUFLLENBQUM7RUFBRSxDQUFDLEVBQUVyQixLQUFLLENBQUM7QUFDdEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25vLWNhc2UvZGlzdC5lczIwMTUvaW5kZXguanM/OTY5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb3dlckNhc2UgfSBmcm9tIFwibG93ZXItY2FzZVwiO1xuLy8gU3VwcG9ydCBjYW1lbCBjYXNlIChcImNhbWVsQ2FzZVwiIC0+IFwiY2FtZWwgQ2FzZVwiIGFuZCBcIkNBTUVMQ2FzZVwiIC0+IFwiQ0FNRUwgQ2FzZVwiKS5cbnZhciBERUZBVUxUX1NQTElUX1JFR0VYUCA9IFsvKFthLXowLTldKShbQS1aXSkvZywgLyhbQS1aXSkoW0EtWl1bYS16XSkvZ107XG4vLyBSZW1vdmUgYWxsIG5vbi13b3JkIGNoYXJhY3RlcnMuXG52YXIgREVGQVVMVF9TVFJJUF9SRUdFWFAgPSAvW15BLVowLTldKy9naTtcbi8qKlxuICogTm9ybWFsaXplIHRoZSBzdHJpbmcgaW50byBzb21ldGhpbmcgb3RoZXIgbGlicmFyaWVzIGNhbiBtYW5pcHVsYXRlIGVhc2llci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5vQ2FzZShpbnB1dCwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgdmFyIF9hID0gb3B0aW9ucy5zcGxpdFJlZ2V4cCwgc3BsaXRSZWdleHAgPSBfYSA9PT0gdm9pZCAwID8gREVGQVVMVF9TUExJVF9SRUdFWFAgOiBfYSwgX2IgPSBvcHRpb25zLnN0cmlwUmVnZXhwLCBzdHJpcFJlZ2V4cCA9IF9iID09PSB2b2lkIDAgPyBERUZBVUxUX1NUUklQX1JFR0VYUCA6IF9iLCBfYyA9IG9wdGlvbnMudHJhbnNmb3JtLCB0cmFuc2Zvcm0gPSBfYyA9PT0gdm9pZCAwID8gbG93ZXJDYXNlIDogX2MsIF9kID0gb3B0aW9ucy5kZWxpbWl0ZXIsIGRlbGltaXRlciA9IF9kID09PSB2b2lkIDAgPyBcIiBcIiA6IF9kO1xuICAgIHZhciByZXN1bHQgPSByZXBsYWNlKHJlcGxhY2UoaW5wdXQsIHNwbGl0UmVnZXhwLCBcIiQxXFwwJDJcIiksIHN0cmlwUmVnZXhwLCBcIlxcMFwiKTtcbiAgICB2YXIgc3RhcnQgPSAwO1xuICAgIHZhciBlbmQgPSByZXN1bHQubGVuZ3RoO1xuICAgIC8vIFRyaW0gdGhlIGRlbGltaXRlciBmcm9tIGFyb3VuZCB0aGUgb3V0cHV0IHN0cmluZy5cbiAgICB3aGlsZSAocmVzdWx0LmNoYXJBdChzdGFydCkgPT09IFwiXFwwXCIpXG4gICAgICAgIHN0YXJ0Kys7XG4gICAgd2hpbGUgKHJlc3VsdC5jaGFyQXQoZW5kIC0gMSkgPT09IFwiXFwwXCIpXG4gICAgICAgIGVuZC0tO1xuICAgIC8vIFRyYW5zZm9ybSBlYWNoIHRva2VuIGluZGVwZW5kZW50bHkuXG4gICAgcmV0dXJuIHJlc3VsdC5zbGljZShzdGFydCwgZW5kKS5zcGxpdChcIlxcMFwiKS5tYXAodHJhbnNmb3JtKS5qb2luKGRlbGltaXRlcik7XG59XG4vKipcbiAqIFJlcGxhY2UgYHJlYCBpbiB0aGUgaW5wdXQgc3RyaW5nIHdpdGggdGhlIHJlcGxhY2VtZW50IHZhbHVlLlxuICovXG5mdW5jdGlvbiByZXBsYWNlKGlucHV0LCByZSwgdmFsdWUpIHtcbiAgICBpZiAocmUgaW5zdGFuY2VvZiBSZWdFeHApXG4gICAgICAgIHJldHVybiBpbnB1dC5yZXBsYWNlKHJlLCB2YWx1ZSk7XG4gICAgcmV0dXJuIHJlLnJlZHVjZShmdW5jdGlvbiAoaW5wdXQsIHJlKSB7IHJldHVybiBpbnB1dC5yZXBsYWNlKHJlLCB2YWx1ZSk7IH0sIGlucHV0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJsb3dlckNhc2UiLCJERUZBVUxUX1NQTElUX1JFR0VYUCIsIkRFRkFVTFRfU1RSSVBfUkVHRVhQIiwibm9DYXNlIiwiaW5wdXQiLCJvcHRpb25zIiwiX2EiLCJzcGxpdFJlZ2V4cCIsIl9iIiwic3RyaXBSZWdleHAiLCJfYyIsInRyYW5zZm9ybSIsIl9kIiwiZGVsaW1pdGVyIiwicmVzdWx0IiwicmVwbGFjZSIsInN0YXJ0IiwiZW5kIiwibGVuZ3RoIiwiY2hhckF0Iiwic2xpY2UiLCJzcGxpdCIsIm1hcCIsImpvaW4iLCJyZSIsInZhbHVlIiwiUmVnRXhwIiwicmVkdWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/no-case/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/path-to-regexp/dist.es2015/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/path-to-regexp/dist.es2015/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compile: () => (/* binding */ compile),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   pathToRegexp: () => (/* binding */ pathToRegexp),\n/* harmony export */   regexpToFunction: () => (/* binding */ regexpToFunction),\n/* harmony export */   tokensToFunction: () => (/* binding */ tokensToFunction),\n/* harmony export */   tokensToRegexp: () => (/* binding */ tokensToRegexp)\n/* harmony export */ });\n/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n  var tokens = [];\n  var i = 0;\n  while (i < str.length) {\n    var char = str[i];\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({\n        type: \"MODIFIER\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n    if (char === \"\\\\\") {\n      tokens.push({\n        type: \"ESCAPED_CHAR\",\n        index: i++,\n        value: str[i++]\n      });\n      continue;\n    }\n    if (char === \"{\") {\n      tokens.push({\n        type: \"OPEN\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n    if (char === \"}\") {\n      tokens.push({\n        type: \"CLOSE\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n    if (char === \":\") {\n      var name = \"\";\n      var j = i + 1;\n      while (j < str.length) {\n        var code = str.charCodeAt(j);\n        if (\n        // `0-9`\n        code >= 48 && code <= 57 ||\n        // `A-Z`\n        code >= 65 && code <= 90 ||\n        // `a-z`\n        code >= 97 && code <= 122 ||\n        // `_`\n        code === 95) {\n          name += str[j++];\n          continue;\n        }\n        break;\n      }\n      if (!name) throw new TypeError(\"Missing parameter name at \".concat(i));\n      tokens.push({\n        type: \"NAME\",\n        index: i,\n        value: name\n      });\n      i = j;\n      continue;\n    }\n    if (char === \"(\") {\n      var count = 1;\n      var pattern = \"\";\n      var j = i + 1;\n      if (str[j] === \"?\") {\n        throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \".concat(j));\n      }\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(\"Capturing groups are not allowed at \".concat(j));\n          }\n        }\n        pattern += str[j++];\n      }\n      if (count) throw new TypeError(\"Unbalanced pattern at \".concat(i));\n      if (!pattern) throw new TypeError(\"Missing pattern at \".concat(i));\n      tokens.push({\n        type: \"PATTERN\",\n        index: i,\n        value: pattern\n      });\n      i = j;\n      continue;\n    }\n    tokens.push({\n      type: \"CHAR\",\n      index: i,\n      value: str[i++]\n    });\n  }\n  tokens.push({\n    type: \"END\",\n    index: i,\n    value: \"\"\n  });\n  return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nfunction parse(str, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var tokens = lexer(str);\n  var _a = options.prefixes,\n    prefixes = _a === void 0 ? \"./\" : _a;\n  var defaultPattern = \"[^\".concat(escapeString(options.delimiter || \"/#?\"), \"]+?\");\n  var result = [];\n  var key = 0;\n  var i = 0;\n  var path = \"\";\n  var tryConsume = function (type) {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n  var mustConsume = function (type) {\n    var value = tryConsume(type);\n    if (value !== undefined) return value;\n    var _a = tokens[i],\n      nextType = _a.type,\n      index = _a.index;\n    throw new TypeError(\"Unexpected \".concat(nextType, \" at \").concat(index, \", expected \").concat(type));\n  };\n  var consumeText = function () {\n    var result = \"\";\n    var value;\n    while (value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\")) {\n      result += value;\n    }\n    return result;\n  };\n  while (i < tokens.length) {\n    var char = tryConsume(\"CHAR\");\n    var name = tryConsume(\"NAME\");\n    var pattern = tryConsume(\"PATTERN\");\n    if (name || pattern) {\n      var prefix = char || \"\";\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n      result.push({\n        name: name || key++,\n        prefix: prefix,\n        suffix: \"\",\n        pattern: pattern || defaultPattern,\n        modifier: tryConsume(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n    var value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n    var open = tryConsume(\"OPEN\");\n    if (open) {\n      var prefix = consumeText();\n      var name_1 = tryConsume(\"NAME\") || \"\";\n      var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n      var suffix = consumeText();\n      mustConsume(\"CLOSE\");\n      result.push({\n        name: name_1 || (pattern_1 ? key++ : \"\"),\n        pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n        prefix: prefix,\n        suffix: suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n    mustConsume(\"END\");\n  }\n  return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction(tokens, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var reFlags = flags(options);\n  var _a = options.encode,\n    encode = _a === void 0 ? function (x) {\n      return x;\n    } : _a,\n    _b = options.validate,\n    validate = _b === void 0 ? true : _b;\n  // Compile all the tokens into regexps.\n  var matches = tokens.map(function (token) {\n    if (typeof token === \"object\") {\n      return new RegExp(\"^(?:\".concat(token.pattern, \")$\"), reFlags);\n    }\n  });\n  return function (data) {\n    var path = \"\";\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n      var value = data ? data[token.name] : undefined;\n      var optional = token.modifier === \"?\" || token.modifier === \"*\";\n      var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not repeat, but got an array\"));\n        }\n        if (value.length === 0) {\n          if (optional) continue;\n          throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not be empty\"));\n        }\n        for (var j = 0; j < value.length; j++) {\n          var segment = encode(value[j], token);\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError(\"Expected all \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n          }\n          path += token.prefix + segment + token.suffix;\n        }\n        continue;\n      }\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        var segment = encode(String(value), token);\n        if (validate && !matches[i].test(segment)) {\n          throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n        }\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n      if (optional) continue;\n      var typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to be \").concat(typeOfMessage));\n    }\n    return path;\n  };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nfunction match(str, options) {\n  var keys = [];\n  var re = pathToRegexp(str, keys, options);\n  return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nfunction regexpToFunction(re, keys, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _a = options.decode,\n    decode = _a === void 0 ? function (x) {\n      return x;\n    } : _a;\n  return function (pathname) {\n    var m = re.exec(pathname);\n    if (!m) return false;\n    var path = m[0],\n      index = m.index;\n    var params = Object.create(null);\n    var _loop_1 = function (i) {\n      if (m[i] === undefined) return \"continue\";\n      var key = keys[i - 1];\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    };\n    for (var i = 1; i < m.length; i++) {\n      _loop_1(i);\n    }\n    return {\n      path: path,\n      index: index,\n      params: params\n    };\n  };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n  if (!keys) return path;\n  var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n  var index = 0;\n  var execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\"\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n  return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n  var parts = paths.map(function (path) {\n    return pathToRegexp(path, keys, options).source;\n  });\n  return new RegExp(\"(?:\".concat(parts.join(\"|\"), \")\"), flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nfunction tokensToRegexp(tokens, keys, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _a = options.strict,\n    strict = _a === void 0 ? false : _a,\n    _b = options.start,\n    start = _b === void 0 ? true : _b,\n    _c = options.end,\n    end = _c === void 0 ? true : _c,\n    _d = options.encode,\n    encode = _d === void 0 ? function (x) {\n      return x;\n    } : _d,\n    _e = options.delimiter,\n    delimiter = _e === void 0 ? \"/#?\" : _e,\n    _f = options.endsWith,\n    endsWith = _f === void 0 ? \"\" : _f;\n  var endsWithRe = \"[\".concat(escapeString(endsWith), \"]|$\");\n  var delimiterRe = \"[\".concat(escapeString(delimiter), \"]\");\n  var route = start ? \"^\" : \"\";\n  // Iterate over the tokens and create our regexp string.\n  for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n    var token = tokens_1[_i];\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      var prefix = escapeString(encode(token.prefix));\n      var suffix = escapeString(encode(token.suffix));\n      if (token.pattern) {\n        if (keys) keys.push(token);\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            var mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += \"(?:\".concat(prefix, \"((?:\").concat(token.pattern, \")(?:\").concat(suffix).concat(prefix, \"(?:\").concat(token.pattern, \"))*)\").concat(suffix, \")\").concat(mod);\n          } else {\n            route += \"(?:\".concat(prefix, \"(\").concat(token.pattern, \")\").concat(suffix, \")\").concat(token.modifier);\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            route += \"((?:\".concat(token.pattern, \")\").concat(token.modifier, \")\");\n          } else {\n            route += \"(\".concat(token.pattern, \")\").concat(token.modifier);\n          }\n        }\n      } else {\n        route += \"(?:\".concat(prefix).concat(suffix, \")\").concat(token.modifier);\n      }\n    }\n  }\n  if (end) {\n    if (!strict) route += \"\".concat(delimiterRe, \"?\");\n    route += !options.endsWith ? \"$\" : \"(?=\".concat(endsWithRe, \")\");\n  } else {\n    var endToken = tokens[tokens.length - 1];\n    var isEndDelimited = typeof endToken === \"string\" ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1 : endToken === undefined;\n    if (!strict) {\n      route += \"(?:\".concat(delimiterRe, \"(?=\").concat(endsWithRe, \"))?\");\n    }\n    if (!isEndDelimited) {\n      route += \"(?=\".concat(delimiterRe, \"|\").concat(endsWithRe, \")\");\n    }\n  }\n  return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nfunction pathToRegexp(path, keys, options) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/path-to-regexp/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function () {\n    'use strict';\n\n    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n    }\n    var ReactVersion = '18.3.0';\n\n    // ATTENTION\n    // When adding new symbols to this file,\n    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n    // The Symbol used to tag the ReactElement-like types.\n    var REACT_ELEMENT_TYPE = Symbol.for('react.element');\n    var REACT_PORTAL_TYPE = Symbol.for('react.portal');\n    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\n    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\n    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');\n    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');\n    var REACT_CONTEXT_TYPE = Symbol.for('react.context');\n    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\n    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\n    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\n    var REACT_MEMO_TYPE = Symbol.for('react.memo');\n    var REACT_LAZY_TYPE = Symbol.for('react.lazy');\n    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\n    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator';\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable !== 'object') {\n        return null;\n      }\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n      if (typeof maybeIterator === 'function') {\n        return maybeIterator;\n      }\n      return null;\n    }\n\n    /**\n     * Keeps track of the current dispatcher.\n     */\n    var ReactCurrentDispatcher = {\n      /**\n       * @internal\n       * @type {ReactComponent}\n       */\n      current: null\n    };\n\n    /**\n     * Keeps track of the current batch's configuration such as how long an update\n     * should suspend for if it needs to.\n     */\n    var ReactCurrentBatchConfig = {\n      transition: null\n    };\n    var ReactCurrentActQueue = {\n      current: null,\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n      isBatchingLegacy: false,\n      didScheduleLegacyUpdate: false\n    };\n\n    /**\n     * Keeps track of the current owner.\n     *\n     * The current owner is the component who should own any components that are\n     * currently being constructed.\n     */\n    var ReactCurrentOwner = {\n      /**\n       * @internal\n       * @type {ReactComponent}\n       */\n      current: null\n    };\n    var ReactDebugCurrentFrame = {};\n    var currentExtraStackFrame = null;\n    function setExtraStackFrame(stack) {\n      {\n        currentExtraStackFrame = stack;\n      }\n    }\n    {\n      ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n        {\n          currentExtraStackFrame = stack;\n        }\n      }; // Stack implementation injected by the current renderer.\n\n      ReactDebugCurrentFrame.getCurrentStack = null;\n      ReactDebugCurrentFrame.getStackAddendum = function () {\n        var stack = ''; // Add an extra top frame while an element is being validated\n\n        if (currentExtraStackFrame) {\n          stack += currentExtraStackFrame;\n        } // Delegate to the injected renderer-specific implementation\n\n        var impl = ReactDebugCurrentFrame.getCurrentStack;\n        if (impl) {\n          stack += impl() || '';\n        }\n        return stack;\n      };\n    }\n\n    // -----------------------------------------------------------------------------\n\n    var enableScopeAPI = false; // Experimental Create Event Handle API.\n    var enableCacheElement = false;\n    var enableTransitionTracing = false; // No known bugs, but needs performance testing\n\n    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n    // stuff. Intended to enable React core members to more easily debug scheduling\n    // issues in DEV builds.\n\n    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\n    var ReactSharedInternals = {\n      ReactCurrentDispatcher: ReactCurrentDispatcher,\n      ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n      ReactCurrentOwner: ReactCurrentOwner\n    };\n    {\n      ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n      ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n    }\n\n    // by calls to these methods by a Babel plugin.\n    //\n    // In PROD (or in packages without access to React internals),\n    // they are left as they are instead.\n\n    function warn(format) {\n      {\n        {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          printWarning('warn', format, args);\n        }\n      }\n    }\n    function error(format) {\n      {\n        {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n          printWarning('error', format, args);\n        }\n      }\n    }\n    function printWarning(level, format, args) {\n      // When changing this logic, you might want to also\n      // update consoleWithStackDev.www.js as well.\n      {\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var stack = ReactDebugCurrentFrame.getStackAddendum();\n        if (stack !== '') {\n          format += '%s';\n          args = args.concat([stack]);\n        } // eslint-disable-next-line react-internal/safe-string-coercion\n\n        var argsWithFormat = args.map(function (item) {\n          return String(item);\n        }); // Careful: RN currently depends on this prefix\n\n        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n        // breaks IE9: https://github.com/facebook/react/issues/13610\n        // eslint-disable-next-line react-internal/no-production-logging\n\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\n      }\n    }\n    var didWarnStateUpdateForUnmountedComponent = {};\n    function warnNoop(publicInstance, callerName) {\n      {\n        var _constructor = publicInstance.constructor;\n        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n        var warningKey = componentName + \".\" + callerName;\n        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n          return;\n        }\n        error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n        didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n      }\n    }\n    /**\n     * This is the abstract API for an update queue.\n     */\n\n    var ReactNoopUpdateQueue = {\n      /**\n       * Checks whether or not this composite component is mounted.\n       * @param {ReactClass} publicInstance The instance we want to test.\n       * @return {boolean} True if mounted, false otherwise.\n       * @protected\n       * @final\n       */\n      isMounted: function (publicInstance) {\n        return false;\n      },\n      /**\n       * Forces an update. This should only be invoked when it is known with\n       * certainty that we are **not** in a DOM transaction.\n       *\n       * You may want to call this when you know that some deeper aspect of the\n       * component's state has changed but `setState` was not called.\n       *\n       * This will not invoke `shouldComponentUpdate`, but it will invoke\n       * `componentWillUpdate` and `componentDidUpdate`.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueForceUpdate: function (publicInstance, callback, callerName) {\n        warnNoop(publicInstance, 'forceUpdate');\n      },\n      /**\n       * Replaces all of the state. Always use this or `setState` to mutate state.\n       * You should treat `this.state` as immutable.\n       *\n       * There is no guarantee that `this.state` will be immediately updated, so\n       * accessing `this.state` after calling this method may return the old value.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} completeState Next state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n        warnNoop(publicInstance, 'replaceState');\n      },\n      /**\n       * Sets a subset of the state. This only exists because _pendingState is\n       * internal. This provides a merging strategy that is not available to deep\n       * properties which is confusing. TODO: Expose pendingState or don't use it\n       * during the merge.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} partialState Next partial state to be merged with state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} Name of the calling function in the public API.\n       * @internal\n       */\n      enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n        warnNoop(publicInstance, 'setState');\n      }\n    };\n    var assign = Object.assign;\n    var emptyObject = {};\n    {\n      Object.freeze(emptyObject);\n    }\n    /**\n     * Base class helpers for the updating state of a component.\n     */\n\n    function Component(props, context, updater) {\n      this.props = props;\n      this.context = context; // If a component has string refs, we will assign a different object later.\n\n      this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n      // renderer.\n\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    Component.prototype.isReactComponent = {};\n    /**\n     * Sets a subset of the state. Always use this to mutate\n     * state. You should treat `this.state` as immutable.\n     *\n     * There is no guarantee that `this.state` will be immediately updated, so\n     * accessing `this.state` after calling this method may return the old value.\n     *\n     * There is no guarantee that calls to `setState` will run synchronously,\n     * as they may eventually be batched together.  You can provide an optional\n     * callback that will be executed when the call to setState is actually\n     * completed.\n     *\n     * When a function is provided to setState, it will be called at some point in\n     * the future (not synchronously). It will be called with the up to date\n     * component arguments (state, props, context). These values can be different\n     * from this.* because your function may be called after receiveProps but before\n     * shouldComponentUpdate, and this new state, props, and context will not yet be\n     * assigned to this.\n     *\n     * @param {object|function} partialState Next partial state or function to\n     *        produce next partial state to be merged with current state.\n     * @param {?function} callback Called after state is updated.\n     * @final\n     * @protected\n     */\n\n    Component.prototype.setState = function (partialState, callback) {\n      if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n        throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n      }\n      this.updater.enqueueSetState(this, partialState, callback, 'setState');\n    };\n    /**\n     * Forces an update. This should only be invoked when it is known with\n     * certainty that we are **not** in a DOM transaction.\n     *\n     * You may want to call this when you know that some deeper aspect of the\n     * component's state has changed but `setState` was not called.\n     *\n     * This will not invoke `shouldComponentUpdate`, but it will invoke\n     * `componentWillUpdate` and `componentDidUpdate`.\n     *\n     * @param {?function} callback Called after update is complete.\n     * @final\n     * @protected\n     */\n\n    Component.prototype.forceUpdate = function (callback) {\n      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n    };\n    /**\n     * Deprecated APIs. These APIs used to exist on classic React classes but since\n     * we would like to deprecate them, we're not going to move them over to this\n     * modern base class. Instead, we define a getter that warns if it's accessed.\n     */\n\n    {\n      var deprecatedAPIs = {\n        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n      };\n      var defineDeprecationWarning = function (methodName, info) {\n        Object.defineProperty(Component.prototype, methodName, {\n          get: function () {\n            warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n            return undefined;\n          }\n        });\n      };\n      for (var fnName in deprecatedAPIs) {\n        if (deprecatedAPIs.hasOwnProperty(fnName)) {\n          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n        }\n      }\n    }\n    function ComponentDummy() {}\n    ComponentDummy.prototype = Component.prototype;\n    /**\n     * Convenience component with default shallow equality check for sCU.\n     */\n\n    function PureComponent(props, context, updater) {\n      this.props = props;\n      this.context = context; // If a component has string refs, we will assign a different object later.\n\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\n    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n    assign(pureComponentPrototype, Component.prototype);\n    pureComponentPrototype.isPureReactComponent = true;\n\n    // an immutable object with a single mutable value\n    function createRef() {\n      var refObject = {\n        current: null\n      };\n      {\n        Object.seal(refObject);\n      }\n      return refObject;\n    }\n    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\n    function isArray(a) {\n      return isArrayImpl(a);\n    }\n\n    /*\n     * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n     * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n     *\n     * The functions in this module will throw an easier-to-understand,\n     * easier-to-debug exception with a clear errors message message explaining the\n     * problem. (Instead of a confusing exception thrown inside the implementation\n     * of the `value` object).\n     */\n    // $FlowFixMe only called in DEV, so void return is not possible.\n    function typeName(value) {\n      {\n        // toStringTag is needed for namespaced types like Temporal.Instant\n        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n        return type;\n      }\n    } // $FlowFixMe only called in DEV, so void return is not possible.\n\n    function willCoercionThrow(value) {\n      {\n        try {\n          testStringCoercion(value);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      }\n    }\n    function testStringCoercion(value) {\n      // If you ended up here by following an exception call stack, here's what's\n      // happened: you supplied an object or symbol value to React (as a prop, key,\n      // DOM attribute, CSS property, string ref, etc.) and when React tried to\n      // coerce it to a string using `'' + value`, an exception was thrown.\n      //\n      // The most common types that will cause this exception are `Symbol` instances\n      // and Temporal objects like `Temporal.Instant`. But any object that has a\n      // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n      // exception. (Library authors do this to prevent users from using built-in\n      // numeric operators like `+` or comparison operators like `>=` because custom\n      // methods are needed to perform accurate arithmetic or comparison.)\n      //\n      // To fix the problem, coerce this object or symbol value to a string before\n      // passing it to React. The most reliable way is usually `String(value)`.\n      //\n      // To find which value is throwing, check the browser or debugger console.\n      // Before this exception was thrown, there should be `console.error` output\n      // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n      // problem and how that type was used: key, atrribute, input value prop, etc.\n      // In most cases, this console output also shows the component and its\n      // ancestor components where the exception happened.\n      //\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      return '' + value;\n    }\n    function checkKeyStringCoercion(value) {\n      {\n        if (willCoercionThrow(value)) {\n          error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n          return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n        }\n      }\n    }\n\n    function getWrappedName(outerType, innerType, wrapperName) {\n      var displayName = outerType.displayName;\n      if (displayName) {\n        return displayName;\n      }\n      var functionName = innerType.displayName || innerType.name || '';\n      return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n    } // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n    function getContextName(type) {\n      return type.displayName || 'Context';\n    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n    function getComponentNameFromType(type) {\n      if (type == null) {\n        // Host root, text node or just invalid type.\n        return null;\n      }\n      {\n        if (typeof type.tag === 'number') {\n          error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n        }\n      }\n      if (typeof type === 'function') {\n        return type.displayName || type.name || null;\n      }\n      if (typeof type === 'string') {\n        return type;\n      }\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return 'Fragment';\n        case REACT_PORTAL_TYPE:\n          return 'Portal';\n        case REACT_PROFILER_TYPE:\n          return 'Profiler';\n        case REACT_STRICT_MODE_TYPE:\n          return 'StrictMode';\n        case REACT_SUSPENSE_TYPE:\n          return 'Suspense';\n        case REACT_SUSPENSE_LIST_TYPE:\n          return 'SuspenseList';\n      }\n      if (typeof type === 'object') {\n        switch (type.$$typeof) {\n          case REACT_CONTEXT_TYPE:\n            var context = type;\n            return getContextName(context) + '.Consumer';\n          case REACT_PROVIDER_TYPE:\n            var provider = type;\n            return getContextName(provider._context) + '.Provider';\n          case REACT_FORWARD_REF_TYPE:\n            return getWrappedName(type, type.render, 'ForwardRef');\n          case REACT_MEMO_TYPE:\n            var outerName = type.displayName || null;\n            if (outerName !== null) {\n              return outerName;\n            }\n            return getComponentNameFromType(type.type) || 'Memo';\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return getComponentNameFromType(init(payload));\n              } catch (x) {\n                return null;\n              }\n            }\n\n          // eslint-disable-next-line no-fallthrough\n        }\n      }\n\n      return null;\n    }\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var RESERVED_PROPS = {\n      key: true,\n      ref: true,\n      __self: true,\n      __source: true\n    };\n    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n    {\n      didWarnAboutStringRefs = {};\n    }\n    function hasValidRef(config) {\n      {\n        if (hasOwnProperty.call(config, 'ref')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.ref !== undefined;\n    }\n    function hasValidKey(config) {\n      {\n        if (hasOwnProperty.call(config, 'key')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.key !== undefined;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      var warnAboutAccessingKey = function () {\n        {\n          if (!specialPropKeyWarningShown) {\n            specialPropKeyWarningShown = true;\n            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n          }\n        }\n      };\n      warnAboutAccessingKey.isReactWarning = true;\n      Object.defineProperty(props, 'key', {\n        get: warnAboutAccessingKey,\n        configurable: true\n      });\n    }\n    function defineRefPropWarningGetter(props, displayName) {\n      var warnAboutAccessingRef = function () {\n        {\n          if (!specialPropRefWarningShown) {\n            specialPropRefWarningShown = true;\n            error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n          }\n        }\n      };\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n    function warnIfStringRefCannotBeAutoConverted(config) {\n      {\n        if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n          var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n          if (!didWarnAboutStringRefs[componentName]) {\n            error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n            didWarnAboutStringRefs[componentName] = true;\n          }\n        }\n      }\n    }\n    /**\n     * Factory method to create a new React element. This no longer adheres to\n     * the class pattern, so do not use new to call it. Also, instanceof check\n     * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n     * if something is a React Element.\n     *\n     * @param {*} type\n     * @param {*} props\n     * @param {*} key\n     * @param {string|object} ref\n     * @param {*} owner\n     * @param {*} self A *temporary* helper to detect places where `this` is\n     * different from the `owner` when React.createElement is called, so that we\n     * can warn. We want to get rid of owner and replace string `ref`s with arrow\n     * functions, and as long as `this` and owner are the same, there will be no\n     * change in behavior.\n     * @param {*} source An annotation object (added by a transpiler or otherwise)\n     * indicating filename, line number, and/or other information.\n     * @internal\n     */\n\n    var ReactElement = function (type, key, ref, self, source, owner, props) {\n      var element = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: REACT_ELEMENT_TYPE,\n        // Built-in properties that belong on the element\n        type: type,\n        key: key,\n        ref: ref,\n        props: props,\n        // Record the component responsible for creating this element.\n        _owner: owner\n      };\n      {\n        // The validation flag is currently mutative. We put it on\n        // an external backing store so that we can freeze the whole object.\n        // This can be replaced with a WeakMap once they are implemented in\n        // commonly used development environments.\n        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n        // the validation flag non-enumerable (where possible, which should\n        // include every environment we run tests in), so the test framework\n        // ignores it.\n\n        Object.defineProperty(element._store, 'validated', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: false\n        }); // self and source are DEV only properties.\n\n        Object.defineProperty(element, '_self', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: self\n        }); // Two elements created in two different places should be considered\n        // equal for testing purposes and therefore we hide it from enumeration.\n\n        Object.defineProperty(element, '_source', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: source\n        });\n        if (Object.freeze) {\n          Object.freeze(element.props);\n          Object.freeze(element);\n        }\n      }\n      return element;\n    };\n    /**\n     * Create and return a new ReactElement of the given type.\n     * See https://reactjs.org/docs/react-api.html#createelement\n     */\n\n    function createElement(type, config, children) {\n      var propName; // Reserved names are extracted\n\n      var props = {};\n      var key = null;\n      var ref = null;\n      var self = null;\n      var source = null;\n      if (config != null) {\n        if (hasValidRef(config)) {\n          ref = config.ref;\n          {\n            warnIfStringRefCannotBeAutoConverted(config);\n          }\n        }\n        if (hasValidKey(config)) {\n          {\n            checkKeyStringCoercion(config.key);\n          }\n          key = '' + config.key;\n        }\n        self = config.__self === undefined ? null : config.__self;\n        source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n            props[propName] = config[propName];\n          }\n        }\n      } // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n\n      var childrenLength = arguments.length - 2;\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n        {\n          if (Object.freeze) {\n            Object.freeze(childArray);\n          }\n        }\n        props.children = childArray;\n      } // Resolve default props\n\n      if (type && type.defaultProps) {\n        var defaultProps = type.defaultProps;\n        for (propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      }\n      {\n        if (key || ref) {\n          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n          if (key) {\n            defineKeyPropWarningGetter(props, displayName);\n          }\n          if (ref) {\n            defineRefPropWarningGetter(props, displayName);\n          }\n        }\n      }\n      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n    }\n    function cloneAndReplaceKey(oldElement, newKey) {\n      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n      return newElement;\n    }\n    /**\n     * Clone and return a new ReactElement using element as the starting point.\n     * See https://reactjs.org/docs/react-api.html#cloneelement\n     */\n\n    function cloneElement(element, config, children) {\n      if (element === null || element === undefined) {\n        throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n      }\n      var propName; // Original props are copied\n\n      var props = assign({}, element.props); // Reserved names are extracted\n\n      var key = element.key;\n      var ref = element.ref; // Self is preserved since the owner is preserved.\n\n      var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n      // transpiler, and the original source is probably a better indicator of the\n      // true owner.\n\n      var source = element._source; // Owner will be preserved, unless ref is overridden\n\n      var owner = element._owner;\n      if (config != null) {\n        if (hasValidRef(config)) {\n          // Silently steal the ref from the parent.\n          ref = config.ref;\n          owner = ReactCurrentOwner.current;\n        }\n        if (hasValidKey(config)) {\n          {\n            checkKeyStringCoercion(config.key);\n          }\n          key = '' + config.key;\n        } // Remaining properties override existing props\n\n        var defaultProps;\n        if (element.type && element.type.defaultProps) {\n          defaultProps = element.type.defaultProps;\n        }\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n            if (config[propName] === undefined && defaultProps !== undefined) {\n              // Resolve default props\n              props[propName] = defaultProps[propName];\n            } else {\n              props[propName] = config[propName];\n            }\n          }\n        }\n      } // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n\n      var childrenLength = arguments.length - 2;\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n        props.children = childArray;\n      }\n      return ReactElement(element.type, key, ref, self, source, owner, props);\n    }\n    /**\n     * Verifies the object is a ReactElement.\n     * See https://reactjs.org/docs/react-api.html#isvalidelement\n     * @param {?object} object\n     * @return {boolean} True if `object` is a ReactElement.\n     * @final\n     */\n\n    function isValidElement(object) {\n      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n    }\n    var SEPARATOR = '.';\n    var SUBSEPARATOR = ':';\n    /**\n     * Escape and wrap key so it is safe to use as a reactid\n     *\n     * @param {string} key to be escaped.\n     * @return {string} the escaped key.\n     */\n\n    function escape(key) {\n      var escapeRegex = /[=:]/g;\n      var escaperLookup = {\n        '=': '=0',\n        ':': '=2'\n      };\n      var escapedString = key.replace(escapeRegex, function (match) {\n        return escaperLookup[match];\n      });\n      return '$' + escapedString;\n    }\n    /**\n     * TODO: Test that a single child and an array with one item have the same key\n     * pattern.\n     */\n\n    var didWarnAboutMaps = false;\n    var userProvidedKeyEscapeRegex = /\\/+/g;\n    function escapeUserProvidedKey(text) {\n      return text.replace(userProvidedKeyEscapeRegex, '$&/');\n    }\n    /**\n     * Generate a key string that identifies a element within a set.\n     *\n     * @param {*} element A element that could contain a manual key.\n     * @param {number} index Index that is used if a manual key is not provided.\n     * @return {string}\n     */\n\n    function getElementKey(element, index) {\n      // Do some typechecking here since we call this blindly. We want to ensure\n      // that we don't block potential future ES APIs.\n      if (typeof element === 'object' && element !== null && element.key != null) {\n        // Explicit key\n        {\n          checkKeyStringCoercion(element.key);\n        }\n        return escape('' + element.key);\n      } // Implicit key determined by the index in the set\n\n      return index.toString(36);\n    }\n    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n      var type = typeof children;\n      if (type === 'undefined' || type === 'boolean') {\n        // All of the above are perceived as null.\n        children = null;\n      }\n      var invokeCallback = false;\n      if (children === null) {\n        invokeCallback = true;\n      } else {\n        switch (type) {\n          case 'string':\n          case 'number':\n            invokeCallback = true;\n            break;\n          case 'object':\n            switch (children.$$typeof) {\n              case REACT_ELEMENT_TYPE:\n              case REACT_PORTAL_TYPE:\n                invokeCallback = true;\n            }\n        }\n      }\n      if (invokeCallback) {\n        var _child = children;\n        var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n        // so that it's consistent if the number of children grows:\n\n        var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n        if (isArray(mappedChild)) {\n          var escapedChildKey = '';\n          if (childKey != null) {\n            escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n          }\n          mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n            return c;\n          });\n        } else if (mappedChild != null) {\n          if (isValidElement(mappedChild)) {\n            {\n              // The `if` statement here prevents auto-disabling of the safe\n              // coercion ESLint rule, so we must manually disable it below.\n              // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n              if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n                checkKeyStringCoercion(mappedChild.key);\n              }\n            }\n            mappedChild = cloneAndReplaceKey(mappedChild,\n            // Keep both the (mapped) and old keys if they differ, just as\n            // traverseAllChildren used to do for objects as children\n            escapedPrefix + (\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n            mappedChild.key && (!_child || _child.key !== mappedChild.key) ?\n            // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n          }\n          array.push(mappedChild);\n        }\n        return 1;\n      }\n      var child;\n      var nextName;\n      var subtreeCount = 0; // Count of children found in the current subtree.\n\n      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n      if (isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          nextName = nextNamePrefix + getElementKey(child, i);\n          subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          var iterableChildren = children;\n          {\n            // Warn about using Maps as children\n            if (iteratorFn === iterableChildren.entries) {\n              if (!didWarnAboutMaps) {\n                warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n              }\n              didWarnAboutMaps = true;\n            }\n          }\n          var iterator = iteratorFn.call(iterableChildren);\n          var step;\n          var ii = 0;\n          while (!(step = iterator.next()).done) {\n            child = step.value;\n            nextName = nextNamePrefix + getElementKey(child, ii++);\n            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n          }\n        } else if (type === 'object') {\n          // eslint-disable-next-line react-internal/safe-string-coercion\n          var childrenString = String(children);\n          throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n        }\n      }\n      return subtreeCount;\n    }\n\n    /**\n     * Maps children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n     *\n     * The provided mapFunction(child, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} func The map function.\n     * @param {*} context Context for mapFunction.\n     * @return {object} Object containing the ordered map of results.\n     */\n    function mapChildren(children, func, context) {\n      if (children == null) {\n        return children;\n      }\n      var result = [];\n      var count = 0;\n      mapIntoArray(children, result, '', '', function (child) {\n        return func.call(context, child, count++);\n      });\n      return result;\n    }\n    /**\n     * Count the number of children that are typically specified as\n     * `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrencount\n     *\n     * @param {?*} children Children tree container.\n     * @return {number} The number of children.\n     */\n\n    function countChildren(children) {\n      var n = 0;\n      mapChildren(children, function () {\n        n++; // Don't return anything\n      });\n\n      return n;\n    }\n\n    /**\n     * Iterates through children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n     *\n     * The provided forEachFunc(child, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} forEachFunc\n     * @param {*} forEachContext Context for forEachContext.\n     */\n    function forEachChildren(children, forEachFunc, forEachContext) {\n      mapChildren(children, function () {\n        forEachFunc.apply(this, arguments); // Don't return anything.\n      }, forEachContext);\n    }\n    /**\n     * Flatten a children object (typically specified as `props.children`) and\n     * return an array with appropriately re-keyed children.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n     */\n\n    function toArray(children) {\n      return mapChildren(children, function (child) {\n        return child;\n      }) || [];\n    }\n    /**\n     * Returns the first child in a collection of children and verifies that there\n     * is only one child in the collection.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n     *\n     * The current implementation of this function assumes that a single child gets\n     * passed without a wrapper, but the purpose of this helper function is to\n     * abstract away the particular structure of children.\n     *\n     * @param {?object} children Child collection structure.\n     * @return {ReactElement} The first and only `ReactElement` contained in the\n     * structure.\n     */\n\n    function onlyChild(children) {\n      if (!isValidElement(children)) {\n        throw new Error('React.Children.only expected to receive a single React element child.');\n      }\n      return children;\n    }\n    function createContext(defaultValue) {\n      // TODO: Second argument used to be an optional `calculateChangedBits`\n      // function. Warn to reserve for future use?\n      var context = {\n        $$typeof: REACT_CONTEXT_TYPE,\n        // As a workaround to support multiple concurrent renderers, we categorize\n        // some renderers as primary and others as secondary. We only expect\n        // there to be two concurrent renderers at most: React Native (primary) and\n        // Fabric (secondary); React DOM (primary) and React ART (secondary).\n        // Secondary renderers store their context values on separate fields.\n        _currentValue: defaultValue,\n        _currentValue2: defaultValue,\n        // Used to track how many concurrent renderers this context currently\n        // supports within in a single renderer. Such as parallel server rendering.\n        _threadCount: 0,\n        // These are circular\n        Provider: null,\n        Consumer: null,\n        // Add these to use same hidden class in VM as ServerContext\n        _defaultValue: null,\n        _globalName: null\n      };\n      context.Provider = {\n        $$typeof: REACT_PROVIDER_TYPE,\n        _context: context\n      };\n      var hasWarnedAboutUsingNestedContextConsumers = false;\n      var hasWarnedAboutUsingConsumerProvider = false;\n      var hasWarnedAboutDisplayNameOnConsumer = false;\n      {\n        // A separate object, but proxies back to the original context object for\n        // backwards compatibility. It has a different $$typeof, so we can properly\n        // warn for the incorrect usage of Context as a Consumer.\n        var Consumer = {\n          $$typeof: REACT_CONTEXT_TYPE,\n          _context: context\n        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n        Object.defineProperties(Consumer, {\n          Provider: {\n            get: function () {\n              if (!hasWarnedAboutUsingConsumerProvider) {\n                hasWarnedAboutUsingConsumerProvider = true;\n                error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n              }\n              return context.Provider;\n            },\n            set: function (_Provider) {\n              context.Provider = _Provider;\n            }\n          },\n          _currentValue: {\n            get: function () {\n              return context._currentValue;\n            },\n            set: function (_currentValue) {\n              context._currentValue = _currentValue;\n            }\n          },\n          _currentValue2: {\n            get: function () {\n              return context._currentValue2;\n            },\n            set: function (_currentValue2) {\n              context._currentValue2 = _currentValue2;\n            }\n          },\n          _threadCount: {\n            get: function () {\n              return context._threadCount;\n            },\n            set: function (_threadCount) {\n              context._threadCount = _threadCount;\n            }\n          },\n          Consumer: {\n            get: function () {\n              if (!hasWarnedAboutUsingNestedContextConsumers) {\n                hasWarnedAboutUsingNestedContextConsumers = true;\n                error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n              }\n              return context.Consumer;\n            }\n          },\n          displayName: {\n            get: function () {\n              return context.displayName;\n            },\n            set: function (displayName) {\n              if (!hasWarnedAboutDisplayNameOnConsumer) {\n                warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n                hasWarnedAboutDisplayNameOnConsumer = true;\n              }\n            }\n          }\n        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n        context.Consumer = Consumer;\n      }\n      {\n        context._currentRenderer = null;\n        context._currentRenderer2 = null;\n      }\n      return context;\n    }\n    var Uninitialized = -1;\n    var Pending = 0;\n    var Resolved = 1;\n    var Rejected = 2;\n    function lazyInitializer(payload) {\n      if (payload._status === Uninitialized) {\n        var ctor = payload._result;\n        var thenable = ctor(); // Transition to the next state.\n        // This might throw either because it's missing or throws. If so, we treat it\n        // as still uninitialized and try again next time. Which is the same as what\n        // happens if the ctor or any wrappers processing the ctor throws. This might\n        // end up fixing it if the resolution was a concurrency bug.\n\n        thenable.then(function (moduleObject) {\n          if (payload._status === Pending || payload._status === Uninitialized) {\n            // Transition to the next state.\n            var resolved = payload;\n            resolved._status = Resolved;\n            resolved._result = moduleObject;\n          }\n        }, function (error) {\n          if (payload._status === Pending || payload._status === Uninitialized) {\n            // Transition to the next state.\n            var rejected = payload;\n            rejected._status = Rejected;\n            rejected._result = error;\n          }\n        });\n        if (payload._status === Uninitialized) {\n          // In case, we're still uninitialized, then we're waiting for the thenable\n          // to resolve. Set it as pending in the meantime.\n          var pending = payload;\n          pending._status = Pending;\n          pending._result = thenable;\n        }\n      }\n      if (payload._status === Resolved) {\n        var moduleObject = payload._result;\n        {\n          if (moduleObject === undefined) {\n            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n          }\n        }\n        {\n          if (!('default' in moduleObject)) {\n            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n          }\n        }\n        return moduleObject.default;\n      } else {\n        throw payload._result;\n      }\n    }\n    function lazy(ctor) {\n      var payload = {\n        // We use these fields to store the result.\n        _status: Uninitialized,\n        _result: ctor\n      };\n      var lazyType = {\n        $$typeof: REACT_LAZY_TYPE,\n        _payload: payload,\n        _init: lazyInitializer\n      };\n      {\n        // In production, this would just set it on the object.\n        var defaultProps;\n        var propTypes; // $FlowFixMe\n\n        Object.defineProperties(lazyType, {\n          defaultProps: {\n            configurable: true,\n            get: function () {\n              return defaultProps;\n            },\n            set: function (newDefaultProps) {\n              error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n              defaultProps = newDefaultProps; // Match production behavior more closely:\n              // $FlowFixMe\n\n              Object.defineProperty(lazyType, 'defaultProps', {\n                enumerable: true\n              });\n            }\n          },\n          propTypes: {\n            configurable: true,\n            get: function () {\n              return propTypes;\n            },\n            set: function (newPropTypes) {\n              error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n              propTypes = newPropTypes; // Match production behavior more closely:\n              // $FlowFixMe\n\n              Object.defineProperty(lazyType, 'propTypes', {\n                enumerable: true\n              });\n            }\n          }\n        });\n      }\n      return lazyType;\n    }\n    function forwardRef(render) {\n      {\n        if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n          error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n        } else if (typeof render !== 'function') {\n          error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n        } else {\n          if (render.length !== 0 && render.length !== 2) {\n            error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n          }\n        }\n        if (render != null) {\n          if (render.defaultProps != null || render.propTypes != null) {\n            error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n          }\n        }\n      }\n      var elementType = {\n        $$typeof: REACT_FORWARD_REF_TYPE,\n        render: render\n      };\n      {\n        var ownName;\n        Object.defineProperty(elementType, 'displayName', {\n          enumerable: false,\n          configurable: true,\n          get: function () {\n            return ownName;\n          },\n          set: function (name) {\n            ownName = name; // The inner component shouldn't inherit this display name in most cases,\n            // because the component may be used elsewhere.\n            // But it's nice for anonymous functions to inherit the name,\n            // so that our component-stack generation logic will display their frames.\n            // An anonymous function generally suggests a pattern like:\n            //   React.forwardRef((props, ref) => {...});\n            // This kind of inner function is not used elsewhere so the side effect is okay.\n\n            if (!render.name && !render.displayName) {\n              render.displayName = name;\n            }\n          }\n        });\n      }\n      return elementType;\n    }\n    var REACT_MODULE_REFERENCE;\n    {\n      REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n    }\n    function isValidElementType(type) {\n      if (typeof type === 'string' || typeof type === 'function') {\n        return true;\n      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n      if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n        return true;\n      }\n      if (typeof type === 'object' && type !== null) {\n        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE ||\n        // This needs to include all possible module reference object\n        // types supported by any Flight configuration anywhere since\n        // we don't know which Flight build this will end up being used\n        // with.\n        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    }\n    function memo(type, compare) {\n      {\n        if (!isValidElementType(type)) {\n          error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n        }\n      }\n      var elementType = {\n        $$typeof: REACT_MEMO_TYPE,\n        type: type,\n        compare: compare === undefined ? null : compare\n      };\n      {\n        var ownName;\n        Object.defineProperty(elementType, 'displayName', {\n          enumerable: false,\n          configurable: true,\n          get: function () {\n            return ownName;\n          },\n          set: function (name) {\n            ownName = name; // The inner component shouldn't inherit this display name in most cases,\n            // because the component may be used elsewhere.\n            // But it's nice for anonymous functions to inherit the name,\n            // so that our component-stack generation logic will display their frames.\n            // An anonymous function generally suggests a pattern like:\n            //   React.memo((props) => {...});\n            // This kind of inner function is not used elsewhere so the side effect is okay.\n\n            if (!type.name && !type.displayName) {\n              type.displayName = name;\n            }\n          }\n        });\n      }\n      return elementType;\n    }\n    function resolveDispatcher() {\n      var dispatcher = ReactCurrentDispatcher.current;\n      {\n        if (dispatcher === null) {\n          error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n        }\n      } // Will result in a null access error if accessed outside render phase. We\n      // intentionally don't throw our own error because this is in a hot path.\n      // Also helps ensure this is inlined.\n\n      return dispatcher;\n    }\n    function useContext(Context) {\n      var dispatcher = resolveDispatcher();\n      {\n        // TODO: add a more generic warning for invalid values.\n        if (Context._context !== undefined) {\n          var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n          // and nobody should be using this in existing code.\n\n          if (realContext.Consumer === Context) {\n            error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n          } else if (realContext.Provider === Context) {\n            error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n          }\n        }\n      }\n      return dispatcher.useContext(Context);\n    }\n    function useState(initialState) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useState(initialState);\n    }\n    function useReducer(reducer, initialArg, init) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useReducer(reducer, initialArg, init);\n    }\n    function useRef(initialValue) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useRef(initialValue);\n    }\n    function useEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useEffect(create, deps);\n    }\n    function useInsertionEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useInsertionEffect(create, deps);\n    }\n    function useLayoutEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useLayoutEffect(create, deps);\n    }\n    function useCallback(callback, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useCallback(callback, deps);\n    }\n    function useMemo(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useMemo(create, deps);\n    }\n    function useImperativeHandle(ref, create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useImperativeHandle(ref, create, deps);\n    }\n    function useDebugValue(value, formatterFn) {\n      {\n        var dispatcher = resolveDispatcher();\n        return dispatcher.useDebugValue(value, formatterFn);\n      }\n    }\n    function useTransition() {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useTransition();\n    }\n    function useDeferredValue(value) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useDeferredValue(value);\n    }\n    function useId() {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useId();\n    }\n    function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    }\n\n    // Helpers to patch console.logs to avoid logging during side-effect free\n    // replaying on render function. This currently only patches the object\n    // lazily which won't cover if the log function was extracted eagerly.\n    // We could also eagerly patch the method.\n    var disabledDepth = 0;\n    var prevLog;\n    var prevInfo;\n    var prevWarn;\n    var prevError;\n    var prevGroup;\n    var prevGroupCollapsed;\n    var prevGroupEnd;\n    function disabledLog() {}\n    disabledLog.__reactDisabledLog = true;\n    function disableLogs() {\n      {\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          prevLog = console.log;\n          prevInfo = console.info;\n          prevWarn = console.warn;\n          prevError = console.error;\n          prevGroup = console.group;\n          prevGroupCollapsed = console.groupCollapsed;\n          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n          var props = {\n            configurable: true,\n            enumerable: true,\n            value: disabledLog,\n            writable: true\n          }; // $FlowFixMe Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            info: props,\n            log: props,\n            warn: props,\n            error: props,\n            group: props,\n            groupCollapsed: props,\n            groupEnd: props\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n\n        disabledDepth++;\n      }\n    }\n    function reenableLogs() {\n      {\n        disabledDepth--;\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          var props = {\n            configurable: true,\n            enumerable: true,\n            writable: true\n          }; // $FlowFixMe Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            log: assign({}, props, {\n              value: prevLog\n            }),\n            info: assign({}, props, {\n              value: prevInfo\n            }),\n            warn: assign({}, props, {\n              value: prevWarn\n            }),\n            error: assign({}, props, {\n              value: prevError\n            }),\n            group: assign({}, props, {\n              value: prevGroup\n            }),\n            groupCollapsed: assign({}, props, {\n              value: prevGroupCollapsed\n            }),\n            groupEnd: assign({}, props, {\n              value: prevGroupEnd\n            })\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n\n        if (disabledDepth < 0) {\n          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n        }\n      }\n    }\n    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\n    var prefix;\n    function describeBuiltInComponentFrame(name, source, ownerFn) {\n      {\n        if (prefix === undefined) {\n          // Extract the VM specific prefix used by each line.\n          try {\n            throw Error();\n          } catch (x) {\n            var match = x.stack.trim().match(/\\n( *(at )?)/);\n            prefix = match && match[1] || '';\n          }\n        } // We use the prefix to ensure our stacks line up with native stack frames.\n\n        return '\\n' + prefix + name;\n      }\n    }\n    var reentry = false;\n    var componentFrameCache;\n    {\n      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n      componentFrameCache = new PossiblyWeakMap();\n    }\n    function describeNativeComponentFrame(fn, construct) {\n      // If something asked for a stack inside a fake render, it should get ignored.\n      if (!fn || reentry) {\n        return '';\n      }\n      {\n        var frame = componentFrameCache.get(fn);\n        if (frame !== undefined) {\n          return frame;\n        }\n      }\n      var control;\n      reentry = true;\n      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n      Error.prepareStackTrace = undefined;\n      var previousDispatcher;\n      {\n        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n        // for warnings.\n\n        ReactCurrentDispatcher$1.current = null;\n        disableLogs();\n      }\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            }\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          }\n          fn();\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          // This extracts the first frame from the sample that isn't also in the control.\n          // Skipping one frame that we assume is the frame that calls the two.\n          var sampleLines = sample.stack.split('\\n');\n          var controlLines = control.stack.split('\\n');\n          var s = sampleLines.length - 1;\n          var c = controlLines.length - 1;\n          while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n            // We expect at least one stack frame to be shared.\n            // Typically this will be the root most one. However, stack frames may be\n            // cut off due to maximum stack limits. In this case, one maybe cut off\n            // earlier than the other. We assume that the sample is longer or the same\n            // and there for cut off earlier. So we should find the root most frame in\n            // the sample somewhere in the control.\n            c--;\n          }\n          for (; s >= 1 && c >= 0; s--, c--) {\n            // Next we find the first one that isn't the same which should be the\n            // frame that called our sample function and the control.\n            if (sampleLines[s] !== controlLines[c]) {\n              // In V8, the first line is describing the message but other VMs don't.\n              // If we're about to return the first line, and the control is also on the same\n              // line, that's a pretty good indicator that our sample threw at same line as\n              // the control. I.e. before we entered the sample frame. So we ignore this result.\n              // This can happen if you passed a class to function component, or non-function.\n              if (s !== 1 || c !== 1) {\n                do {\n                  s--;\n                  c--; // We may still have similar intermediate frames from the construct call.\n                  // The next one that isn't the same should be our match though.\n\n                  if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                    // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                    var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                    // but we have a user-provided \"displayName\"\n                    // splice it in to make the stack more readable.\n\n                    if (fn.displayName && _frame.includes('<anonymous>')) {\n                      _frame = _frame.replace('<anonymous>', fn.displayName);\n                    }\n                    {\n                      if (typeof fn === 'function') {\n                        componentFrameCache.set(fn, _frame);\n                      }\n                    } // Return the line we found.\n\n                    return _frame;\n                  }\n                } while (s >= 1 && c >= 0);\n              }\n              break;\n            }\n          }\n        }\n      } finally {\n        reentry = false;\n        {\n          ReactCurrentDispatcher$1.current = previousDispatcher;\n          reenableLogs();\n        }\n        Error.prepareStackTrace = previousPrepareStackTrace;\n      } // Fallback to just using the name if we couldn't make it throw.\n\n      var name = fn ? fn.displayName || fn.name : '';\n      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n      {\n        if (typeof fn === 'function') {\n          componentFrameCache.set(fn, syntheticFrame);\n        }\n      }\n      return syntheticFrame;\n    }\n    function describeFunctionComponentFrame(fn, source, ownerFn) {\n      {\n        return describeNativeComponentFrame(fn, false);\n      }\n    }\n    function shouldConstruct(Component) {\n      var prototype = Component.prototype;\n      return !!(prototype && prototype.isReactComponent);\n    }\n    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n      if (type == null) {\n        return '';\n      }\n      if (typeof type === 'function') {\n        {\n          return describeNativeComponentFrame(type, shouldConstruct(type));\n        }\n      }\n      if (typeof type === 'string') {\n        return describeBuiltInComponentFrame(type);\n      }\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame('Suspense');\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame('SuspenseList');\n      }\n      if (typeof type === 'object') {\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return describeFunctionComponentFrame(type.render);\n          case REACT_MEMO_TYPE:\n            // Memo may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                // Lazy may contain any component type so we recursively resolve it.\n                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n              } catch (x) {}\n            }\n        }\n      }\n      return '';\n    }\n    var loggedTypeFailures = {};\n    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n    function setCurrentlyValidatingElement(element) {\n      {\n        if (element) {\n          var owner = element._owner;\n          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n        } else {\n          ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n        }\n      }\n    }\n    function checkPropTypes(typeSpecs, values, location, componentName, element) {\n      {\n        // $FlowFixMe This is okay but Flow doesn't know it.\n        var has = Function.call.bind(hasOwnProperty);\n        for (var typeSpecName in typeSpecs) {\n          if (has(typeSpecs, typeSpecName)) {\n            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n            // fail the render phase where it didn't fail before. So we log it.\n            // After these have been cleaned up, we'll let them throw.\n\n            try {\n              // This is intentionally an invariant that gets caught. It's the same\n              // behavior as without this statement except with a better message.\n              if (typeof typeSpecs[typeSpecName] !== 'function') {\n                // eslint-disable-next-line react-internal/prod-error-codes\n                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n                err.name = 'Invariant Violation';\n                throw err;\n              }\n              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n            } catch (ex) {\n              error$1 = ex;\n            }\n            if (error$1 && !(error$1 instanceof Error)) {\n              setCurrentlyValidatingElement(element);\n              error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n              setCurrentlyValidatingElement(null);\n            }\n            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n              // Only monitor this failure once because there tends to be a lot of the\n              // same error.\n              loggedTypeFailures[error$1.message] = true;\n              setCurrentlyValidatingElement(element);\n              error('Failed %s type: %s', location, error$1.message);\n              setCurrentlyValidatingElement(null);\n            }\n          }\n        }\n      }\n    }\n    function setCurrentlyValidatingElement$1(element) {\n      {\n        if (element) {\n          var owner = element._owner;\n          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n          setExtraStackFrame(stack);\n        } else {\n          setExtraStackFrame(null);\n        }\n      }\n    }\n    var propTypesMisspellWarningShown;\n    {\n      propTypesMisspellWarningShown = false;\n    }\n    function getDeclarationErrorAddendum() {\n      if (ReactCurrentOwner.current) {\n        var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n        if (name) {\n          return '\\n\\nCheck the render method of `' + name + '`.';\n        }\n      }\n      return '';\n    }\n    function getSourceInfoErrorAddendum(source) {\n      if (source !== undefined) {\n        var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n        var lineNumber = source.lineNumber;\n        return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n      }\n      return '';\n    }\n    function getSourceInfoErrorAddendumForProps(elementProps) {\n      if (elementProps !== null && elementProps !== undefined) {\n        return getSourceInfoErrorAddendum(elementProps.__source);\n      }\n      return '';\n    }\n    /**\n     * Warn if there's no key explicitly set on dynamic arrays of children or\n     * object keys are not valid. This allows us to keep track of children between\n     * updates.\n     */\n\n    var ownerHasKeyUseWarning = {};\n    function getCurrentComponentErrorInfo(parentType) {\n      var info = getDeclarationErrorAddendum();\n      if (!info) {\n        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n        if (parentName) {\n          info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n        }\n      }\n      return info;\n    }\n    /**\n     * Warn if the element doesn't have an explicit key assigned to it.\n     * This element is in an array. The array could grow and shrink or be\n     * reordered. All children that haven't already been validated are required to\n     * have a \"key\" property assigned to it. Error statuses are cached so a warning\n     * will only be shown once.\n     *\n     * @internal\n     * @param {ReactElement} element Element that requires a key.\n     * @param {*} parentType element's parent's type.\n     */\n\n    function validateExplicitKey(element, parentType) {\n      if (!element._store || element._store.validated || element.key != null) {\n        return;\n      }\n      element._store.validated = true;\n      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n        return;\n      }\n      ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n      // property, it may be the creator of the child that's responsible for\n      // assigning it a key.\n\n      var childOwner = '';\n      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n        // Give the component that originally created this child.\n        childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n      }\n      {\n        setCurrentlyValidatingElement$1(element);\n        error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n        setCurrentlyValidatingElement$1(null);\n      }\n    }\n    /**\n     * Ensure that every element either is passed in a static location, in an\n     * array with an explicit keys property defined, or in an object literal\n     * with valid key property.\n     *\n     * @internal\n     * @param {ReactNode} node Statically passed child of any type.\n     * @param {*} parentType node's parent's type.\n     */\n\n    function validateChildKeys(node, parentType) {\n      if (typeof node !== 'object') {\n        return;\n      }\n      if (isArray(node)) {\n        for (var i = 0; i < node.length; i++) {\n          var child = node[i];\n          if (isValidElement(child)) {\n            validateExplicitKey(child, parentType);\n          }\n        }\n      } else if (isValidElement(node)) {\n        // This element was passed in a valid location.\n        if (node._store) {\n          node._store.validated = true;\n        }\n      } else if (node) {\n        var iteratorFn = getIteratorFn(node);\n        if (typeof iteratorFn === 'function') {\n          // Entry iterators used to provide implicit keys,\n          // but now we print a separate warning for them later.\n          if (iteratorFn !== node.entries) {\n            var iterator = iteratorFn.call(node);\n            var step;\n            while (!(step = iterator.next()).done) {\n              if (isValidElement(step.value)) {\n                validateExplicitKey(step.value, parentType);\n              }\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Given an element, validate that its props follow the propTypes definition,\n     * provided by the type.\n     *\n     * @param {ReactElement} element\n     */\n\n    function validatePropTypes(element) {\n      {\n        var type = element.type;\n        if (type === null || type === undefined || typeof type === 'string') {\n          return;\n        }\n        var propTypes;\n        if (typeof type === 'function') {\n          propTypes = type.propTypes;\n        } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE ||\n        // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        type.$$typeof === REACT_MEMO_TYPE)) {\n          propTypes = type.propTypes;\n        } else {\n          return;\n        }\n        if (propTypes) {\n          // Intentionally inside to avoid triggering lazy initializers:\n          var name = getComponentNameFromType(type);\n          checkPropTypes(propTypes, element.props, 'prop', name, element);\n        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n          propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n          var _name = getComponentNameFromType(type);\n          error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n        }\n        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n          error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n        }\n      }\n    }\n    /**\n     * Given a fragment, validate that it can only be provided with fragment props\n     * @param {ReactElement} fragment\n     */\n\n    function validateFragmentProps(fragment) {\n      {\n        var keys = Object.keys(fragment.props);\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          if (key !== 'children' && key !== 'key') {\n            setCurrentlyValidatingElement$1(fragment);\n            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n            setCurrentlyValidatingElement$1(null);\n            break;\n          }\n        }\n        if (fragment.ref !== null) {\n          setCurrentlyValidatingElement$1(fragment);\n          error('Invalid attribute `ref` supplied to `React.Fragment`.');\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n    function createElementWithValidation(type, props, children) {\n      var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n\n      if (!validType) {\n        var info = '';\n        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n          info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n        }\n        var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n        if (sourceInfo) {\n          info += sourceInfo;\n        } else {\n          info += getDeclarationErrorAddendum();\n        }\n        var typeString;\n        if (type === null) {\n          typeString = 'null';\n        } else if (isArray(type)) {\n          typeString = 'array';\n        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n          typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n          info = ' Did you accidentally export a JSX literal instead of a component?';\n        } else {\n          typeString = typeof type;\n        }\n        {\n          error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n        }\n      }\n      var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n      // TODO: Drop this when these are no longer allowed as the type argument.\n\n      if (element == null) {\n        return element;\n      } // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing errors.\n      // We don't want exception behavior to differ between dev and prod.\n      // (Rendering will throw with a helpful message and as soon as the type is\n      // fixed, the key warnings will appear.)\n\n      if (validType) {\n        for (var i = 2; i < arguments.length; i++) {\n          validateChildKeys(arguments[i], type);\n        }\n      }\n      if (type === REACT_FRAGMENT_TYPE) {\n        validateFragmentProps(element);\n      } else {\n        validatePropTypes(element);\n      }\n      return element;\n    }\n    var didWarnAboutDeprecatedCreateFactory = false;\n    function createFactoryWithValidation(type) {\n      var validatedFactory = createElementWithValidation.bind(null, type);\n      validatedFactory.type = type;\n      {\n        if (!didWarnAboutDeprecatedCreateFactory) {\n          didWarnAboutDeprecatedCreateFactory = true;\n          warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n        } // Legacy hook: remove it\n\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function () {\n            warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      }\n      return validatedFactory;\n    }\n    function cloneElementWithValidation(element, props, children) {\n      var newElement = cloneElement.apply(this, arguments);\n      for (var i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], newElement.type);\n      }\n      validatePropTypes(newElement);\n      return newElement;\n    }\n    function startTransition(scope, options) {\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = {};\n      var currentTransition = ReactCurrentBatchConfig.transition;\n      {\n        ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n      }\n      try {\n        scope();\n      } finally {\n        ReactCurrentBatchConfig.transition = prevTransition;\n        {\n          if (prevTransition === null && currentTransition._updatedFibers) {\n            var updatedFibersCount = currentTransition._updatedFibers.size;\n            if (updatedFibersCount > 10) {\n              warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n            }\n            currentTransition._updatedFibers.clear();\n          }\n        }\n      }\n    }\n    var didWarnAboutMessageChannel = false;\n    var enqueueTaskImpl = null;\n    function enqueueTask(task) {\n      if (enqueueTaskImpl === null) {\n        try {\n          // read require off the module object to get around the bundlers.\n          // we don't want them to detect a require and bundle a Node polyfill.\n          var requireString = ('require' + Math.random()).slice(0, 7);\n          var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n          // version of setImmediate, bypassing fake timers if any.\n\n          enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n        } catch (_err) {\n          // we're in a browser\n          // we can't use regular timers because they may still be faked\n          // so we try MessageChannel+postMessage instead\n          enqueueTaskImpl = function (callback) {\n            {\n              if (didWarnAboutMessageChannel === false) {\n                didWarnAboutMessageChannel = true;\n                if (typeof MessageChannel === 'undefined') {\n                  error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n                }\n              }\n            }\n            var channel = new MessageChannel();\n            channel.port1.onmessage = callback;\n            channel.port2.postMessage(undefined);\n          };\n        }\n      }\n      return enqueueTaskImpl(task);\n    }\n    var actScopeDepth = 0;\n    var didWarnNoAwaitAct = false;\n    function act(callback) {\n      {\n        // `act` calls can be nested, so we track the depth. This represents the\n        // number of `act` scopes on the stack.\n        var prevActScopeDepth = actScopeDepth;\n        actScopeDepth++;\n        if (ReactCurrentActQueue.current === null) {\n          // This is the outermost `act` scope. Initialize the queue. The reconciler\n          // will detect the queue and use it instead of Scheduler.\n          ReactCurrentActQueue.current = [];\n        }\n        var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n        var result;\n        try {\n          // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n          // set to `true` while the given callback is executed, not for updates\n          // triggered during an async event, because this is how the legacy\n          // implementation of `act` behaved.\n          ReactCurrentActQueue.isBatchingLegacy = true;\n          result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n          // which flushed updates immediately after the scope function exits, even\n          // if it's an async function.\n\n          if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n            var queue = ReactCurrentActQueue.current;\n            if (queue !== null) {\n              ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n              flushActQueue(queue);\n            }\n          }\n        } catch (error) {\n          popActScope(prevActScopeDepth);\n          throw error;\n        } finally {\n          ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n        }\n        if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n          var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n          // for it to resolve before exiting the current scope.\n\n          var wasAwaited = false;\n          var thenable = {\n            then: function (resolve, reject) {\n              wasAwaited = true;\n              thenableResult.then(function (returnValue) {\n                popActScope(prevActScopeDepth);\n                if (actScopeDepth === 0) {\n                  // We've exited the outermost act scope. Recursively flush the\n                  // queue until there's no remaining work.\n                  recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                } else {\n                  resolve(returnValue);\n                }\n              }, function (error) {\n                // The callback threw an error.\n                popActScope(prevActScopeDepth);\n                reject(error);\n              });\n            }\n          };\n          {\n            if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n              // eslint-disable-next-line no-undef\n              Promise.resolve().then(function () {}).then(function () {\n                if (!wasAwaited) {\n                  didWarnNoAwaitAct = true;\n                  error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n                }\n              });\n            }\n          }\n          return thenable;\n        } else {\n          var returnValue = result; // The callback is not an async function. Exit the current scope\n          // immediately, without awaiting.\n\n          popActScope(prevActScopeDepth);\n          if (actScopeDepth === 0) {\n            // Exiting the outermost act scope. Flush the queue.\n            var _queue = ReactCurrentActQueue.current;\n            if (_queue !== null) {\n              flushActQueue(_queue);\n              ReactCurrentActQueue.current = null;\n            } // Return a thenable. If the user awaits it, we'll flush again in\n            // case additional work was scheduled by a microtask.\n\n            var _thenable = {\n              then: function (resolve, reject) {\n                // Confirm we haven't re-entered another `act` scope, in case\n                // the user does something weird like await the thenable\n                // multiple times.\n                if (ReactCurrentActQueue.current === null) {\n                  // Recursively flush the queue until there's no remaining work.\n                  ReactCurrentActQueue.current = [];\n                  recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                } else {\n                  resolve(returnValue);\n                }\n              }\n            };\n            return _thenable;\n          } else {\n            // Since we're inside a nested `act` scope, the returned thenable\n            // immediately resolves. The outer scope will flush the queue.\n            var _thenable2 = {\n              then: function (resolve, reject) {\n                resolve(returnValue);\n              }\n            };\n            return _thenable2;\n          }\n        }\n      }\n    }\n    function popActScope(prevActScopeDepth) {\n      {\n        if (prevActScopeDepth !== actScopeDepth - 1) {\n          error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n        }\n        actScopeDepth = prevActScopeDepth;\n      }\n    }\n    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n      {\n        var queue = ReactCurrentActQueue.current;\n        if (queue !== null) {\n          try {\n            flushActQueue(queue);\n            enqueueTask(function () {\n              if (queue.length === 0) {\n                // No additional work was scheduled. Finish.\n                ReactCurrentActQueue.current = null;\n                resolve(returnValue);\n              } else {\n                // Keep flushing work until there's none left.\n                recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n              }\n            });\n          } catch (error) {\n            reject(error);\n          }\n        } else {\n          resolve(returnValue);\n        }\n      }\n    }\n    var isFlushing = false;\n    function flushActQueue(queue) {\n      {\n        if (!isFlushing) {\n          // Prevent re-entrance.\n          isFlushing = true;\n          var i = 0;\n          try {\n            for (; i < queue.length; i++) {\n              var callback = queue[i];\n              do {\n                callback = callback(true);\n              } while (callback !== null);\n            }\n            queue.length = 0;\n          } catch (error) {\n            // If something throws, leave the remaining callbacks on the queue.\n            queue = queue.slice(i + 1);\n            throw error;\n          } finally {\n            isFlushing = false;\n          }\n        }\n      }\n    }\n    var createElement$1 = createElementWithValidation;\n    var cloneElement$1 = cloneElementWithValidation;\n    var createFactory = createFactoryWithValidation;\n    var Children = {\n      map: mapChildren,\n      forEach: forEachChildren,\n      count: countChildren,\n      toArray: toArray,\n      only: onlyChild\n    };\n    exports.Children = Children;\n    exports.Component = Component;\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.Profiler = REACT_PROFILER_TYPE;\n    exports.PureComponent = PureComponent;\n    exports.StrictMode = REACT_STRICT_MODE_TYPE;\n    exports.Suspense = REACT_SUSPENSE_TYPE;\n    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\n    exports.cloneElement = cloneElement$1;\n    exports.createContext = createContext;\n    exports.createElement = createElement$1;\n    exports.createFactory = createFactory;\n    exports.createRef = createRef;\n    exports.forwardRef = forwardRef;\n    exports.isValidElement = isValidElement;\n    exports.lazy = lazy;\n    exports.memo = memo;\n    exports.startTransition = startTransition;\n    exports.unstable_act = act;\n    exports.useCallback = useCallback;\n    exports.useContext = useContext;\n    exports.useDebugValue = useDebugValue;\n    exports.useDeferredValue = useDeferredValue;\n    exports.useEffect = useEffect;\n    exports.useId = useId;\n    exports.useImperativeHandle = useImperativeHandle;\n    exports.useInsertionEffect = useInsertionEffect;\n    exports.useLayoutEffect = useLayoutEffect;\n    exports.useMemo = useMemo;\n    exports.useReducer = useReducer;\n    exports.useRef = useRef;\n    exports.useState = useState;\n    exports.useSyncExternalStore = useSyncExternalStore;\n    exports.useTransition = useTransition;\n    exports.version = ReactVersion;\n    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n    }\n  })();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/react/cjs/react.development.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"(middleware)/./node_modules/react/cjs/react.development.js\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksT0FBdUMsRUFFMUMsTUFBTTtFQUNMQSxvSUFBc0Q7QUFDeEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzPzFmYjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/react/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/snake-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/snake-case/dist.es2015/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   snakeCase: () => (/* binding */ snakeCase)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var dot_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dot-case */ \"(middleware)/./node_modules/dot-case/dist.es2015/index.js\");\n\n\nfunction snakeCase(input, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return (0,dot_case__WEBPACK_IMPORTED_MODULE_0__.dotCase)(input, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({\n    delimiter: \"_\"\n  }, options));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL3NuYWtlLWNhc2UvZGlzdC5lczIwMTUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBQ0U7QUFDNUIsU0FBU0UsU0FBU0EsQ0FBQ0MsS0FBSyxFQUFFQyxPQUFPLEVBQUU7RUFDdEMsSUFBSUEsT0FBTyxLQUFLLEtBQUssQ0FBQyxFQUFFO0lBQUVBLE9BQU8sR0FBRyxDQUFDLENBQUM7RUFBRTtFQUN4QyxPQUFPSCxpREFBTyxDQUFDRSxLQUFLLEVBQUVILCtDQUFRLENBQUM7SUFBRUssU0FBUyxFQUFFO0VBQUksQ0FBQyxFQUFFRCxPQUFPLENBQUMsQ0FBQztBQUNoRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc25ha2UtY2FzZS9kaXN0LmVzMjAxNS9pbmRleC5qcz8yNjc5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXNzaWduIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBkb3RDYXNlIH0gZnJvbSBcImRvdC1jYXNlXCI7XG5leHBvcnQgZnVuY3Rpb24gc25ha2VDYXNlKGlucHV0LCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICByZXR1cm4gZG90Q2FzZShpbnB1dCwgX19hc3NpZ24oeyBkZWxpbWl0ZXI6IFwiX1wiIH0sIG9wdGlvbnMpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsImRvdENhc2UiLCJzbmFrZUNhc2UiLCJpbnB1dCIsIm9wdGlvbnMiLCJkZWxpbWl0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/snake-case/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/snakecase-keys/index.js":
/*!**********************************************!*\
  !*** ./node_modules/snakecase-keys/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst map = __webpack_require__(/*! map-obj */ \"(middleware)/./node_modules/map-obj/index.js\");\nconst {\n  snakeCase\n} = __webpack_require__(/*! snake-case */ \"(middleware)/./node_modules/snake-case/dist.es2015/index.js\");\nmodule.exports = function (obj, options) {\n  options = Object.assign({\n    deep: true,\n    exclude: [],\n    parsingOptions: {}\n  }, options);\n  return map(obj, function (key, val) {\n    return [matches(options.exclude, key) ? key : snakeCase(key, options.parsingOptions), val];\n  }, options);\n};\nfunction matches(patterns, value) {\n  return patterns.some(function (pattern) {\n    return typeof pattern === 'string' ? pattern === value : pattern.test(value);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL3NuYWtlY2FzZS1rZXlzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaLE1BQU1BLEdBQUcsR0FBR0MsbUJBQU8sQ0FBQyw2REFBUyxDQUFDO0FBQzlCLE1BQU07RUFBRUM7QUFBVSxDQUFDLEdBQUdELG1CQUFPLENBQUMsK0VBQVksQ0FBQztBQUUzQ0UsTUFBTSxDQUFDQyxPQUFPLEdBQUcsVUFBVUMsR0FBRyxFQUFFQyxPQUFPLEVBQUU7RUFDdkNBLE9BQU8sR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUM7SUFBRUMsSUFBSSxFQUFFLElBQUk7SUFBRUMsT0FBTyxFQUFFLEVBQUU7SUFBRUMsY0FBYyxFQUFFLENBQUM7RUFBRSxDQUFDLEVBQUVMLE9BQU8sQ0FBQztFQUVqRixPQUFPTixHQUFHLENBQUNLLEdBQUcsRUFBRSxVQUFVTyxHQUFHLEVBQUVDLEdBQUcsRUFBRTtJQUNsQyxPQUFPLENBQ0xDLE9BQU8sQ0FBQ1IsT0FBTyxDQUFDSSxPQUFPLEVBQUVFLEdBQUcsQ0FBQyxHQUFHQSxHQUFHLEdBQUdWLFNBQVMsQ0FBQ1UsR0FBRyxFQUFFTixPQUFPLENBQUNLLGNBQWMsQ0FBQyxFQUM1RUUsR0FBRyxDQUNKO0VBQ0gsQ0FBQyxFQUFFUCxPQUFPLENBQUM7QUFDYixDQUFDO0FBRUQsU0FBU1EsT0FBT0EsQ0FBRUMsUUFBUSxFQUFFQyxLQUFLLEVBQUU7RUFDakMsT0FBT0QsUUFBUSxDQUFDRSxJQUFJLENBQUMsVUFBVUMsT0FBTyxFQUFFO0lBQ3RDLE9BQU8sT0FBT0EsT0FBTyxLQUFLLFFBQVEsR0FDOUJBLE9BQU8sS0FBS0YsS0FBSyxHQUNqQkUsT0FBTyxDQUFDQyxJQUFJLENBQUNILEtBQUssQ0FBQztFQUN6QixDQUFDLENBQUM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc25ha2VjYXNlLWtleXMvaW5kZXguanM/MGVmMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgbWFwID0gcmVxdWlyZSgnbWFwLW9iaicpXG5jb25zdCB7IHNuYWtlQ2FzZSB9ID0gcmVxdWlyZSgnc25ha2UtY2FzZScpXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iaiwgb3B0aW9ucykge1xuICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7IGRlZXA6IHRydWUsIGV4Y2x1ZGU6IFtdLCBwYXJzaW5nT3B0aW9uczoge30gfSwgb3B0aW9ucylcblxuICByZXR1cm4gbWFwKG9iaiwgZnVuY3Rpb24gKGtleSwgdmFsKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIG1hdGNoZXMob3B0aW9ucy5leGNsdWRlLCBrZXkpID8ga2V5IDogc25ha2VDYXNlKGtleSwgb3B0aW9ucy5wYXJzaW5nT3B0aW9ucyksXG4gICAgICB2YWxcbiAgICBdXG4gIH0sIG9wdGlvbnMpXG59XG5cbmZ1bmN0aW9uIG1hdGNoZXMgKHBhdHRlcm5zLCB2YWx1ZSkge1xuICByZXR1cm4gcGF0dGVybnMuc29tZShmdW5jdGlvbiAocGF0dGVybikge1xuICAgIHJldHVybiB0eXBlb2YgcGF0dGVybiA9PT0gJ3N0cmluZydcbiAgICAgID8gcGF0dGVybiA9PT0gdmFsdWVcbiAgICAgIDogcGF0dGVybi50ZXN0KHZhbHVlKVxuICB9KVxufVxuIl0sIm5hbWVzIjpbIm1hcCIsInJlcXVpcmUiLCJzbmFrZUNhc2UiLCJtb2R1bGUiLCJleHBvcnRzIiwib2JqIiwib3B0aW9ucyIsIk9iamVjdCIsImFzc2lnbiIsImRlZXAiLCJleGNsdWRlIiwicGFyc2luZ09wdGlvbnMiLCJrZXkiLCJ2YWwiLCJtYXRjaGVzIiwicGF0dGVybnMiLCJ2YWx1ZSIsInNvbWUiLCJwYXR0ZXJuIiwidGVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/snakecase-keys/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/chunk-3ARITHGE.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/chunk-3ARITHGE.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignJWTError: () => (/* binding */ SignJWTError),\n/* harmony export */   TokenVerificationError: () => (/* binding */ TokenVerificationError),\n/* harmony export */   TokenVerificationErrorAction: () => (/* binding */ TokenVerificationErrorAction),\n/* harmony export */   TokenVerificationErrorCode: () => (/* binding */ TokenVerificationErrorCode),\n/* harmony export */   TokenVerificationErrorReason: () => (/* binding */ TokenVerificationErrorReason)\n/* harmony export */ });\n// src/errors.ts\nvar TokenVerificationErrorCode = {\n  InvalidSecretKey: \"clerk_key_invalid\"\n};\nvar TokenVerificationErrorReason = {\n  TokenExpired: \"token-expired\",\n  TokenInvalid: \"token-invalid\",\n  TokenInvalidAlgorithm: \"token-invalid-algorithm\",\n  TokenInvalidAuthorizedParties: \"token-invalid-authorized-parties\",\n  TokenInvalidSignature: \"token-invalid-signature\",\n  TokenNotActiveYet: \"token-not-active-yet\",\n  TokenVerificationFailed: \"token-verification-failed\",\n  InvalidSecretKey: \"secret-key-invalid\",\n  LocalJWKMissing: \"jwk-local-missing\",\n  RemoteJWKFailedToLoad: \"jwk-remote-failed-to-load\",\n  RemoteJWKInvalid: \"jwk-remote-invalid\",\n  RemoteJWKMissing: \"jwk-remote-missing\",\n  JWKFailedToResolve: \"jwk-failed-to-resolve\"\n};\nvar TokenVerificationErrorAction = {\n  ContactSupport: \"Contact support@clerk.com\",\n  EnsureClerkJWT: \"Make sure that this is a valid Clerk generate JWT.\",\n  SetClerkJWTKey: \"Set the CLERK_JWT_KEY environment variable.\",\n  SetClerkSecretKey: \"Set the CLERK_SECRET_KEY environment variable.\",\n  EnsureClockSync: \"Make sure your system clock is in sync (e.g. turn off and on automatic time synchronization).\"\n};\nvar TokenVerificationError = class _TokenVerificationError extends Error {\n  constructor({\n    action,\n    message,\n    reason\n  }) {\n    super(message);\n    Object.setPrototypeOf(this, _TokenVerificationError.prototype);\n    this.reason = reason;\n    this.message = message;\n    this.action = action;\n  }\n  getFullMessage() {\n    return `${[this.message, this.action].filter(m => m).join(\" \")} (reason=${this.reason}, token-carrier=${this.tokenCarrier})`;\n  }\n};\nvar SignJWTError = class extends Error {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvY2h1bmstM0FSSVRIR0UubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQSxJQUFJQSwwQkFBMEIsR0FBRztFQUMvQkMsZ0JBQWdCLEVBQUU7QUFDcEIsQ0FBQztBQUNELElBQUlDLDRCQUE0QixHQUFHO0VBQ2pDQyxZQUFZLEVBQUUsZUFBZTtFQUM3QkMsWUFBWSxFQUFFLGVBQWU7RUFDN0JDLHFCQUFxQixFQUFFLHlCQUF5QjtFQUNoREMsNkJBQTZCLEVBQUUsa0NBQWtDO0VBQ2pFQyxxQkFBcUIsRUFBRSx5QkFBeUI7RUFDaERDLGlCQUFpQixFQUFFLHNCQUFzQjtFQUN6Q0MsdUJBQXVCLEVBQUUsMkJBQTJCO0VBQ3BEUixnQkFBZ0IsRUFBRSxvQkFBb0I7RUFDdENTLGVBQWUsRUFBRSxtQkFBbUI7RUFDcENDLHFCQUFxQixFQUFFLDJCQUEyQjtFQUNsREMsZ0JBQWdCLEVBQUUsb0JBQW9CO0VBQ3RDQyxnQkFBZ0IsRUFBRSxvQkFBb0I7RUFDdENDLGtCQUFrQixFQUFFO0FBQ3RCLENBQUM7QUFDRCxJQUFJQyw0QkFBNEIsR0FBRztFQUNqQ0MsY0FBYyxFQUFFLDJCQUEyQjtFQUMzQ0MsY0FBYyxFQUFFLG9EQUFvRDtFQUNwRUMsY0FBYyxFQUFFLDZDQUE2QztFQUM3REMsaUJBQWlCLEVBQUUsZ0RBQWdEO0VBQ25FQyxlQUFlLEVBQUU7QUFDbkIsQ0FBQztBQUNELElBQUlDLHNCQUFzQixHQUFHLE1BQU1DLHVCQUF1QixTQUFTQyxLQUFLLENBQUM7RUFDdkVDLFdBQVdBLENBQUM7SUFDVkMsTUFBTTtJQUNOQyxPQUFPO0lBQ1BDO0VBQ0YsQ0FBQyxFQUFFO0lBQ0QsS0FBSyxDQUFDRCxPQUFPLENBQUM7SUFDZEUsTUFBTSxDQUFDQyxjQUFjLENBQUMsSUFBSSxFQUFFUCx1QkFBdUIsQ0FBQ1EsU0FBUyxDQUFDO0lBQzlELElBQUksQ0FBQ0gsTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQ0QsT0FBTyxHQUFHQSxPQUFPO0lBQ3RCLElBQUksQ0FBQ0QsTUFBTSxHQUFHQSxNQUFNO0VBQ3RCO0VBQ0FNLGNBQWNBLENBQUEsRUFBRztJQUNmLE9BQVEsR0FBRSxDQUFDLElBQUksQ0FBQ0wsT0FBTyxFQUFFLElBQUksQ0FBQ0QsTUFBTSxDQUFDLENBQUNPLE1BQU0sQ0FBRUMsQ0FBQyxJQUFLQSxDQUFDLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLEdBQUcsQ0FBRSxZQUFXLElBQUksQ0FBQ1AsTUFBTyxtQkFBa0IsSUFBSSxDQUFDUSxZQUFhLEdBQUU7RUFDaEk7QUFDRixDQUFDO0FBQ0QsSUFBSUMsWUFBWSxHQUFHLGNBQWNiLEtBQUssQ0FBQyxFQUN0QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2JhY2tlbmQvZGlzdC9jaHVuay0zQVJJVEhHRS5tanM/NzZjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZXJyb3JzLnRzXG52YXIgVG9rZW5WZXJpZmljYXRpb25FcnJvckNvZGUgPSB7XG4gIEludmFsaWRTZWNyZXRLZXk6IFwiY2xlcmtfa2V5X2ludmFsaWRcIlxufTtcbnZhciBUb2tlblZlcmlmaWNhdGlvbkVycm9yUmVhc29uID0ge1xuICBUb2tlbkV4cGlyZWQ6IFwidG9rZW4tZXhwaXJlZFwiLFxuICBUb2tlbkludmFsaWQ6IFwidG9rZW4taW52YWxpZFwiLFxuICBUb2tlbkludmFsaWRBbGdvcml0aG06IFwidG9rZW4taW52YWxpZC1hbGdvcml0aG1cIixcbiAgVG9rZW5JbnZhbGlkQXV0aG9yaXplZFBhcnRpZXM6IFwidG9rZW4taW52YWxpZC1hdXRob3JpemVkLXBhcnRpZXNcIixcbiAgVG9rZW5JbnZhbGlkU2lnbmF0dXJlOiBcInRva2VuLWludmFsaWQtc2lnbmF0dXJlXCIsXG4gIFRva2VuTm90QWN0aXZlWWV0OiBcInRva2VuLW5vdC1hY3RpdmUteWV0XCIsXG4gIFRva2VuVmVyaWZpY2F0aW9uRmFpbGVkOiBcInRva2VuLXZlcmlmaWNhdGlvbi1mYWlsZWRcIixcbiAgSW52YWxpZFNlY3JldEtleTogXCJzZWNyZXQta2V5LWludmFsaWRcIixcbiAgTG9jYWxKV0tNaXNzaW5nOiBcImp3ay1sb2NhbC1taXNzaW5nXCIsXG4gIFJlbW90ZUpXS0ZhaWxlZFRvTG9hZDogXCJqd2stcmVtb3RlLWZhaWxlZC10by1sb2FkXCIsXG4gIFJlbW90ZUpXS0ludmFsaWQ6IFwiandrLXJlbW90ZS1pbnZhbGlkXCIsXG4gIFJlbW90ZUpXS01pc3Npbmc6IFwiandrLXJlbW90ZS1taXNzaW5nXCIsXG4gIEpXS0ZhaWxlZFRvUmVzb2x2ZTogXCJqd2stZmFpbGVkLXRvLXJlc29sdmVcIlxufTtcbnZhciBUb2tlblZlcmlmaWNhdGlvbkVycm9yQWN0aW9uID0ge1xuICBDb250YWN0U3VwcG9ydDogXCJDb250YWN0IHN1cHBvcnRAY2xlcmsuY29tXCIsXG4gIEVuc3VyZUNsZXJrSldUOiBcIk1ha2Ugc3VyZSB0aGF0IHRoaXMgaXMgYSB2YWxpZCBDbGVyayBnZW5lcmF0ZSBKV1QuXCIsXG4gIFNldENsZXJrSldUS2V5OiBcIlNldCB0aGUgQ0xFUktfSldUX0tFWSBlbnZpcm9ubWVudCB2YXJpYWJsZS5cIixcbiAgU2V0Q2xlcmtTZWNyZXRLZXk6IFwiU2V0IHRoZSBDTEVSS19TRUNSRVRfS0VZIGVudmlyb25tZW50IHZhcmlhYmxlLlwiLFxuICBFbnN1cmVDbG9ja1N5bmM6IFwiTWFrZSBzdXJlIHlvdXIgc3lzdGVtIGNsb2NrIGlzIGluIHN5bmMgKGUuZy4gdHVybiBvZmYgYW5kIG9uIGF1dG9tYXRpYyB0aW1lIHN5bmNocm9uaXphdGlvbikuXCJcbn07XG52YXIgVG9rZW5WZXJpZmljYXRpb25FcnJvciA9IGNsYXNzIF9Ub2tlblZlcmlmaWNhdGlvbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3Rvcih7XG4gICAgYWN0aW9uLFxuICAgIG1lc3NhZ2UsXG4gICAgcmVhc29uXG4gIH0pIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgX1Rva2VuVmVyaWZpY2F0aW9uRXJyb3IucHJvdG90eXBlKTtcbiAgICB0aGlzLnJlYXNvbiA9IHJlYXNvbjtcbiAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIHRoaXMuYWN0aW9uID0gYWN0aW9uO1xuICB9XG4gIGdldEZ1bGxNZXNzYWdlKCkge1xuICAgIHJldHVybiBgJHtbdGhpcy5tZXNzYWdlLCB0aGlzLmFjdGlvbl0uZmlsdGVyKChtKSA9PiBtKS5qb2luKFwiIFwiKX0gKHJlYXNvbj0ke3RoaXMucmVhc29ufSwgdG9rZW4tY2Fycmllcj0ke3RoaXMudG9rZW5DYXJyaWVyfSlgO1xuICB9XG59O1xudmFyIFNpZ25KV1RFcnJvciA9IGNsYXNzIGV4dGVuZHMgRXJyb3Ige1xufTtcblxuZXhwb3J0IHtcbiAgVG9rZW5WZXJpZmljYXRpb25FcnJvckNvZGUsXG4gIFRva2VuVmVyaWZpY2F0aW9uRXJyb3JSZWFzb24sXG4gIFRva2VuVmVyaWZpY2F0aW9uRXJyb3JBY3Rpb24sXG4gIFRva2VuVmVyaWZpY2F0aW9uRXJyb3IsXG4gIFNpZ25KV1RFcnJvclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTNBUklUSEdFLm1qcy5tYXAiXSwibmFtZXMiOlsiVG9rZW5WZXJpZmljYXRpb25FcnJvckNvZGUiLCJJbnZhbGlkU2VjcmV0S2V5IiwiVG9rZW5WZXJpZmljYXRpb25FcnJvclJlYXNvbiIsIlRva2VuRXhwaXJlZCIsIlRva2VuSW52YWxpZCIsIlRva2VuSW52YWxpZEFsZ29yaXRobSIsIlRva2VuSW52YWxpZEF1dGhvcml6ZWRQYXJ0aWVzIiwiVG9rZW5JbnZhbGlkU2lnbmF0dXJlIiwiVG9rZW5Ob3RBY3RpdmVZZXQiLCJUb2tlblZlcmlmaWNhdGlvbkZhaWxlZCIsIkxvY2FsSldLTWlzc2luZyIsIlJlbW90ZUpXS0ZhaWxlZFRvTG9hZCIsIlJlbW90ZUpXS0ludmFsaWQiLCJSZW1vdGVKV0tNaXNzaW5nIiwiSldLRmFpbGVkVG9SZXNvbHZlIiwiVG9rZW5WZXJpZmljYXRpb25FcnJvckFjdGlvbiIsIkNvbnRhY3RTdXBwb3J0IiwiRW5zdXJlQ2xlcmtKV1QiLCJTZXRDbGVya0pXVEtleSIsIlNldENsZXJrU2VjcmV0S2V5IiwiRW5zdXJlQ2xvY2tTeW5jIiwiVG9rZW5WZXJpZmljYXRpb25FcnJvciIsIl9Ub2tlblZlcmlmaWNhdGlvbkVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsImFjdGlvbiIsIm1lc3NhZ2UiLCJyZWFzb24iLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsImdldEZ1bGxNZXNzYWdlIiwiZmlsdGVyIiwibSIsImpvaW4iLCJ0b2tlbkNhcnJpZXIiLCJTaWduSldURXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/chunk-3ARITHGE.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/chunk-L23YDIM7.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/chunk-L23YDIM7.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertHeaderAlgorithm: () => (/* binding */ assertHeaderAlgorithm),\n/* harmony export */   assertHeaderType: () => (/* binding */ assertHeaderType),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   decodeJwt: () => (/* binding */ decodeJwt),\n/* harmony export */   getCryptoAlgorithm: () => (/* binding */ getCryptoAlgorithm),\n/* harmony export */   hasValidSignature: () => (/* binding */ hasValidSignature),\n/* harmony export */   importKey: () => (/* binding */ importKey),\n/* harmony export */   runtime_default: () => (/* binding */ runtime_default),\n/* harmony export */   verifyJwt: () => (/* binding */ verifyJwt)\n/* harmony export */ });\n/* harmony import */ var _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-3ARITHGE.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-3ARITHGE.mjs\");\n/* harmony import */ var _crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #crypto */ \"(middleware)/./node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs\");\n/* harmony import */ var _clerk_shared_isomorphicAtob__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/isomorphicAtob */ \"(middleware)/./node_modules/@clerk/shared/dist/isomorphicAtob.mjs\");\n\n\n// src/runtime.ts\n\nvar globalFetch = fetch.bind(globalThis);\nvar runtime = {\n  crypto: _crypto__WEBPACK_IMPORTED_MODULE_1__.webcrypto,\n  fetch: globalFetch,\n  AbortController: globalThis.AbortController,\n  Blob: globalThis.Blob,\n  FormData: globalThis.FormData,\n  Headers: globalThis.Headers,\n  Request: globalThis.Request,\n  Response: globalThis.Response\n};\nvar runtime_default = runtime;\n\n// src/util/rfc4648.ts\nvar base64url = {\n  parse(string, opts) {\n    return parse(string, base64UrlEncoding, opts);\n  },\n  stringify(data, opts) {\n    return stringify(data, base64UrlEncoding, opts);\n  }\n};\nvar base64UrlEncoding = {\n  chars: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n  bits: 6\n};\nfunction parse(string, encoding, opts = {}) {\n  if (!encoding.codes) {\n    encoding.codes = {};\n    for (let i = 0; i < encoding.chars.length; ++i) {\n      encoding.codes[encoding.chars[i]] = i;\n    }\n  }\n  if (!opts.loose && string.length * encoding.bits & 7) {\n    throw new SyntaxError(\"Invalid padding\");\n  }\n  let end = string.length;\n  while (string[end - 1] === \"=\") {\n    --end;\n    if (!opts.loose && !((string.length - end) * encoding.bits & 7)) {\n      throw new SyntaxError(\"Invalid padding\");\n    }\n  }\n  const out = new (opts.out ?? Uint8Array)(end * encoding.bits / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = encoding.codes[string[i]];\n    if (value === void 0) {\n      throw new SyntaxError(\"Invalid character \" + string[i]);\n    }\n    buffer = buffer << encoding.bits | value;\n    bits += encoding.bits;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= encoding.bits || 255 & buffer << 8 - bits) {\n    throw new SyntaxError(\"Unexpected end of data\");\n  }\n  return out;\n}\nfunction stringify(data, encoding, opts = {}) {\n  const {\n    pad = true\n  } = opts;\n  const mask = (1 << encoding.bits) - 1;\n  let out = \"\";\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | 255 & data[i];\n    bits += 8;\n    while (bits > encoding.bits) {\n      bits -= encoding.bits;\n      out += encoding.chars[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += encoding.chars[mask & buffer << encoding.bits - bits];\n  }\n  if (pad) {\n    while (out.length * encoding.bits & 7) {\n      out += \"=\";\n    }\n  }\n  return out;\n}\n\n// src/jwt/algorithms.ts\nvar algToHash = {\n  RS256: \"SHA-256\",\n  RS384: \"SHA-384\",\n  RS512: \"SHA-512\"\n};\nvar RSA_ALGORITHM_NAME = \"RSASSA-PKCS1-v1_5\";\nvar jwksAlgToCryptoAlg = {\n  RS256: RSA_ALGORITHM_NAME,\n  RS384: RSA_ALGORITHM_NAME,\n  RS512: RSA_ALGORITHM_NAME\n};\nvar algs = Object.keys(algToHash);\nfunction getCryptoAlgorithm(algorithmName) {\n  const hash = algToHash[algorithmName];\n  const name = jwksAlgToCryptoAlg[algorithmName];\n  if (!hash || !name) {\n    throw new Error(`Unsupported algorithm ${algorithmName}, expected one of ${algs.join(\",\")}.`);\n  }\n  return {\n    hash: {\n      name: algToHash[algorithmName]\n    },\n    name: jwksAlgToCryptoAlg[algorithmName]\n  };\n}\n\n// src/jwt/assertions.ts\nvar isArrayString = s => {\n  return Array.isArray(s) && s.length > 0 && s.every(a => typeof a === \"string\");\n};\nvar assertAudienceClaim = (aud, audience) => {\n  const audienceList = [audience].flat().filter(a => !!a);\n  const audList = [aud].flat().filter(a => !!a);\n  const shouldVerifyAudience = audienceList.length > 0 && audList.length > 0;\n  if (!shouldVerifyAudience) {\n    return;\n  }\n  if (typeof aud === \"string\") {\n    if (!audienceList.includes(aud)) {\n      throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n        action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n        reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n        message: `Invalid JWT audience claim (aud) ${JSON.stringify(aud)}. Is not included in \"${JSON.stringify(audienceList)}\".`\n      });\n    }\n  } else if (isArrayString(aud)) {\n    if (!aud.some(a => audienceList.includes(a))) {\n      throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n        action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n        reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n        message: `Invalid JWT audience claim array (aud) ${JSON.stringify(aud)}. Is not included in \"${JSON.stringify(audienceList)}\".`\n      });\n    }\n  }\n};\nvar assertHeaderType = typ => {\n  if (typeof typ === \"undefined\") {\n    return;\n  }\n  if (typ !== \"JWT\") {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalid,\n      message: `Invalid JWT type ${JSON.stringify(typ)}. Expected \"JWT\".`\n    });\n  }\n};\nvar assertHeaderAlgorithm = alg => {\n  if (!algs.includes(alg)) {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidAlgorithm,\n      message: `Invalid JWT algorithm ${JSON.stringify(alg)}. Supported: ${algs}.`\n    });\n  }\n};\nvar assertSubClaim = sub => {\n  if (typeof sub !== \"string\") {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Subject claim (sub) is required and must be a string. Received ${JSON.stringify(sub)}.`\n    });\n  }\n};\nvar assertAuthorizedPartiesClaim = (azp, authorizedParties) => {\n  if (!azp || !authorizedParties || authorizedParties.length === 0) {\n    return;\n  }\n  if (!authorizedParties.includes(azp)) {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidAuthorizedParties,\n      message: `Invalid JWT Authorized party claim (azp) ${JSON.stringify(azp)}. Expected \"${authorizedParties}\".`\n    });\n  }\n};\nvar assertExpirationClaim = (exp, clockSkewInMs) => {\n  if (typeof exp !== \"number\") {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Invalid JWT expiry date claim (exp) ${JSON.stringify(exp)}. Expected number.`\n    });\n  }\n  const currentDate = new Date(Date.now());\n  const expiryDate = /* @__PURE__ */new Date(0);\n  expiryDate.setUTCSeconds(exp);\n  const expired = expiryDate.getTime() <= currentDate.getTime() - clockSkewInMs;\n  if (expired) {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenExpired,\n      message: `JWT is expired. Expiry date: ${expiryDate.toUTCString()}, Current date: ${currentDate.toUTCString()}.`\n    });\n  }\n};\nvar assertActivationClaim = (nbf, clockSkewInMs) => {\n  if (typeof nbf === \"undefined\") {\n    return;\n  }\n  if (typeof nbf !== \"number\") {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Invalid JWT not before date claim (nbf) ${JSON.stringify(nbf)}. Expected number.`\n    });\n  }\n  const currentDate = new Date(Date.now());\n  const notBeforeDate = /* @__PURE__ */new Date(0);\n  notBeforeDate.setUTCSeconds(nbf);\n  const early = notBeforeDate.getTime() > currentDate.getTime() + clockSkewInMs;\n  if (early) {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenNotActiveYet,\n      message: `JWT cannot be used prior to not before date claim (nbf). Not before date: ${notBeforeDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`\n    });\n  }\n};\nvar assertIssuedAtClaim = (iat, clockSkewInMs) => {\n  if (typeof iat === \"undefined\") {\n    return;\n  }\n  if (typeof iat !== \"number\") {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Invalid JWT issued at date claim (iat) ${JSON.stringify(iat)}. Expected number.`\n    });\n  }\n  const currentDate = new Date(Date.now());\n  const issuedAtDate = /* @__PURE__ */new Date(0);\n  issuedAtDate.setUTCSeconds(iat);\n  const postIssued = issuedAtDate.getTime() > currentDate.getTime() + clockSkewInMs;\n  if (postIssued) {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenNotActiveYet,\n      message: `JWT issued at date claim (iat) is in the future. Issued at date: ${issuedAtDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`\n    });\n  }\n};\n\n// src/jwt/cryptoKeys.ts\n\nfunction pemToBuffer(secret) {\n  const trimmed = secret.replace(/-----BEGIN.*?-----/g, \"\").replace(/-----END.*?-----/g, \"\").replace(/\\s/g, \"\");\n  const decoded = (0,_clerk_shared_isomorphicAtob__WEBPACK_IMPORTED_MODULE_2__.isomorphicAtob)(trimmed);\n  const buffer = new ArrayBuffer(decoded.length);\n  const bufView = new Uint8Array(buffer);\n  for (let i = 0, strLen = decoded.length; i < strLen; i++) {\n    bufView[i] = decoded.charCodeAt(i);\n  }\n  return bufView;\n}\nfunction importKey(key, algorithm, keyUsage) {\n  if (typeof key === \"object\") {\n    return runtime_default.crypto.subtle.importKey(\"jwk\", key, algorithm, false, [keyUsage]);\n  }\n  const keyData = pemToBuffer(key);\n  const format = keyUsage === \"sign\" ? \"pkcs8\" : \"spki\";\n  return runtime_default.crypto.subtle.importKey(format, keyData, algorithm, false, [keyUsage]);\n}\n\n// src/jwt/verifyJwt.ts\nvar DEFAULT_CLOCK_SKEW_IN_SECONDS = 5 * 1e3;\nasync function hasValidSignature(jwt, key) {\n  const {\n    header,\n    signature,\n    raw\n  } = jwt;\n  const encoder = new TextEncoder();\n  const data = encoder.encode([raw.header, raw.payload].join(\".\"));\n  const algorithm = getCryptoAlgorithm(header.alg);\n  try {\n    const cryptoKey = await importKey(key, algorithm, \"verify\");\n    const verified = await runtime_default.crypto.subtle.verify(algorithm.name, cryptoKey, signature, data);\n    return {\n      data: verified\n    };\n  } catch (error) {\n    return {\n      errors: [new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n        reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidSignature,\n        message: error?.message\n      })]\n    };\n  }\n}\nfunction decodeJwt(token) {\n  const tokenParts = (token || \"\").toString().split(\".\");\n  if (tokenParts.length !== 3) {\n    return {\n      errors: [new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n        reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalid,\n        message: `Invalid JWT form. A JWT consists of three parts separated by dots.`\n      })]\n    };\n  }\n  const [rawHeader, rawPayload, rawSignature] = tokenParts;\n  const decoder = new TextDecoder();\n  const header = JSON.parse(decoder.decode(base64url.parse(rawHeader, {\n    loose: true\n  })));\n  const payload = JSON.parse(decoder.decode(base64url.parse(rawPayload, {\n    loose: true\n  })));\n  const signature = base64url.parse(rawSignature, {\n    loose: true\n  });\n  const data = {\n    header,\n    payload,\n    signature,\n    raw: {\n      header: rawHeader,\n      payload: rawPayload,\n      signature: rawSignature,\n      text: token\n    }\n  };\n  return {\n    data\n  };\n}\nasync function verifyJwt(token, options) {\n  const {\n    audience,\n    authorizedParties,\n    clockSkewInMs,\n    key\n  } = options;\n  const clockSkew = clockSkewInMs || DEFAULT_CLOCK_SKEW_IN_SECONDS;\n  const {\n    data: decoded,\n    errors\n  } = decodeJwt(token);\n  if (errors) {\n    return {\n      errors\n    };\n  }\n  const {\n    header,\n    payload\n  } = decoded;\n  try {\n    const {\n      typ,\n      alg\n    } = header;\n    assertHeaderType(typ);\n    assertHeaderAlgorithm(alg);\n    const {\n      azp,\n      sub,\n      aud,\n      iat,\n      exp,\n      nbf\n    } = payload;\n    assertSubClaim(sub);\n    assertAudienceClaim([aud], [audience]);\n    assertAuthorizedPartiesClaim(azp, authorizedParties);\n    assertExpirationClaim(exp, clockSkew);\n    assertActivationClaim(nbf, clockSkew);\n    assertIssuedAtClaim(iat, clockSkew);\n  } catch (err) {\n    return {\n      errors: [err]\n    };\n  }\n  const {\n    data: signatureValid,\n    errors: signatureErrors\n  } = await hasValidSignature(decoded, key);\n  if (signatureErrors) {\n    return {\n      errors: [new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n        action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n        reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n        message: `Error verifying JWT signature. ${signatureErrors[0]}`\n      })]\n    };\n  }\n  if (!signatureValid) {\n    return {\n      errors: [new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n        reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidSignature,\n        message: \"JWT signature is invalid.\"\n      })]\n    };\n  }\n  return {\n    data: payload\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvY2h1bmstTDIzWURJTTcubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUc4Qjs7QUFHOUI7QUFDOEM7QUFDOUMsSUFBSUssV0FBVyxHQUFHQyxLQUFLLENBQUNDLElBQUksQ0FBQ0MsVUFBVSxDQUFDO0FBQ3hDLElBQUlDLE9BQU8sR0FBRztFQUNaTCxNQUFNO0VBQ05FLEtBQUssRUFBRUQsV0FBVztFQUNsQkssZUFBZSxFQUFFRixVQUFVLENBQUNFLGVBQWU7RUFDM0NDLElBQUksRUFBRUgsVUFBVSxDQUFDRyxJQUFJO0VBQ3JCQyxRQUFRLEVBQUVKLFVBQVUsQ0FBQ0ksUUFBUTtFQUM3QkMsT0FBTyxFQUFFTCxVQUFVLENBQUNLLE9BQU87RUFDM0JDLE9BQU8sRUFBRU4sVUFBVSxDQUFDTSxPQUFPO0VBQzNCQyxRQUFRLEVBQUVQLFVBQVUsQ0FBQ087QUFDdkIsQ0FBQztBQUNELElBQUlDLGVBQWUsR0FBR1AsT0FBTzs7QUFFN0I7QUFDQSxJQUFJUSxTQUFTLEdBQUc7RUFDZEMsS0FBS0EsQ0FBQ0MsTUFBTSxFQUFFQyxJQUFJLEVBQUU7SUFDbEIsT0FBT0YsS0FBSyxDQUFDQyxNQUFNLEVBQUVFLGlCQUFpQixFQUFFRCxJQUFJLENBQUM7RUFDL0MsQ0FBQztFQUNERSxTQUFTQSxDQUFDQyxJQUFJLEVBQUVILElBQUksRUFBRTtJQUNwQixPQUFPRSxTQUFTLENBQUNDLElBQUksRUFBRUYsaUJBQWlCLEVBQUVELElBQUksQ0FBQztFQUNqRDtBQUNGLENBQUM7QUFDRCxJQUFJQyxpQkFBaUIsR0FBRztFQUN0QkcsS0FBSyxFQUFFLGtFQUFrRTtFQUN6RUMsSUFBSSxFQUFFO0FBQ1IsQ0FBQztBQUNELFNBQVNQLEtBQUtBLENBQUNDLE1BQU0sRUFBRU8sUUFBUSxFQUFFTixJQUFJLEdBQUcsQ0FBQyxDQUFDLEVBQUU7RUFDMUMsSUFBSSxDQUFDTSxRQUFRLENBQUNDLEtBQUssRUFBRTtJQUNuQkQsUUFBUSxDQUFDQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBQ25CLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHRixRQUFRLENBQUNGLEtBQUssQ0FBQ0ssTUFBTSxFQUFFLEVBQUVELENBQUMsRUFBRTtNQUM5Q0YsUUFBUSxDQUFDQyxLQUFLLENBQUNELFFBQVEsQ0FBQ0YsS0FBSyxDQUFDSSxDQUFDLENBQUMsQ0FBQyxHQUFHQSxDQUFDO0lBQ3ZDO0VBQ0Y7RUFDQSxJQUFJLENBQUNSLElBQUksQ0FBQ1UsS0FBSyxJQUFJWCxNQUFNLENBQUNVLE1BQU0sR0FBR0gsUUFBUSxDQUFDRCxJQUFJLEdBQUcsQ0FBQyxFQUFFO0lBQ3BELE1BQU0sSUFBSU0sV0FBVyxDQUFDLGlCQUFpQixDQUFDO0VBQzFDO0VBQ0EsSUFBSUMsR0FBRyxHQUFHYixNQUFNLENBQUNVLE1BQU07RUFDdkIsT0FBT1YsTUFBTSxDQUFDYSxHQUFHLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRyxFQUFFO0lBQzlCLEVBQUVBLEdBQUc7SUFDTCxJQUFJLENBQUNaLElBQUksQ0FBQ1UsS0FBSyxJQUFJLEVBQUUsQ0FBQ1gsTUFBTSxDQUFDVSxNQUFNLEdBQUdHLEdBQUcsSUFBSU4sUUFBUSxDQUFDRCxJQUFJLEdBQUcsQ0FBQyxDQUFDLEVBQUU7TUFDL0QsTUFBTSxJQUFJTSxXQUFXLENBQUMsaUJBQWlCLENBQUM7SUFDMUM7RUFDRjtFQUNBLE1BQU1FLEdBQUcsR0FBRyxLQUFLYixJQUFJLENBQUNhLEdBQUcsSUFBSUMsVUFBVSxFQUFFRixHQUFHLEdBQUdOLFFBQVEsQ0FBQ0QsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7RUFDckUsSUFBSUEsSUFBSSxHQUFHLENBQUM7RUFDWixJQUFJVSxNQUFNLEdBQUcsQ0FBQztFQUNkLElBQUlDLE9BQU8sR0FBRyxDQUFDO0VBQ2YsS0FBSyxJQUFJUixDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdJLEdBQUcsRUFBRSxFQUFFSixDQUFDLEVBQUU7SUFDNUIsTUFBTVMsS0FBSyxHQUFHWCxRQUFRLENBQUNDLEtBQUssQ0FBQ1IsTUFBTSxDQUFDUyxDQUFDLENBQUMsQ0FBQztJQUN2QyxJQUFJUyxLQUFLLEtBQUssS0FBSyxDQUFDLEVBQUU7TUFDcEIsTUFBTSxJQUFJTixXQUFXLENBQUMsb0JBQW9CLEdBQUdaLE1BQU0sQ0FBQ1MsQ0FBQyxDQUFDLENBQUM7SUFDekQ7SUFDQU8sTUFBTSxHQUFHQSxNQUFNLElBQUlULFFBQVEsQ0FBQ0QsSUFBSSxHQUFHWSxLQUFLO0lBQ3hDWixJQUFJLElBQUlDLFFBQVEsQ0FBQ0QsSUFBSTtJQUNyQixJQUFJQSxJQUFJLElBQUksQ0FBQyxFQUFFO01BQ2JBLElBQUksSUFBSSxDQUFDO01BQ1RRLEdBQUcsQ0FBQ0csT0FBTyxFQUFFLENBQUMsR0FBRyxHQUFHLEdBQUdELE1BQU0sSUFBSVYsSUFBSTtJQUN2QztFQUNGO0VBQ0EsSUFBSUEsSUFBSSxJQUFJQyxRQUFRLENBQUNELElBQUksSUFBSSxHQUFHLEdBQUdVLE1BQU0sSUFBSSxDQUFDLEdBQUdWLElBQUksRUFBRTtJQUNyRCxNQUFNLElBQUlNLFdBQVcsQ0FBQyx3QkFBd0IsQ0FBQztFQUNqRDtFQUNBLE9BQU9FLEdBQUc7QUFDWjtBQUNBLFNBQVNYLFNBQVNBLENBQUNDLElBQUksRUFBRUcsUUFBUSxFQUFFTixJQUFJLEdBQUcsQ0FBQyxDQUFDLEVBQUU7RUFDNUMsTUFBTTtJQUFFa0IsR0FBRyxHQUFHO0VBQUssQ0FBQyxHQUFHbEIsSUFBSTtFQUMzQixNQUFNbUIsSUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJYixRQUFRLENBQUNELElBQUksSUFBSSxDQUFDO0VBQ3JDLElBQUlRLEdBQUcsR0FBRyxFQUFFO0VBQ1osSUFBSVIsSUFBSSxHQUFHLENBQUM7RUFDWixJQUFJVSxNQUFNLEdBQUcsQ0FBQztFQUNkLEtBQUssSUFBSVAsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHTCxJQUFJLENBQUNNLE1BQU0sRUFBRSxFQUFFRCxDQUFDLEVBQUU7SUFDcENPLE1BQU0sR0FBR0EsTUFBTSxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUdaLElBQUksQ0FBQ0ssQ0FBQyxDQUFDO0lBQ3BDSCxJQUFJLElBQUksQ0FBQztJQUNULE9BQU9BLElBQUksR0FBR0MsUUFBUSxDQUFDRCxJQUFJLEVBQUU7TUFDM0JBLElBQUksSUFBSUMsUUFBUSxDQUFDRCxJQUFJO01BQ3JCUSxHQUFHLElBQUlQLFFBQVEsQ0FBQ0YsS0FBSyxDQUFDZSxJQUFJLEdBQUdKLE1BQU0sSUFBSVYsSUFBSSxDQUFDO0lBQzlDO0VBQ0Y7RUFDQSxJQUFJQSxJQUFJLEVBQUU7SUFDUlEsR0FBRyxJQUFJUCxRQUFRLENBQUNGLEtBQUssQ0FBQ2UsSUFBSSxHQUFHSixNQUFNLElBQUlULFFBQVEsQ0FBQ0QsSUFBSSxHQUFHQSxJQUFJLENBQUM7RUFDOUQ7RUFDQSxJQUFJYSxHQUFHLEVBQUU7SUFDUCxPQUFPTCxHQUFHLENBQUNKLE1BQU0sR0FBR0gsUUFBUSxDQUFDRCxJQUFJLEdBQUcsQ0FBQyxFQUFFO01BQ3JDUSxHQUFHLElBQUksR0FBRztJQUNaO0VBQ0Y7RUFDQSxPQUFPQSxHQUFHO0FBQ1o7O0FBRUE7QUFDQSxJQUFJTyxTQUFTLEdBQUc7RUFDZEMsS0FBSyxFQUFFLFNBQVM7RUFDaEJDLEtBQUssRUFBRSxTQUFTO0VBQ2hCQyxLQUFLLEVBQUU7QUFDVCxDQUFDO0FBQ0QsSUFBSUMsa0JBQWtCLEdBQUcsbUJBQW1CO0FBQzVDLElBQUlDLGtCQUFrQixHQUFHO0VBQ3ZCSixLQUFLLEVBQUVHLGtCQUFrQjtFQUN6QkYsS0FBSyxFQUFFRSxrQkFBa0I7RUFDekJELEtBQUssRUFBRUM7QUFDVCxDQUFDO0FBQ0QsSUFBSUUsSUFBSSxHQUFHQyxNQUFNLENBQUNDLElBQUksQ0FBQ1IsU0FBUyxDQUFDO0FBQ2pDLFNBQVNTLGtCQUFrQkEsQ0FBQ0MsYUFBYSxFQUFFO0VBQ3pDLE1BQU1DLElBQUksR0FBR1gsU0FBUyxDQUFDVSxhQUFhLENBQUM7RUFDckMsTUFBTUUsSUFBSSxHQUFHUCxrQkFBa0IsQ0FBQ0ssYUFBYSxDQUFDO0VBQzlDLElBQUksQ0FBQ0MsSUFBSSxJQUFJLENBQUNDLElBQUksRUFBRTtJQUNsQixNQUFNLElBQUlDLEtBQUssQ0FBRSx5QkFBd0JILGFBQWMscUJBQW9CSixJQUFJLENBQUNRLElBQUksQ0FBQyxHQUFHLENBQUUsR0FBRSxDQUFDO0VBQy9GO0VBQ0EsT0FBTztJQUNMSCxJQUFJLEVBQUU7TUFBRUMsSUFBSSxFQUFFWixTQUFTLENBQUNVLGFBQWE7SUFBRSxDQUFDO0lBQ3hDRSxJQUFJLEVBQUVQLGtCQUFrQixDQUFDSyxhQUFhO0VBQ3hDLENBQUM7QUFDSDs7QUFFQTtBQUNBLElBQUlLLGFBQWEsR0FBSUMsQ0FBQyxJQUFLO0VBQ3pCLE9BQU9DLEtBQUssQ0FBQ0MsT0FBTyxDQUFDRixDQUFDLENBQUMsSUFBSUEsQ0FBQyxDQUFDM0IsTUFBTSxHQUFHLENBQUMsSUFBSTJCLENBQUMsQ0FBQ0csS0FBSyxDQUFFQyxDQUFDLElBQUssT0FBT0EsQ0FBQyxLQUFLLFFBQVEsQ0FBQztBQUNsRixDQUFDO0FBQ0QsSUFBSUMsbUJBQW1CLEdBQUdBLENBQUNDLEdBQUcsRUFBRUMsUUFBUSxLQUFLO0VBQzNDLE1BQU1DLFlBQVksR0FBRyxDQUFDRCxRQUFRLENBQUMsQ0FBQ0UsSUFBSSxDQUFDLENBQUMsQ0FBQ0MsTUFBTSxDQUFFTixDQUFDLElBQUssQ0FBQyxDQUFDQSxDQUFDLENBQUM7RUFDekQsTUFBTU8sT0FBTyxHQUFHLENBQUNMLEdBQUcsQ0FBQyxDQUFDRyxJQUFJLENBQUMsQ0FBQyxDQUFDQyxNQUFNLENBQUVOLENBQUMsSUFBSyxDQUFDLENBQUNBLENBQUMsQ0FBQztFQUMvQyxNQUFNUSxvQkFBb0IsR0FBR0osWUFBWSxDQUFDbkMsTUFBTSxHQUFHLENBQUMsSUFBSXNDLE9BQU8sQ0FBQ3RDLE1BQU0sR0FBRyxDQUFDO0VBQzFFLElBQUksQ0FBQ3VDLG9CQUFvQixFQUFFO0lBQ3pCO0VBQ0Y7RUFDQSxJQUFJLE9BQU9OLEdBQUcsS0FBSyxRQUFRLEVBQUU7SUFDM0IsSUFBSSxDQUFDRSxZQUFZLENBQUNLLFFBQVEsQ0FBQ1AsR0FBRyxDQUFDLEVBQUU7TUFDL0IsTUFBTSxJQUFJOUQsdUVBQXNCLENBQUM7UUFDL0JzRSxNQUFNLEVBQUVyRSw2RUFBNEIsQ0FBQ3NFLGNBQWM7UUFDbkRDLE1BQU0sRUFBRXRFLDZFQUE0QixDQUFDdUUsdUJBQXVCO1FBQzVEQyxPQUFPLEVBQUcsb0NBQW1DQyxJQUFJLENBQUNyRCxTQUFTLENBQUN3QyxHQUFHLENBQUUseUJBQXdCYSxJQUFJLENBQUNyRCxTQUFTLENBQ3JHMEMsWUFDRixDQUFFO01BQ0osQ0FBQyxDQUFDO0lBQ0o7RUFDRixDQUFDLE1BQU0sSUFBSVQsYUFBYSxDQUFDTyxHQUFHLENBQUMsRUFBRTtJQUM3QixJQUFJLENBQUNBLEdBQUcsQ0FBQ2MsSUFBSSxDQUFFaEIsQ0FBQyxJQUFLSSxZQUFZLENBQUNLLFFBQVEsQ0FBQ1QsQ0FBQyxDQUFDLENBQUMsRUFBRTtNQUM5QyxNQUFNLElBQUk1RCx1RUFBc0IsQ0FBQztRQUMvQnNFLE1BQU0sRUFBRXJFLDZFQUE0QixDQUFDc0UsY0FBYztRQUNuREMsTUFBTSxFQUFFdEUsNkVBQTRCLENBQUN1RSx1QkFBdUI7UUFDNURDLE9BQU8sRUFBRywwQ0FBeUNDLElBQUksQ0FBQ3JELFNBQVMsQ0FBQ3dDLEdBQUcsQ0FBRSx5QkFBd0JhLElBQUksQ0FBQ3JELFNBQVMsQ0FDM0cwQyxZQUNGLENBQUU7TUFDSixDQUFDLENBQUM7SUFDSjtFQUNGO0FBQ0YsQ0FBQztBQUNELElBQUlhLGdCQUFnQixHQUFJQyxHQUFHLElBQUs7RUFDOUIsSUFBSSxPQUFPQSxHQUFHLEtBQUssV0FBVyxFQUFFO0lBQzlCO0VBQ0Y7RUFDQSxJQUFJQSxHQUFHLEtBQUssS0FBSyxFQUFFO0lBQ2pCLE1BQU0sSUFBSTlFLHVFQUFzQixDQUFDO01BQy9Cc0UsTUFBTSxFQUFFckUsNkVBQTRCLENBQUNzRSxjQUFjO01BQ25EQyxNQUFNLEVBQUV0RSw2RUFBNEIsQ0FBQzZFLFlBQVk7TUFDakRMLE9BQU8sRUFBRyxvQkFBbUJDLElBQUksQ0FBQ3JELFNBQVMsQ0FBQ3dELEdBQUcsQ0FBRTtJQUNuRCxDQUFDLENBQUM7RUFDSjtBQUNGLENBQUM7QUFDRCxJQUFJRSxxQkFBcUIsR0FBSUMsR0FBRyxJQUFLO0VBQ25DLElBQUksQ0FBQ25DLElBQUksQ0FBQ3VCLFFBQVEsQ0FBQ1ksR0FBRyxDQUFDLEVBQUU7SUFDdkIsTUFBTSxJQUFJakYsdUVBQXNCLENBQUM7TUFDL0JzRSxNQUFNLEVBQUVyRSw2RUFBNEIsQ0FBQ3NFLGNBQWM7TUFDbkRDLE1BQU0sRUFBRXRFLDZFQUE0QixDQUFDZ0YscUJBQXFCO01BQzFEUixPQUFPLEVBQUcseUJBQXdCQyxJQUFJLENBQUNyRCxTQUFTLENBQUMyRCxHQUFHLENBQUUsZ0JBQWVuQyxJQUFLO0lBQzVFLENBQUMsQ0FBQztFQUNKO0FBQ0YsQ0FBQztBQUNELElBQUlxQyxjQUFjLEdBQUlDLEdBQUcsSUFBSztFQUM1QixJQUFJLE9BQU9BLEdBQUcsS0FBSyxRQUFRLEVBQUU7SUFDM0IsTUFBTSxJQUFJcEYsdUVBQXNCLENBQUM7TUFDL0JzRSxNQUFNLEVBQUVyRSw2RUFBNEIsQ0FBQ3NFLGNBQWM7TUFDbkRDLE1BQU0sRUFBRXRFLDZFQUE0QixDQUFDdUUsdUJBQXVCO01BQzVEQyxPQUFPLEVBQUcsa0VBQWlFQyxJQUFJLENBQUNyRCxTQUFTLENBQUM4RCxHQUFHLENBQUU7SUFDakcsQ0FBQyxDQUFDO0VBQ0o7QUFDRixDQUFDO0FBQ0QsSUFBSUMsNEJBQTRCLEdBQUdBLENBQUNDLEdBQUcsRUFBRUMsaUJBQWlCLEtBQUs7RUFDN0QsSUFBSSxDQUFDRCxHQUFHLElBQUksQ0FBQ0MsaUJBQWlCLElBQUlBLGlCQUFpQixDQUFDMUQsTUFBTSxLQUFLLENBQUMsRUFBRTtJQUNoRTtFQUNGO0VBQ0EsSUFBSSxDQUFDMEQsaUJBQWlCLENBQUNsQixRQUFRLENBQUNpQixHQUFHLENBQUMsRUFBRTtJQUNwQyxNQUFNLElBQUl0Rix1RUFBc0IsQ0FBQztNQUMvQndFLE1BQU0sRUFBRXRFLDZFQUE0QixDQUFDc0YsNkJBQTZCO01BQ2xFZCxPQUFPLEVBQUcsNENBQTJDQyxJQUFJLENBQUNyRCxTQUFTLENBQUNnRSxHQUFHLENBQUUsZUFBY0MsaUJBQWtCO0lBQzNHLENBQUMsQ0FBQztFQUNKO0FBQ0YsQ0FBQztBQUNELElBQUlFLHFCQUFxQixHQUFHQSxDQUFDQyxHQUFHLEVBQUVDLGFBQWEsS0FBSztFQUNsRCxJQUFJLE9BQU9ELEdBQUcsS0FBSyxRQUFRLEVBQUU7SUFDM0IsTUFBTSxJQUFJMUYsdUVBQXNCLENBQUM7TUFDL0JzRSxNQUFNLEVBQUVyRSw2RUFBNEIsQ0FBQ3NFLGNBQWM7TUFDbkRDLE1BQU0sRUFBRXRFLDZFQUE0QixDQUFDdUUsdUJBQXVCO01BQzVEQyxPQUFPLEVBQUcsdUNBQXNDQyxJQUFJLENBQUNyRCxTQUFTLENBQUNvRSxHQUFHLENBQUU7SUFDdEUsQ0FBQyxDQUFDO0VBQ0o7RUFDQSxNQUFNRSxXQUFXLEdBQUcsSUFBSUMsSUFBSSxDQUFDQSxJQUFJLENBQUNDLEdBQUcsQ0FBQyxDQUFDLENBQUM7RUFDeEMsTUFBTUMsVUFBVSxHQUFHLGVBQWdCLElBQUlGLElBQUksQ0FBQyxDQUFDLENBQUM7RUFDOUNFLFVBQVUsQ0FBQ0MsYUFBYSxDQUFDTixHQUFHLENBQUM7RUFDN0IsTUFBTU8sT0FBTyxHQUFHRixVQUFVLENBQUNHLE9BQU8sQ0FBQyxDQUFDLElBQUlOLFdBQVcsQ0FBQ00sT0FBTyxDQUFDLENBQUMsR0FBR1AsYUFBYTtFQUM3RSxJQUFJTSxPQUFPLEVBQUU7SUFDWCxNQUFNLElBQUlqRyx1RUFBc0IsQ0FBQztNQUMvQndFLE1BQU0sRUFBRXRFLDZFQUE0QixDQUFDaUcsWUFBWTtNQUNqRHpCLE9BQU8sRUFBRyxnQ0FBK0JxQixVQUFVLENBQUNLLFdBQVcsQ0FBQyxDQUFFLG1CQUFrQlIsV0FBVyxDQUFDUSxXQUFXLENBQUMsQ0FBRTtJQUNoSCxDQUFDLENBQUM7RUFDSjtBQUNGLENBQUM7QUFDRCxJQUFJQyxxQkFBcUIsR0FBR0EsQ0FBQ0MsR0FBRyxFQUFFWCxhQUFhLEtBQUs7RUFDbEQsSUFBSSxPQUFPVyxHQUFHLEtBQUssV0FBVyxFQUFFO0lBQzlCO0VBQ0Y7RUFDQSxJQUFJLE9BQU9BLEdBQUcsS0FBSyxRQUFRLEVBQUU7SUFDM0IsTUFBTSxJQUFJdEcsdUVBQXNCLENBQUM7TUFDL0JzRSxNQUFNLEVBQUVyRSw2RUFBNEIsQ0FBQ3NFLGNBQWM7TUFDbkRDLE1BQU0sRUFBRXRFLDZFQUE0QixDQUFDdUUsdUJBQXVCO01BQzVEQyxPQUFPLEVBQUcsMkNBQTBDQyxJQUFJLENBQUNyRCxTQUFTLENBQUNnRixHQUFHLENBQUU7SUFDMUUsQ0FBQyxDQUFDO0VBQ0o7RUFDQSxNQUFNVixXQUFXLEdBQUcsSUFBSUMsSUFBSSxDQUFDQSxJQUFJLENBQUNDLEdBQUcsQ0FBQyxDQUFDLENBQUM7RUFDeEMsTUFBTVMsYUFBYSxHQUFHLGVBQWdCLElBQUlWLElBQUksQ0FBQyxDQUFDLENBQUM7RUFDakRVLGFBQWEsQ0FBQ1AsYUFBYSxDQUFDTSxHQUFHLENBQUM7RUFDaEMsTUFBTUUsS0FBSyxHQUFHRCxhQUFhLENBQUNMLE9BQU8sQ0FBQyxDQUFDLEdBQUdOLFdBQVcsQ0FBQ00sT0FBTyxDQUFDLENBQUMsR0FBR1AsYUFBYTtFQUM3RSxJQUFJYSxLQUFLLEVBQUU7SUFDVCxNQUFNLElBQUl4Ryx1RUFBc0IsQ0FBQztNQUMvQndFLE1BQU0sRUFBRXRFLDZFQUE0QixDQUFDdUcsaUJBQWlCO01BQ3REL0IsT0FBTyxFQUFHLDZFQUE0RTZCLGFBQWEsQ0FBQ0gsV0FBVyxDQUFDLENBQUUsbUJBQWtCUixXQUFXLENBQUNRLFdBQVcsQ0FBQyxDQUFFO0lBQ2hLLENBQUMsQ0FBQztFQUNKO0FBQ0YsQ0FBQztBQUNELElBQUlNLG1CQUFtQixHQUFHQSxDQUFDQyxHQUFHLEVBQUVoQixhQUFhLEtBQUs7RUFDaEQsSUFBSSxPQUFPZ0IsR0FBRyxLQUFLLFdBQVcsRUFBRTtJQUM5QjtFQUNGO0VBQ0EsSUFBSSxPQUFPQSxHQUFHLEtBQUssUUFBUSxFQUFFO0lBQzNCLE1BQU0sSUFBSTNHLHVFQUFzQixDQUFDO01BQy9Cc0UsTUFBTSxFQUFFckUsNkVBQTRCLENBQUNzRSxjQUFjO01BQ25EQyxNQUFNLEVBQUV0RSw2RUFBNEIsQ0FBQ3VFLHVCQUF1QjtNQUM1REMsT0FBTyxFQUFHLDBDQUF5Q0MsSUFBSSxDQUFDckQsU0FBUyxDQUFDcUYsR0FBRyxDQUFFO0lBQ3pFLENBQUMsQ0FBQztFQUNKO0VBQ0EsTUFBTWYsV0FBVyxHQUFHLElBQUlDLElBQUksQ0FBQ0EsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0VBQ3hDLE1BQU1jLFlBQVksR0FBRyxlQUFnQixJQUFJZixJQUFJLENBQUMsQ0FBQyxDQUFDO0VBQ2hEZSxZQUFZLENBQUNaLGFBQWEsQ0FBQ1csR0FBRyxDQUFDO0VBQy9CLE1BQU1FLFVBQVUsR0FBR0QsWUFBWSxDQUFDVixPQUFPLENBQUMsQ0FBQyxHQUFHTixXQUFXLENBQUNNLE9BQU8sQ0FBQyxDQUFDLEdBQUdQLGFBQWE7RUFDakYsSUFBSWtCLFVBQVUsRUFBRTtJQUNkLE1BQU0sSUFBSTdHLHVFQUFzQixDQUFDO01BQy9Cd0UsTUFBTSxFQUFFdEUsNkVBQTRCLENBQUN1RyxpQkFBaUI7TUFDdEQvQixPQUFPLEVBQUcsb0VBQW1Fa0MsWUFBWSxDQUFDUixXQUFXLENBQUMsQ0FBRSxtQkFBa0JSLFdBQVcsQ0FBQ1EsV0FBVyxDQUFDLENBQUU7SUFDdEosQ0FBQyxDQUFDO0VBQ0o7QUFDRixDQUFDOztBQUVEO0FBQzhEO0FBQzlELFNBQVNXLFdBQVdBLENBQUNDLE1BQU0sRUFBRTtFQUMzQixNQUFNQyxPQUFPLEdBQUdELE1BQU0sQ0FBQ0UsT0FBTyxDQUFDLHFCQUFxQixFQUFFLEVBQUUsQ0FBQyxDQUFDQSxPQUFPLENBQUMsbUJBQW1CLEVBQUUsRUFBRSxDQUFDLENBQUNBLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDO0VBQzdHLE1BQU1DLE9BQU8sR0FBR0wsNEVBQWMsQ0FBQ0csT0FBTyxDQUFDO0VBQ3ZDLE1BQU05RSxNQUFNLEdBQUcsSUFBSWlGLFdBQVcsQ0FBQ0QsT0FBTyxDQUFDdEYsTUFBTSxDQUFDO0VBQzlDLE1BQU13RixPQUFPLEdBQUcsSUFBSW5GLFVBQVUsQ0FBQ0MsTUFBTSxDQUFDO0VBQ3RDLEtBQUssSUFBSVAsQ0FBQyxHQUFHLENBQUMsRUFBRTBGLE1BQU0sR0FBR0gsT0FBTyxDQUFDdEYsTUFBTSxFQUFFRCxDQUFDLEdBQUcwRixNQUFNLEVBQUUxRixDQUFDLEVBQUUsRUFBRTtJQUN4RHlGLE9BQU8sQ0FBQ3pGLENBQUMsQ0FBQyxHQUFHdUYsT0FBTyxDQUFDSSxVQUFVLENBQUMzRixDQUFDLENBQUM7RUFDcEM7RUFDQSxPQUFPeUYsT0FBTztBQUNoQjtBQUNBLFNBQVNHLFNBQVNBLENBQUNDLEdBQUcsRUFBRUMsU0FBUyxFQUFFQyxRQUFRLEVBQUU7RUFDM0MsSUFBSSxPQUFPRixHQUFHLEtBQUssUUFBUSxFQUFFO0lBQzNCLE9BQU96RyxlQUFlLENBQUNaLE1BQU0sQ0FBQ3dILE1BQU0sQ0FBQ0osU0FBUyxDQUFDLEtBQUssRUFBRUMsR0FBRyxFQUFFQyxTQUFTLEVBQUUsS0FBSyxFQUFFLENBQUNDLFFBQVEsQ0FBQyxDQUFDO0VBQzFGO0VBQ0EsTUFBTUUsT0FBTyxHQUFHZCxXQUFXLENBQUNVLEdBQUcsQ0FBQztFQUNoQyxNQUFNSyxNQUFNLEdBQUdILFFBQVEsS0FBSyxNQUFNLEdBQUcsT0FBTyxHQUFHLE1BQU07RUFDckQsT0FBTzNHLGVBQWUsQ0FBQ1osTUFBTSxDQUFDd0gsTUFBTSxDQUFDSixTQUFTLENBQUNNLE1BQU0sRUFBRUQsT0FBTyxFQUFFSCxTQUFTLEVBQUUsS0FBSyxFQUFFLENBQUNDLFFBQVEsQ0FBQyxDQUFDO0FBQy9GOztBQUVBO0FBQ0EsSUFBSUksNkJBQTZCLEdBQUcsQ0FBQyxHQUFHLEdBQUc7QUFDM0MsZUFBZUMsaUJBQWlCQSxDQUFDQyxHQUFHLEVBQUVSLEdBQUcsRUFBRTtFQUN6QyxNQUFNO0lBQUVTLE1BQU07SUFBRUMsU0FBUztJQUFFQztFQUFJLENBQUMsR0FBR0gsR0FBRztFQUN0QyxNQUFNSSxPQUFPLEdBQUcsSUFBSUMsV0FBVyxDQUFDLENBQUM7RUFDakMsTUFBTS9HLElBQUksR0FBRzhHLE9BQU8sQ0FBQ0UsTUFBTSxDQUFDLENBQUNILEdBQUcsQ0FBQ0YsTUFBTSxFQUFFRSxHQUFHLENBQUNJLE9BQU8sQ0FBQyxDQUFDbEYsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0VBQ2hFLE1BQU1vRSxTQUFTLEdBQUd6RSxrQkFBa0IsQ0FBQ2lGLE1BQU0sQ0FBQ2pELEdBQUcsQ0FBQztFQUNoRCxJQUFJO0lBQ0YsTUFBTXdELFNBQVMsR0FBRyxNQUFNakIsU0FBUyxDQUFDQyxHQUFHLEVBQUVDLFNBQVMsRUFBRSxRQUFRLENBQUM7SUFDM0QsTUFBTWdCLFFBQVEsR0FBRyxNQUFNMUgsZUFBZSxDQUFDWixNQUFNLENBQUN3SCxNQUFNLENBQUNlLE1BQU0sQ0FBQ2pCLFNBQVMsQ0FBQ3RFLElBQUksRUFBRXFGLFNBQVMsRUFBRU4sU0FBUyxFQUFFNUcsSUFBSSxDQUFDO0lBQ3ZHLE9BQU87TUFBRUEsSUFBSSxFQUFFbUg7SUFBUyxDQUFDO0VBQzNCLENBQUMsQ0FBQyxPQUFPRSxLQUFLLEVBQUU7SUFDZCxPQUFPO01BQ0xDLE1BQU0sRUFBRSxDQUNOLElBQUk3SSx1RUFBc0IsQ0FBQztRQUN6QndFLE1BQU0sRUFBRXRFLDZFQUE0QixDQUFDNEkscUJBQXFCO1FBQzFEcEUsT0FBTyxFQUFFa0UsS0FBSyxFQUFFbEU7TUFDbEIsQ0FBQyxDQUFDO0lBRU4sQ0FBQztFQUNIO0FBQ0Y7QUFDQSxTQUFTcUUsU0FBU0EsQ0FBQ0MsS0FBSyxFQUFFO0VBQ3hCLE1BQU1DLFVBQVUsR0FBRyxDQUFDRCxLQUFLLElBQUksRUFBRSxFQUFFRSxRQUFRLENBQUMsQ0FBQyxDQUFDQyxLQUFLLENBQUMsR0FBRyxDQUFDO0VBQ3RELElBQUlGLFVBQVUsQ0FBQ3BILE1BQU0sS0FBSyxDQUFDLEVBQUU7SUFDM0IsT0FBTztNQUNMZ0gsTUFBTSxFQUFFLENBQ04sSUFBSTdJLHVFQUFzQixDQUFDO1FBQ3pCd0UsTUFBTSxFQUFFdEUsNkVBQTRCLENBQUM2RSxZQUFZO1FBQ2pETCxPQUFPLEVBQUc7TUFDWixDQUFDLENBQUM7SUFFTixDQUFDO0VBQ0g7RUFDQSxNQUFNLENBQUMwRSxTQUFTLEVBQUVDLFVBQVUsRUFBRUMsWUFBWSxDQUFDLEdBQUdMLFVBQVU7RUFDeEQsTUFBTU0sT0FBTyxHQUFHLElBQUlDLFdBQVcsQ0FBQyxDQUFDO0VBQ2pDLE1BQU10QixNQUFNLEdBQUd2RCxJQUFJLENBQUN6RCxLQUFLLENBQUNxSSxPQUFPLENBQUNFLE1BQU0sQ0FBQ3hJLFNBQVMsQ0FBQ0MsS0FBSyxDQUFDa0ksU0FBUyxFQUFFO0lBQUV0SCxLQUFLLEVBQUU7RUFBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ3RGLE1BQU0wRyxPQUFPLEdBQUc3RCxJQUFJLENBQUN6RCxLQUFLLENBQUNxSSxPQUFPLENBQUNFLE1BQU0sQ0FBQ3hJLFNBQVMsQ0FBQ0MsS0FBSyxDQUFDbUksVUFBVSxFQUFFO0lBQUV2SCxLQUFLLEVBQUU7RUFBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ3hGLE1BQU1xRyxTQUFTLEdBQUdsSCxTQUFTLENBQUNDLEtBQUssQ0FBQ29JLFlBQVksRUFBRTtJQUFFeEgsS0FBSyxFQUFFO0VBQUssQ0FBQyxDQUFDO0VBQ2hFLE1BQU1QLElBQUksR0FBRztJQUNYMkcsTUFBTTtJQUNOTSxPQUFPO0lBQ1BMLFNBQVM7SUFDVEMsR0FBRyxFQUFFO01BQ0hGLE1BQU0sRUFBRWtCLFNBQVM7TUFDakJaLE9BQU8sRUFBRWEsVUFBVTtNQUNuQmxCLFNBQVMsRUFBRW1CLFlBQVk7TUFDdkJJLElBQUksRUFBRVY7SUFDUjtFQUNGLENBQUM7RUFDRCxPQUFPO0lBQUV6SDtFQUFLLENBQUM7QUFDakI7QUFDQSxlQUFlb0ksU0FBU0EsQ0FBQ1gsS0FBSyxFQUFFWSxPQUFPLEVBQUU7RUFDdkMsTUFBTTtJQUFFN0YsUUFBUTtJQUFFd0IsaUJBQWlCO0lBQUVJLGFBQWE7SUFBRThCO0VBQUksQ0FBQyxHQUFHbUMsT0FBTztFQUNuRSxNQUFNQyxTQUFTLEdBQUdsRSxhQUFhLElBQUlvQyw2QkFBNkI7RUFDaEUsTUFBTTtJQUFFeEcsSUFBSSxFQUFFNEYsT0FBTztJQUFFMEI7RUFBTyxDQUFDLEdBQUdFLFNBQVMsQ0FBQ0MsS0FBSyxDQUFDO0VBQ2xELElBQUlILE1BQU0sRUFBRTtJQUNWLE9BQU87TUFBRUE7SUFBTyxDQUFDO0VBQ25CO0VBQ0EsTUFBTTtJQUFFWCxNQUFNO0lBQUVNO0VBQVEsQ0FBQyxHQUFHckIsT0FBTztFQUNuQyxJQUFJO0lBQ0YsTUFBTTtNQUFFckMsR0FBRztNQUFFRztJQUFJLENBQUMsR0FBR2lELE1BQU07SUFDM0JyRCxnQkFBZ0IsQ0FBQ0MsR0FBRyxDQUFDO0lBQ3JCRSxxQkFBcUIsQ0FBQ0MsR0FBRyxDQUFDO0lBQzFCLE1BQU07TUFBRUssR0FBRztNQUFFRixHQUFHO01BQUV0QixHQUFHO01BQUU2QyxHQUFHO01BQUVqQixHQUFHO01BQUVZO0lBQUksQ0FBQyxHQUFHa0MsT0FBTztJQUNoRHJELGNBQWMsQ0FBQ0MsR0FBRyxDQUFDO0lBQ25CdkIsbUJBQW1CLENBQUMsQ0FBQ0MsR0FBRyxDQUFDLEVBQUUsQ0FBQ0MsUUFBUSxDQUFDLENBQUM7SUFDdENzQiw0QkFBNEIsQ0FBQ0MsR0FBRyxFQUFFQyxpQkFBaUIsQ0FBQztJQUNwREUscUJBQXFCLENBQUNDLEdBQUcsRUFBRW1FLFNBQVMsQ0FBQztJQUNyQ3hELHFCQUFxQixDQUFDQyxHQUFHLEVBQUV1RCxTQUFTLENBQUM7SUFDckNuRCxtQkFBbUIsQ0FBQ0MsR0FBRyxFQUFFa0QsU0FBUyxDQUFDO0VBQ3JDLENBQUMsQ0FBQyxPQUFPQyxHQUFHLEVBQUU7SUFDWixPQUFPO01BQUVqQixNQUFNLEVBQUUsQ0FBQ2lCLEdBQUc7SUFBRSxDQUFDO0VBQzFCO0VBQ0EsTUFBTTtJQUFFdkksSUFBSSxFQUFFd0ksY0FBYztJQUFFbEIsTUFBTSxFQUFFbUI7RUFBZ0IsQ0FBQyxHQUFHLE1BQU1oQyxpQkFBaUIsQ0FBQ2IsT0FBTyxFQUFFTSxHQUFHLENBQUM7RUFDL0YsSUFBSXVDLGVBQWUsRUFBRTtJQUNuQixPQUFPO01BQ0xuQixNQUFNLEVBQUUsQ0FDTixJQUFJN0ksdUVBQXNCLENBQUM7UUFDekJzRSxNQUFNLEVBQUVyRSw2RUFBNEIsQ0FBQ3NFLGNBQWM7UUFDbkRDLE1BQU0sRUFBRXRFLDZFQUE0QixDQUFDdUUsdUJBQXVCO1FBQzVEQyxPQUFPLEVBQUcsa0NBQWlDc0YsZUFBZSxDQUFDLENBQUMsQ0FBRTtNQUNoRSxDQUFDLENBQUM7SUFFTixDQUFDO0VBQ0g7RUFDQSxJQUFJLENBQUNELGNBQWMsRUFBRTtJQUNuQixPQUFPO01BQ0xsQixNQUFNLEVBQUUsQ0FDTixJQUFJN0ksdUVBQXNCLENBQUM7UUFDekJ3RSxNQUFNLEVBQUV0RSw2RUFBNEIsQ0FBQzRJLHFCQUFxQjtRQUMxRHBFLE9BQU8sRUFBRTtNQUNYLENBQUMsQ0FBQztJQUVOLENBQUM7RUFDSDtFQUNBLE9BQU87SUFBRW5ELElBQUksRUFBRWlIO0VBQVEsQ0FBQztBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2JhY2tlbmQvZGlzdC9jaHVuay1MMjNZRElNNy5tanM/NjM2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBUb2tlblZlcmlmaWNhdGlvbkVycm9yLFxuICBUb2tlblZlcmlmaWNhdGlvbkVycm9yQWN0aW9uLFxuICBUb2tlblZlcmlmaWNhdGlvbkVycm9yUmVhc29uXG59IGZyb20gXCIuL2NodW5rLTNBUklUSEdFLm1qc1wiO1xuXG4vLyBzcmMvcnVudGltZS50c1xuaW1wb3J0IHsgd2ViY3J5cHRvIGFzIGNyeXB0byB9IGZyb20gXCIjY3J5cHRvXCI7XG52YXIgZ2xvYmFsRmV0Y2ggPSBmZXRjaC5iaW5kKGdsb2JhbFRoaXMpO1xudmFyIHJ1bnRpbWUgPSB7XG4gIGNyeXB0byxcbiAgZmV0Y2g6IGdsb2JhbEZldGNoLFxuICBBYm9ydENvbnRyb2xsZXI6IGdsb2JhbFRoaXMuQWJvcnRDb250cm9sbGVyLFxuICBCbG9iOiBnbG9iYWxUaGlzLkJsb2IsXG4gIEZvcm1EYXRhOiBnbG9iYWxUaGlzLkZvcm1EYXRhLFxuICBIZWFkZXJzOiBnbG9iYWxUaGlzLkhlYWRlcnMsXG4gIFJlcXVlc3Q6IGdsb2JhbFRoaXMuUmVxdWVzdCxcbiAgUmVzcG9uc2U6IGdsb2JhbFRoaXMuUmVzcG9uc2Vcbn07XG52YXIgcnVudGltZV9kZWZhdWx0ID0gcnVudGltZTtcblxuLy8gc3JjL3V0aWwvcmZjNDY0OC50c1xudmFyIGJhc2U2NHVybCA9IHtcbiAgcGFyc2Uoc3RyaW5nLCBvcHRzKSB7XG4gICAgcmV0dXJuIHBhcnNlKHN0cmluZywgYmFzZTY0VXJsRW5jb2RpbmcsIG9wdHMpO1xuICB9LFxuICBzdHJpbmdpZnkoZGF0YSwgb3B0cykge1xuICAgIHJldHVybiBzdHJpbmdpZnkoZGF0YSwgYmFzZTY0VXJsRW5jb2RpbmcsIG9wdHMpO1xuICB9XG59O1xudmFyIGJhc2U2NFVybEVuY29kaW5nID0ge1xuICBjaGFyczogXCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OS1fXCIsXG4gIGJpdHM6IDZcbn07XG5mdW5jdGlvbiBwYXJzZShzdHJpbmcsIGVuY29kaW5nLCBvcHRzID0ge30pIHtcbiAgaWYgKCFlbmNvZGluZy5jb2Rlcykge1xuICAgIGVuY29kaW5nLmNvZGVzID0ge307XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbmNvZGluZy5jaGFycy5sZW5ndGg7ICsraSkge1xuICAgICAgZW5jb2RpbmcuY29kZXNbZW5jb2RpbmcuY2hhcnNbaV1dID0gaTtcbiAgICB9XG4gIH1cbiAgaWYgKCFvcHRzLmxvb3NlICYmIHN0cmluZy5sZW5ndGggKiBlbmNvZGluZy5iaXRzICYgNykge1xuICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihcIkludmFsaWQgcGFkZGluZ1wiKTtcbiAgfVxuICBsZXQgZW5kID0gc3RyaW5nLmxlbmd0aDtcbiAgd2hpbGUgKHN0cmluZ1tlbmQgLSAxXSA9PT0gXCI9XCIpIHtcbiAgICAtLWVuZDtcbiAgICBpZiAoIW9wdHMubG9vc2UgJiYgISgoc3RyaW5nLmxlbmd0aCAtIGVuZCkgKiBlbmNvZGluZy5iaXRzICYgNykpIHtcbiAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihcIkludmFsaWQgcGFkZGluZ1wiKTtcbiAgICB9XG4gIH1cbiAgY29uc3Qgb3V0ID0gbmV3IChvcHRzLm91dCA/PyBVaW50OEFycmF5KShlbmQgKiBlbmNvZGluZy5iaXRzIC8gOCB8IDApO1xuICBsZXQgYml0cyA9IDA7XG4gIGxldCBidWZmZXIgPSAwO1xuICBsZXQgd3JpdHRlbiA9IDA7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZW5kOyArK2kpIHtcbiAgICBjb25zdCB2YWx1ZSA9IGVuY29kaW5nLmNvZGVzW3N0cmluZ1tpXV07XG4gICAgaWYgKHZhbHVlID09PSB2b2lkIDApIHtcbiAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihcIkludmFsaWQgY2hhcmFjdGVyIFwiICsgc3RyaW5nW2ldKTtcbiAgICB9XG4gICAgYnVmZmVyID0gYnVmZmVyIDw8IGVuY29kaW5nLmJpdHMgfCB2YWx1ZTtcbiAgICBiaXRzICs9IGVuY29kaW5nLmJpdHM7XG4gICAgaWYgKGJpdHMgPj0gOCkge1xuICAgICAgYml0cyAtPSA4O1xuICAgICAgb3V0W3dyaXR0ZW4rK10gPSAyNTUgJiBidWZmZXIgPj4gYml0cztcbiAgICB9XG4gIH1cbiAgaWYgKGJpdHMgPj0gZW5jb2RpbmcuYml0cyB8fCAyNTUgJiBidWZmZXIgPDwgOCAtIGJpdHMpIHtcbiAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJVbmV4cGVjdGVkIGVuZCBvZiBkYXRhXCIpO1xuICB9XG4gIHJldHVybiBvdXQ7XG59XG5mdW5jdGlvbiBzdHJpbmdpZnkoZGF0YSwgZW5jb2RpbmcsIG9wdHMgPSB7fSkge1xuICBjb25zdCB7IHBhZCA9IHRydWUgfSA9IG9wdHM7XG4gIGNvbnN0IG1hc2sgPSAoMSA8PCBlbmNvZGluZy5iaXRzKSAtIDE7XG4gIGxldCBvdXQgPSBcIlwiO1xuICBsZXQgYml0cyA9IDA7XG4gIGxldCBidWZmZXIgPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyArK2kpIHtcbiAgICBidWZmZXIgPSBidWZmZXIgPDwgOCB8IDI1NSAmIGRhdGFbaV07XG4gICAgYml0cyArPSA4O1xuICAgIHdoaWxlIChiaXRzID4gZW5jb2RpbmcuYml0cykge1xuICAgICAgYml0cyAtPSBlbmNvZGluZy5iaXRzO1xuICAgICAgb3V0ICs9IGVuY29kaW5nLmNoYXJzW21hc2sgJiBidWZmZXIgPj4gYml0c107XG4gICAgfVxuICB9XG4gIGlmIChiaXRzKSB7XG4gICAgb3V0ICs9IGVuY29kaW5nLmNoYXJzW21hc2sgJiBidWZmZXIgPDwgZW5jb2RpbmcuYml0cyAtIGJpdHNdO1xuICB9XG4gIGlmIChwYWQpIHtcbiAgICB3aGlsZSAob3V0Lmxlbmd0aCAqIGVuY29kaW5nLmJpdHMgJiA3KSB7XG4gICAgICBvdXQgKz0gXCI9XCI7XG4gICAgfVxuICB9XG4gIHJldHVybiBvdXQ7XG59XG5cbi8vIHNyYy9qd3QvYWxnb3JpdGhtcy50c1xudmFyIGFsZ1RvSGFzaCA9IHtcbiAgUlMyNTY6IFwiU0hBLTI1NlwiLFxuICBSUzM4NDogXCJTSEEtMzg0XCIsXG4gIFJTNTEyOiBcIlNIQS01MTJcIlxufTtcbnZhciBSU0FfQUxHT1JJVEhNX05BTUUgPSBcIlJTQVNTQS1QS0NTMS12MV81XCI7XG52YXIgandrc0FsZ1RvQ3J5cHRvQWxnID0ge1xuICBSUzI1NjogUlNBX0FMR09SSVRITV9OQU1FLFxuICBSUzM4NDogUlNBX0FMR09SSVRITV9OQU1FLFxuICBSUzUxMjogUlNBX0FMR09SSVRITV9OQU1FXG59O1xudmFyIGFsZ3MgPSBPYmplY3Qua2V5cyhhbGdUb0hhc2gpO1xuZnVuY3Rpb24gZ2V0Q3J5cHRvQWxnb3JpdGhtKGFsZ29yaXRobU5hbWUpIHtcbiAgY29uc3QgaGFzaCA9IGFsZ1RvSGFzaFthbGdvcml0aG1OYW1lXTtcbiAgY29uc3QgbmFtZSA9IGp3a3NBbGdUb0NyeXB0b0FsZ1thbGdvcml0aG1OYW1lXTtcbiAgaWYgKCFoYXNoIHx8ICFuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBhbGdvcml0aG0gJHthbGdvcml0aG1OYW1lfSwgZXhwZWN0ZWQgb25lIG9mICR7YWxncy5qb2luKFwiLFwiKX0uYCk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBoYXNoOiB7IG5hbWU6IGFsZ1RvSGFzaFthbGdvcml0aG1OYW1lXSB9LFxuICAgIG5hbWU6IGp3a3NBbGdUb0NyeXB0b0FsZ1thbGdvcml0aG1OYW1lXVxuICB9O1xufVxuXG4vLyBzcmMvand0L2Fzc2VydGlvbnMudHNcbnZhciBpc0FycmF5U3RyaW5nID0gKHMpID0+IHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkocykgJiYgcy5sZW5ndGggPiAwICYmIHMuZXZlcnkoKGEpID0+IHR5cGVvZiBhID09PSBcInN0cmluZ1wiKTtcbn07XG52YXIgYXNzZXJ0QXVkaWVuY2VDbGFpbSA9IChhdWQsIGF1ZGllbmNlKSA9PiB7XG4gIGNvbnN0IGF1ZGllbmNlTGlzdCA9IFthdWRpZW5jZV0uZmxhdCgpLmZpbHRlcigoYSkgPT4gISFhKTtcbiAgY29uc3QgYXVkTGlzdCA9IFthdWRdLmZsYXQoKS5maWx0ZXIoKGEpID0+ICEhYSk7XG4gIGNvbnN0IHNob3VsZFZlcmlmeUF1ZGllbmNlID0gYXVkaWVuY2VMaXN0Lmxlbmd0aCA+IDAgJiYgYXVkTGlzdC5sZW5ndGggPiAwO1xuICBpZiAoIXNob3VsZFZlcmlmeUF1ZGllbmNlKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmICh0eXBlb2YgYXVkID09PSBcInN0cmluZ1wiKSB7XG4gICAgaWYgKCFhdWRpZW5jZUxpc3QuaW5jbHVkZXMoYXVkKSkge1xuICAgICAgdGhyb3cgbmV3IFRva2VuVmVyaWZpY2F0aW9uRXJyb3Ioe1xuICAgICAgICBhY3Rpb246IFRva2VuVmVyaWZpY2F0aW9uRXJyb3JBY3Rpb24uRW5zdXJlQ2xlcmtKV1QsXG4gICAgICAgIHJlYXNvbjogVG9rZW5WZXJpZmljYXRpb25FcnJvclJlYXNvbi5Ub2tlblZlcmlmaWNhdGlvbkZhaWxlZCxcbiAgICAgICAgbWVzc2FnZTogYEludmFsaWQgSldUIGF1ZGllbmNlIGNsYWltIChhdWQpICR7SlNPTi5zdHJpbmdpZnkoYXVkKX0uIElzIG5vdCBpbmNsdWRlZCBpbiBcIiR7SlNPTi5zdHJpbmdpZnkoXG4gICAgICAgICAgYXVkaWVuY2VMaXN0XG4gICAgICAgICl9XCIuYFxuICAgICAgfSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKGlzQXJyYXlTdHJpbmcoYXVkKSkge1xuICAgIGlmICghYXVkLnNvbWUoKGEpID0+IGF1ZGllbmNlTGlzdC5pbmNsdWRlcyhhKSkpIHtcbiAgICAgIHRocm93IG5ldyBUb2tlblZlcmlmaWNhdGlvbkVycm9yKHtcbiAgICAgICAgYWN0aW9uOiBUb2tlblZlcmlmaWNhdGlvbkVycm9yQWN0aW9uLkVuc3VyZUNsZXJrSldULFxuICAgICAgICByZWFzb246IFRva2VuVmVyaWZpY2F0aW9uRXJyb3JSZWFzb24uVG9rZW5WZXJpZmljYXRpb25GYWlsZWQsXG4gICAgICAgIG1lc3NhZ2U6IGBJbnZhbGlkIEpXVCBhdWRpZW5jZSBjbGFpbSBhcnJheSAoYXVkKSAke0pTT04uc3RyaW5naWZ5KGF1ZCl9LiBJcyBub3QgaW5jbHVkZWQgaW4gXCIke0pTT04uc3RyaW5naWZ5KFxuICAgICAgICAgIGF1ZGllbmNlTGlzdFxuICAgICAgICApfVwiLmBcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufTtcbnZhciBhc3NlcnRIZWFkZXJUeXBlID0gKHR5cCkgPT4ge1xuICBpZiAodHlwZW9mIHR5cCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAodHlwICE9PSBcIkpXVFwiKSB7XG4gICAgdGhyb3cgbmV3IFRva2VuVmVyaWZpY2F0aW9uRXJyb3Ioe1xuICAgICAgYWN0aW9uOiBUb2tlblZlcmlmaWNhdGlvbkVycm9yQWN0aW9uLkVuc3VyZUNsZXJrSldULFxuICAgICAgcmVhc29uOiBUb2tlblZlcmlmaWNhdGlvbkVycm9yUmVhc29uLlRva2VuSW52YWxpZCxcbiAgICAgIG1lc3NhZ2U6IGBJbnZhbGlkIEpXVCB0eXBlICR7SlNPTi5zdHJpbmdpZnkodHlwKX0uIEV4cGVjdGVkIFwiSldUXCIuYFxuICAgIH0pO1xuICB9XG59O1xudmFyIGFzc2VydEhlYWRlckFsZ29yaXRobSA9IChhbGcpID0+IHtcbiAgaWYgKCFhbGdzLmluY2x1ZGVzKGFsZykpIHtcbiAgICB0aHJvdyBuZXcgVG9rZW5WZXJpZmljYXRpb25FcnJvcih7XG4gICAgICBhY3Rpb246IFRva2VuVmVyaWZpY2F0aW9uRXJyb3JBY3Rpb24uRW5zdXJlQ2xlcmtKV1QsXG4gICAgICByZWFzb246IFRva2VuVmVyaWZpY2F0aW9uRXJyb3JSZWFzb24uVG9rZW5JbnZhbGlkQWxnb3JpdGhtLFxuICAgICAgbWVzc2FnZTogYEludmFsaWQgSldUIGFsZ29yaXRobSAke0pTT04uc3RyaW5naWZ5KGFsZyl9LiBTdXBwb3J0ZWQ6ICR7YWxnc30uYFxuICAgIH0pO1xuICB9XG59O1xudmFyIGFzc2VydFN1YkNsYWltID0gKHN1YikgPT4ge1xuICBpZiAodHlwZW9mIHN1YiAhPT0gXCJzdHJpbmdcIikge1xuICAgIHRocm93IG5ldyBUb2tlblZlcmlmaWNhdGlvbkVycm9yKHtcbiAgICAgIGFjdGlvbjogVG9rZW5WZXJpZmljYXRpb25FcnJvckFjdGlvbi5FbnN1cmVDbGVya0pXVCxcbiAgICAgIHJlYXNvbjogVG9rZW5WZXJpZmljYXRpb25FcnJvclJlYXNvbi5Ub2tlblZlcmlmaWNhdGlvbkZhaWxlZCxcbiAgICAgIG1lc3NhZ2U6IGBTdWJqZWN0IGNsYWltIChzdWIpIGlzIHJlcXVpcmVkIGFuZCBtdXN0IGJlIGEgc3RyaW5nLiBSZWNlaXZlZCAke0pTT04uc3RyaW5naWZ5KHN1Yil9LmBcbiAgICB9KTtcbiAgfVxufTtcbnZhciBhc3NlcnRBdXRob3JpemVkUGFydGllc0NsYWltID0gKGF6cCwgYXV0aG9yaXplZFBhcnRpZXMpID0+IHtcbiAgaWYgKCFhenAgfHwgIWF1dGhvcml6ZWRQYXJ0aWVzIHx8IGF1dGhvcml6ZWRQYXJ0aWVzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoIWF1dGhvcml6ZWRQYXJ0aWVzLmluY2x1ZGVzKGF6cCkpIHtcbiAgICB0aHJvdyBuZXcgVG9rZW5WZXJpZmljYXRpb25FcnJvcih7XG4gICAgICByZWFzb246IFRva2VuVmVyaWZpY2F0aW9uRXJyb3JSZWFzb24uVG9rZW5JbnZhbGlkQXV0aG9yaXplZFBhcnRpZXMsXG4gICAgICBtZXNzYWdlOiBgSW52YWxpZCBKV1QgQXV0aG9yaXplZCBwYXJ0eSBjbGFpbSAoYXpwKSAke0pTT04uc3RyaW5naWZ5KGF6cCl9LiBFeHBlY3RlZCBcIiR7YXV0aG9yaXplZFBhcnRpZXN9XCIuYFxuICAgIH0pO1xuICB9XG59O1xudmFyIGFzc2VydEV4cGlyYXRpb25DbGFpbSA9IChleHAsIGNsb2NrU2tld0luTXMpID0+IHtcbiAgaWYgKHR5cGVvZiBleHAgIT09IFwibnVtYmVyXCIpIHtcbiAgICB0aHJvdyBuZXcgVG9rZW5WZXJpZmljYXRpb25FcnJvcih7XG4gICAgICBhY3Rpb246IFRva2VuVmVyaWZpY2F0aW9uRXJyb3JBY3Rpb24uRW5zdXJlQ2xlcmtKV1QsXG4gICAgICByZWFzb246IFRva2VuVmVyaWZpY2F0aW9uRXJyb3JSZWFzb24uVG9rZW5WZXJpZmljYXRpb25GYWlsZWQsXG4gICAgICBtZXNzYWdlOiBgSW52YWxpZCBKV1QgZXhwaXJ5IGRhdGUgY2xhaW0gKGV4cCkgJHtKU09OLnN0cmluZ2lmeShleHApfS4gRXhwZWN0ZWQgbnVtYmVyLmBcbiAgICB9KTtcbiAgfVxuICBjb25zdCBjdXJyZW50RGF0ZSA9IG5ldyBEYXRlKERhdGUubm93KCkpO1xuICBjb25zdCBleHBpcnlEYXRlID0gLyogQF9fUFVSRV9fICovIG5ldyBEYXRlKDApO1xuICBleHBpcnlEYXRlLnNldFVUQ1NlY29uZHMoZXhwKTtcbiAgY29uc3QgZXhwaXJlZCA9IGV4cGlyeURhdGUuZ2V0VGltZSgpIDw9IGN1cnJlbnREYXRlLmdldFRpbWUoKSAtIGNsb2NrU2tld0luTXM7XG4gIGlmIChleHBpcmVkKSB7XG4gICAgdGhyb3cgbmV3IFRva2VuVmVyaWZpY2F0aW9uRXJyb3Ioe1xuICAgICAgcmVhc29uOiBUb2tlblZlcmlmaWNhdGlvbkVycm9yUmVhc29uLlRva2VuRXhwaXJlZCxcbiAgICAgIG1lc3NhZ2U6IGBKV1QgaXMgZXhwaXJlZC4gRXhwaXJ5IGRhdGU6ICR7ZXhwaXJ5RGF0ZS50b1VUQ1N0cmluZygpfSwgQ3VycmVudCBkYXRlOiAke2N1cnJlbnREYXRlLnRvVVRDU3RyaW5nKCl9LmBcbiAgICB9KTtcbiAgfVxufTtcbnZhciBhc3NlcnRBY3RpdmF0aW9uQ2xhaW0gPSAobmJmLCBjbG9ja1NrZXdJbk1zKSA9PiB7XG4gIGlmICh0eXBlb2YgbmJmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmICh0eXBlb2YgbmJmICE9PSBcIm51bWJlclwiKSB7XG4gICAgdGhyb3cgbmV3IFRva2VuVmVyaWZpY2F0aW9uRXJyb3Ioe1xuICAgICAgYWN0aW9uOiBUb2tlblZlcmlmaWNhdGlvbkVycm9yQWN0aW9uLkVuc3VyZUNsZXJrSldULFxuICAgICAgcmVhc29uOiBUb2tlblZlcmlmaWNhdGlvbkVycm9yUmVhc29uLlRva2VuVmVyaWZpY2F0aW9uRmFpbGVkLFxuICAgICAgbWVzc2FnZTogYEludmFsaWQgSldUIG5vdCBiZWZvcmUgZGF0ZSBjbGFpbSAobmJmKSAke0pTT04uc3RyaW5naWZ5KG5iZil9LiBFeHBlY3RlZCBudW1iZXIuYFxuICAgIH0pO1xuICB9XG4gIGNvbnN0IGN1cnJlbnREYXRlID0gbmV3IERhdGUoRGF0ZS5ub3coKSk7XG4gIGNvbnN0IG5vdEJlZm9yZURhdGUgPSAvKiBAX19QVVJFX18gKi8gbmV3IERhdGUoMCk7XG4gIG5vdEJlZm9yZURhdGUuc2V0VVRDU2Vjb25kcyhuYmYpO1xuICBjb25zdCBlYXJseSA9IG5vdEJlZm9yZURhdGUuZ2V0VGltZSgpID4gY3VycmVudERhdGUuZ2V0VGltZSgpICsgY2xvY2tTa2V3SW5NcztcbiAgaWYgKGVhcmx5KSB7XG4gICAgdGhyb3cgbmV3IFRva2VuVmVyaWZpY2F0aW9uRXJyb3Ioe1xuICAgICAgcmVhc29uOiBUb2tlblZlcmlmaWNhdGlvbkVycm9yUmVhc29uLlRva2VuTm90QWN0aXZlWWV0LFxuICAgICAgbWVzc2FnZTogYEpXVCBjYW5ub3QgYmUgdXNlZCBwcmlvciB0byBub3QgYmVmb3JlIGRhdGUgY2xhaW0gKG5iZikuIE5vdCBiZWZvcmUgZGF0ZTogJHtub3RCZWZvcmVEYXRlLnRvVVRDU3RyaW5nKCl9OyBDdXJyZW50IGRhdGU6ICR7Y3VycmVudERhdGUudG9VVENTdHJpbmcoKX07YFxuICAgIH0pO1xuICB9XG59O1xudmFyIGFzc2VydElzc3VlZEF0Q2xhaW0gPSAoaWF0LCBjbG9ja1NrZXdJbk1zKSA9PiB7XG4gIGlmICh0eXBlb2YgaWF0ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmICh0eXBlb2YgaWF0ICE9PSBcIm51bWJlclwiKSB7XG4gICAgdGhyb3cgbmV3IFRva2VuVmVyaWZpY2F0aW9uRXJyb3Ioe1xuICAgICAgYWN0aW9uOiBUb2tlblZlcmlmaWNhdGlvbkVycm9yQWN0aW9uLkVuc3VyZUNsZXJrSldULFxuICAgICAgcmVhc29uOiBUb2tlblZlcmlmaWNhdGlvbkVycm9yUmVhc29uLlRva2VuVmVyaWZpY2F0aW9uRmFpbGVkLFxuICAgICAgbWVzc2FnZTogYEludmFsaWQgSldUIGlzc3VlZCBhdCBkYXRlIGNsYWltIChpYXQpICR7SlNPTi5zdHJpbmdpZnkoaWF0KX0uIEV4cGVjdGVkIG51bWJlci5gXG4gICAgfSk7XG4gIH1cbiAgY29uc3QgY3VycmVudERhdGUgPSBuZXcgRGF0ZShEYXRlLm5vdygpKTtcbiAgY29uc3QgaXNzdWVkQXREYXRlID0gLyogQF9fUFVSRV9fICovIG5ldyBEYXRlKDApO1xuICBpc3N1ZWRBdERhdGUuc2V0VVRDU2Vjb25kcyhpYXQpO1xuICBjb25zdCBwb3N0SXNzdWVkID0gaXNzdWVkQXREYXRlLmdldFRpbWUoKSA+IGN1cnJlbnREYXRlLmdldFRpbWUoKSArIGNsb2NrU2tld0luTXM7XG4gIGlmIChwb3N0SXNzdWVkKSB7XG4gICAgdGhyb3cgbmV3IFRva2VuVmVyaWZpY2F0aW9uRXJyb3Ioe1xuICAgICAgcmVhc29uOiBUb2tlblZlcmlmaWNhdGlvbkVycm9yUmVhc29uLlRva2VuTm90QWN0aXZlWWV0LFxuICAgICAgbWVzc2FnZTogYEpXVCBpc3N1ZWQgYXQgZGF0ZSBjbGFpbSAoaWF0KSBpcyBpbiB0aGUgZnV0dXJlLiBJc3N1ZWQgYXQgZGF0ZTogJHtpc3N1ZWRBdERhdGUudG9VVENTdHJpbmcoKX07IEN1cnJlbnQgZGF0ZTogJHtjdXJyZW50RGF0ZS50b1VUQ1N0cmluZygpfTtgXG4gICAgfSk7XG4gIH1cbn07XG5cbi8vIHNyYy9qd3QvY3J5cHRvS2V5cy50c1xuaW1wb3J0IHsgaXNvbW9ycGhpY0F0b2IgfSBmcm9tIFwiQGNsZXJrL3NoYXJlZC9pc29tb3JwaGljQXRvYlwiO1xuZnVuY3Rpb24gcGVtVG9CdWZmZXIoc2VjcmV0KSB7XG4gIGNvbnN0IHRyaW1tZWQgPSBzZWNyZXQucmVwbGFjZSgvLS0tLS1CRUdJTi4qPy0tLS0tL2csIFwiXCIpLnJlcGxhY2UoLy0tLS0tRU5ELio/LS0tLS0vZywgXCJcIikucmVwbGFjZSgvXFxzL2csIFwiXCIpO1xuICBjb25zdCBkZWNvZGVkID0gaXNvbW9ycGhpY0F0b2IodHJpbW1lZCk7XG4gIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihkZWNvZGVkLmxlbmd0aCk7XG4gIGNvbnN0IGJ1ZlZpZXcgPSBuZXcgVWludDhBcnJheShidWZmZXIpO1xuICBmb3IgKGxldCBpID0gMCwgc3RyTGVuID0gZGVjb2RlZC5sZW5ndGg7IGkgPCBzdHJMZW47IGkrKykge1xuICAgIGJ1ZlZpZXdbaV0gPSBkZWNvZGVkLmNoYXJDb2RlQXQoaSk7XG4gIH1cbiAgcmV0dXJuIGJ1ZlZpZXc7XG59XG5mdW5jdGlvbiBpbXBvcnRLZXkoa2V5LCBhbGdvcml0aG0sIGtleVVzYWdlKSB7XG4gIGlmICh0eXBlb2Yga2V5ID09PSBcIm9iamVjdFwiKSB7XG4gICAgcmV0dXJuIHJ1bnRpbWVfZGVmYXVsdC5jcnlwdG8uc3VidGxlLmltcG9ydEtleShcImp3a1wiLCBrZXksIGFsZ29yaXRobSwgZmFsc2UsIFtrZXlVc2FnZV0pO1xuICB9XG4gIGNvbnN0IGtleURhdGEgPSBwZW1Ub0J1ZmZlcihrZXkpO1xuICBjb25zdCBmb3JtYXQgPSBrZXlVc2FnZSA9PT0gXCJzaWduXCIgPyBcInBrY3M4XCIgOiBcInNwa2lcIjtcbiAgcmV0dXJuIHJ1bnRpbWVfZGVmYXVsdC5jcnlwdG8uc3VidGxlLmltcG9ydEtleShmb3JtYXQsIGtleURhdGEsIGFsZ29yaXRobSwgZmFsc2UsIFtrZXlVc2FnZV0pO1xufVxuXG4vLyBzcmMvand0L3ZlcmlmeUp3dC50c1xudmFyIERFRkFVTFRfQ0xPQ0tfU0tFV19JTl9TRUNPTkRTID0gNSAqIDFlMztcbmFzeW5jIGZ1bmN0aW9uIGhhc1ZhbGlkU2lnbmF0dXJlKGp3dCwga2V5KSB7XG4gIGNvbnN0IHsgaGVhZGVyLCBzaWduYXR1cmUsIHJhdyB9ID0gand0O1xuICBjb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG4gIGNvbnN0IGRhdGEgPSBlbmNvZGVyLmVuY29kZShbcmF3LmhlYWRlciwgcmF3LnBheWxvYWRdLmpvaW4oXCIuXCIpKTtcbiAgY29uc3QgYWxnb3JpdGhtID0gZ2V0Q3J5cHRvQWxnb3JpdGhtKGhlYWRlci5hbGcpO1xuICB0cnkge1xuICAgIGNvbnN0IGNyeXB0b0tleSA9IGF3YWl0IGltcG9ydEtleShrZXksIGFsZ29yaXRobSwgXCJ2ZXJpZnlcIik7XG4gICAgY29uc3QgdmVyaWZpZWQgPSBhd2FpdCBydW50aW1lX2RlZmF1bHQuY3J5cHRvLnN1YnRsZS52ZXJpZnkoYWxnb3JpdGhtLm5hbWUsIGNyeXB0b0tleSwgc2lnbmF0dXJlLCBkYXRhKTtcbiAgICByZXR1cm4geyBkYXRhOiB2ZXJpZmllZCB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB7XG4gICAgICBlcnJvcnM6IFtcbiAgICAgICAgbmV3IFRva2VuVmVyaWZpY2F0aW9uRXJyb3Ioe1xuICAgICAgICAgIHJlYXNvbjogVG9rZW5WZXJpZmljYXRpb25FcnJvclJlYXNvbi5Ub2tlbkludmFsaWRTaWduYXR1cmUsXG4gICAgICAgICAgbWVzc2FnZTogZXJyb3I/Lm1lc3NhZ2VcbiAgICAgICAgfSlcbiAgICAgIF1cbiAgICB9O1xuICB9XG59XG5mdW5jdGlvbiBkZWNvZGVKd3QodG9rZW4pIHtcbiAgY29uc3QgdG9rZW5QYXJ0cyA9ICh0b2tlbiB8fCBcIlwiKS50b1N0cmluZygpLnNwbGl0KFwiLlwiKTtcbiAgaWYgKHRva2VuUGFydHMubGVuZ3RoICE9PSAzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGVycm9yczogW1xuICAgICAgICBuZXcgVG9rZW5WZXJpZmljYXRpb25FcnJvcih7XG4gICAgICAgICAgcmVhc29uOiBUb2tlblZlcmlmaWNhdGlvbkVycm9yUmVhc29uLlRva2VuSW52YWxpZCxcbiAgICAgICAgICBtZXNzYWdlOiBgSW52YWxpZCBKV1QgZm9ybS4gQSBKV1QgY29uc2lzdHMgb2YgdGhyZWUgcGFydHMgc2VwYXJhdGVkIGJ5IGRvdHMuYFxuICAgICAgICB9KVxuICAgICAgXVxuICAgIH07XG4gIH1cbiAgY29uc3QgW3Jhd0hlYWRlciwgcmF3UGF5bG9hZCwgcmF3U2lnbmF0dXJlXSA9IHRva2VuUGFydHM7XG4gIGNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbiAgY29uc3QgaGVhZGVyID0gSlNPTi5wYXJzZShkZWNvZGVyLmRlY29kZShiYXNlNjR1cmwucGFyc2UocmF3SGVhZGVyLCB7IGxvb3NlOiB0cnVlIH0pKSk7XG4gIGNvbnN0IHBheWxvYWQgPSBKU09OLnBhcnNlKGRlY29kZXIuZGVjb2RlKGJhc2U2NHVybC5wYXJzZShyYXdQYXlsb2FkLCB7IGxvb3NlOiB0cnVlIH0pKSk7XG4gIGNvbnN0IHNpZ25hdHVyZSA9IGJhc2U2NHVybC5wYXJzZShyYXdTaWduYXR1cmUsIHsgbG9vc2U6IHRydWUgfSk7XG4gIGNvbnN0IGRhdGEgPSB7XG4gICAgaGVhZGVyLFxuICAgIHBheWxvYWQsXG4gICAgc2lnbmF0dXJlLFxuICAgIHJhdzoge1xuICAgICAgaGVhZGVyOiByYXdIZWFkZXIsXG4gICAgICBwYXlsb2FkOiByYXdQYXlsb2FkLFxuICAgICAgc2lnbmF0dXJlOiByYXdTaWduYXR1cmUsXG4gICAgICB0ZXh0OiB0b2tlblxuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHsgZGF0YSB9O1xufVxuYXN5bmMgZnVuY3Rpb24gdmVyaWZ5Snd0KHRva2VuLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgYXVkaWVuY2UsIGF1dGhvcml6ZWRQYXJ0aWVzLCBjbG9ja1NrZXdJbk1zLCBrZXkgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGNsb2NrU2tldyA9IGNsb2NrU2tld0luTXMgfHwgREVGQVVMVF9DTE9DS19TS0VXX0lOX1NFQ09ORFM7XG4gIGNvbnN0IHsgZGF0YTogZGVjb2RlZCwgZXJyb3JzIH0gPSBkZWNvZGVKd3QodG9rZW4pO1xuICBpZiAoZXJyb3JzKSB7XG4gICAgcmV0dXJuIHsgZXJyb3JzIH07XG4gIH1cbiAgY29uc3QgeyBoZWFkZXIsIHBheWxvYWQgfSA9IGRlY29kZWQ7XG4gIHRyeSB7XG4gICAgY29uc3QgeyB0eXAsIGFsZyB9ID0gaGVhZGVyO1xuICAgIGFzc2VydEhlYWRlclR5cGUodHlwKTtcbiAgICBhc3NlcnRIZWFkZXJBbGdvcml0aG0oYWxnKTtcbiAgICBjb25zdCB7IGF6cCwgc3ViLCBhdWQsIGlhdCwgZXhwLCBuYmYgfSA9IHBheWxvYWQ7XG4gICAgYXNzZXJ0U3ViQ2xhaW0oc3ViKTtcbiAgICBhc3NlcnRBdWRpZW5jZUNsYWltKFthdWRdLCBbYXVkaWVuY2VdKTtcbiAgICBhc3NlcnRBdXRob3JpemVkUGFydGllc0NsYWltKGF6cCwgYXV0aG9yaXplZFBhcnRpZXMpO1xuICAgIGFzc2VydEV4cGlyYXRpb25DbGFpbShleHAsIGNsb2NrU2tldyk7XG4gICAgYXNzZXJ0QWN0aXZhdGlvbkNsYWltKG5iZiwgY2xvY2tTa2V3KTtcbiAgICBhc3NlcnRJc3N1ZWRBdENsYWltKGlhdCwgY2xvY2tTa2V3KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIHsgZXJyb3JzOiBbZXJyXSB9O1xuICB9XG4gIGNvbnN0IHsgZGF0YTogc2lnbmF0dXJlVmFsaWQsIGVycm9yczogc2lnbmF0dXJlRXJyb3JzIH0gPSBhd2FpdCBoYXNWYWxpZFNpZ25hdHVyZShkZWNvZGVkLCBrZXkpO1xuICBpZiAoc2lnbmF0dXJlRXJyb3JzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGVycm9yczogW1xuICAgICAgICBuZXcgVG9rZW5WZXJpZmljYXRpb25FcnJvcih7XG4gICAgICAgICAgYWN0aW9uOiBUb2tlblZlcmlmaWNhdGlvbkVycm9yQWN0aW9uLkVuc3VyZUNsZXJrSldULFxuICAgICAgICAgIHJlYXNvbjogVG9rZW5WZXJpZmljYXRpb25FcnJvclJlYXNvbi5Ub2tlblZlcmlmaWNhdGlvbkZhaWxlZCxcbiAgICAgICAgICBtZXNzYWdlOiBgRXJyb3IgdmVyaWZ5aW5nIEpXVCBzaWduYXR1cmUuICR7c2lnbmF0dXJlRXJyb3JzWzBdfWBcbiAgICAgICAgfSlcbiAgICAgIF1cbiAgICB9O1xuICB9XG4gIGlmICghc2lnbmF0dXJlVmFsaWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZXJyb3JzOiBbXG4gICAgICAgIG5ldyBUb2tlblZlcmlmaWNhdGlvbkVycm9yKHtcbiAgICAgICAgICByZWFzb246IFRva2VuVmVyaWZpY2F0aW9uRXJyb3JSZWFzb24uVG9rZW5JbnZhbGlkU2lnbmF0dXJlLFxuICAgICAgICAgIG1lc3NhZ2U6IFwiSldUIHNpZ25hdHVyZSBpcyBpbnZhbGlkLlwiXG4gICAgICAgIH0pXG4gICAgICBdXG4gICAgfTtcbiAgfVxuICByZXR1cm4geyBkYXRhOiBwYXlsb2FkIH07XG59XG5cbmV4cG9ydCB7XG4gIHJ1bnRpbWVfZGVmYXVsdCxcbiAgYmFzZTY0dXJsLFxuICBnZXRDcnlwdG9BbGdvcml0aG0sXG4gIGFzc2VydEhlYWRlclR5cGUsXG4gIGFzc2VydEhlYWRlckFsZ29yaXRobSxcbiAgaW1wb3J0S2V5LFxuICBoYXNWYWxpZFNpZ25hdHVyZSxcbiAgZGVjb2RlSnd0LFxuICB2ZXJpZnlKd3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1MMjNZRElNNy5tanMubWFwIl0sIm5hbWVzIjpbIlRva2VuVmVyaWZpY2F0aW9uRXJyb3IiLCJUb2tlblZlcmlmaWNhdGlvbkVycm9yQWN0aW9uIiwiVG9rZW5WZXJpZmljYXRpb25FcnJvclJlYXNvbiIsIndlYmNyeXB0byIsImNyeXB0byIsImdsb2JhbEZldGNoIiwiZmV0Y2giLCJiaW5kIiwiZ2xvYmFsVGhpcyIsInJ1bnRpbWUiLCJBYm9ydENvbnRyb2xsZXIiLCJCbG9iIiwiRm9ybURhdGEiLCJIZWFkZXJzIiwiUmVxdWVzdCIsIlJlc3BvbnNlIiwicnVudGltZV9kZWZhdWx0IiwiYmFzZTY0dXJsIiwicGFyc2UiLCJzdHJpbmciLCJvcHRzIiwiYmFzZTY0VXJsRW5jb2RpbmciLCJzdHJpbmdpZnkiLCJkYXRhIiwiY2hhcnMiLCJiaXRzIiwiZW5jb2RpbmciLCJjb2RlcyIsImkiLCJsZW5ndGgiLCJsb29zZSIsIlN5bnRheEVycm9yIiwiZW5kIiwib3V0IiwiVWludDhBcnJheSIsImJ1ZmZlciIsIndyaXR0ZW4iLCJ2YWx1ZSIsInBhZCIsIm1hc2siLCJhbGdUb0hhc2giLCJSUzI1NiIsIlJTMzg0IiwiUlM1MTIiLCJSU0FfQUxHT1JJVEhNX05BTUUiLCJqd2tzQWxnVG9DcnlwdG9BbGciLCJhbGdzIiwiT2JqZWN0Iiwia2V5cyIsImdldENyeXB0b0FsZ29yaXRobSIsImFsZ29yaXRobU5hbWUiLCJoYXNoIiwibmFtZSIsIkVycm9yIiwiam9pbiIsImlzQXJyYXlTdHJpbmciLCJzIiwiQXJyYXkiLCJpc0FycmF5IiwiZXZlcnkiLCJhIiwiYXNzZXJ0QXVkaWVuY2VDbGFpbSIsImF1ZCIsImF1ZGllbmNlIiwiYXVkaWVuY2VMaXN0IiwiZmxhdCIsImZpbHRlciIsImF1ZExpc3QiLCJzaG91bGRWZXJpZnlBdWRpZW5jZSIsImluY2x1ZGVzIiwiYWN0aW9uIiwiRW5zdXJlQ2xlcmtKV1QiLCJyZWFzb24iLCJUb2tlblZlcmlmaWNhdGlvbkZhaWxlZCIsIm1lc3NhZ2UiLCJKU09OIiwic29tZSIsImFzc2VydEhlYWRlclR5cGUiLCJ0eXAiLCJUb2tlbkludmFsaWQiLCJhc3NlcnRIZWFkZXJBbGdvcml0aG0iLCJhbGciLCJUb2tlbkludmFsaWRBbGdvcml0aG0iLCJhc3NlcnRTdWJDbGFpbSIsInN1YiIsImFzc2VydEF1dGhvcml6ZWRQYXJ0aWVzQ2xhaW0iLCJhenAiLCJhdXRob3JpemVkUGFydGllcyIsIlRva2VuSW52YWxpZEF1dGhvcml6ZWRQYXJ0aWVzIiwiYXNzZXJ0RXhwaXJhdGlvbkNsYWltIiwiZXhwIiwiY2xvY2tTa2V3SW5NcyIsImN1cnJlbnREYXRlIiwiRGF0ZSIsIm5vdyIsImV4cGlyeURhdGUiLCJzZXRVVENTZWNvbmRzIiwiZXhwaXJlZCIsImdldFRpbWUiLCJUb2tlbkV4cGlyZWQiLCJ0b1VUQ1N0cmluZyIsImFzc2VydEFjdGl2YXRpb25DbGFpbSIsIm5iZiIsIm5vdEJlZm9yZURhdGUiLCJlYXJseSIsIlRva2VuTm90QWN0aXZlWWV0IiwiYXNzZXJ0SXNzdWVkQXRDbGFpbSIsImlhdCIsImlzc3VlZEF0RGF0ZSIsInBvc3RJc3N1ZWQiLCJpc29tb3JwaGljQXRvYiIsInBlbVRvQnVmZmVyIiwic2VjcmV0IiwidHJpbW1lZCIsInJlcGxhY2UiLCJkZWNvZGVkIiwiQXJyYXlCdWZmZXIiLCJidWZWaWV3Iiwic3RyTGVuIiwiY2hhckNvZGVBdCIsImltcG9ydEtleSIsImtleSIsImFsZ29yaXRobSIsImtleVVzYWdlIiwic3VidGxlIiwia2V5RGF0YSIsImZvcm1hdCIsIkRFRkFVTFRfQ0xPQ0tfU0tFV19JTl9TRUNPTkRTIiwiaGFzVmFsaWRTaWduYXR1cmUiLCJqd3QiLCJoZWFkZXIiLCJzaWduYXR1cmUiLCJyYXciLCJlbmNvZGVyIiwiVGV4dEVuY29kZXIiLCJlbmNvZGUiLCJwYXlsb2FkIiwiY3J5cHRvS2V5IiwidmVyaWZpZWQiLCJ2ZXJpZnkiLCJlcnJvciIsImVycm9ycyIsIlRva2VuSW52YWxpZFNpZ25hdHVyZSIsImRlY29kZUp3dCIsInRva2VuIiwidG9rZW5QYXJ0cyIsInRvU3RyaW5nIiwic3BsaXQiLCJyYXdIZWFkZXIiLCJyYXdQYXlsb2FkIiwicmF3U2lnbmF0dXJlIiwiZGVjb2RlciIsIlRleHREZWNvZGVyIiwiZGVjb2RlIiwidGV4dCIsInZlcmlmeUp3dCIsIm9wdGlvbnMiLCJjbG9ja1NrZXciLCJlcnIiLCJzaWduYXR1cmVWYWxpZCIsInNpZ25hdHVyZUVycm9ycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/chunk-L23YDIM7.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withLegacyReturn: () => (/* binding */ withLegacyReturn),\n/* harmony export */   withLegacySyncReturn: () => (/* binding */ withLegacySyncReturn)\n/* harmony export */ });\n// src/jwt/legacyReturn.ts\nfunction withLegacyReturn(cb) {\n  return async (...args) => {\n    const {\n      data,\n      errors\n    } = await cb(...args);\n    if (errors) {\n      throw errors[0];\n    }\n    return data;\n  };\n}\nfunction withLegacySyncReturn(cb) {\n  return (...args) => {\n    const {\n      data,\n      errors\n    } = cb(...args);\n    if (errors) {\n      throw errors[0];\n    }\n    return data;\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvY2h1bmstUDI2M05XN1oubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQSxTQUFTQSxnQkFBZ0JBLENBQUNDLEVBQUUsRUFBRTtFQUM1QixPQUFPLE9BQU8sR0FBR0MsSUFBSSxLQUFLO0lBQ3hCLE1BQU07TUFBRUMsSUFBSTtNQUFFQztJQUFPLENBQUMsR0FBRyxNQUFNSCxFQUFFLENBQUMsR0FBR0MsSUFBSSxDQUFDO0lBQzFDLElBQUlFLE1BQU0sRUFBRTtNQUNWLE1BQU1BLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDakI7SUFDQSxPQUFPRCxJQUFJO0VBQ2IsQ0FBQztBQUNIO0FBQ0EsU0FBU0Usb0JBQW9CQSxDQUFDSixFQUFFLEVBQUU7RUFDaEMsT0FBTyxDQUFDLEdBQUdDLElBQUksS0FBSztJQUNsQixNQUFNO01BQUVDLElBQUk7TUFBRUM7SUFBTyxDQUFDLEdBQUdILEVBQUUsQ0FBQyxHQUFHQyxJQUFJLENBQUM7SUFDcEMsSUFBSUUsTUFBTSxFQUFFO01BQ1YsTUFBTUEsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNqQjtJQUNBLE9BQU9ELElBQUk7RUFDYixDQUFDO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvY2h1bmstUDI2M05XN1oubWpzP2E0MGIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2p3dC9sZWdhY3lSZXR1cm4udHNcbmZ1bmN0aW9uIHdpdGhMZWdhY3lSZXR1cm4oY2IpIHtcbiAgcmV0dXJuIGFzeW5jICguLi5hcmdzKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvcnMgfSA9IGF3YWl0IGNiKC4uLmFyZ3MpO1xuICAgIGlmIChlcnJvcnMpIHtcbiAgICAgIHRocm93IGVycm9yc1swXTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH07XG59XG5mdW5jdGlvbiB3aXRoTGVnYWN5U3luY1JldHVybihjYikge1xuICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9ycyB9ID0gY2IoLi4uYXJncyk7XG4gICAgaWYgKGVycm9ycykge1xuICAgICAgdGhyb3cgZXJyb3JzWzBdO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfTtcbn1cblxuZXhwb3J0IHtcbiAgd2l0aExlZ2FjeVJldHVybixcbiAgd2l0aExlZ2FjeVN5bmNSZXR1cm5cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1QMjYzTlc3Wi5tanMubWFwIl0sIm5hbWVzIjpbIndpdGhMZWdhY3lSZXR1cm4iLCJjYiIsImFyZ3MiLCJkYXRhIiwiZXJyb3JzIiwid2l0aExlZ2FjeVN5bmNSZXR1cm4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/chunk-SK4Q2N3Q.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/chunk-SK4Q2N3Q.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthStatus: () => (/* binding */ AuthStatus),\n/* harmony export */   constants: () => (/* binding */ constants),\n/* harmony export */   createAuthenticateRequest: () => (/* binding */ createAuthenticateRequest),\n/* harmony export */   createBackendApiClient: () => (/* binding */ createBackendApiClient),\n/* harmony export */   createClerkRequest: () => (/* binding */ createClerkRequest),\n/* harmony export */   debugRequestState: () => (/* binding */ debugRequestState),\n/* harmony export */   errorThrower: () => (/* binding */ errorThrower),\n/* harmony export */   makeAuthObjectSerializable: () => (/* binding */ makeAuthObjectSerializable),\n/* harmony export */   parsePublishableKey: () => (/* reexport safe */ _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_7__.parsePublishableKey),\n/* harmony export */   signedInAuthObject: () => (/* binding */ signedInAuthObject),\n/* harmony export */   signedOutAuthObject: () => (/* binding */ signedOutAuthObject),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var _chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-L23YDIM7.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-L23YDIM7.mjs\");\n/* harmony import */ var _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-3ARITHGE.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-3ARITHGE.mjs\");\n/* harmony import */ var _clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/error */ \"(middleware)/./node_modules/@clerk/shared/dist/error.mjs\");\n/* harmony import */ var snakecase_keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! snakecase-keys */ \"(middleware)/./node_modules/snakecase-keys/index.js\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cookie */ \"(middleware)/./node_modules/cookie/index.js\");\n/* harmony import */ var _clerk_shared_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @clerk/shared/url */ \"(middleware)/./node_modules/@clerk/shared/dist/url.mjs\");\n/* harmony import */ var _clerk_shared_callWithRetry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @clerk/shared/callWithRetry */ \"(middleware)/./node_modules/@clerk/shared/dist/callWithRetry.mjs\");\n/* harmony import */ var _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @clerk/shared/keys */ \"(middleware)/./node_modules/@clerk/shared/dist/keys.mjs\");\n/* harmony import */ var _clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @clerk/shared/deprecated */ \"(middleware)/./node_modules/@clerk/shared/dist/deprecated.mjs\");\nconst _excluded = [\"organizationId\"],\n  _excluded2 = [\"limit\", \"offset\", \"orderBy\"],\n  _excluded3 = [\"debug\", \"getToken\", \"has\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n// src/constants.ts\nvar API_URL = \"https://api.clerk.com\";\nvar API_VERSION = \"v1\";\nvar USER_AGENT = `${\"@clerk/backend\"}@${\"1.0.1\"}`;\nvar MAX_CACHE_LAST_UPDATED_AT_SECONDS = 5 * 60;\nvar JWKS_CACHE_TTL_MS = 1e3 * 60 * 60;\nvar Attributes = {\n  AuthToken: \"__clerkAuthToken\",\n  AuthSignature: \"__clerkAuthSignature\",\n  AuthStatus: \"__clerkAuthStatus\",\n  AuthReason: \"__clerkAuthReason\",\n  AuthMessage: \"__clerkAuthMessage\",\n  ClerkUrl: \"__clerkUrl\"\n};\nvar Cookies = {\n  Session: \"__session\",\n  ClientUat: \"__client_uat\",\n  Handshake: \"__clerk_handshake\",\n  DevBrowser: \"__clerk_db_jwt\"\n};\nvar QueryParameters = {\n  ClerkSynced: \"__clerk_synced\",\n  ClerkRedirectUrl: \"__clerk_redirect_url\",\n  // use the reference to Cookies to indicate that it's the same value\n  DevBrowser: Cookies.DevBrowser,\n  Handshake: Cookies.Handshake,\n  HandshakeHelp: \"__clerk_help\",\n  LegacyDevBrowser: \"__dev_session\"\n};\nvar Headers2 = {\n  AuthToken: \"x-clerk-auth-token\",\n  AuthSignature: \"x-clerk-auth-signature\",\n  AuthStatus: \"x-clerk-auth-status\",\n  AuthReason: \"x-clerk-auth-reason\",\n  AuthMessage: \"x-clerk-auth-message\",\n  ClerkUrl: \"x-clerk-clerk-url\",\n  EnableDebug: \"x-clerk-debug\",\n  ClerkRedirectTo: \"x-clerk-redirect-to\",\n  CloudFrontForwardedProto: \"cloudfront-forwarded-proto\",\n  Authorization: \"authorization\",\n  ForwardedPort: \"x-forwarded-port\",\n  ForwardedProto: \"x-forwarded-proto\",\n  ForwardedHost: \"x-forwarded-host\",\n  Accept: \"accept\",\n  Referrer: \"referer\",\n  UserAgent: \"user-agent\",\n  Origin: \"origin\",\n  Host: \"host\",\n  ContentType: \"content-type\",\n  SecFetchDest: \"sec-fetch-dest\",\n  Location: \"location\"\n};\nvar ContentTypes = {\n  Json: \"application/json\"\n};\nvar constants = {\n  Attributes,\n  Cookies,\n  Headers: Headers2,\n  ContentTypes,\n  QueryParameters\n};\n\n// src/api/endpoints/AbstractApi.ts\nvar AbstractAPI = class {\n  constructor(request) {\n    this.request = request;\n  }\n  requireId(id) {\n    if (!id) {\n      throw new Error(\"A valid resource ID is required.\");\n    }\n  }\n};\n\n// src/util/path.ts\nvar SEPARATOR = \"/\";\nvar MULTIPLE_SEPARATOR_REGEX = new RegExp(\"(?<!:)\" + SEPARATOR + \"{1,}\", \"g\");\nfunction joinPaths(...args) {\n  return args.filter(p => p).join(SEPARATOR).replace(MULTIPLE_SEPARATOR_REGEX, SEPARATOR);\n}\n\n// src/api/endpoints/AllowlistIdentifierApi.ts\nvar basePath = \"/allowlist_identifiers\";\nvar AllowlistIdentifierAPI = class extends AbstractAPI {\n  async getAllowlistIdentifierList() {\n    return this.request({\n      method: \"GET\",\n      path: basePath\n    });\n  }\n  async createAllowlistIdentifier(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath,\n      bodyParams: params\n    });\n  }\n  async deleteAllowlistIdentifier(allowlistIdentifierId) {\n    this.requireId(allowlistIdentifierId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath, allowlistIdentifierId)\n    });\n  }\n};\n\n// src/api/endpoints/ClientApi.ts\nvar basePath2 = \"/clients\";\nvar ClientAPI = class extends AbstractAPI {\n  async getClientList(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: basePath2,\n      queryParams: params\n    });\n  }\n  async getClient(clientId) {\n    this.requireId(clientId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath2, clientId)\n    });\n  }\n  verifyClient(token) {\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath2, \"verify\"),\n      bodyParams: {\n        token\n      }\n    });\n  }\n};\n\n// src/api/endpoints/DomainApi.ts\nvar basePath3 = \"/domains\";\nvar DomainAPI = class extends AbstractAPI {\n  async deleteDomain(id) {\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath3, id)\n    });\n  }\n};\n\n// src/api/endpoints/EmailAddressApi.ts\nvar basePath4 = \"/email_addresses\";\nvar EmailAddressAPI = class extends AbstractAPI {\n  async getEmailAddress(emailAddressId) {\n    this.requireId(emailAddressId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath4, emailAddressId)\n    });\n  }\n  async createEmailAddress(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath4,\n      bodyParams: params\n    });\n  }\n  async updateEmailAddress(emailAddressId, params = {}) {\n    this.requireId(emailAddressId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath4, emailAddressId),\n      bodyParams: params\n    });\n  }\n  async deleteEmailAddress(emailAddressId) {\n    this.requireId(emailAddressId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath4, emailAddressId)\n    });\n  }\n};\n\n// src/api/endpoints/InvitationApi.ts\nvar basePath5 = \"/invitations\";\nvar InvitationAPI = class extends AbstractAPI {\n  async getInvitationList(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: basePath5,\n      queryParams: params\n    });\n  }\n  async createInvitation(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath5,\n      bodyParams: params\n    });\n  }\n  async revokeInvitation(invitationId) {\n    this.requireId(invitationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath5, invitationId, \"revoke\")\n    });\n  }\n};\n\n// src/api/endpoints/OrganizationApi.ts\nvar basePath6 = \"/organizations\";\nvar OrganizationAPI = class extends AbstractAPI {\n  async getOrganizationList(params) {\n    return this.request({\n      method: \"GET\",\n      path: basePath6,\n      queryParams: params\n    });\n  }\n  async createOrganization(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath6,\n      bodyParams: params\n    });\n  }\n  async getOrganization(params) {\n    const organizationIdOrSlug = \"organizationId\" in params ? params.organizationId : params.slug;\n    this.requireId(organizationIdOrSlug);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath6, organizationIdOrSlug)\n    });\n  }\n  async updateOrganization(organizationId, params) {\n    this.requireId(organizationId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath6, organizationId),\n      bodyParams: params\n    });\n  }\n  async updateOrganizationLogo(organizationId, params) {\n    this.requireId(organizationId);\n    const formData = new _chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime_default.FormData();\n    formData.append(\"file\", params?.file);\n    formData.append(\"uploader_user_id\", params?.uploaderUserId);\n    return this.request({\n      method: \"PUT\",\n      path: joinPaths(basePath6, organizationId, \"logo\"),\n      formData\n    });\n  }\n  async deleteOrganizationLogo(organizationId) {\n    this.requireId(organizationId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath6, organizationId, \"logo\")\n    });\n  }\n  async updateOrganizationMetadata(organizationId, params) {\n    this.requireId(organizationId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath6, organizationId, \"metadata\"),\n      bodyParams: params\n    });\n  }\n  async deleteOrganization(organizationId) {\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath6, organizationId)\n    });\n  }\n  async getOrganizationMembershipList(params) {\n    const {\n      organizationId,\n      limit,\n      offset\n    } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath6, organizationId, \"memberships\"),\n      queryParams: {\n        limit,\n        offset\n      }\n    });\n  }\n  async createOrganizationMembership(params) {\n    const {\n      organizationId,\n      userId,\n      role\n    } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath6, organizationId, \"memberships\"),\n      bodyParams: {\n        userId,\n        role\n      }\n    });\n  }\n  async updateOrganizationMembership(params) {\n    const {\n      organizationId,\n      userId,\n      role\n    } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath6, organizationId, \"memberships\", userId),\n      bodyParams: {\n        role\n      }\n    });\n  }\n  async updateOrganizationMembershipMetadata(params) {\n    const {\n      organizationId,\n      userId,\n      publicMetadata,\n      privateMetadata\n    } = params;\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath6, organizationId, \"memberships\", userId, \"metadata\"),\n      bodyParams: {\n        publicMetadata,\n        privateMetadata\n      }\n    });\n  }\n  async deleteOrganizationMembership(params) {\n    const {\n      organizationId,\n      userId\n    } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath6, organizationId, \"memberships\", userId)\n    });\n  }\n  async getOrganizationInvitationList(params) {\n    const {\n      organizationId,\n      status,\n      limit,\n      offset\n    } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath6, organizationId, \"invitations\"),\n      queryParams: {\n        status,\n        limit,\n        offset\n      }\n    });\n  }\n  async createOrganizationInvitation(params) {\n    const {\n        organizationId\n      } = params,\n      bodyParams = _objectWithoutProperties(params, _excluded);\n    this.requireId(organizationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath6, organizationId, \"invitations\"),\n      bodyParams: _objectSpread({}, bodyParams)\n    });\n  }\n  async getOrganizationInvitation(params) {\n    const {\n      organizationId,\n      invitationId\n    } = params;\n    this.requireId(organizationId);\n    this.requireId(invitationId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath6, organizationId, \"invitations\", invitationId)\n    });\n  }\n  async revokeOrganizationInvitation(params) {\n    const {\n      organizationId,\n      invitationId,\n      requestingUserId\n    } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath6, organizationId, \"invitations\", invitationId, \"revoke\"),\n      bodyParams: {\n        requestingUserId\n      }\n    });\n  }\n};\n\n// src/api/endpoints/PhoneNumberApi.ts\nvar basePath7 = \"/phone_numbers\";\nvar PhoneNumberAPI = class extends AbstractAPI {\n  async getPhoneNumber(phoneNumberId) {\n    this.requireId(phoneNumberId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath7, phoneNumberId)\n    });\n  }\n  async createPhoneNumber(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath7,\n      bodyParams: params\n    });\n  }\n  async updatePhoneNumber(phoneNumberId, params = {}) {\n    this.requireId(phoneNumberId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath7, phoneNumberId),\n      bodyParams: params\n    });\n  }\n  async deletePhoneNumber(phoneNumberId) {\n    this.requireId(phoneNumberId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath7, phoneNumberId)\n    });\n  }\n};\n\n// src/api/endpoints/RedirectUrlApi.ts\nvar basePath8 = \"/redirect_urls\";\nvar RedirectUrlAPI = class extends AbstractAPI {\n  async getRedirectUrlList() {\n    return this.request({\n      method: \"GET\",\n      path: basePath8\n    });\n  }\n  async getRedirectUrl(redirectUrlId) {\n    this.requireId(redirectUrlId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath8, redirectUrlId)\n    });\n  }\n  async createRedirectUrl(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath8,\n      bodyParams: params\n    });\n  }\n  async deleteRedirectUrl(redirectUrlId) {\n    this.requireId(redirectUrlId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath8, redirectUrlId)\n    });\n  }\n};\n\n// src/api/endpoints/SessionApi.ts\nvar basePath9 = \"/sessions\";\nvar SessionAPI = class extends AbstractAPI {\n  async getSessionList(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: basePath9,\n      queryParams: params\n    });\n  }\n  async getSession(sessionId) {\n    this.requireId(sessionId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath9, sessionId)\n    });\n  }\n  async revokeSession(sessionId) {\n    this.requireId(sessionId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath9, sessionId, \"revoke\")\n    });\n  }\n  async verifySession(sessionId, token) {\n    this.requireId(sessionId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath9, sessionId, \"verify\"),\n      bodyParams: {\n        token\n      }\n    });\n  }\n  async getToken(sessionId, template) {\n    this.requireId(sessionId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath9, sessionId, \"tokens\", template || \"\")\n    });\n  }\n};\n\n// src/api/endpoints/SignInTokenApi.ts\nvar basePath10 = \"/sign_in_tokens\";\nvar SignInTokenAPI = class extends AbstractAPI {\n  async createSignInToken(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath10,\n      bodyParams: params\n    });\n  }\n  async revokeSignInToken(signInTokenId) {\n    this.requireId(signInTokenId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath10, signInTokenId, \"revoke\")\n    });\n  }\n};\n\n// src/api/endpoints/UserApi.ts\nvar basePath11 = \"/users\";\nvar UserAPI = class extends AbstractAPI {\n  async getUserList(params = {}) {\n    const {\n        limit,\n        offset,\n        orderBy\n      } = params,\n      userCountParams = _objectWithoutProperties(params, _excluded2);\n    const [data, totalCount] = await Promise.all([this.request({\n      method: \"GET\",\n      path: basePath11,\n      queryParams: params\n    }), this.getCount(userCountParams)]);\n    return {\n      data,\n      totalCount\n    };\n  }\n  async getUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath11, userId)\n    });\n  }\n  async createUser(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath11,\n      bodyParams: params\n    });\n  }\n  async updateUser(userId, params = {}) {\n    this.requireId(userId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath11, userId),\n      bodyParams: params\n    });\n  }\n  async updateUserProfileImage(userId, params) {\n    this.requireId(userId);\n    const formData = new _chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime_default.FormData();\n    formData.append(\"file\", params?.file);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath11, userId, \"profile_image\"),\n      formData\n    });\n  }\n  async updateUserMetadata(userId, params) {\n    this.requireId(userId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath11, userId, \"metadata\"),\n      bodyParams: params\n    });\n  }\n  async deleteUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath11, userId)\n    });\n  }\n  async getCount(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath11, \"count\"),\n      queryParams: params\n    });\n  }\n  async getUserOauthAccessToken(userId, provider) {\n    this.requireId(userId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath11, userId, \"oauth_access_tokens\", provider)\n    });\n  }\n  async disableUserMFA(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath11, userId, \"mfa\")\n    });\n  }\n  async getOrganizationMembershipList(params) {\n    const {\n      userId,\n      limit,\n      offset\n    } = params;\n    this.requireId(userId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath11, userId, \"organization_memberships\"),\n      queryParams: {\n        limit,\n        offset\n      }\n    });\n  }\n  async verifyPassword(params) {\n    const {\n      userId,\n      password\n    } = params;\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath11, userId, \"verify_password\"),\n      bodyParams: {\n        password\n      }\n    });\n  }\n  async verifyTOTP(params) {\n    const {\n      userId,\n      code\n    } = params;\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath11, userId, \"verify_totp\"),\n      bodyParams: {\n        code\n      }\n    });\n  }\n  async banUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath11, userId, \"ban\")\n    });\n  }\n  async unbanUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath11, userId, \"unban\")\n    });\n  }\n  async lockUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath11, userId, \"lock\")\n    });\n  }\n  async unlockUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath11, userId, \"unlock\")\n    });\n  }\n};\n\n// src/api/endpoints/SamlConnectionApi.ts\nvar basePath12 = \"/saml_connections\";\nvar SamlConnectionAPI = class extends AbstractAPI {\n  async getSamlConnectionList(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: basePath12,\n      queryParams: params\n    });\n  }\n  async createSamlConnection(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath12,\n      bodyParams: params\n    });\n  }\n  async getSamlConnection(samlConnectionId) {\n    this.requireId(samlConnectionId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath12, samlConnectionId)\n    });\n  }\n  async updateSamlConnection(samlConnectionId, params = {}) {\n    this.requireId(samlConnectionId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath12, samlConnectionId),\n      bodyParams: params\n    });\n  }\n  async deleteSamlConnection(samlConnectionId) {\n    this.requireId(samlConnectionId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath12, samlConnectionId)\n    });\n  }\n};\n\n// src/api/request.ts\n\n\n\n// src/util/assertValidSecretKey.ts\nfunction assertValidSecretKey(val) {\n  if (!val || typeof val !== \"string\") {\n    throw Error(\"Missing Clerk Secret Key. Go to https://dashboard.clerk.com and get your key for your instance.\");\n  }\n}\n\n// src/api/resources/AllowlistIdentifier.ts\nvar AllowlistIdentifier = class _AllowlistIdentifier {\n  constructor(id, identifier, createdAt, updatedAt, invitationId) {\n    this.id = id;\n    this.identifier = identifier;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.invitationId = invitationId;\n  }\n  static fromJSON(data) {\n    return new _AllowlistIdentifier(data.id, data.identifier, data.created_at, data.updated_at, data.invitation_id);\n  }\n};\n\n// src/api/resources/Session.ts\nvar Session = class _Session {\n  constructor(id, clientId, userId, status, lastActiveAt, expireAt, abandonAt, createdAt, updatedAt) {\n    this.id = id;\n    this.clientId = clientId;\n    this.userId = userId;\n    this.status = status;\n    this.lastActiveAt = lastActiveAt;\n    this.expireAt = expireAt;\n    this.abandonAt = abandonAt;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n  }\n  static fromJSON(data) {\n    return new _Session(data.id, data.client_id, data.user_id, data.status, data.last_active_at, data.expire_at, data.abandon_at, data.created_at, data.updated_at);\n  }\n};\n\n// src/api/resources/Client.ts\nvar Client = class _Client {\n  constructor(id, sessionIds, sessions, signInId, signUpId, lastActiveSessionId, createdAt, updatedAt) {\n    this.id = id;\n    this.sessionIds = sessionIds;\n    this.sessions = sessions;\n    this.signInId = signInId;\n    this.signUpId = signUpId;\n    this.lastActiveSessionId = lastActiveSessionId;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n  }\n  static fromJSON(data) {\n    return new _Client(data.id, data.session_ids, data.sessions.map(x => Session.fromJSON(x)), data.sign_in_id, data.sign_up_id, data.last_active_session_id, data.created_at, data.updated_at);\n  }\n};\n\n// src/api/resources/DeletedObject.ts\nvar DeletedObject = class _DeletedObject {\n  constructor(object, id, slug, deleted) {\n    this.object = object;\n    this.id = id;\n    this.slug = slug;\n    this.deleted = deleted;\n  }\n  static fromJSON(data) {\n    return new _DeletedObject(data.object, data.id || null, data.slug || null, data.deleted);\n  }\n};\n\n// src/api/resources/Email.ts\nvar Email = class _Email {\n  constructor(id, fromEmailName, emailAddressId, toEmailAddress, subject, body, bodyPlain, status, slug, data, deliveredByClerk) {\n    this.id = id;\n    this.fromEmailName = fromEmailName;\n    this.emailAddressId = emailAddressId;\n    this.toEmailAddress = toEmailAddress;\n    this.subject = subject;\n    this.body = body;\n    this.bodyPlain = bodyPlain;\n    this.status = status;\n    this.slug = slug;\n    this.data = data;\n    this.deliveredByClerk = deliveredByClerk;\n  }\n  static fromJSON(data) {\n    return new _Email(data.id, data.from_email_name, data.email_address_id, data.to_email_address, data.subject, data.body, data.body_plain, data.status, data.slug, data.data, data.delivered_by_clerk);\n  }\n};\n\n// src/api/resources/IdentificationLink.ts\nvar IdentificationLink = class _IdentificationLink {\n  constructor(id, type) {\n    this.id = id;\n    this.type = type;\n  }\n  static fromJSON(data) {\n    return new _IdentificationLink(data.id, data.type);\n  }\n};\n\n// src/api/resources/Verification.ts\nvar Verification = class _Verification {\n  constructor(status, strategy, externalVerificationRedirectURL = null, attempts = null, expireAt = null, nonce = null) {\n    this.status = status;\n    this.strategy = strategy;\n    this.externalVerificationRedirectURL = externalVerificationRedirectURL;\n    this.attempts = attempts;\n    this.expireAt = expireAt;\n    this.nonce = nonce;\n  }\n  static fromJSON(data) {\n    return new _Verification(data.status, data.strategy, data.external_verification_redirect_url ? new URL(data.external_verification_redirect_url) : null, data.attempts, data.expire_at, data.nonce);\n  }\n};\n\n// src/api/resources/EmailAddress.ts\nvar EmailAddress = class _EmailAddress {\n  constructor(id, emailAddress, verification, linkedTo) {\n    this.id = id;\n    this.emailAddress = emailAddress;\n    this.verification = verification;\n    this.linkedTo = linkedTo;\n  }\n  static fromJSON(data) {\n    return new _EmailAddress(data.id, data.email_address, data.verification && Verification.fromJSON(data.verification), data.linked_to.map(link => IdentificationLink.fromJSON(link)));\n  }\n};\n\n// src/api/resources/ExternalAccount.ts\nvar ExternalAccount = class _ExternalAccount {\n  constructor(id, provider, identificationId, externalId, approvedScopes, emailAddress, firstName, lastName, imageUrl, username, publicMetadata = {}, label, verification) {\n    this.id = id;\n    this.provider = provider;\n    this.identificationId = identificationId;\n    this.externalId = externalId;\n    this.approvedScopes = approvedScopes;\n    this.emailAddress = emailAddress;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.imageUrl = imageUrl;\n    this.username = username;\n    this.publicMetadata = publicMetadata;\n    this.label = label;\n    this.verification = verification;\n  }\n  static fromJSON(data) {\n    return new _ExternalAccount(data.id, data.provider, data.identification_id, data.provider_user_id, data.approved_scopes, data.email_address, data.first_name, data.last_name, data.image_url || \"\", data.username, data.public_metadata, data.label, data.verification && Verification.fromJSON(data.verification));\n  }\n};\n\n// src/api/resources/Invitation.ts\nvar Invitation = class _Invitation {\n  constructor(id, emailAddress, publicMetadata, createdAt, updatedAt, status, revoked) {\n    this.id = id;\n    this.emailAddress = emailAddress;\n    this.publicMetadata = publicMetadata;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.status = status;\n    this.revoked = revoked;\n  }\n  static fromJSON(data) {\n    return new _Invitation(data.id, data.email_address, data.public_metadata, data.created_at, data.updated_at, data.status, data.revoked);\n  }\n};\n\n// src/api/resources/JSON.ts\nvar ObjectType = {\n  AllowlistIdentifier: \"allowlist_identifier\",\n  Client: \"client\",\n  Email: \"email\",\n  EmailAddress: \"email_address\",\n  ExternalAccount: \"external_account\",\n  FacebookAccount: \"facebook_account\",\n  GoogleAccount: \"google_account\",\n  Invitation: \"invitation\",\n  OauthAccessToken: \"oauth_access_token\",\n  Organization: \"organization\",\n  OrganizationInvitation: \"organization_invitation\",\n  OrganizationMembership: \"organization_membership\",\n  PhoneNumber: \"phone_number\",\n  RedirectUrl: \"redirect_url\",\n  Session: \"session\",\n  SignInAttempt: \"sign_in_attempt\",\n  SignInToken: \"sign_in_token\",\n  SignUpAttempt: \"sign_up_attempt\",\n  SmsMessage: \"sms_message\",\n  User: \"user\",\n  Web3Wallet: \"web3_wallet\",\n  Token: \"token\",\n  TotalCount: \"total_count\"\n};\n\n// src/api/resources/OauthAccessToken.ts\nvar OauthAccessToken = class _OauthAccessToken {\n  constructor(externalAccountId, provider, token, publicMetadata = {}, label, scopes, tokenSecret) {\n    this.externalAccountId = externalAccountId;\n    this.provider = provider;\n    this.token = token;\n    this.publicMetadata = publicMetadata;\n    this.label = label;\n    this.scopes = scopes;\n    this.tokenSecret = tokenSecret;\n  }\n  static fromJSON(data) {\n    return new _OauthAccessToken(data.external_account_id, data.provider, data.token, data.public_metadata, data.label || \"\", data.scopes, data.token_secret);\n  }\n};\n\n// src/api/resources/Organization.ts\nvar Organization = class _Organization {\n  constructor(id, name, slug, imageUrl, hasImage, createdBy, createdAt, updatedAt, publicMetadata = {}, privateMetadata = {}, maxAllowedMemberships, adminDeleteEnabled, membersCount) {\n    this.id = id;\n    this.name = name;\n    this.slug = slug;\n    this.imageUrl = imageUrl;\n    this.hasImage = hasImage;\n    this.createdBy = createdBy;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.publicMetadata = publicMetadata;\n    this.privateMetadata = privateMetadata;\n    this.maxAllowedMemberships = maxAllowedMemberships;\n    this.adminDeleteEnabled = adminDeleteEnabled;\n    this.membersCount = membersCount;\n  }\n  static fromJSON(data) {\n    return new _Organization(data.id, data.name, data.slug, data.image_url || \"\", data.has_image, data.created_by, data.created_at, data.updated_at, data.public_metadata, data.private_metadata, data.max_allowed_memberships, data.admin_delete_enabled, data.members_count);\n  }\n};\n\n// src/api/resources/OrganizationInvitation.ts\nvar OrganizationInvitation = class _OrganizationInvitation {\n  constructor(id, emailAddress, role, organizationId, createdAt, updatedAt, status, publicMetadata = {}, privateMetadata = {}) {\n    this.id = id;\n    this.emailAddress = emailAddress;\n    this.role = role;\n    this.organizationId = organizationId;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.status = status;\n    this.publicMetadata = publicMetadata;\n    this.privateMetadata = privateMetadata;\n  }\n  static fromJSON(data) {\n    return new _OrganizationInvitation(data.id, data.email_address, data.role, data.organization_id, data.created_at, data.updated_at, data.status, data.public_metadata, data.private_metadata);\n  }\n};\n\n// src/api/resources/OrganizationMembership.ts\nvar OrganizationMembership = class _OrganizationMembership {\n  constructor(id, role, publicMetadata = {}, privateMetadata = {}, createdAt, updatedAt, organization, publicUserData) {\n    this.id = id;\n    this.role = role;\n    this.publicMetadata = publicMetadata;\n    this.privateMetadata = privateMetadata;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.organization = organization;\n    this.publicUserData = publicUserData;\n  }\n  static fromJSON(data) {\n    return new _OrganizationMembership(data.id, data.role, data.public_metadata, data.private_metadata, data.created_at, data.updated_at, Organization.fromJSON(data.organization), OrganizationMembershipPublicUserData.fromJSON(data.public_user_data));\n  }\n};\nvar OrganizationMembershipPublicUserData = class _OrganizationMembershipPublicUserData {\n  constructor(identifier, firstName, lastName, imageUrl, hasImage, userId) {\n    this.identifier = identifier;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.imageUrl = imageUrl;\n    this.hasImage = hasImage;\n    this.userId = userId;\n  }\n  static fromJSON(data) {\n    return new _OrganizationMembershipPublicUserData(data.identifier, data.first_name, data.last_name, data.image_url, data.has_image, data.user_id);\n  }\n};\n\n// src/api/resources/PhoneNumber.ts\nvar PhoneNumber = class _PhoneNumber {\n  constructor(id, phoneNumber, reservedForSecondFactor, defaultSecondFactor, verification, linkedTo) {\n    this.id = id;\n    this.phoneNumber = phoneNumber;\n    this.reservedForSecondFactor = reservedForSecondFactor;\n    this.defaultSecondFactor = defaultSecondFactor;\n    this.verification = verification;\n    this.linkedTo = linkedTo;\n  }\n  static fromJSON(data) {\n    return new _PhoneNumber(data.id, data.phone_number, data.reserved_for_second_factor, data.default_second_factor, data.verification && Verification.fromJSON(data.verification), data.linked_to.map(link => IdentificationLink.fromJSON(link)));\n  }\n};\n\n// src/api/resources/RedirectUrl.ts\nvar RedirectUrl = class _RedirectUrl {\n  constructor(id, url, createdAt, updatedAt) {\n    this.id = id;\n    this.url = url;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n  }\n  static fromJSON(data) {\n    return new _RedirectUrl(data.id, data.url, data.created_at, data.updated_at);\n  }\n};\n\n// src/api/resources/SignInTokens.ts\nvar SignInToken = class _SignInToken {\n  constructor(id, userId, token, status, url, createdAt, updatedAt) {\n    this.id = id;\n    this.userId = userId;\n    this.token = token;\n    this.status = status;\n    this.url = url;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n  }\n  static fromJSON(data) {\n    return new _SignInToken(data.id, data.user_id, data.token, data.status, data.url, data.created_at, data.updated_at);\n  }\n};\n\n// src/api/resources/SMSMessage.ts\nvar SMSMessage = class _SMSMessage {\n  constructor(id, fromPhoneNumber, toPhoneNumber, message, status, phoneNumberId, data) {\n    this.id = id;\n    this.fromPhoneNumber = fromPhoneNumber;\n    this.toPhoneNumber = toPhoneNumber;\n    this.message = message;\n    this.status = status;\n    this.phoneNumberId = phoneNumberId;\n    this.data = data;\n  }\n  static fromJSON(data) {\n    return new _SMSMessage(data.id, data.from_phone_number, data.to_phone_number, data.message, data.status, data.phone_number_id, data.data);\n  }\n};\n\n// src/api/resources/Token.ts\nvar Token = class _Token {\n  constructor(jwt) {\n    this.jwt = jwt;\n  }\n  static fromJSON(data) {\n    return new _Token(data.jwt);\n  }\n};\n\n// src/api/resources/Web3Wallet.ts\nvar Web3Wallet = class _Web3Wallet {\n  constructor(id, web3Wallet, verification) {\n    this.id = id;\n    this.web3Wallet = web3Wallet;\n    this.verification = verification;\n  }\n  static fromJSON(data) {\n    return new _Web3Wallet(data.id, data.web3_wallet, data.verification && Verification.fromJSON(data.verification));\n  }\n};\n\n// src/api/resources/User.ts\nvar User = class _User {\n  constructor(id, passwordEnabled, totpEnabled, backupCodeEnabled, twoFactorEnabled, banned, createdAt, updatedAt, imageUrl, hasImage, primaryEmailAddressId, primaryPhoneNumberId, primaryWeb3WalletId, lastSignInAt, externalId, username, firstName, lastName, publicMetadata = {}, privateMetadata = {}, unsafeMetadata = {}, emailAddresses = [], phoneNumbers = [], web3Wallets = [], externalAccounts = [], lastActiveAt, createOrganizationEnabled) {\n    this.id = id;\n    this.passwordEnabled = passwordEnabled;\n    this.totpEnabled = totpEnabled;\n    this.backupCodeEnabled = backupCodeEnabled;\n    this.twoFactorEnabled = twoFactorEnabled;\n    this.banned = banned;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.imageUrl = imageUrl;\n    this.hasImage = hasImage;\n    this.primaryEmailAddressId = primaryEmailAddressId;\n    this.primaryPhoneNumberId = primaryPhoneNumberId;\n    this.primaryWeb3WalletId = primaryWeb3WalletId;\n    this.lastSignInAt = lastSignInAt;\n    this.externalId = externalId;\n    this.username = username;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.publicMetadata = publicMetadata;\n    this.privateMetadata = privateMetadata;\n    this.unsafeMetadata = unsafeMetadata;\n    this.emailAddresses = emailAddresses;\n    this.phoneNumbers = phoneNumbers;\n    this.web3Wallets = web3Wallets;\n    this.externalAccounts = externalAccounts;\n    this.lastActiveAt = lastActiveAt;\n    this.createOrganizationEnabled = createOrganizationEnabled;\n  }\n  static fromJSON(data) {\n    return new _User(data.id, data.password_enabled, data.totp_enabled, data.backup_code_enabled, data.two_factor_enabled, data.banned, data.created_at, data.updated_at, data.image_url, data.has_image, data.primary_email_address_id, data.primary_phone_number_id, data.primary_web3_wallet_id, data.last_sign_in_at, data.external_id, data.username, data.first_name, data.last_name, data.public_metadata, data.private_metadata, data.unsafe_metadata, (data.email_addresses || []).map(x => EmailAddress.fromJSON(x)), (data.phone_numbers || []).map(x => PhoneNumber.fromJSON(x)), (data.web3_wallets || []).map(x => Web3Wallet.fromJSON(x)), (data.external_accounts || []).map(x => ExternalAccount.fromJSON(x)), data.last_active_at, data.create_organization_enabled);\n  }\n  get primaryEmailAddress() {\n    return this.emailAddresses.find(({\n      id\n    }) => id === this.primaryEmailAddressId) ?? null;\n  }\n  get primaryPhoneNumber() {\n    return this.phoneNumbers.find(({\n      id\n    }) => id === this.primaryPhoneNumberId) ?? null;\n  }\n  get primaryWeb3Wallet() {\n    return this.web3Wallets.find(({\n      id\n    }) => id === this.primaryWeb3WalletId) ?? null;\n  }\n  get fullName() {\n    return [this.firstName, this.lastName].join(\" \").trim() || null;\n  }\n};\n\n// src/api/resources/Deserializer.ts\nfunction deserialize(payload) {\n  let data, totalCount;\n  if (Array.isArray(payload)) {\n    const data2 = payload.map(item => jsonToObject(item));\n    return {\n      data: data2\n    };\n  } else if (isPaginated(payload)) {\n    data = payload.data.map(item => jsonToObject(item));\n    totalCount = payload.total_count;\n    return {\n      data,\n      totalCount\n    };\n  } else {\n    return {\n      data: jsonToObject(payload)\n    };\n  }\n}\nfunction isPaginated(payload) {\n  if (!payload || typeof payload !== \"object\" || !(\"data\" in payload)) {\n    return false;\n  }\n  return Array.isArray(payload.data) && payload.data !== void 0;\n}\nfunction getCount(item) {\n  return item.total_count;\n}\nfunction jsonToObject(item) {\n  if (typeof item !== \"string\" && \"object\" in item && \"deleted\" in item) {\n    return DeletedObject.fromJSON(item);\n  }\n  switch (item.object) {\n    case ObjectType.AllowlistIdentifier:\n      return AllowlistIdentifier.fromJSON(item);\n    case ObjectType.Client:\n      return Client.fromJSON(item);\n    case ObjectType.EmailAddress:\n      return EmailAddress.fromJSON(item);\n    case ObjectType.Email:\n      return Email.fromJSON(item);\n    case ObjectType.Invitation:\n      return Invitation.fromJSON(item);\n    case ObjectType.OauthAccessToken:\n      return OauthAccessToken.fromJSON(item);\n    case ObjectType.Organization:\n      return Organization.fromJSON(item);\n    case ObjectType.OrganizationInvitation:\n      return OrganizationInvitation.fromJSON(item);\n    case ObjectType.OrganizationMembership:\n      return OrganizationMembership.fromJSON(item);\n    case ObjectType.PhoneNumber:\n      return PhoneNumber.fromJSON(item);\n    case ObjectType.RedirectUrl:\n      return RedirectUrl.fromJSON(item);\n    case ObjectType.SignInToken:\n      return SignInToken.fromJSON(item);\n    case ObjectType.Session:\n      return Session.fromJSON(item);\n    case ObjectType.SmsMessage:\n      return SMSMessage.fromJSON(item);\n    case ObjectType.Token:\n      return Token.fromJSON(item);\n    case ObjectType.TotalCount:\n      return getCount(item);\n    case ObjectType.User:\n      return User.fromJSON(item);\n    default:\n      return item;\n  }\n}\n\n// src/api/request.ts\nfunction buildRequest(options) {\n  const requestFn = async requestOptions => {\n    const {\n      secretKey,\n      apiUrl = API_URL,\n      apiVersion = API_VERSION,\n      userAgent = USER_AGENT\n    } = options;\n    const {\n      path,\n      method,\n      queryParams,\n      headerParams,\n      bodyParams,\n      formData\n    } = requestOptions;\n    assertValidSecretKey(secretKey);\n    const url = joinPaths(apiUrl, apiVersion, path);\n    const finalUrl = new URL(url);\n    if (queryParams) {\n      const snakecasedQueryParams = snakecase_keys__WEBPACK_IMPORTED_MODULE_3__(_objectSpread({}, queryParams));\n      for (const [key, val] of Object.entries(snakecasedQueryParams)) {\n        if (val) {\n          [val].flat().forEach(v => finalUrl.searchParams.append(key, v));\n        }\n      }\n    }\n    const headers = _objectSpread({\n      Authorization: `Bearer ${secretKey}`,\n      \"User-Agent\": userAgent\n    }, headerParams);\n    let res;\n    try {\n      if (formData) {\n        res = await _chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime_default.fetch(finalUrl.href, {\n          method,\n          headers,\n          body: formData\n        });\n      } else {\n        headers[\"Content-Type\"] = \"application/json\";\n        const hasBody = method !== \"GET\" && bodyParams && Object.keys(bodyParams).length > 0;\n        const body = hasBody ? {\n          body: JSON.stringify(snakecase_keys__WEBPACK_IMPORTED_MODULE_3__(bodyParams, {\n            deep: false\n          }))\n        } : null;\n        res = await _chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime_default.fetch(finalUrl.href, _objectSpread({\n          method,\n          headers\n        }, body));\n      }\n      const isJSONResponse = res?.headers && res.headers?.get(constants.Headers.ContentType) === constants.ContentTypes.Json;\n      const responseBody = await (isJSONResponse ? res.json() : res.text());\n      if (!res.ok) {\n        return {\n          data: null,\n          errors: parseErrors(responseBody),\n          status: res?.status,\n          statusText: res?.statusText,\n          clerkTraceId: getTraceId(responseBody, res?.headers)\n        };\n      }\n      return _objectSpread(_objectSpread({}, deserialize(responseBody)), {}, {\n        errors: null\n      });\n    } catch (err) {\n      if (err instanceof Error) {\n        return {\n          data: null,\n          errors: [{\n            code: \"unexpected_error\",\n            message: err.message || \"Unexpected error\"\n          }],\n          clerkTraceId: getTraceId(err, res?.headers)\n        };\n      }\n      return {\n        data: null,\n        errors: parseErrors(err),\n        status: res?.status,\n        statusText: res?.statusText,\n        clerkTraceId: getTraceId(err, res?.headers)\n      };\n    }\n  };\n  return withLegacyRequestReturn(requestFn);\n}\nfunction getTraceId(data, headers) {\n  if (data && typeof data === \"object\" && \"clerk_trace_id\" in data && typeof data.clerk_trace_id === \"string\") {\n    return data.clerk_trace_id;\n  }\n  const cfRay = headers?.get(\"cf-ray\");\n  return cfRay || \"\";\n}\nfunction parseErrors(data) {\n  if (!!data && typeof data === \"object\" && \"errors\" in data) {\n    const errors = data.errors;\n    return errors.length > 0 ? errors.map(_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.parseError) : [];\n  }\n  return [];\n}\nfunction withLegacyRequestReturn(cb) {\n  return async (...args) => {\n    const {\n      data,\n      errors,\n      totalCount,\n      status,\n      statusText,\n      clerkTraceId\n    } = await cb(...args);\n    if (errors) {\n      const error = new _clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.ClerkAPIResponseError(statusText || \"\", {\n        data: [],\n        status,\n        clerkTraceId\n      });\n      error.errors = errors;\n      throw error;\n    }\n    if (typeof totalCount !== \"undefined\") {\n      return {\n        data,\n        totalCount\n      };\n    }\n    return data;\n  };\n}\n\n// src/api/factory.ts\nfunction createBackendApiClient(options) {\n  const request = buildRequest(options);\n  return {\n    allowlistIdentifiers: new AllowlistIdentifierAPI(request),\n    clients: new ClientAPI(request),\n    emailAddresses: new EmailAddressAPI(request),\n    invitations: new InvitationAPI(request),\n    organizations: new OrganizationAPI(request),\n    phoneNumbers: new PhoneNumberAPI(request),\n    redirectUrls: new RedirectUrlAPI(request),\n    sessions: new SessionAPI(request),\n    signInTokens: new SignInTokenAPI(request),\n    users: new UserAPI(request),\n    domains: new DomainAPI(request),\n    samlConnections: new SamlConnectionAPI(request)\n  };\n}\n\n// src/tokens/authObjects.ts\nvar createDebug = data => {\n  return () => {\n    const res = _objectSpread({}, data);\n    res.secretKey = (res.secretKey || \"\").substring(0, 7);\n    res.jwtKey = (res.jwtKey || \"\").substring(0, 7);\n    return _objectSpread({}, res);\n  };\n};\nfunction signedInAuthObject(authenticateContext, sessionClaims) {\n  const {\n    act: actor,\n    sid: sessionId,\n    org_id: orgId,\n    org_role: orgRole,\n    org_slug: orgSlug,\n    org_permissions: orgPermissions,\n    sub: userId\n  } = sessionClaims;\n  const apiClient = createBackendApiClient(authenticateContext);\n  const getToken = createGetToken({\n    sessionId,\n    sessionToken: authenticateContext.sessionToken || \"\",\n    fetcher: async (...args) => (await apiClient.sessions.getToken(...args)).jwt\n  });\n  return {\n    actor,\n    sessionClaims,\n    sessionId,\n    userId,\n    orgId,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    getToken,\n    has: createHasAuthorization({\n      orgId,\n      orgRole,\n      orgPermissions,\n      userId\n    }),\n    debug: createDebug(_objectSpread({}, authenticateContext))\n  };\n}\nfunction signedOutAuthObject(debugData) {\n  return {\n    sessionClaims: null,\n    sessionId: null,\n    userId: null,\n    actor: null,\n    orgId: null,\n    orgRole: null,\n    orgSlug: null,\n    orgPermissions: null,\n    getToken: () => Promise.resolve(null),\n    has: () => false,\n    debug: createDebug(debugData)\n  };\n}\nvar makeAuthObjectSerializable = obj => {\n  const {\n      debug,\n      getToken,\n      has\n    } = obj,\n    rest = _objectWithoutProperties(obj, _excluded3);\n  return rest;\n};\nvar createGetToken = params => {\n  const {\n    fetcher,\n    sessionToken,\n    sessionId\n  } = params || {};\n  return async (options = {}) => {\n    if (!sessionId) {\n      return null;\n    }\n    if (options.template) {\n      return fetcher(sessionId, options.template);\n    }\n    return sessionToken;\n  };\n};\nvar createHasAuthorization = options => {\n  const {\n    orgId,\n    orgRole,\n    userId,\n    orgPermissions\n  } = options;\n  return params => {\n    if (!params?.permission && !params?.role) {\n      throw new Error('Missing parameters. `has` from `auth` or `getAuth` requires a permission or role key to be passed. Example usage: `has({permission: \"org:posts:edit\"`');\n    }\n    if (!orgId || !userId || !orgRole || !orgPermissions) {\n      return false;\n    }\n    if (params.permission) {\n      return orgPermissions.includes(params.permission);\n    }\n    if (params.role) {\n      return orgRole === params.role;\n    }\n    return false;\n  };\n};\n\n// src/tokens/authStatus.ts\nvar AuthStatus = {\n  SignedIn: \"signed-in\",\n  SignedOut: \"signed-out\",\n  Handshake: \"handshake\"\n};\nvar AuthErrorReason = {\n  ClientUATWithoutSessionToken: \"client-uat-but-no-session-token\",\n  DevBrowserMissing: \"dev-browser-missing\",\n  DevBrowserSync: \"dev-browser-sync\",\n  PrimaryRespondsToSyncing: \"primary-responds-to-syncing\",\n  SatelliteCookieNeedsSyncing: \"satellite-needs-syncing\",\n  SessionTokenAndUATMissing: \"session-token-and-uat-missing\",\n  SessionTokenMissing: \"session-token-missing\",\n  SessionTokenOutdated: \"session-token-outdated\",\n  SessionTokenWithoutClientUAT: \"session-token-but-no-client-uat\",\n  UnexpectedError: \"unexpected-error\"\n};\nfunction signedIn(authenticateContext, sessionClaims, headers = new Headers(), token) {\n  const authObject = signedInAuthObject(authenticateContext, sessionClaims);\n  return {\n    status: AuthStatus.SignedIn,\n    reason: null,\n    message: null,\n    proxyUrl: authenticateContext.proxyUrl || \"\",\n    publishableKey: authenticateContext.publishableKey || \"\",\n    isSatellite: authenticateContext.isSatellite || false,\n    domain: authenticateContext.domain || \"\",\n    signInUrl: authenticateContext.signInUrl || \"\",\n    signUpUrl: authenticateContext.signUpUrl || \"\",\n    afterSignInUrl: authenticateContext.afterSignInUrl || \"\",\n    afterSignUpUrl: authenticateContext.afterSignUpUrl || \"\",\n    isSignedIn: true,\n    toAuth: () => authObject,\n    headers,\n    token\n  };\n}\nfunction signedOut(authenticateContext, reason, message = \"\", headers = new Headers()) {\n  return withDebugHeaders({\n    status: AuthStatus.SignedOut,\n    reason,\n    message,\n    proxyUrl: authenticateContext.proxyUrl || \"\",\n    publishableKey: authenticateContext.publishableKey || \"\",\n    isSatellite: authenticateContext.isSatellite || false,\n    domain: authenticateContext.domain || \"\",\n    signInUrl: authenticateContext.signInUrl || \"\",\n    signUpUrl: authenticateContext.signUpUrl || \"\",\n    afterSignInUrl: authenticateContext.afterSignInUrl || \"\",\n    afterSignUpUrl: authenticateContext.afterSignUpUrl || \"\",\n    isSignedIn: false,\n    headers,\n    toAuth: () => signedOutAuthObject(_objectSpread(_objectSpread({}, authenticateContext), {}, {\n      status: AuthStatus.SignedOut,\n      reason,\n      message\n    })),\n    token: null\n  });\n}\nfunction handshake(authenticateContext, reason, message = \"\", headers) {\n  return withDebugHeaders({\n    status: AuthStatus.Handshake,\n    reason,\n    message,\n    publishableKey: authenticateContext.publishableKey || \"\",\n    isSatellite: authenticateContext.isSatellite || false,\n    domain: authenticateContext.domain || \"\",\n    proxyUrl: authenticateContext.proxyUrl || \"\",\n    signInUrl: authenticateContext.signInUrl || \"\",\n    signUpUrl: authenticateContext.signUpUrl || \"\",\n    afterSignInUrl: authenticateContext.afterSignInUrl || \"\",\n    afterSignUpUrl: authenticateContext.afterSignUpUrl || \"\",\n    isSignedIn: false,\n    headers,\n    toAuth: () => null,\n    token: null\n  });\n}\nvar withDebugHeaders = requestState => {\n  const headers = new Headers(requestState.headers || {});\n  if (requestState.message) {\n    headers.set(constants.Headers.AuthMessage, requestState.message);\n  }\n  if (requestState.reason) {\n    headers.set(constants.Headers.AuthReason, requestState.reason);\n  }\n  if (requestState.status) {\n    headers.set(constants.Headers.AuthStatus, requestState.status);\n  }\n  requestState.headers = headers;\n  return requestState;\n};\n\n// src/tokens/clerkRequest.ts\n\n\n// src/tokens/clerkUrl.ts\nvar ClerkUrl = class extends URL {\n  isCrossOrigin(other) {\n    return this.origin !== new URL(other.toString()).origin;\n  }\n};\nvar createClerkUrl = (...args) => {\n  return new ClerkUrl(...args);\n};\n\n// src/tokens/clerkRequest.ts\nvar ClerkRequest = class extends Request {\n  constructor(input, init) {\n    const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n    super(url, init || typeof input === \"string\" ? void 0 : input);\n    this.clerkUrl = this.deriveUrlFromHeaders(this);\n    this.cookies = this.parseCookies(this);\n  }\n  toJSON() {\n    return {\n      url: this.clerkUrl.href,\n      method: this.method,\n      headers: JSON.stringify(Object.fromEntries(this.headers)),\n      clerkUrl: this.clerkUrl.toString(),\n      cookies: JSON.stringify(Object.fromEntries(this.cookies))\n    };\n  }\n  /**\n   * Used to fix request.url using the x-forwarded-* headers\n   * TODO add detailed description of the issues this solves\n   */\n  deriveUrlFromHeaders(req) {\n    const initialUrl = new URL(req.url);\n    const forwardedProto = req.headers.get(constants.Headers.ForwardedProto);\n    const forwardedHost = req.headers.get(constants.Headers.ForwardedHost);\n    const host = req.headers.get(constants.Headers.Host);\n    const protocol = initialUrl.protocol;\n    const resolvedHost = this.getFirstValueFromHeader(forwardedHost) ?? host;\n    const resolvedProtocol = this.getFirstValueFromHeader(forwardedProto) ?? protocol?.replace(/[:/]/, \"\");\n    const origin = resolvedHost && resolvedProtocol ? `${resolvedProtocol}://${resolvedHost}` : initialUrl.origin;\n    return createClerkUrl(initialUrl.pathname + initialUrl.search, origin);\n  }\n  getFirstValueFromHeader(value) {\n    return value?.split(\",\")[0];\n  }\n  parseCookies(req) {\n    const cookiesRecord = (0,cookie__WEBPACK_IMPORTED_MODULE_4__.parse)(this.decodeCookieValue(req.headers.get(\"cookie\") || \"\"));\n    return new Map(Object.entries(cookiesRecord));\n  }\n  decodeCookieValue(str) {\n    return str ? str.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent) : str;\n  }\n};\nvar createClerkRequest = (...args) => {\n  return args[0] instanceof ClerkRequest ? args[0] : new ClerkRequest(...args);\n};\n\n// src/util/shared.ts\n\n\n\n\n\n\nvar errorThrower = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.buildErrorThrower)({\n  packageName: \"@clerk/backend\"\n});\nvar {\n  isDevOrStagingUrl\n} = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_7__.createDevOrStagingUrlCache)();\n\n// src/tokens/keys.ts\nvar cache = {};\nvar lastUpdatedAt = 0;\nfunction getFromCache(kid) {\n  return cache[kid];\n}\nfunction getCacheValues() {\n  return Object.values(cache);\n}\nfunction setInCache(jwk, jwksCacheTtlInMs) {\n  cache[jwk.kid] = jwk;\n  lastUpdatedAt = Date.now();\n  if (jwksCacheTtlInMs >= 0) {\n    setTimeout(() => {\n      if (jwk) {\n        delete cache[jwk.kid];\n      } else {\n        cache = {};\n      }\n    }, jwksCacheTtlInMs);\n  }\n}\nvar LocalJwkKid = \"local\";\nvar PEM_HEADER = \"-----BEGIN PUBLIC KEY-----\";\nvar PEM_TRAILER = \"-----END PUBLIC KEY-----\";\nvar RSA_PREFIX = \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\";\nvar RSA_SUFFIX = \"IDAQAB\";\nfunction loadClerkJWKFromLocal(localKey) {\n  if (!getFromCache(LocalJwkKid)) {\n    if (!localKey) {\n      throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n        action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkJWTKey,\n        message: \"Missing local JWK.\",\n        reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.LocalJWKMissing\n      });\n    }\n    const modulus = localKey.replace(/(\\r\\n|\\n|\\r)/gm, \"\").replace(PEM_HEADER, \"\").replace(PEM_TRAILER, \"\").replace(RSA_PREFIX, \"\").replace(RSA_SUFFIX, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n    setInCache({\n      kid: \"local\",\n      kty: \"RSA\",\n      alg: \"RS256\",\n      n: modulus,\n      e: \"AQAB\"\n    }, -1\n    // local key never expires in cache\n    );\n  }\n\n  return getFromCache(LocalJwkKid);\n}\nasync function loadClerkJWKFromRemote({\n  secretKey,\n  apiUrl = API_URL,\n  apiVersion = API_VERSION,\n  kid,\n  jwksCacheTtlInMs = JWKS_CACHE_TTL_MS,\n  skipJwksCache\n}) {\n  const needsFetch = !getFromCache(kid) || cacheHasExpired();\n  if (skipJwksCache || needsFetch) {\n    if (!secretKey) {\n      throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n        action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n        message: \"Failed to load JWKS from Clerk Backend or Frontend API.\",\n        reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n      });\n    }\n    const fetcher = () => fetchJWKSFromBAPI(apiUrl, secretKey, apiVersion);\n    const {\n      keys\n    } = await (0,_clerk_shared_callWithRetry__WEBPACK_IMPORTED_MODULE_6__.callWithRetry)(fetcher);\n    if (!keys || !keys.length) {\n      throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n        action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n        message: \"The JWKS endpoint did not contain any signing keys. Contact support@clerk.com.\",\n        reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n      });\n    }\n    keys.forEach(key => setInCache(key, jwksCacheTtlInMs));\n  }\n  const jwk = getFromCache(kid);\n  if (!jwk) {\n    const cacheValues = getCacheValues();\n    const jwkKeys = cacheValues.map(jwk2 => jwk2.kid).sort().join(\", \");\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n      message: `Unable to find a signing key in JWKS that matches the kid='${kid}' of the provided session token. Please make sure that the __session cookie or the HTTP authorization header contain a Clerk-generated session JWT.${jwkKeys ? ` The following kid is available: ${jwkKeys}` : \"\"}`,\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKMissing\n    });\n  }\n  return jwk;\n}\nasync function fetchJWKSFromBAPI(apiUrl, key, apiVersion) {\n  if (!key) {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkSecretKey,\n      message: \"Missing Clerk Secret Key or API Key. Go to https://dashboard.clerk.com and get your key for your instance.\",\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n    });\n  }\n  const url = new URL(apiUrl);\n  url.pathname = joinPaths(url.pathname, apiVersion, \"/jwks\");\n  const response = await _chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime_default.fetch(url.href, {\n    headers: {\n      Authorization: `Bearer ${key}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    const json = await response.json();\n    const invalidSecretKeyError = getErrorObjectByCode(json?.errors, _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorCode.InvalidSecretKey);\n    if (invalidSecretKeyError) {\n      const reason = _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.InvalidSecretKey;\n      throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n        action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n        message: invalidSecretKeyError.message,\n        reason\n      });\n    }\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n      message: `Error loading Clerk JWKS from ${url.href} with code=${response.status}`,\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n    });\n  }\n  return response.json();\n}\nfunction cacheHasExpired() {\n  return Date.now() - lastUpdatedAt >= MAX_CACHE_LAST_UPDATED_AT_SECONDS * 1e3;\n}\nvar getErrorObjectByCode = (errors, code) => {\n  if (!errors) {\n    return null;\n  }\n  return errors.find(err => err.code === code);\n};\n\n// src/tokens/verify.ts\nasync function verifyToken(token, options) {\n  const {\n    data: decodedResult,\n    errors\n  } = (0,_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n  if (errors) {\n    return {\n      errors\n    };\n  }\n  const {\n    header\n  } = decodedResult;\n  const {\n    kid\n  } = header;\n  try {\n    let key;\n    if (options.jwtKey) {\n      key = loadClerkJWKFromLocal(options.jwtKey);\n    } else if (options.secretKey) {\n      key = await loadClerkJWKFromRemote(_objectSpread(_objectSpread({}, options), {}, {\n        kid\n      }));\n    } else {\n      return {\n        errors: [new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n          action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkJWTKey,\n          message: \"Failed to resolve JWK during verification.\",\n          reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.JWKFailedToResolve\n        })]\n      };\n    }\n    return await (0,_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__.verifyJwt)(token, _objectSpread(_objectSpread({}, options), {}, {\n      key\n    }));\n  } catch (error) {\n    return {\n      errors: [error]\n    };\n  }\n}\n\n// src/tokens/request.ts\n\n\n// src/tokens/authenticateContext.ts\nvar AuthenticateContext = class {\n  constructor(clerkRequest, options) {\n    this.clerkRequest = clerkRequest;\n    this.initHeaderValues();\n    this.initCookieValues();\n    this.initHandshakeValues();\n    Object.assign(this, options);\n    this.clerkUrl = this.clerkRequest.clerkUrl;\n  }\n  get sessionToken() {\n    return this.sessionTokenInCookie || this.sessionTokenInHeader;\n  }\n  initHandshakeValues() {\n    this.devBrowserToken = this.clerkRequest.clerkUrl.searchParams.get(constants.Cookies.DevBrowser) || this.clerkRequest.cookies.get(constants.Cookies.DevBrowser);\n    this.handshakeToken = this.clerkRequest.clerkUrl.searchParams.get(constants.Cookies.Handshake) || this.clerkRequest.cookies.get(constants.Cookies.Handshake);\n  }\n  initHeaderValues() {\n    const get = name => this.clerkRequest.headers.get(name) || void 0;\n    this.sessionTokenInHeader = this.stripAuthorizationHeader(get(constants.Headers.Authorization));\n    this.origin = get(constants.Headers.Origin);\n    this.host = get(constants.Headers.Host);\n    this.forwardedHost = get(constants.Headers.ForwardedHost);\n    this.forwardedProto = get(constants.Headers.CloudFrontForwardedProto) || get(constants.Headers.ForwardedProto);\n    this.referrer = get(constants.Headers.Referrer);\n    this.userAgent = get(constants.Headers.UserAgent);\n    this.secFetchDest = get(constants.Headers.SecFetchDest);\n    this.accept = get(constants.Headers.Accept);\n  }\n  initCookieValues() {\n    const get = name => this.clerkRequest.cookies.get(name) || void 0;\n    this.sessionTokenInCookie = get(constants.Cookies.Session);\n    this.clientUat = Number.parseInt(get(constants.Cookies.ClientUat) || \"\") || 0;\n  }\n  stripAuthorizationHeader(authValue) {\n    return authValue?.replace(\"Bearer \", \"\");\n  }\n};\nvar createAuthenticateContext = (...args) => {\n  return new AuthenticateContext(...args);\n};\n\n// src/tokens/handshake.ts\nasync function verifyHandshakeJwt(token, {\n  key\n}) {\n  const {\n    data: decoded,\n    errors\n  } = (0,_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n  if (errors) {\n    throw errors[0];\n  }\n  const {\n    header,\n    payload\n  } = decoded;\n  const {\n    typ,\n    alg\n  } = header;\n  (0,_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__.assertHeaderType)(typ);\n  (0,_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__.assertHeaderAlgorithm)(alg);\n  const {\n    data: signatureValid,\n    errors: signatureErrors\n  } = await (0,_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__.hasValidSignature)(decoded, key);\n  if (signatureErrors) {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Error verifying handshake token. ${signatureErrors[0]}`\n    });\n  }\n  if (!signatureValid) {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenInvalidSignature,\n      message: \"Handshake signature is invalid.\"\n    });\n  }\n  return payload;\n}\nasync function verifyHandshakeToken(token, options) {\n  const {\n    secretKey,\n    apiUrl,\n    apiVersion,\n    jwksCacheTtlInMs,\n    jwtKey,\n    skipJwksCache\n  } = options;\n  const {\n    data,\n    errors\n  } = (0,_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n  if (errors) {\n    throw errors[0];\n  }\n  const {\n    kid\n  } = data.header;\n  let key;\n  if (jwtKey) {\n    key = loadClerkJWKFromLocal(jwtKey);\n  } else if (secretKey) {\n    key = await loadClerkJWKFromRemote({\n      secretKey,\n      apiUrl,\n      apiVersion,\n      kid,\n      jwksCacheTtlInMs,\n      skipJwksCache\n    });\n  } else {\n    throw new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      action: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkJWTKey,\n      message: \"Failed to resolve JWK during handshake verification.\",\n      reason: _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.JWKFailedToResolve\n    });\n  }\n  return await verifyHandshakeJwt(token, {\n    key\n  });\n}\n\n// src/tokens/request.ts\nfunction assertSignInUrlExists(signInUrl, key) {\n  if (!signInUrl && (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_7__.isDevelopmentFromSecretKey)(key)) {\n    throw new Error(`Missing signInUrl. Pass a signInUrl for dev instances if an app is satellite`);\n  }\n}\nfunction assertProxyUrlOrDomain(proxyUrlOrDomain) {\n  if (!proxyUrlOrDomain) {\n    throw new Error(`Missing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl`);\n  }\n}\nfunction assertSignInUrlFormatAndOrigin(_signInUrl, origin) {\n  let signInUrl;\n  try {\n    signInUrl = new URL(_signInUrl);\n  } catch {\n    throw new Error(`The signInUrl needs to have a absolute url format.`);\n  }\n  if (signInUrl.origin === origin) {\n    throw new Error(`The signInUrl needs to be on a different origin than your satellite application.`);\n  }\n}\nfunction isRequestEligibleForHandshake(authenticateContext) {\n  const {\n    accept,\n    secFetchDest\n  } = authenticateContext;\n  if (secFetchDest === \"document\") {\n    return true;\n  }\n  if (!secFetchDest && accept?.startsWith(\"text/html\")) {\n    return true;\n  }\n  return false;\n}\nasync function authenticateRequest(request, options) {\n  const authenticateContext = createAuthenticateContext(createClerkRequest(request), options);\n  assertValidSecretKey(authenticateContext.secretKey);\n  if (authenticateContext.isSatellite) {\n    assertSignInUrlExists(authenticateContext.signInUrl, authenticateContext.secretKey);\n    if (authenticateContext.signInUrl && authenticateContext.origin) {\n      assertSignInUrlFormatAndOrigin(authenticateContext.signInUrl, authenticateContext.origin);\n    }\n    assertProxyUrlOrDomain(authenticateContext.proxyUrl || authenticateContext.domain);\n  }\n  function removeDevBrowserFromURL(url) {\n    const updatedURL = new URL(url);\n    updatedURL.searchParams.delete(constants.QueryParameters.DevBrowser);\n    updatedURL.searchParams.delete(constants.QueryParameters.LegacyDevBrowser);\n    return updatedURL;\n  }\n  function buildRedirectToHandshake() {\n    const redirectUrl = removeDevBrowserFromURL(authenticateContext.clerkUrl);\n    const frontendApiNoProtocol = pk.frontendApi.replace(/http(s)?:\\/\\//, \"\");\n    const url = new URL(`https://${frontendApiNoProtocol}/v1/client/handshake`);\n    url.searchParams.append(\"redirect_url\", redirectUrl?.href || \"\");\n    if (pk?.instanceType === \"development\" && authenticateContext.devBrowserToken) {\n      url.searchParams.append(constants.QueryParameters.DevBrowser, authenticateContext.devBrowserToken);\n    }\n    return new Headers({\n      location: url.href\n    });\n  }\n  async function resolveHandshake() {\n    const headers = new Headers({\n      \"Access-Control-Allow-Origin\": \"null\",\n      \"Access-Control-Allow-Credentials\": \"true\"\n    });\n    const handshakePayload = await verifyHandshakeToken(authenticateContext.handshakeToken, authenticateContext);\n    const cookiesToSet = handshakePayload.handshake;\n    let sessionToken = \"\";\n    cookiesToSet.forEach(x => {\n      headers.append(\"Set-Cookie\", x);\n      if (x.startsWith(`${constants.Cookies.Session}=`)) {\n        sessionToken = x.split(\";\")[0].substring(10);\n      }\n    });\n    if (instanceType === \"development\") {\n      const newUrl = new URL(authenticateContext.clerkUrl);\n      newUrl.searchParams.delete(constants.QueryParameters.Handshake);\n      newUrl.searchParams.delete(constants.QueryParameters.HandshakeHelp);\n      headers.append(\"Location\", newUrl.toString());\n    }\n    if (sessionToken === \"\") {\n      return signedOut(authenticateContext, AuthErrorReason.SessionTokenMissing, \"\", headers);\n    }\n    const {\n      data,\n      errors: [error] = []\n    } = await verifyToken(sessionToken, authenticateContext);\n    if (data) {\n      return signedIn(authenticateContext, data, headers, sessionToken);\n    }\n    if (instanceType === \"development\" && (error?.reason === _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired || error?.reason === _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenNotActiveYet)) {\n      error.tokenCarrier = \"cookie\";\n      console.error(`Clerk: Clock skew detected. This usually means that your system clock is inaccurate. Clerk will attempt to account for the clock skew in development.\n\nTo resolve this issue, make sure your system's clock is set to the correct time (e.g. turn off and on automatic time synchronization).\n\n---\n\n${error.getFullMessage()}`);\n      const {\n        data: retryResult,\n        errors: [retryError] = []\n      } = await verifyToken(sessionToken, _objectSpread(_objectSpread({}, authenticateContext), {}, {\n        clockSkewInMs: 864e5\n      }));\n      if (retryResult) {\n        return signedIn(authenticateContext, retryResult, headers, sessionToken);\n      }\n      throw retryError;\n    }\n    throw error;\n  }\n  function handleMaybeHandshakeStatus(authenticateContext2, reason, message, headers) {\n    if (isRequestEligibleForHandshake(authenticateContext2)) {\n      return handshake(authenticateContext2, reason, message, headers ?? buildRedirectToHandshake());\n    }\n    return signedOut(authenticateContext2, reason, message, new Headers());\n  }\n  const pk = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_7__.parsePublishableKey)(options.publishableKey, {\n    fatal: true,\n    proxyUrl: options.proxyUrl,\n    domain: options.domain\n  });\n  const instanceType = pk.instanceType;\n  async function authenticateRequestWithTokenInHeader() {\n    const {\n      sessionTokenInHeader\n    } = authenticateContext;\n    try {\n      const {\n        data,\n        errors\n      } = await verifyToken(sessionTokenInHeader, authenticateContext);\n      if (errors) {\n        throw errors[0];\n      }\n      return await signedIn(authenticateContext, data, void 0, sessionTokenInHeader);\n    } catch (err) {\n      return handleError(err, \"header\");\n    }\n  }\n  async function authenticateRequestWithTokenInCookie() {\n    const hasActiveClient = authenticateContext.clientUat;\n    const hasSessionToken = !!authenticateContext.sessionTokenInCookie;\n    const hasDevBrowserToken = !!authenticateContext.devBrowserToken;\n    const isRequestEligibleForMultiDomainSync = authenticateContext.isSatellite && authenticateContext.secFetchDest === \"document\" && !authenticateContext.clerkUrl.searchParams.has(constants.QueryParameters.ClerkSynced);\n    if (authenticateContext.handshakeToken) {\n      try {\n        return await resolveHandshake();\n      } catch (error) {\n        if (error instanceof _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError) {\n          if (instanceType === \"development\") {\n            if (error.reason === _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenInvalidSignature) {\n              throw new Error(`Clerk: Handshake token verification failed due to an invalid signature. If you have switched Clerk keys locally, clear your cookies and try again.`);\n            }\n            throw new Error(`Clerk: Handshake token verification failed: ${error.getFullMessage()}.`);\n          }\n          if (error.reason === _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenInvalidSignature) {\n            return signedOut(authenticateContext, AuthErrorReason.UnexpectedError, `Clerk: Handshake token verification failed with \"${error.reason}\"`);\n          }\n        }\n      }\n    }\n    if (instanceType === \"development\" && authenticateContext.clerkUrl.searchParams.has(constants.Cookies.DevBrowser)) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.DevBrowserSync, \"\");\n    }\n    if (instanceType === \"production\" && isRequestEligibleForMultiDomainSync) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SatelliteCookieNeedsSyncing, \"\");\n    }\n    if (instanceType === \"development\" && isRequestEligibleForMultiDomainSync) {\n      const redirectURL = new URL(authenticateContext.signInUrl);\n      redirectURL.searchParams.append(constants.QueryParameters.ClerkRedirectUrl, authenticateContext.clerkUrl.toString());\n      const headers = new Headers({\n        location: redirectURL.toString()\n      });\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SatelliteCookieNeedsSyncing, \"\", headers);\n    }\n    const redirectUrl = new URL(authenticateContext.clerkUrl).searchParams.get(constants.QueryParameters.ClerkRedirectUrl);\n    if (instanceType === \"development\" && !authenticateContext.isSatellite && redirectUrl) {\n      const redirectBackToSatelliteUrl = new URL(redirectUrl);\n      if (authenticateContext.devBrowserToken) {\n        redirectBackToSatelliteUrl.searchParams.append(constants.Cookies.DevBrowser, authenticateContext.devBrowserToken);\n      }\n      redirectBackToSatelliteUrl.searchParams.append(constants.QueryParameters.ClerkSynced, \"true\");\n      const headers = new Headers({\n        location: redirectBackToSatelliteUrl.toString()\n      });\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.PrimaryRespondsToSyncing, \"\", headers);\n    }\n    if (instanceType === \"development\" && !hasDevBrowserToken) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.DevBrowserMissing, \"\");\n    }\n    if (!hasActiveClient && !hasSessionToken) {\n      return signedOut(authenticateContext, AuthErrorReason.SessionTokenAndUATMissing, \"\");\n    }\n    if (!hasActiveClient && hasSessionToken) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SessionTokenWithoutClientUAT, \"\");\n    }\n    if (hasActiveClient && !hasSessionToken) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.ClientUATWithoutSessionToken, \"\");\n    }\n    const {\n      data: decodeResult,\n      errors: decodedErrors\n    } = (0,_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(authenticateContext.sessionTokenInCookie);\n    if (decodedErrors) {\n      return handleError(decodedErrors[0], \"cookie\");\n    }\n    if (decodeResult.payload.iat < authenticateContext.clientUat) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SessionTokenOutdated, \"\");\n    }\n    try {\n      const {\n        data,\n        errors\n      } = await verifyToken(authenticateContext.sessionTokenInCookie, authenticateContext);\n      if (errors) {\n        throw errors[0];\n      }\n      return await signedIn(authenticateContext, data, void 0, authenticateContext.sessionTokenInCookie);\n    } catch (err) {\n      return handleError(err, \"cookie\");\n    }\n    return signedOut(authenticateContext, AuthErrorReason.UnexpectedError);\n  }\n  function handleError(err, tokenCarrier) {\n    if (err instanceof _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError) {\n      err.tokenCarrier = tokenCarrier;\n      const reasonToHandshake = [_chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired, _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenNotActiveYet].includes(err.reason);\n      if (reasonToHandshake) {\n        return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SessionTokenOutdated, err.getFullMessage());\n      }\n      return signedOut(authenticateContext, err.reason, err.getFullMessage());\n    }\n    return signedOut(authenticateContext, AuthErrorReason.UnexpectedError);\n  }\n  if (authenticateContext.sessionTokenInHeader) {\n    return authenticateRequestWithTokenInHeader();\n  }\n  return authenticateRequestWithTokenInCookie();\n}\nvar debugRequestState = params => {\n  const {\n    isSignedIn,\n    proxyUrl,\n    reason,\n    message,\n    publishableKey,\n    isSatellite,\n    domain\n  } = params;\n  return {\n    isSignedIn,\n    proxyUrl,\n    reason,\n    message,\n    publishableKey,\n    isSatellite,\n    domain\n  };\n};\n\n// src/util/mergePreDefinedOptions.ts\nfunction mergePreDefinedOptions(preDefinedOptions, options) {\n  return Object.keys(preDefinedOptions).reduce((obj, key) => {\n    return _objectSpread(_objectSpread({}, obj), {}, {\n      [key]: options[key] || obj[key]\n    });\n  }, _objectSpread({}, preDefinedOptions));\n}\n\n// src/tokens/factory.ts\nvar defaultOptions = {\n  secretKey: \"\",\n  jwtKey: \"\",\n  apiUrl: void 0,\n  apiVersion: void 0,\n  proxyUrl: \"\",\n  publishableKey: \"\",\n  isSatellite: false,\n  domain: \"\",\n  audience: \"\"\n};\nfunction createAuthenticateRequest(params) {\n  const buildTimeOptions = mergePreDefinedOptions(defaultOptions, params.options);\n  const authenticateRequest2 = (request, options = {}) => {\n    const {\n      apiUrl,\n      apiVersion\n    } = buildTimeOptions;\n    const runTimeOptions = mergePreDefinedOptions(buildTimeOptions, options);\n    return authenticateRequest(request, _objectSpread(_objectSpread(_objectSpread({}, options), runTimeOptions), {}, {\n      // We should add all the omitted props from options here (eg apiUrl / apiVersion)\n      // to avoid runtime options override them.\n      apiUrl,\n      apiVersion\n    }));\n  };\n  return {\n    authenticateRequest: authenticateRequest2,\n    debugRequestState\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/chunk-SK4Q2N3Q.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClerkClient: () => (/* binding */ createClerkClient),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken2)\n/* harmony export */ });\n/* harmony import */ var _chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-SK4Q2N3Q.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-SK4Q2N3Q.mjs\");\n/* harmony import */ var _chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-P263NW7Z.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs\");\n/* harmony import */ var _chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-L23YDIM7.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-L23YDIM7.mjs\");\n/* harmony import */ var _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-3ARITHGE.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-3ARITHGE.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(middleware)/./node_modules/@clerk/shared/dist/telemetry.mjs\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n// src/index.ts\n\nvar verifyToken2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_1__.withLegacyReturn)(_chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.verifyToken);\nfunction createClerkClient(options) {\n  const opts = _objectSpread({}, options);\n  const apiClient = (0,_chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.createBackendApiClient)(opts);\n  const requestState = (0,_chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.createAuthenticateRequest)({\n    options: opts,\n    apiClient\n  });\n  const telemetry = new _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_4__.TelemetryCollector(_objectSpread(_objectSpread({}, options.telemetry), {}, {\n    publishableKey: opts.publishableKey,\n    secretKey: opts.secretKey\n  }, opts.sdkMetadata ? {\n    sdk: opts.sdkMetadata.name,\n    sdkVersion: opts.sdkMetadata.version\n  } : {}));\n  return _objectSpread(_objectSpread(_objectSpread({}, apiClient), requestState), {}, {\n    telemetry\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUdhO0FBR0s7QUFFWTtBQUNBOztBQUU5QjtBQUM2RDtBQUM3RCxJQUFJSyxZQUFZLEdBQUdGLHFFQUFnQixDQUFDRCw0REFBVyxDQUFDO0FBQ2hELFNBQVNJLGlCQUFpQkEsQ0FBQ0MsT0FBTyxFQUFFO0VBQ2xDLE1BQU1DLElBQUksR0FBQUMsYUFBQSxLQUFRRixPQUFPLENBQUU7RUFDM0IsTUFBTUcsU0FBUyxHQUFHVCwyRUFBc0IsQ0FBQ08sSUFBSSxDQUFDO0VBQzlDLE1BQU1HLFlBQVksR0FBR1gsOEVBQXlCLENBQUM7SUFBRU8sT0FBTyxFQUFFQyxJQUFJO0lBQUVFO0VBQVUsQ0FBQyxDQUFDO0VBQzVFLE1BQU1FLFNBQVMsR0FBRyxJQUFJUix1RUFBa0IsQ0FBQUssYUFBQSxDQUFBQSxhQUFBLEtBQ25DRixPQUFPLENBQUNLLFNBQVM7SUFDcEJDLGNBQWMsRUFBRUwsSUFBSSxDQUFDSyxjQUFjO0lBQ25DQyxTQUFTLEVBQUVOLElBQUksQ0FBQ007RUFBUyxHQUN0Qk4sSUFBSSxDQUFDTyxXQUFXLEdBQUc7SUFBRUMsR0FBRyxFQUFFUixJQUFJLENBQUNPLFdBQVcsQ0FBQ0UsSUFBSTtJQUFFQyxVQUFVLEVBQUVWLElBQUksQ0FBQ08sV0FBVyxDQUFDSTtFQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FDaEcsQ0FBQztFQUNGLE9BQUFWLGFBQUEsQ0FBQUEsYUFBQSxDQUFBQSxhQUFBLEtBQ0tDLFNBQVMsR0FDVEMsWUFBWTtJQUNmQztFQUFTO0FBRWIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvaW5kZXgubWpzPzgyODUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgY3JlYXRlQXV0aGVudGljYXRlUmVxdWVzdCxcbiAgY3JlYXRlQmFja2VuZEFwaUNsaWVudCxcbiAgdmVyaWZ5VG9rZW5cbn0gZnJvbSBcIi4vY2h1bmstU0s0UTJOM1EubWpzXCI7XG5pbXBvcnQge1xuICB3aXRoTGVnYWN5UmV0dXJuXG59IGZyb20gXCIuL2NodW5rLVAyNjNOVzdaLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1MMjNZRElNNy5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstM0FSSVRIR0UubWpzXCI7XG5cbi8vIHNyYy9pbmRleC50c1xuaW1wb3J0IHsgVGVsZW1ldHJ5Q29sbGVjdG9yIH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvdGVsZW1ldHJ5XCI7XG52YXIgdmVyaWZ5VG9rZW4yID0gd2l0aExlZ2FjeVJldHVybih2ZXJpZnlUb2tlbik7XG5mdW5jdGlvbiBjcmVhdGVDbGVya0NsaWVudChvcHRpb25zKSB7XG4gIGNvbnN0IG9wdHMgPSB7IC4uLm9wdGlvbnMgfTtcbiAgY29uc3QgYXBpQ2xpZW50ID0gY3JlYXRlQmFja2VuZEFwaUNsaWVudChvcHRzKTtcbiAgY29uc3QgcmVxdWVzdFN0YXRlID0gY3JlYXRlQXV0aGVudGljYXRlUmVxdWVzdCh7IG9wdGlvbnM6IG9wdHMsIGFwaUNsaWVudCB9KTtcbiAgY29uc3QgdGVsZW1ldHJ5ID0gbmV3IFRlbGVtZXRyeUNvbGxlY3Rvcih7XG4gICAgLi4ub3B0aW9ucy50ZWxlbWV0cnksXG4gICAgcHVibGlzaGFibGVLZXk6IG9wdHMucHVibGlzaGFibGVLZXksXG4gICAgc2VjcmV0S2V5OiBvcHRzLnNlY3JldEtleSxcbiAgICAuLi5vcHRzLnNka01ldGFkYXRhID8geyBzZGs6IG9wdHMuc2RrTWV0YWRhdGEubmFtZSwgc2RrVmVyc2lvbjogb3B0cy5zZGtNZXRhZGF0YS52ZXJzaW9uIH0gOiB7fVxuICB9KTtcbiAgcmV0dXJuIHtcbiAgICAuLi5hcGlDbGllbnQsXG4gICAgLi4ucmVxdWVzdFN0YXRlLFxuICAgIHRlbGVtZXRyeVxuICB9O1xufVxuZXhwb3J0IHtcbiAgY3JlYXRlQ2xlcmtDbGllbnQsXG4gIHZlcmlmeVRva2VuMiBhcyB2ZXJpZnlUb2tlblxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlQXV0aGVudGljYXRlUmVxdWVzdCIsImNyZWF0ZUJhY2tlbmRBcGlDbGllbnQiLCJ2ZXJpZnlUb2tlbiIsIndpdGhMZWdhY3lSZXR1cm4iLCJUZWxlbWV0cnlDb2xsZWN0b3IiLCJ2ZXJpZnlUb2tlbjIiLCJjcmVhdGVDbGVya0NsaWVudCIsIm9wdGlvbnMiLCJvcHRzIiwiX29iamVjdFNwcmVhZCIsImFwaUNsaWVudCIsInJlcXVlc3RTdGF0ZSIsInRlbGVtZXRyeSIsInB1Ymxpc2hhYmxlS2V5Iiwic2VjcmV0S2V5Iiwic2RrTWV0YWRhdGEiLCJzZGsiLCJuYW1lIiwic2RrVmVyc2lvbiIsInZlcnNpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/index.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/internal.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/internal.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthStatus: () => (/* reexport safe */ _chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthStatus),\n/* harmony export */   constants: () => (/* reexport safe */ _chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.constants),\n/* harmony export */   createAuthenticateRequest: () => (/* reexport safe */ _chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.createAuthenticateRequest),\n/* harmony export */   createClerkRequest: () => (/* reexport safe */ _chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.createClerkRequest),\n/* harmony export */   createRedirect: () => (/* binding */ createRedirect),\n/* harmony export */   debugRequestState: () => (/* reexport safe */ _chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.debugRequestState),\n/* harmony export */   decorateObjectWithResources: () => (/* binding */ decorateObjectWithResources),\n/* harmony export */   makeAuthObjectSerializable: () => (/* reexport safe */ _chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.makeAuthObjectSerializable),\n/* harmony export */   signedInAuthObject: () => (/* reexport safe */ _chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.signedInAuthObject),\n/* harmony export */   signedOutAuthObject: () => (/* reexport safe */ _chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.signedOutAuthObject),\n/* harmony export */   stripPrivateDataFromObject: () => (/* binding */ stripPrivateDataFromObject)\n/* harmony export */ });\n/* harmony import */ var _chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-SK4Q2N3Q.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-SK4Q2N3Q.mjs\");\n/* harmony import */ var _chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-L23YDIM7.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-L23YDIM7.mjs\");\n/* harmony import */ var _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-3ARITHGE.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-3ARITHGE.mjs\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n// src/createRedirect.ts\nvar buildUrl = (_baseUrl, _targetUrl, _returnBackUrl) => {\n  if (_baseUrl === \"\") {\n    return legacyBuildUrl(_targetUrl.toString(), _returnBackUrl?.toString());\n  }\n  const baseUrl = new URL(_baseUrl);\n  const returnBackUrl = _returnBackUrl ? new URL(_returnBackUrl, baseUrl) : void 0;\n  const res = new URL(_targetUrl, baseUrl);\n  if (returnBackUrl) {\n    res.searchParams.set(\"redirect_url\", returnBackUrl.toString());\n  }\n  return res.toString();\n};\nvar legacyBuildUrl = (targetUrl, redirectUrl) => {\n  let url;\n  if (!targetUrl.startsWith(\"http\")) {\n    if (!redirectUrl || !redirectUrl.startsWith(\"http\")) {\n      throw new Error(\"destination url or return back url should be an absolute path url!\");\n    }\n    const baseURL = new URL(redirectUrl);\n    url = new URL(targetUrl, baseURL.origin);\n  } else {\n    url = new URL(targetUrl);\n  }\n  if (redirectUrl) {\n    url.searchParams.set(\"redirect_url\", redirectUrl);\n  }\n  return url.toString();\n};\nvar buildAccountsBaseUrl = frontendApi => {\n  if (!frontendApi) {\n    return \"\";\n  }\n  const accountsBaseUrl = frontendApi.replace(/(clerk\\.accountsstage\\.)/, \"accountsstage.\").replace(/(clerk\\.accounts\\.|clerk\\.)/, \"accounts.\");\n  return `https://${accountsBaseUrl}`;\n};\nvar createRedirect = params => {\n  const {\n    publishableKey,\n    redirectAdapter,\n    signInUrl,\n    signUpUrl,\n    baseUrl\n  } = params;\n  const frontendApi = (0,_chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.parsePublishableKey)(publishableKey)?.frontendApi;\n  const accountsBaseUrl = buildAccountsBaseUrl(frontendApi);\n  const redirectToSignUp = ({\n    returnBackUrl\n  } = {}) => {\n    if (!signUpUrl && !accountsBaseUrl) {\n      _chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throwMissingPublishableKeyError();\n    }\n    const accountsSignUpUrl = `${accountsBaseUrl}/sign-up`;\n    return redirectAdapter(buildUrl(baseUrl, signUpUrl || accountsSignUpUrl, returnBackUrl));\n  };\n  const redirectToSignIn = ({\n    returnBackUrl\n  } = {}) => {\n    if (!signInUrl && !accountsBaseUrl) {\n      _chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throwMissingPublishableKeyError();\n    }\n    const accountsSignInUrl = `${accountsBaseUrl}/sign-in`;\n    return redirectAdapter(buildUrl(baseUrl, signInUrl || accountsSignInUrl, returnBackUrl));\n  };\n  return {\n    redirectToSignUp,\n    redirectToSignIn\n  };\n};\n\n// src/util/decorateObjectWithResources.ts\nvar decorateObjectWithResources = async (obj, authObj, opts) => {\n  const {\n    loadSession,\n    loadUser,\n    loadOrganization\n  } = opts || {};\n  const {\n    userId,\n    sessionId,\n    orgId\n  } = authObj;\n  const {\n    sessions,\n    users,\n    organizations\n  } = (0,_chunk_SK4Q2N3Q_mjs__WEBPACK_IMPORTED_MODULE_0__.createBackendApiClient)(_objectSpread({}, opts));\n  const [sessionResp, userResp, organizationResp] = await Promise.all([loadSession && sessionId ? sessions.getSession(sessionId) : Promise.resolve(void 0), loadUser && userId ? users.getUser(userId) : Promise.resolve(void 0), loadOrganization && orgId ? organizations.getOrganization({\n    organizationId: orgId\n  }) : Promise.resolve(void 0)]);\n  const resources = stripPrivateDataFromObject({\n    session: sessionResp,\n    user: userResp,\n    organization: organizationResp\n  });\n  return Object.assign(obj, resources);\n};\nfunction stripPrivateDataFromObject(authObject) {\n  const user = authObject.user ? _objectSpread({}, authObject.user) : authObject.user;\n  const organization = authObject.organization ? _objectSpread({}, authObject.organization) : authObject.organization;\n  prunePrivateMetadata(user);\n  prunePrivateMetadata(organization);\n  return _objectSpread(_objectSpread({}, authObject), {}, {\n    user,\n    organization\n  });\n}\nfunction prunePrivateMetadata(resource) {\n  if (resource) {\n    delete resource[\"privateMetadata\"];\n    delete resource[\"private_metadata\"];\n  }\n  return resource;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/internal.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/jwt/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/jwt/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeJwt: () => (/* binding */ decodeJwt2),\n/* harmony export */   hasValidSignature: () => (/* binding */ hasValidSignature2),\n/* harmony export */   signJwt: () => (/* binding */ signJwt2),\n/* harmony export */   verifyJwt: () => (/* binding */ verifyJwt2)\n/* harmony export */ });\n/* harmony import */ var _chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-P263NW7Z.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs\");\n/* harmony import */ var _chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunk-L23YDIM7.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-L23YDIM7.mjs\");\n/* harmony import */ var _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chunk-3ARITHGE.mjs */ \"(middleware)/./node_modules/@clerk/backend/dist/chunk-3ARITHGE.mjs\");\n\n\n\n\n// src/jwt/signJwt.ts\nfunction encodeJwtData(value) {\n  const stringified = JSON.stringify(value);\n  const encoder = new TextEncoder();\n  const encoded = encoder.encode(stringified);\n  return _chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_1__.base64url.stringify(encoded, {\n    pad: false\n  });\n}\nasync function signJwt(payload, key, options) {\n  if (!options.algorithm) {\n    throw new Error(\"No algorithm specified\");\n  }\n  const encoder = new TextEncoder();\n  const algorithm = (0,_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_1__.getCryptoAlgorithm)(options.algorithm);\n  if (!algorithm) {\n    return {\n      errors: [new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_2__.SignJWTError(`Unsupported algorithm ${options.algorithm}`)]\n    };\n  }\n  const cryptoKey = await (0,_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_1__.importKey)(key, algorithm, \"sign\");\n  const header = options.header || {\n    typ: \"JWT\"\n  };\n  header.alg = options.algorithm;\n  payload.iat = Math.floor(Date.now() / 1e3);\n  const encodedHeader = encodeJwtData(header);\n  const encodedPayload = encodeJwtData(payload);\n  const firstPart = `${encodedHeader}.${encodedPayload}`;\n  try {\n    const signature = await _chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_1__.runtime_default.crypto.subtle.sign(algorithm, cryptoKey, encoder.encode(firstPart));\n    const encodedSignature = `${firstPart}.${_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_1__.base64url.stringify(new Uint8Array(signature), {\n      pad: false\n    })}`;\n    return {\n      data: encodedSignature\n    };\n  } catch (error) {\n    return {\n      errors: [new _chunk_3ARITHGE_mjs__WEBPACK_IMPORTED_MODULE_2__.SignJWTError(error?.message)]\n    };\n  }\n}\n\n// src/jwt/index.ts\nvar verifyJwt2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__.withLegacyReturn)(_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_1__.verifyJwt);\nvar decodeJwt2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__.withLegacySyncReturn)(_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_1__.decodeJwt);\nvar signJwt2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__.withLegacyReturn)(signJwt);\nvar hasValidSignature2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__.withLegacyReturn)(_chunk_L23YDIM7_mjs__WEBPACK_IMPORTED_MODULE_1__.hasValidSignature);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3Qvand0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBRXNCO0FBU1g7QUFHRzs7QUFHZDtBQUNBLFNBQVNVLGFBQWFBLENBQUNDLEtBQUssRUFBRTtFQUM1QixNQUFNQyxXQUFXLEdBQUdDLElBQUksQ0FBQ0MsU0FBUyxDQUFDSCxLQUFLLENBQUM7RUFDekMsTUFBTUksT0FBTyxHQUFHLElBQUlDLFdBQVcsQ0FBQyxDQUFDO0VBQ2pDLE1BQU1DLE9BQU8sR0FBR0YsT0FBTyxDQUFDRyxNQUFNLENBQUNOLFdBQVcsQ0FBQztFQUMzQyxPQUFPViwwREFBUyxDQUFDWSxTQUFTLENBQUNHLE9BQU8sRUFBRTtJQUFFRSxHQUFHLEVBQUU7RUFBTSxDQUFDLENBQUM7QUFDckQ7QUFDQSxlQUFlQyxPQUFPQSxDQUFDQyxPQUFPLEVBQUVDLEdBQUcsRUFBRUMsT0FBTyxFQUFFO0VBQzVDLElBQUksQ0FBQ0EsT0FBTyxDQUFDQyxTQUFTLEVBQUU7SUFDdEIsTUFBTSxJQUFJQyxLQUFLLENBQUMsd0JBQXdCLENBQUM7RUFDM0M7RUFDQSxNQUFNVixPQUFPLEdBQUcsSUFBSUMsV0FBVyxDQUFDLENBQUM7RUFDakMsTUFBTVEsU0FBUyxHQUFHcEIsdUVBQWtCLENBQUNtQixPQUFPLENBQUNDLFNBQVMsQ0FBQztFQUN2RCxJQUFJLENBQUNBLFNBQVMsRUFBRTtJQUNkLE9BQU87TUFDTEUsTUFBTSxFQUFFLENBQUMsSUFBSWpCLDZEQUFZLENBQUUseUJBQXdCYyxPQUFPLENBQUNDLFNBQVUsRUFBQyxDQUFDO0lBQ3pFLENBQUM7RUFDSDtFQUNBLE1BQU1HLFNBQVMsR0FBRyxNQUFNckIsOERBQVMsQ0FBQ2dCLEdBQUcsRUFBRUUsU0FBUyxFQUFFLE1BQU0sQ0FBQztFQUN6RCxNQUFNSSxNQUFNLEdBQUdMLE9BQU8sQ0FBQ0ssTUFBTSxJQUFJO0lBQUVDLEdBQUcsRUFBRTtFQUFNLENBQUM7RUFDL0NELE1BQU0sQ0FBQ0UsR0FBRyxHQUFHUCxPQUFPLENBQUNDLFNBQVM7RUFDOUJILE9BQU8sQ0FBQ1UsR0FBRyxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0MsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztFQUMxQyxNQUFNQyxhQUFhLEdBQUcxQixhQUFhLENBQUNrQixNQUFNLENBQUM7RUFDM0MsTUFBTVMsY0FBYyxHQUFHM0IsYUFBYSxDQUFDVyxPQUFPLENBQUM7RUFDN0MsTUFBTWlCLFNBQVMsR0FBSSxHQUFFRixhQUFjLElBQUdDLGNBQWUsRUFBQztFQUN0RCxJQUFJO0lBQ0YsTUFBTUUsU0FBUyxHQUFHLE1BQU1oQyxnRUFBZSxDQUFDaUMsTUFBTSxDQUFDQyxNQUFNLENBQUNDLElBQUksQ0FBQ2xCLFNBQVMsRUFBRUcsU0FBUyxFQUFFWixPQUFPLENBQUNHLE1BQU0sQ0FBQ29CLFNBQVMsQ0FBQyxDQUFDO0lBQzNHLE1BQU1LLGdCQUFnQixHQUFJLEdBQUVMLFNBQVUsSUFBR3BDLDBEQUFTLENBQUNZLFNBQVMsQ0FBQyxJQUFJOEIsVUFBVSxDQUFDTCxTQUFTLENBQUMsRUFBRTtNQUFFcEIsR0FBRyxFQUFFO0lBQU0sQ0FBQyxDQUFFLEVBQUM7SUFDekcsT0FBTztNQUFFMEIsSUFBSSxFQUFFRjtJQUFpQixDQUFDO0VBQ25DLENBQUMsQ0FBQyxPQUFPRyxLQUFLLEVBQUU7SUFDZCxPQUFPO01BQUVwQixNQUFNLEVBQUUsQ0FBQyxJQUFJakIsNkRBQVksQ0FBQ3FDLEtBQUssRUFBRUMsT0FBTyxDQUFDO0lBQUUsQ0FBQztFQUN2RDtBQUNGOztBQUVBO0FBQ0EsSUFBSUMsVUFBVSxHQUFHaEQscUVBQWdCLENBQUNRLDBEQUFTLENBQUM7QUFDNUMsSUFBSXlDLFVBQVUsR0FBR2hELHlFQUFvQixDQUFDRSwwREFBUyxDQUFDO0FBQ2hELElBQUkrQyxRQUFRLEdBQUdsRCxxRUFBZ0IsQ0FBQ29CLE9BQU8sQ0FBQztBQUN4QyxJQUFJK0Isa0JBQWtCLEdBQUduRCxxRUFBZ0IsQ0FBQ0ssa0VBQWlCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3Qvand0L2luZGV4Lm1qcz9jZjczIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIHdpdGhMZWdhY3lSZXR1cm4sXG4gIHdpdGhMZWdhY3lTeW5jUmV0dXJuXG59IGZyb20gXCIuLi9jaHVuay1QMjYzTlc3Wi5tanNcIjtcbmltcG9ydCB7XG4gIGJhc2U2NHVybCxcbiAgZGVjb2RlSnd0LFxuICBnZXRDcnlwdG9BbGdvcml0aG0sXG4gIGhhc1ZhbGlkU2lnbmF0dXJlLFxuICBpbXBvcnRLZXksXG4gIHJ1bnRpbWVfZGVmYXVsdCxcbiAgdmVyaWZ5Snd0XG59IGZyb20gXCIuLi9jaHVuay1MMjNZRElNNy5tanNcIjtcbmltcG9ydCB7XG4gIFNpZ25KV1RFcnJvclxufSBmcm9tIFwiLi4vY2h1bmstM0FSSVRIR0UubWpzXCI7XG5cbi8vIHNyYy9qd3Qvc2lnbkp3dC50c1xuZnVuY3Rpb24gZW5jb2RlSnd0RGF0YSh2YWx1ZSkge1xuICBjb25zdCBzdHJpbmdpZmllZCA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbiAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICBjb25zdCBlbmNvZGVkID0gZW5jb2Rlci5lbmNvZGUoc3RyaW5naWZpZWQpO1xuICByZXR1cm4gYmFzZTY0dXJsLnN0cmluZ2lmeShlbmNvZGVkLCB7IHBhZDogZmFsc2UgfSk7XG59XG5hc3luYyBmdW5jdGlvbiBzaWduSnd0KHBheWxvYWQsIGtleSwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMuYWxnb3JpdGhtKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gYWxnb3JpdGhtIHNwZWNpZmllZFwiKTtcbiAgfVxuICBjb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG4gIGNvbnN0IGFsZ29yaXRobSA9IGdldENyeXB0b0FsZ29yaXRobShvcHRpb25zLmFsZ29yaXRobSk7XG4gIGlmICghYWxnb3JpdGhtKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGVycm9yczogW25ldyBTaWduSldURXJyb3IoYFVuc3VwcG9ydGVkIGFsZ29yaXRobSAke29wdGlvbnMuYWxnb3JpdGhtfWApXVxuICAgIH07XG4gIH1cbiAgY29uc3QgY3J5cHRvS2V5ID0gYXdhaXQgaW1wb3J0S2V5KGtleSwgYWxnb3JpdGhtLCBcInNpZ25cIik7XG4gIGNvbnN0IGhlYWRlciA9IG9wdGlvbnMuaGVhZGVyIHx8IHsgdHlwOiBcIkpXVFwiIH07XG4gIGhlYWRlci5hbGcgPSBvcHRpb25zLmFsZ29yaXRobTtcbiAgcGF5bG9hZC5pYXQgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxZTMpO1xuICBjb25zdCBlbmNvZGVkSGVhZGVyID0gZW5jb2RlSnd0RGF0YShoZWFkZXIpO1xuICBjb25zdCBlbmNvZGVkUGF5bG9hZCA9IGVuY29kZUp3dERhdGEocGF5bG9hZCk7XG4gIGNvbnN0IGZpcnN0UGFydCA9IGAke2VuY29kZWRIZWFkZXJ9LiR7ZW5jb2RlZFBheWxvYWR9YDtcbiAgdHJ5IHtcbiAgICBjb25zdCBzaWduYXR1cmUgPSBhd2FpdCBydW50aW1lX2RlZmF1bHQuY3J5cHRvLnN1YnRsZS5zaWduKGFsZ29yaXRobSwgY3J5cHRvS2V5LCBlbmNvZGVyLmVuY29kZShmaXJzdFBhcnQpKTtcbiAgICBjb25zdCBlbmNvZGVkU2lnbmF0dXJlID0gYCR7Zmlyc3RQYXJ0fS4ke2Jhc2U2NHVybC5zdHJpbmdpZnkobmV3IFVpbnQ4QXJyYXkoc2lnbmF0dXJlKSwgeyBwYWQ6IGZhbHNlIH0pfWA7XG4gICAgcmV0dXJuIHsgZGF0YTogZW5jb2RlZFNpZ25hdHVyZSB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB7IGVycm9yczogW25ldyBTaWduSldURXJyb3IoZXJyb3I/Lm1lc3NhZ2UpXSB9O1xuICB9XG59XG5cbi8vIHNyYy9qd3QvaW5kZXgudHNcbnZhciB2ZXJpZnlKd3QyID0gd2l0aExlZ2FjeVJldHVybih2ZXJpZnlKd3QpO1xudmFyIGRlY29kZUp3dDIgPSB3aXRoTGVnYWN5U3luY1JldHVybihkZWNvZGVKd3QpO1xudmFyIHNpZ25Kd3QyID0gd2l0aExlZ2FjeVJldHVybihzaWduSnd0KTtcbnZhciBoYXNWYWxpZFNpZ25hdHVyZTIgPSB3aXRoTGVnYWN5UmV0dXJuKGhhc1ZhbGlkU2lnbmF0dXJlKTtcbmV4cG9ydCB7XG4gIGRlY29kZUp3dDIgYXMgZGVjb2RlSnd0LFxuICBoYXNWYWxpZFNpZ25hdHVyZTIgYXMgaGFzVmFsaWRTaWduYXR1cmUsXG4gIHNpZ25Kd3QyIGFzIHNpZ25Kd3QsXG4gIHZlcmlmeUp3dDIgYXMgdmVyaWZ5Snd0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6WyJ3aXRoTGVnYWN5UmV0dXJuIiwid2l0aExlZ2FjeVN5bmNSZXR1cm4iLCJiYXNlNjR1cmwiLCJkZWNvZGVKd3QiLCJnZXRDcnlwdG9BbGdvcml0aG0iLCJoYXNWYWxpZFNpZ25hdHVyZSIsImltcG9ydEtleSIsInJ1bnRpbWVfZGVmYXVsdCIsInZlcmlmeUp3dCIsIlNpZ25KV1RFcnJvciIsImVuY29kZUp3dERhdGEiLCJ2YWx1ZSIsInN0cmluZ2lmaWVkIiwiSlNPTiIsInN0cmluZ2lmeSIsImVuY29kZXIiLCJUZXh0RW5jb2RlciIsImVuY29kZWQiLCJlbmNvZGUiLCJwYWQiLCJzaWduSnd0IiwicGF5bG9hZCIsImtleSIsIm9wdGlvbnMiLCJhbGdvcml0aG0iLCJFcnJvciIsImVycm9ycyIsImNyeXB0b0tleSIsImhlYWRlciIsInR5cCIsImFsZyIsImlhdCIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJlbmNvZGVkSGVhZGVyIiwiZW5jb2RlZFBheWxvYWQiLCJmaXJzdFBhcnQiLCJzaWduYXR1cmUiLCJjcnlwdG8iLCJzdWJ0bGUiLCJzaWduIiwiZW5jb2RlZFNpZ25hdHVyZSIsIlVpbnQ4QXJyYXkiLCJkYXRhIiwiZXJyb3IiLCJtZXNzYWdlIiwidmVyaWZ5Snd0MiIsImRlY29kZUp3dDIiLCJzaWduSnd0MiIsImhhc1ZhbGlkU2lnbmF0dXJlMiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/jwt/index.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   webcrypto: () => (/* binding */ webcrypto)\n/* harmony export */ });\nconst webcrypto = crypto;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvcnVudGltZS9icm93c2VyL2NyeXB0by5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLFNBQVMsR0FBR0MsTUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL2JhY2tlbmQvZGlzdC9ydW50aW1lL2Jyb3dzZXIvY3J5cHRvLm1qcz8wNzc5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB3ZWJjcnlwdG8gPSBjcnlwdG87XG4iXSwibmFtZXMiOlsid2ViY3J5cHRvIiwiY3J5cHRvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/apiUrlFromPublishableKey.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/apiUrlFromPublishableKey.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiUrlFromPublishableKey: () => (/* reexport safe */ _chunk_SE4J36LP_mjs__WEBPACK_IMPORTED_MODULE_0__.apiUrlFromPublishableKey)\n/* harmony export */ });\n/* harmony import */ var _chunk_SE4J36LP_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-SE4J36LP.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-SE4J36LP.mjs\");\n/* harmony import */ var _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-ZXFUQ6LY.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9hcGlVcmxGcm9tUHVibGlzaGFibGVLZXkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDMEI7QUFFSTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvYXBpVXJsRnJvbVB1Ymxpc2hhYmxlS2V5Lm1qcz8zY2RiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGFwaVVybEZyb21QdWJsaXNoYWJsZUtleVxufSBmcm9tIFwiLi9jaHVuay1TRTRKMzZMUC5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstWlhGVVE2TFkubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLVRFVEdURUkyLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1LT0g3R1RKTy5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstWDJGWVI1VTYubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLVVWVkNXU1ZGLm1qc1wiO1xuZXhwb3J0IHtcbiAgYXBpVXJsRnJvbVB1Ymxpc2hhYmxlS2V5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpVXJsRnJvbVB1Ymxpc2hhYmxlS2V5Lm1qcy5tYXAiXSwibmFtZXMiOlsiYXBpVXJsRnJvbVB1Ymxpc2hhYmxlS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/apiUrlFromPublishableKey.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/callWithRetry.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/callWithRetry.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callWithRetry: () => (/* reexport safe */ _chunk_4PW5MDZA_mjs__WEBPACK_IMPORTED_MODULE_0__.callWithRetry)\n/* harmony export */ });\n/* harmony import */ var _chunk_4PW5MDZA_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-4PW5MDZA.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jYWxsV2l0aFJldHJ5Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDZTtBQUVlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2FsbFdpdGhSZXRyeS5tanM/NzUyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjYWxsV2l0aFJldHJ5XG59IGZyb20gXCIuL2NodW5rLTRQVzVNRFpBLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1VVlZDV1NWRi5tanNcIjtcbmV4cG9ydCB7XG4gIGNhbGxXaXRoUmV0cnlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYWxsV2l0aFJldHJ5Lm1qcy5tYXAiXSwibmFtZXMiOlsiY2FsbFdpdGhSZXRyeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/callWithRetry.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-46BSODPS.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-46BSODPS.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkAPIResponseError: () => (/* binding */ ClerkAPIResponseError),\n/* harmony export */   ClerkRuntimeError: () => (/* binding */ ClerkRuntimeError),\n/* harmony export */   EmailLinkError: () => (/* binding */ EmailLinkError),\n/* harmony export */   EmailLinkErrorCode: () => (/* binding */ EmailLinkErrorCode),\n/* harmony export */   buildErrorThrower: () => (/* binding */ buildErrorThrower),\n/* harmony export */   is4xxError: () => (/* binding */ is4xxError),\n/* harmony export */   isClerkAPIResponseError: () => (/* binding */ isClerkAPIResponseError),\n/* harmony export */   isClerkRuntimeError: () => (/* binding */ isClerkRuntimeError),\n/* harmony export */   isEmailLinkError: () => (/* binding */ isEmailLinkError),\n/* harmony export */   isKnownError: () => (/* binding */ isKnownError),\n/* harmony export */   isMetamaskError: () => (/* binding */ isMetamaskError),\n/* harmony export */   isNetworkError: () => (/* binding */ isNetworkError),\n/* harmony export */   isPasswordPwnedError: () => (/* binding */ isPasswordPwnedError),\n/* harmony export */   isUnauthorizedError: () => (/* binding */ isUnauthorizedError),\n/* harmony export */   isUserLockedError: () => (/* binding */ isUserLockedError),\n/* harmony export */   parseError: () => (/* binding */ parseError),\n/* harmony export */   parseErrors: () => (/* binding */ parseErrors)\n/* harmony export */ });\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// src/error.ts\nfunction isUnauthorizedError(e) {\n  var _a, _b;\n  const status = e == null ? void 0 : e.status;\n  const code = (_b = (_a = e == null ? void 0 : e.errors) == null ? void 0 : _a[0]) == null ? void 0 : _b.code;\n  return code === \"authentication_invalid\" && status === 401;\n}\nfunction is4xxError(e) {\n  const status = e == null ? void 0 : e.status;\n  return !!status && status >= 400 && status < 500;\n}\nfunction isNetworkError(e) {\n  const message = (`${e.message}${e.name}` || \"\").toLowerCase().replace(/\\s+/g, \"\");\n  return message.includes(\"networkerror\");\n}\nfunction isKnownError(error) {\n  return isClerkAPIResponseError(error) || isMetamaskError(error) || isClerkRuntimeError(error);\n}\nfunction isClerkAPIResponseError(err) {\n  return \"clerkError\" in err;\n}\nfunction isClerkRuntimeError(err) {\n  return \"clerkRuntimeError\" in err;\n}\nfunction isMetamaskError(err) {\n  return \"code\" in err && [4001, 32602, 32603].includes(err.code) && \"message\" in err;\n}\nfunction isUserLockedError(err) {\n  var _a, _b;\n  return isClerkAPIResponseError(err) && ((_b = (_a = err.errors) == null ? void 0 : _a[0]) == null ? void 0 : _b.code) === \"user_locked\";\n}\nfunction isPasswordPwnedError(err) {\n  var _a, _b;\n  return isClerkAPIResponseError(err) && ((_b = (_a = err.errors) == null ? void 0 : _a[0]) == null ? void 0 : _b.code) === \"form_password_pwned\";\n}\nfunction parseErrors(data = []) {\n  return data.length > 0 ? data.map(parseError) : [];\n}\nfunction parseError(error) {\n  var _a, _b, _c, _d, _e;\n  return {\n    code: error.code,\n    message: error.message,\n    longMessage: error.long_message,\n    meta: {\n      paramName: (_a = error == null ? void 0 : error.meta) == null ? void 0 : _a.param_name,\n      sessionId: (_b = error == null ? void 0 : error.meta) == null ? void 0 : _b.session_id,\n      emailAddresses: (_c = error == null ? void 0 : error.meta) == null ? void 0 : _c.email_addresses,\n      identifiers: (_d = error == null ? void 0 : error.meta) == null ? void 0 : _d.identifiers,\n      zxcvbn: (_e = error == null ? void 0 : error.meta) == null ? void 0 : _e.zxcvbn\n    }\n  };\n}\nvar ClerkAPIResponseError = class _ClerkAPIResponseError extends Error {\n  constructor(message, {\n    data,\n    status,\n    clerkTraceId\n  }) {\n    super(message);\n    this.toString = () => {\n      let message = `[${this.name}]\nMessage:${this.message}\nStatus:${this.status}\nSerialized errors: ${this.errors.map(e => JSON.stringify(e))}`;\n      if (this.clerkTraceId) {\n        message += `\nClerk Trace ID: ${this.clerkTraceId}`;\n      }\n      return message;\n    };\n    Object.setPrototypeOf(this, _ClerkAPIResponseError.prototype);\n    this.status = status;\n    this.message = message;\n    this.clerkTraceId = clerkTraceId;\n    this.clerkError = true;\n    this.errors = parseErrors(data);\n  }\n};\nvar ClerkRuntimeError = class _ClerkRuntimeError extends Error {\n  constructor(message, {\n    code\n  }) {\n    super(message);\n    /**\n     * Returns a string representation of the error.\n     *\n     * @returns {string} A formatted string with the error name and message.\n     * @memberof ClerkRuntimeError\n     */\n    this.toString = () => {\n      return `[${this.name}]\nMessage:${this.message}`;\n    };\n    Object.setPrototypeOf(this, _ClerkRuntimeError.prototype);\n    this.code = code;\n    this.message = message;\n    this.clerkRuntimeError = true;\n  }\n};\nvar EmailLinkError = class _EmailLinkError extends Error {\n  constructor(code) {\n    super(code);\n    this.code = code;\n    Object.setPrototypeOf(this, _EmailLinkError.prototype);\n  }\n};\nfunction isEmailLinkError(err) {\n  return err instanceof EmailLinkError;\n}\nvar EmailLinkErrorCode = {\n  Expired: \"expired\",\n  Failed: \"failed\"\n};\nvar DefaultMessages = Object.freeze({\n  InvalidProxyUrlErrorMessage: `The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})`,\n  InvalidPublishableKeyErrorMessage: `The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,\n  MissingPublishableKeyErrorMessage: `Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n  MissingSecretKeyErrorMessage: `Missing secretKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n  MissingClerkProvider: `{{source}} can only be used within the <ClerkProvider /> component. Learn more: https://clerk.com/docs/components/clerk-provider`\n});\nfunction buildErrorThrower({\n  packageName,\n  customMessages\n}) {\n  let pkg = packageName;\n  const messages = _objectSpread(_objectSpread({}, DefaultMessages), customMessages);\n  function buildMessage(rawMessage, replacements) {\n    if (!replacements) {\n      return `${pkg}: ${rawMessage}`;\n    }\n    let msg = rawMessage;\n    const matches = rawMessage.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);\n    for (const match of matches) {\n      const replacement = (replacements[match[1]] || \"\").toString();\n      msg = msg.replace(`{{${match[1]}}}`, replacement);\n    }\n    return `${pkg}: ${msg}`;\n  }\n  return {\n    setPackageName({\n      packageName: packageName2\n    }) {\n      if (typeof packageName2 === \"string\") {\n        pkg = packageName2;\n      }\n      return this;\n    },\n    setMessages({\n      customMessages: customMessages2\n    }) {\n      Object.assign(messages, customMessages2 || {});\n      return this;\n    },\n    throwInvalidPublishableKeyError(params) {\n      throw new Error(buildMessage(messages.InvalidPublishableKeyErrorMessage, params));\n    },\n    throwInvalidProxyUrl(params) {\n      throw new Error(buildMessage(messages.InvalidProxyUrlErrorMessage, params));\n    },\n    throwMissingPublishableKeyError() {\n      throw new Error(buildMessage(messages.MissingPublishableKeyErrorMessage));\n    },\n    throwMissingSecretKeyError() {\n      throw new Error(buildMessage(messages.MissingSecretKeyErrorMessage));\n    },\n    throwMissingClerkProviderError(params) {\n      throw new Error(buildMessage(messages.MissingClerkProvider, params));\n    },\n    throw(message) {\n      throw new Error(buildMessage(message));\n    }\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-46BSODPS.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callWithRetry: () => (/* binding */ callWithRetry)\n/* harmony export */ });\n// src/callWithRetry.ts\nfunction wait(ms) {\n  return new Promise(res => setTimeout(res, ms));\n}\nvar MAX_NUMBER_OF_RETRIES = 5;\nasync function callWithRetry(fn, attempt = 1, maxAttempts = MAX_NUMBER_OF_RETRIES) {\n  try {\n    return await fn();\n  } catch (e) {\n    if (attempt >= maxAttempts) {\n      throw e;\n    }\n    await wait(2 ** attempt * 100);\n    return callWithRetry(fn, attempt + 1, maxAttempts);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay00UFc1TURaQS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsU0FBU0EsSUFBSUEsQ0FBQ0MsRUFBRSxFQUFFO0VBQ2hCLE9BQU8sSUFBSUMsT0FBTyxDQUFFQyxHQUFHLElBQUtDLFVBQVUsQ0FBQ0QsR0FBRyxFQUFFRixFQUFFLENBQUMsQ0FBQztBQUNsRDtBQUNBLElBQUlJLHFCQUFxQixHQUFHLENBQUM7QUFDN0IsZUFBZUMsYUFBYUEsQ0FBQ0MsRUFBRSxFQUFFQyxPQUFPLEdBQUcsQ0FBQyxFQUFFQyxXQUFXLEdBQUdKLHFCQUFxQixFQUFFO0VBQ2pGLElBQUk7SUFDRixPQUFPLE1BQU1FLEVBQUUsQ0FBQyxDQUFDO0VBQ25CLENBQUMsQ0FBQyxPQUFPRyxDQUFDLEVBQUU7SUFDVixJQUFJRixPQUFPLElBQUlDLFdBQVcsRUFBRTtNQUMxQixNQUFNQyxDQUFDO0lBQ1Q7SUFDQSxNQUFNVixJQUFJLENBQUMsQ0FBQyxJQUFJUSxPQUFPLEdBQUcsR0FBRyxDQUFDO0lBQzlCLE9BQU9GLGFBQWEsQ0FBQ0MsRUFBRSxFQUFFQyxPQUFPLEdBQUcsQ0FBQyxFQUFFQyxXQUFXLENBQUM7RUFDcEQ7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLTRQVzVNRFpBLm1qcz8yYjQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jYWxsV2l0aFJldHJ5LnRzXG5mdW5jdGlvbiB3YWl0KG1zKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzKSA9PiBzZXRUaW1lb3V0KHJlcywgbXMpKTtcbn1cbnZhciBNQVhfTlVNQkVSX09GX1JFVFJJRVMgPSA1O1xuYXN5bmMgZnVuY3Rpb24gY2FsbFdpdGhSZXRyeShmbiwgYXR0ZW1wdCA9IDEsIG1heEF0dGVtcHRzID0gTUFYX05VTUJFUl9PRl9SRVRSSUVTKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGF3YWl0IGZuKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoYXR0ZW1wdCA+PSBtYXhBdHRlbXB0cykge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gICAgYXdhaXQgd2FpdCgyICoqIGF0dGVtcHQgKiAxMDApO1xuICAgIHJldHVybiBjYWxsV2l0aFJldHJ5KGZuLCBhdHRlbXB0ICsgMSwgbWF4QXR0ZW1wdHMpO1xuICB9XG59XG5cbmV4cG9ydCB7XG4gIGNhbGxXaXRoUmV0cnlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay00UFc1TURaQS5tanMubWFwIl0sIm5hbWVzIjpbIndhaXQiLCJtcyIsIlByb21pc2UiLCJyZXMiLCJzZXRUaW1lb3V0IiwiTUFYX05VTUJFUl9PRl9SRVRSSUVTIiwiY2FsbFdpdGhSZXRyeSIsImZuIiwiYXR0ZW1wdCIsIm1heEF0dGVtcHRzIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHttpOrHttps: () => (/* binding */ isHttpOrHttps),\n/* harmony export */   isProxyUrlRelative: () => (/* binding */ isProxyUrlRelative),\n/* harmony export */   isValidProxyUrl: () => (/* binding */ isValidProxyUrl),\n/* harmony export */   proxyUrlToAbsoluteURL: () => (/* binding */ proxyUrlToAbsoluteURL)\n/* harmony export */ });\n// src/proxy.ts\nfunction isValidProxyUrl(key) {\n  if (!key) {\n    return true;\n  }\n  return isHttpOrHttps(key) || isProxyUrlRelative(key);\n}\nfunction isHttpOrHttps(key) {\n  return /^http(s)?:\\/\\//.test(key || \"\");\n}\nfunction isProxyUrlRelative(key) {\n  return key.startsWith(\"/\");\n}\nfunction proxyUrlToAbsoluteURL(url) {\n  if (!url) {\n    return \"\";\n  }\n  return isProxyUrlRelative(url) ? new URL(url, window.location.origin).toString() : url;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay02TkRHTjJJVS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EsU0FBU0EsZUFBZUEsQ0FBQ0MsR0FBRyxFQUFFO0VBQzVCLElBQUksQ0FBQ0EsR0FBRyxFQUFFO0lBQ1IsT0FBTyxJQUFJO0VBQ2I7RUFDQSxPQUFPQyxhQUFhLENBQUNELEdBQUcsQ0FBQyxJQUFJRSxrQkFBa0IsQ0FBQ0YsR0FBRyxDQUFDO0FBQ3REO0FBQ0EsU0FBU0MsYUFBYUEsQ0FBQ0QsR0FBRyxFQUFFO0VBQzFCLE9BQU8sZ0JBQWdCLENBQUNHLElBQUksQ0FBQ0gsR0FBRyxJQUFJLEVBQUUsQ0FBQztBQUN6QztBQUNBLFNBQVNFLGtCQUFrQkEsQ0FBQ0YsR0FBRyxFQUFFO0VBQy9CLE9BQU9BLEdBQUcsQ0FBQ0ksVUFBVSxDQUFDLEdBQUcsQ0FBQztBQUM1QjtBQUNBLFNBQVNDLHFCQUFxQkEsQ0FBQ0MsR0FBRyxFQUFFO0VBQ2xDLElBQUksQ0FBQ0EsR0FBRyxFQUFFO0lBQ1IsT0FBTyxFQUFFO0VBQ1g7RUFDQSxPQUFPSixrQkFBa0IsQ0FBQ0ksR0FBRyxDQUFDLEdBQUcsSUFBSUMsR0FBRyxDQUFDRCxHQUFHLEVBQUVFLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDQyxNQUFNLENBQUMsQ0FBQ0MsUUFBUSxDQUFDLENBQUMsR0FBR0wsR0FBRztBQUN4RiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLTZOREdOMklVLm1qcz9mOWIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9wcm94eS50c1xuZnVuY3Rpb24gaXNWYWxpZFByb3h5VXJsKGtleSkge1xuICBpZiAoIWtleSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBpc0h0dHBPckh0dHBzKGtleSkgfHwgaXNQcm94eVVybFJlbGF0aXZlKGtleSk7XG59XG5mdW5jdGlvbiBpc0h0dHBPckh0dHBzKGtleSkge1xuICByZXR1cm4gL15odHRwKHMpPzpcXC9cXC8vLnRlc3Qoa2V5IHx8IFwiXCIpO1xufVxuZnVuY3Rpb24gaXNQcm94eVVybFJlbGF0aXZlKGtleSkge1xuICByZXR1cm4ga2V5LnN0YXJ0c1dpdGgoXCIvXCIpO1xufVxuZnVuY3Rpb24gcHJveHlVcmxUb0Fic29sdXRlVVJMKHVybCkge1xuICBpZiAoIXVybCkge1xuICAgIHJldHVybiBcIlwiO1xuICB9XG4gIHJldHVybiBpc1Byb3h5VXJsUmVsYXRpdmUodXJsKSA/IG5ldyBVUkwodXJsLCB3aW5kb3cubG9jYXRpb24ub3JpZ2luKS50b1N0cmluZygpIDogdXJsO1xufVxuXG5leHBvcnQge1xuICBpc1ZhbGlkUHJveHlVcmwsXG4gIGlzSHR0cE9ySHR0cHMsXG4gIGlzUHJveHlVcmxSZWxhdGl2ZSxcbiAgcHJveHlVcmxUb0Fic29sdXRlVVJMXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstNk5ER04ySVUubWpzLm1hcCJdLCJuYW1lcyI6WyJpc1ZhbGlkUHJveHlVcmwiLCJrZXkiLCJpc0h0dHBPckh0dHBzIiwiaXNQcm94eVVybFJlbGF0aXZlIiwidGVzdCIsInN0YXJ0c1dpdGgiLCJwcm94eVVybFRvQWJzb2x1dGVVUkwiLCJ1cmwiLCJVUkwiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsIm9yaWdpbiIsInRvU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-E6T5KUVH.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-E6T5KUVH.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelToSnake: () => (/* binding */ camelToSnake),\n/* harmony export */   deepCamelToSnake: () => (/* binding */ deepCamelToSnake),\n/* harmony export */   deepSnakeToCamel: () => (/* binding */ deepSnakeToCamel),\n/* harmony export */   getNonUndefinedValues: () => (/* binding */ getNonUndefinedValues),\n/* harmony export */   isIPV4Address: () => (/* binding */ isIPV4Address),\n/* harmony export */   isTruthy: () => (/* binding */ isTruthy),\n/* harmony export */   snakeToCamel: () => (/* binding */ snakeToCamel),\n/* harmony export */   titleize: () => (/* binding */ titleize),\n/* harmony export */   toSentence: () => (/* binding */ toSentence)\n/* harmony export */ });\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// src/underscore.ts\nvar toSentence = items => {\n  if (items.length == 0) {\n    return \"\";\n  }\n  if (items.length == 1) {\n    return items[0];\n  }\n  let sentence = items.slice(0, -1).join(\", \");\n  sentence += `, or ${items.slice(-1)}`;\n  return sentence;\n};\nvar IP_V4_ADDRESS_REGEX = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\nfunction isIPV4Address(str) {\n  return IP_V4_ADDRESS_REGEX.test(str || \"\");\n}\nfunction titleize(str) {\n  const s = str || \"\";\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\nfunction snakeToCamel(str) {\n  return str ? str.replace(/([-_][a-z])/g, match => match.toUpperCase().replace(/-|_/, \"\")) : \"\";\n}\nfunction camelToSnake(str) {\n  return str ? str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`) : \"\";\n}\nvar createDeepObjectTransformer = transform => {\n  const deepTransform = obj => {\n    if (!obj) {\n      return obj;\n    }\n    if (Array.isArray(obj)) {\n      return obj.map(el => {\n        if (typeof el === \"object\" || Array.isArray(el)) {\n          return deepTransform(el);\n        }\n        return el;\n      });\n    }\n    const copy = _objectSpread({}, obj);\n    const keys = Object.keys(copy);\n    for (const oldName of keys) {\n      const newName = transform(oldName.toString());\n      if (newName !== oldName) {\n        copy[newName] = copy[oldName];\n        delete copy[oldName];\n      }\n      if (typeof copy[newName] === \"object\") {\n        copy[newName] = deepTransform(copy[newName]);\n      }\n    }\n    return copy;\n  };\n  return deepTransform;\n};\nvar deepCamelToSnake = createDeepObjectTransformer(camelToSnake);\nvar deepSnakeToCamel = createDeepObjectTransformer(snakeToCamel);\nfunction isTruthy(value) {\n  if (typeof value === `boolean`) return value;\n  if (value === void 0 || value === null) return false;\n  if (typeof value === `string`) {\n    if (value.toLowerCase() === `true`) return true;\n    if (value.toLowerCase() === `false`) return false;\n  }\n  const number = parseInt(value, 10);\n  if (isNaN(number)) return false;\n  if (number > 0) return true;\n  return false;\n}\nfunction getNonUndefinedValues(obj) {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    if (value !== void 0) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-E6T5KUVH.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-IC4FGZI3.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-IC4FGZI3.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deprecated: () => (/* binding */ deprecated),\n/* harmony export */   deprecatedObjectProperty: () => (/* binding */ deprecatedObjectProperty),\n/* harmony export */   deprecatedProperty: () => (/* binding */ deprecatedProperty),\n/* harmony export */   isDevelopmentEnvironment: () => (/* binding */ isDevelopmentEnvironment),\n/* harmony export */   isProductionEnvironment: () => (/* binding */ isProductionEnvironment),\n/* harmony export */   isTestEnvironment: () => (/* binding */ isTestEnvironment)\n/* harmony export */ });\n// src/utils/runtimeEnvironment.ts\nvar isDevelopmentEnvironment = () => {\n  try {\n    return true;\n  } catch (err) {}\n  return false;\n};\nvar isTestEnvironment = () => {\n  try {\n    return false;\n  } catch (err) {}\n  return false;\n};\nvar isProductionEnvironment = () => {\n  try {\n    return false;\n  } catch (err) {}\n  return false;\n};\n\n// src/deprecated.ts\nvar displayedWarnings = /* @__PURE__ */new Set();\nvar deprecated = (fnName, warning, key) => {\n  const hideWarning = isTestEnvironment() || isProductionEnvironment();\n  const messageId = key != null ? key : fnName;\n  if (displayedWarnings.has(messageId) || hideWarning) {\n    return;\n  }\n  displayedWarnings.add(messageId);\n  console.warn(`Clerk - DEPRECATION WARNING: \"${fnName}\" is deprecated and will be removed in the next major release.\n${warning}`);\n};\nvar deprecatedProperty = (cls, propName, warning, isStatic = false) => {\n  const target = isStatic ? cls : cls.prototype;\n  let value = target[propName];\n  Object.defineProperty(target, propName, {\n    get() {\n      deprecated(propName, warning, `${cls.name}:${propName}`);\n      return value;\n    },\n    set(v) {\n      value = v;\n    }\n  });\n};\nvar deprecatedObjectProperty = (obj, propName, warning, key) => {\n  let value = obj[propName];\n  Object.defineProperty(obj, propName, {\n    get() {\n      deprecated(propName, warning, key);\n      return value;\n    },\n    set(v) {\n      value = v;\n    }\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1JQzRGR1pJMy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQSxJQUFJQSx3QkFBd0IsR0FBR0EsQ0FBQSxLQUFNO0VBQ25DLElBQUk7SUFDRjtFQUNGLENBQUMsQ0FBQyxPQUFPQyxHQUFHLEVBQUUsQ0FDZDtFQUNBLE9BQU8sS0FBSztBQUNkLENBQUM7QUFDRCxJQUFJQyxpQkFBaUIsR0FBR0EsQ0FBQSxLQUFNO0VBQzVCLElBQUk7SUFDRjtFQUNGLENBQUMsQ0FBQyxPQUFPRCxHQUFHLEVBQUUsQ0FDZDtFQUNBLE9BQU8sS0FBSztBQUNkLENBQUM7QUFDRCxJQUFJRSx1QkFBdUIsR0FBR0EsQ0FBQSxLQUFNO0VBQ2xDLElBQUk7SUFDRjtFQUNGLENBQUMsQ0FBQyxPQUFPRixHQUFHLEVBQUUsQ0FDZDtFQUNBLE9BQU8sS0FBSztBQUNkLENBQUM7O0FBRUQ7QUFDQSxJQUFJRyxpQkFBaUIsR0FBRyxlQUFnQixJQUFJQyxHQUFHLENBQUMsQ0FBQztBQUNqRCxJQUFJQyxVQUFVLEdBQUdBLENBQUNDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxHQUFHLEtBQUs7RUFDekMsTUFBTUMsV0FBVyxHQUFHUixpQkFBaUIsQ0FBQyxDQUFDLElBQUlDLHVCQUF1QixDQUFDLENBQUM7RUFDcEUsTUFBTVEsU0FBUyxHQUFHRixHQUFHLElBQUksSUFBSSxHQUFHQSxHQUFHLEdBQUdGLE1BQU07RUFDNUMsSUFBSUgsaUJBQWlCLENBQUNRLEdBQUcsQ0FBQ0QsU0FBUyxDQUFDLElBQUlELFdBQVcsRUFBRTtJQUNuRDtFQUNGO0VBQ0FOLGlCQUFpQixDQUFDUyxHQUFHLENBQUNGLFNBQVMsQ0FBQztFQUNoQ0csT0FBTyxDQUFDQyxJQUFJLENBQ1QsaUNBQWdDUixNQUFPO0FBQzVDLEVBQUVDLE9BQVEsRUFDUixDQUFDO0FBQ0gsQ0FBQztBQUNELElBQUlRLGtCQUFrQixHQUFHQSxDQUFDQyxHQUFHLEVBQUVDLFFBQVEsRUFBRVYsT0FBTyxFQUFFVyxRQUFRLEdBQUcsS0FBSyxLQUFLO0VBQ3JFLE1BQU1DLE1BQU0sR0FBR0QsUUFBUSxHQUFHRixHQUFHLEdBQUdBLEdBQUcsQ0FBQ0ksU0FBUztFQUM3QyxJQUFJQyxLQUFLLEdBQUdGLE1BQU0sQ0FBQ0YsUUFBUSxDQUFDO0VBQzVCSyxNQUFNLENBQUNDLGNBQWMsQ0FBQ0osTUFBTSxFQUFFRixRQUFRLEVBQUU7SUFDdENPLEdBQUdBLENBQUEsRUFBRztNQUNKbkIsVUFBVSxDQUFDWSxRQUFRLEVBQUVWLE9BQU8sRUFBRyxHQUFFUyxHQUFHLENBQUNTLElBQUssSUFBR1IsUUFBUyxFQUFDLENBQUM7TUFDeEQsT0FBT0ksS0FBSztJQUNkLENBQUM7SUFDREssR0FBR0EsQ0FBQ0MsQ0FBQyxFQUFFO01BQ0xOLEtBQUssR0FBR00sQ0FBQztJQUNYO0VBQ0YsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUNELElBQUlDLHdCQUF3QixHQUFHQSxDQUFDQyxHQUFHLEVBQUVaLFFBQVEsRUFBRVYsT0FBTyxFQUFFQyxHQUFHLEtBQUs7RUFDOUQsSUFBSWEsS0FBSyxHQUFHUSxHQUFHLENBQUNaLFFBQVEsQ0FBQztFQUN6QkssTUFBTSxDQUFDQyxjQUFjLENBQUNNLEdBQUcsRUFBRVosUUFBUSxFQUFFO0lBQ25DTyxHQUFHQSxDQUFBLEVBQUc7TUFDSm5CLFVBQVUsQ0FBQ1ksUUFBUSxFQUFFVixPQUFPLEVBQUVDLEdBQUcsQ0FBQztNQUNsQyxPQUFPYSxLQUFLO0lBQ2QsQ0FBQztJQUNESyxHQUFHQSxDQUFDQyxDQUFDLEVBQUU7TUFDTE4sS0FBSyxHQUFHTSxDQUFDO0lBQ1g7RUFDRixDQUFDLENBQUM7QUFDSixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSUM0RkdaSTMubWpzPzg3ZDIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL3J1bnRpbWVFbnZpcm9ubWVudC50c1xudmFyIGlzRGV2ZWxvcG1lbnRFbnZpcm9ubWVudCA9ICgpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIjtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufTtcbnZhciBpc1Rlc3RFbnZpcm9ubWVudCA9ICgpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwidGVzdFwiO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xudmFyIGlzUHJvZHVjdGlvbkVudmlyb25tZW50ID0gKCkgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCI7XG4gIH0gY2F0Y2ggKGVycikge1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbi8vIHNyYy9kZXByZWNhdGVkLnRzXG52YXIgZGlzcGxheWVkV2FybmluZ3MgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xudmFyIGRlcHJlY2F0ZWQgPSAoZm5OYW1lLCB3YXJuaW5nLCBrZXkpID0+IHtcbiAgY29uc3QgaGlkZVdhcm5pbmcgPSBpc1Rlc3RFbnZpcm9ubWVudCgpIHx8IGlzUHJvZHVjdGlvbkVudmlyb25tZW50KCk7XG4gIGNvbnN0IG1lc3NhZ2VJZCA9IGtleSAhPSBudWxsID8ga2V5IDogZm5OYW1lO1xuICBpZiAoZGlzcGxheWVkV2FybmluZ3MuaGFzKG1lc3NhZ2VJZCkgfHwgaGlkZVdhcm5pbmcpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgZGlzcGxheWVkV2FybmluZ3MuYWRkKG1lc3NhZ2VJZCk7XG4gIGNvbnNvbGUud2FybihcbiAgICBgQ2xlcmsgLSBERVBSRUNBVElPTiBXQVJOSU5HOiBcIiR7Zm5OYW1lfVwiIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmV4dCBtYWpvciByZWxlYXNlLlxuJHt3YXJuaW5nfWBcbiAgKTtcbn07XG52YXIgZGVwcmVjYXRlZFByb3BlcnR5ID0gKGNscywgcHJvcE5hbWUsIHdhcm5pbmcsIGlzU3RhdGljID0gZmFsc2UpID0+IHtcbiAgY29uc3QgdGFyZ2V0ID0gaXNTdGF0aWMgPyBjbHMgOiBjbHMucHJvdG90eXBlO1xuICBsZXQgdmFsdWUgPSB0YXJnZXRbcHJvcE5hbWVdO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBwcm9wTmFtZSwge1xuICAgIGdldCgpIHtcbiAgICAgIGRlcHJlY2F0ZWQocHJvcE5hbWUsIHdhcm5pbmcsIGAke2Nscy5uYW1lfToke3Byb3BOYW1lfWApO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0KHYpIHtcbiAgICAgIHZhbHVlID0gdjtcbiAgICB9XG4gIH0pO1xufTtcbnZhciBkZXByZWNhdGVkT2JqZWN0UHJvcGVydHkgPSAob2JqLCBwcm9wTmFtZSwgd2FybmluZywga2V5KSA9PiB7XG4gIGxldCB2YWx1ZSA9IG9ialtwcm9wTmFtZV07XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIHByb3BOYW1lLCB7XG4gICAgZ2V0KCkge1xuICAgICAgZGVwcmVjYXRlZChwcm9wTmFtZSwgd2FybmluZywga2V5KTtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldCh2KSB7XG4gICAgICB2YWx1ZSA9IHY7XG4gICAgfVxuICB9KTtcbn07XG5cbmV4cG9ydCB7XG4gIGlzRGV2ZWxvcG1lbnRFbnZpcm9ubWVudCxcbiAgaXNUZXN0RW52aXJvbm1lbnQsXG4gIGlzUHJvZHVjdGlvbkVudmlyb25tZW50LFxuICBkZXByZWNhdGVkLFxuICBkZXByZWNhdGVkUHJvcGVydHksXG4gIGRlcHJlY2F0ZWRPYmplY3RQcm9wZXJ0eVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUlDNEZHWkkzLm1qcy5tYXAiXSwibmFtZXMiOlsiaXNEZXZlbG9wbWVudEVudmlyb25tZW50IiwiZXJyIiwiaXNUZXN0RW52aXJvbm1lbnQiLCJpc1Byb2R1Y3Rpb25FbnZpcm9ubWVudCIsImRpc3BsYXllZFdhcm5pbmdzIiwiU2V0IiwiZGVwcmVjYXRlZCIsImZuTmFtZSIsIndhcm5pbmciLCJrZXkiLCJoaWRlV2FybmluZyIsIm1lc3NhZ2VJZCIsImhhcyIsImFkZCIsImNvbnNvbGUiLCJ3YXJuIiwiZGVwcmVjYXRlZFByb3BlcnR5IiwiY2xzIiwicHJvcE5hbWUiLCJpc1N0YXRpYyIsInRhcmdldCIsInByb3RvdHlwZSIsInZhbHVlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXQiLCJuYW1lIiwic2V0IiwidiIsImRlcHJlY2F0ZWRPYmplY3RQcm9wZXJ0eSIsIm9iaiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-IC4FGZI3.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEV_BROWSER_JWT_HEADER: () => (/* binding */ DEV_BROWSER_JWT_HEADER),\n/* harmony export */   DEV_BROWSER_JWT_KEY: () => (/* binding */ DEV_BROWSER_JWT_KEY),\n/* harmony export */   extractDevBrowserJWTFromURL: () => (/* binding */ extractDevBrowserJWTFromURL),\n/* harmony export */   setDevBrowserJWTInURL: () => (/* binding */ setDevBrowserJWTInURL)\n/* harmony export */ });\n// src/devBrowser.ts\nvar DEV_BROWSER_JWT_KEY = \"__clerk_db_jwt\";\nvar DEV_BROWSER_JWT_HEADER = \"Clerk-Db-Jwt\";\nfunction setDevBrowserJWTInURL(url, jwt) {\n  const resultURL = new URL(url);\n  const jwtFromSearch = resultURL.searchParams.get(DEV_BROWSER_JWT_KEY);\n  resultURL.searchParams.delete(DEV_BROWSER_JWT_KEY);\n  const jwtToSet = jwtFromSearch || jwt;\n  if (jwtToSet) {\n    resultURL.searchParams.set(DEV_BROWSER_JWT_KEY, jwtToSet);\n  }\n  return resultURL;\n}\nfunction extractDevBrowserJWTFromURL(url) {\n  const jwt = readDevBrowserJwtFromSearchParams(url);\n  const cleanUrl = removeDevBrowserJwt(url);\n  if (cleanUrl.href !== url.href && typeof globalThis.history !== \"undefined\") {\n    globalThis.history.replaceState(null, \"\", removeDevBrowserJwt(url));\n  }\n  return jwt;\n}\nvar readDevBrowserJwtFromSearchParams = url => {\n  return url.searchParams.get(DEV_BROWSER_JWT_KEY) || \"\";\n};\nvar removeDevBrowserJwt = url => {\n  return removeDevBrowserJwtFromURLSearchParams(removeLegacyDevBrowserJwt(url));\n};\nvar removeDevBrowserJwtFromURLSearchParams = _url => {\n  const url = new URL(_url);\n  url.searchParams.delete(DEV_BROWSER_JWT_KEY);\n  return url;\n};\nvar removeLegacyDevBrowserJwt = _url => {\n  const DEV_BROWSER_JWT_MARKER_REGEXP = /__clerk_db_jwt\\[(.*)\\]/;\n  const DEV_BROWSER_JWT_LEGACY_KEY = \"__dev_session\";\n  const url = new URL(_url);\n  url.searchParams.delete(DEV_BROWSER_JWT_LEGACY_KEY);\n  url.hash = decodeURI(url.hash).replace(DEV_BROWSER_JWT_MARKER_REGEXP, \"\");\n  if (url.href.endsWith(\"#\")) {\n    url.hash = \"\";\n  }\n  return url;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1LNjRJTlE0Qy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EsSUFBSUEsbUJBQW1CLEdBQUcsZ0JBQWdCO0FBQzFDLElBQUlDLHNCQUFzQixHQUFHLGNBQWM7QUFDM0MsU0FBU0MscUJBQXFCQSxDQUFDQyxHQUFHLEVBQUVDLEdBQUcsRUFBRTtFQUN2QyxNQUFNQyxTQUFTLEdBQUcsSUFBSUMsR0FBRyxDQUFDSCxHQUFHLENBQUM7RUFDOUIsTUFBTUksYUFBYSxHQUFHRixTQUFTLENBQUNHLFlBQVksQ0FBQ0MsR0FBRyxDQUFDVCxtQkFBbUIsQ0FBQztFQUNyRUssU0FBUyxDQUFDRyxZQUFZLENBQUNFLE1BQU0sQ0FBQ1YsbUJBQW1CLENBQUM7RUFDbEQsTUFBTVcsUUFBUSxHQUFHSixhQUFhLElBQUlILEdBQUc7RUFDckMsSUFBSU8sUUFBUSxFQUFFO0lBQ1pOLFNBQVMsQ0FBQ0csWUFBWSxDQUFDSSxHQUFHLENBQUNaLG1CQUFtQixFQUFFVyxRQUFRLENBQUM7RUFDM0Q7RUFDQSxPQUFPTixTQUFTO0FBQ2xCO0FBQ0EsU0FBU1EsMkJBQTJCQSxDQUFDVixHQUFHLEVBQUU7RUFDeEMsTUFBTUMsR0FBRyxHQUFHVSxpQ0FBaUMsQ0FBQ1gsR0FBRyxDQUFDO0VBQ2xELE1BQU1ZLFFBQVEsR0FBR0MsbUJBQW1CLENBQUNiLEdBQUcsQ0FBQztFQUN6QyxJQUFJWSxRQUFRLENBQUNFLElBQUksS0FBS2QsR0FBRyxDQUFDYyxJQUFJLElBQUksT0FBT0MsVUFBVSxDQUFDQyxPQUFPLEtBQUssV0FBVyxFQUFFO0lBQzNFRCxVQUFVLENBQUNDLE9BQU8sQ0FBQ0MsWUFBWSxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUVKLG1CQUFtQixDQUFDYixHQUFHLENBQUMsQ0FBQztFQUNyRTtFQUNBLE9BQU9DLEdBQUc7QUFDWjtBQUNBLElBQUlVLGlDQUFpQyxHQUFJWCxHQUFHLElBQUs7RUFDL0MsT0FBT0EsR0FBRyxDQUFDSyxZQUFZLENBQUNDLEdBQUcsQ0FBQ1QsbUJBQW1CLENBQUMsSUFBSSxFQUFFO0FBQ3hELENBQUM7QUFDRCxJQUFJZ0IsbUJBQW1CLEdBQUliLEdBQUcsSUFBSztFQUNqQyxPQUFPa0Isc0NBQXNDLENBQUNDLHlCQUF5QixDQUFDbkIsR0FBRyxDQUFDLENBQUM7QUFDL0UsQ0FBQztBQUNELElBQUlrQixzQ0FBc0MsR0FBSUUsSUFBSSxJQUFLO0VBQ3JELE1BQU1wQixHQUFHLEdBQUcsSUFBSUcsR0FBRyxDQUFDaUIsSUFBSSxDQUFDO0VBQ3pCcEIsR0FBRyxDQUFDSyxZQUFZLENBQUNFLE1BQU0sQ0FBQ1YsbUJBQW1CLENBQUM7RUFDNUMsT0FBT0csR0FBRztBQUNaLENBQUM7QUFDRCxJQUFJbUIseUJBQXlCLEdBQUlDLElBQUksSUFBSztFQUN4QyxNQUFNQyw2QkFBNkIsR0FBRyx3QkFBd0I7RUFDOUQsTUFBTUMsMEJBQTBCLEdBQUcsZUFBZTtFQUNsRCxNQUFNdEIsR0FBRyxHQUFHLElBQUlHLEdBQUcsQ0FBQ2lCLElBQUksQ0FBQztFQUN6QnBCLEdBQUcsQ0FBQ0ssWUFBWSxDQUFDRSxNQUFNLENBQUNlLDBCQUEwQixDQUFDO0VBQ25EdEIsR0FBRyxDQUFDdUIsSUFBSSxHQUFHQyxTQUFTLENBQUN4QixHQUFHLENBQUN1QixJQUFJLENBQUMsQ0FBQ0UsT0FBTyxDQUFDSiw2QkFBNkIsRUFBRSxFQUFFLENBQUM7RUFDekUsSUFBSXJCLEdBQUcsQ0FBQ2MsSUFBSSxDQUFDWSxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7SUFDMUIxQixHQUFHLENBQUN1QixJQUFJLEdBQUcsRUFBRTtFQUNmO0VBQ0EsT0FBT3ZCLEdBQUc7QUFDWixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSzY0SU5RNEMubWpzPzkxMzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2RldkJyb3dzZXIudHNcbnZhciBERVZfQlJPV1NFUl9KV1RfS0VZID0gXCJfX2NsZXJrX2RiX2p3dFwiO1xudmFyIERFVl9CUk9XU0VSX0pXVF9IRUFERVIgPSBcIkNsZXJrLURiLUp3dFwiO1xuZnVuY3Rpb24gc2V0RGV2QnJvd3NlckpXVEluVVJMKHVybCwgand0KSB7XG4gIGNvbnN0IHJlc3VsdFVSTCA9IG5ldyBVUkwodXJsKTtcbiAgY29uc3Qgand0RnJvbVNlYXJjaCA9IHJlc3VsdFVSTC5zZWFyY2hQYXJhbXMuZ2V0KERFVl9CUk9XU0VSX0pXVF9LRVkpO1xuICByZXN1bHRVUkwuc2VhcmNoUGFyYW1zLmRlbGV0ZShERVZfQlJPV1NFUl9KV1RfS0VZKTtcbiAgY29uc3Qgand0VG9TZXQgPSBqd3RGcm9tU2VhcmNoIHx8IGp3dDtcbiAgaWYgKGp3dFRvU2V0KSB7XG4gICAgcmVzdWx0VVJMLnNlYXJjaFBhcmFtcy5zZXQoREVWX0JST1dTRVJfSldUX0tFWSwgand0VG9TZXQpO1xuICB9XG4gIHJldHVybiByZXN1bHRVUkw7XG59XG5mdW5jdGlvbiBleHRyYWN0RGV2QnJvd3NlckpXVEZyb21VUkwodXJsKSB7XG4gIGNvbnN0IGp3dCA9IHJlYWREZXZCcm93c2VySnd0RnJvbVNlYXJjaFBhcmFtcyh1cmwpO1xuICBjb25zdCBjbGVhblVybCA9IHJlbW92ZURldkJyb3dzZXJKd3QodXJsKTtcbiAgaWYgKGNsZWFuVXJsLmhyZWYgIT09IHVybC5ocmVmICYmIHR5cGVvZiBnbG9iYWxUaGlzLmhpc3RvcnkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBnbG9iYWxUaGlzLmhpc3RvcnkucmVwbGFjZVN0YXRlKG51bGwsIFwiXCIsIHJlbW92ZURldkJyb3dzZXJKd3QodXJsKSk7XG4gIH1cbiAgcmV0dXJuIGp3dDtcbn1cbnZhciByZWFkRGV2QnJvd3Nlckp3dEZyb21TZWFyY2hQYXJhbXMgPSAodXJsKSA9PiB7XG4gIHJldHVybiB1cmwuc2VhcmNoUGFyYW1zLmdldChERVZfQlJPV1NFUl9KV1RfS0VZKSB8fCBcIlwiO1xufTtcbnZhciByZW1vdmVEZXZCcm93c2VySnd0ID0gKHVybCkgPT4ge1xuICByZXR1cm4gcmVtb3ZlRGV2QnJvd3Nlckp3dEZyb21VUkxTZWFyY2hQYXJhbXMocmVtb3ZlTGVnYWN5RGV2QnJvd3Nlckp3dCh1cmwpKTtcbn07XG52YXIgcmVtb3ZlRGV2QnJvd3Nlckp3dEZyb21VUkxTZWFyY2hQYXJhbXMgPSAoX3VybCkgPT4ge1xuICBjb25zdCB1cmwgPSBuZXcgVVJMKF91cmwpO1xuICB1cmwuc2VhcmNoUGFyYW1zLmRlbGV0ZShERVZfQlJPV1NFUl9KV1RfS0VZKTtcbiAgcmV0dXJuIHVybDtcbn07XG52YXIgcmVtb3ZlTGVnYWN5RGV2QnJvd3Nlckp3dCA9IChfdXJsKSA9PiB7XG4gIGNvbnN0IERFVl9CUk9XU0VSX0pXVF9NQVJLRVJfUkVHRVhQID0gL19fY2xlcmtfZGJfand0XFxbKC4qKVxcXS87XG4gIGNvbnN0IERFVl9CUk9XU0VSX0pXVF9MRUdBQ1lfS0VZID0gXCJfX2Rldl9zZXNzaW9uXCI7XG4gIGNvbnN0IHVybCA9IG5ldyBVUkwoX3VybCk7XG4gIHVybC5zZWFyY2hQYXJhbXMuZGVsZXRlKERFVl9CUk9XU0VSX0pXVF9MRUdBQ1lfS0VZKTtcbiAgdXJsLmhhc2ggPSBkZWNvZGVVUkkodXJsLmhhc2gpLnJlcGxhY2UoREVWX0JST1dTRVJfSldUX01BUktFUl9SRUdFWFAsIFwiXCIpO1xuICBpZiAodXJsLmhyZWYuZW5kc1dpdGgoXCIjXCIpKSB7XG4gICAgdXJsLmhhc2ggPSBcIlwiO1xuICB9XG4gIHJldHVybiB1cmw7XG59O1xuXG5leHBvcnQge1xuICBERVZfQlJPV1NFUl9KV1RfS0VZLFxuICBERVZfQlJPV1NFUl9KV1RfSEVBREVSLFxuICBzZXREZXZCcm93c2VySldUSW5VUkwsXG4gIGV4dHJhY3REZXZCcm93c2VySldURnJvbVVSTFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUs2NElOUTRDLm1qcy5tYXAiXSwibmFtZXMiOlsiREVWX0JST1dTRVJfSldUX0tFWSIsIkRFVl9CUk9XU0VSX0pXVF9IRUFERVIiLCJzZXREZXZCcm93c2VySldUSW5VUkwiLCJ1cmwiLCJqd3QiLCJyZXN1bHRVUkwiLCJVUkwiLCJqd3RGcm9tU2VhcmNoIiwic2VhcmNoUGFyYW1zIiwiZ2V0IiwiZGVsZXRlIiwiand0VG9TZXQiLCJzZXQiLCJleHRyYWN0RGV2QnJvd3NlckpXVEZyb21VUkwiLCJyZWFkRGV2QnJvd3Nlckp3dEZyb21TZWFyY2hQYXJhbXMiLCJjbGVhblVybCIsInJlbW92ZURldkJyb3dzZXJKd3QiLCJocmVmIiwiZ2xvYmFsVGhpcyIsImhpc3RvcnkiLCJyZXBsYWNlU3RhdGUiLCJyZW1vdmVEZXZCcm93c2VySnd0RnJvbVVSTFNlYXJjaFBhcmFtcyIsInJlbW92ZUxlZ2FjeURldkJyb3dzZXJKd3QiLCJfdXJsIiwiREVWX0JST1dTRVJfSldUX01BUktFUl9SRUdFWFAiLCJERVZfQlJPV1NFUl9KV1RfTEVHQUNZX0tFWSIsImhhc2giLCJkZWNvZGVVUkkiLCJyZXBsYWNlIiwiZW5kc1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicBtoa: () => (/* binding */ isomorphicBtoa)\n/* harmony export */ });\n// src/isomorphicBtoa.ts\nvar isomorphicBtoa = data => {\n  if (typeof btoa !== \"undefined\" && typeof btoa === \"function\") {\n    return btoa(data);\n  } else if (typeof global !== \"undefined\" && global.Buffer) {\n    return new global.Buffer(data).toString(\"base64\");\n  }\n  return data;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1LT0g3R1RKTy5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsSUFBSUEsY0FBYyxHQUFJQyxJQUFJLElBQUs7RUFDN0IsSUFBSSxPQUFPQyxJQUFJLEtBQUssV0FBVyxJQUFJLE9BQU9BLElBQUksS0FBSyxVQUFVLEVBQUU7SUFDN0QsT0FBT0EsSUFBSSxDQUFDRCxJQUFJLENBQUM7RUFDbkIsQ0FBQyxNQUFNLElBQUksT0FBT0UsTUFBTSxLQUFLLFdBQVcsSUFBSUEsTUFBTSxDQUFDQyxNQUFNLEVBQUU7SUFDekQsT0FBTyxJQUFJRCxNQUFNLENBQUNDLE1BQU0sQ0FBQ0gsSUFBSSxDQUFDLENBQUNJLFFBQVEsQ0FBQyxRQUFRLENBQUM7RUFDbkQ7RUFDQSxPQUFPSixJQUFJO0FBQ2IsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUtPSDdHVEpPLm1qcz81YzRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pc29tb3JwaGljQnRvYS50c1xudmFyIGlzb21vcnBoaWNCdG9hID0gKGRhdGEpID0+IHtcbiAgaWYgKHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4gYnRvYShkYXRhKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5CdWZmZXIpIHtcbiAgICByZXR1cm4gbmV3IGdsb2JhbC5CdWZmZXIoZGF0YSkudG9TdHJpbmcoXCJiYXNlNjRcIik7XG4gIH1cbiAgcmV0dXJuIGRhdGE7XG59O1xuXG5leHBvcnQge1xuICBpc29tb3JwaGljQnRvYVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUtPSDdHVEpPLm1qcy5tYXAiXSwibmFtZXMiOlsiaXNvbW9ycGhpY0J0b2EiLCJkYXRhIiwiYnRvYSIsImdsb2JhbCIsIkJ1ZmZlciIsInRvU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-L45N5DM5.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-L45N5DM5.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClerkPrefix: () => (/* binding */ addClerkPrefix),\n/* harmony export */   cleanDoubleSlashes: () => (/* binding */ cleanDoubleSlashes),\n/* harmony export */   getClerkJsMajorVersionOrTag: () => (/* binding */ getClerkJsMajorVersionOrTag),\n/* harmony export */   getScriptUrl: () => (/* binding */ getScriptUrl),\n/* harmony export */   hasLeadingSlash: () => (/* binding */ hasLeadingSlash),\n/* harmony export */   hasTrailingSlash: () => (/* binding */ hasTrailingSlash),\n/* harmony export */   isCurrentDevAccountPortalOrigin: () => (/* binding */ isCurrentDevAccountPortalOrigin),\n/* harmony export */   isLegacyDevAccountPortalOrigin: () => (/* binding */ isLegacyDevAccountPortalOrigin),\n/* harmony export */   isNonEmptyURL: () => (/* binding */ isNonEmptyURL),\n/* harmony export */   isStaging: () => (/* binding */ isStaging),\n/* harmony export */   joinURL: () => (/* binding */ joinURL),\n/* harmony export */   parseSearchParams: () => (/* binding */ parseSearchParams),\n/* harmony export */   stripScheme: () => (/* binding */ stripScheme),\n/* harmony export */   withLeadingSlash: () => (/* binding */ withLeadingSlash),\n/* harmony export */   withTrailingSlash: () => (/* binding */ withTrailingSlash),\n/* harmony export */   withoutLeadingSlash: () => (/* binding */ withoutLeadingSlash),\n/* harmony export */   withoutTrailingSlash: () => (/* binding */ withoutTrailingSlash)\n/* harmony export */ });\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n\n\n// src/utils/instance.ts\nfunction isStaging(frontendApi) {\n  return frontendApi.endsWith(\".lclstage.dev\") || frontendApi.endsWith(\".stgstage.dev\") || frontendApi.endsWith(\".clerkstage.dev\") || frontendApi.endsWith(\".accountsstage.dev\");\n}\n\n// src/url.ts\nfunction parseSearchParams(queryString = \"\") {\n  if (queryString.startsWith(\"?\")) {\n    queryString = queryString.slice(1);\n  }\n  return new URLSearchParams(queryString);\n}\nfunction stripScheme(url = \"\") {\n  return (url || \"\").replace(/^.+:\\/\\//, \"\");\n}\nfunction addClerkPrefix(str) {\n  if (!str) {\n    return \"\";\n  }\n  let regex;\n  if (str.match(/^(clerk\\.)+\\w*$/)) {\n    regex = /(clerk\\.)*(?=clerk\\.)/;\n  } else if (str.match(/\\.clerk.accounts/)) {\n    return str;\n  } else {\n    regex = /^(clerk\\.)*/gi;\n  }\n  const stripped = str.replace(regex, \"\");\n  return `clerk.${stripped}`;\n}\nvar getClerkJsMajorVersionOrTag = (frontendApi, version) => {\n  if (!version && isStaging(frontendApi)) {\n    return \"canary\";\n  }\n  if (!version) {\n    return \"latest\";\n  }\n  return version.split(\".\")[0] || \"latest\";\n};\nvar getScriptUrl = (frontendApi, {\n  clerkJSVersion\n}) => {\n  const noSchemeFrontendApi = frontendApi.replace(/http(s)?:\\/\\//, \"\");\n  const major = getClerkJsMajorVersionOrTag(frontendApi, clerkJSVersion);\n  return `https://${noSchemeFrontendApi}/npm/@clerk/clerk-js@${clerkJSVersion || major}/dist/clerk.browser.js`;\n};\nfunction isLegacyDevAccountPortalOrigin(host) {\n  return _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_0__.LEGACY_DEV_INSTANCE_SUFFIXES.some(legacyDevSuffix => {\n    return host.startsWith(\"accounts.\") && host.endsWith(legacyDevSuffix);\n  });\n}\nfunction isCurrentDevAccountPortalOrigin(host) {\n  return _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_0__.CURRENT_DEV_INSTANCE_SUFFIXES.some(currentDevSuffix => {\n    return host.endsWith(currentDevSuffix) && !host.endsWith(\".clerk\" + currentDevSuffix);\n  });\n}\nvar TRAILING_SLASH_RE = /\\/$|\\/\\?|\\/#/;\nfunction hasTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\");\n  }\n  return TRAILING_SLASH_RE.test(input);\n}\nfunction withTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\") ? input : input + \"/\";\n  }\n  if (hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n    if (!path) {\n      return fragment;\n    }\n  }\n  const [s0, ...s] = path.split(\"?\");\n  return s0 + \"/\" + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction withoutTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || \"/\";\n  }\n  if (!hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n  }\n  const [s0, ...s] = path.split(\"?\");\n  return (s0.slice(0, -1) || \"/\") + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction hasLeadingSlash(input = \"\") {\n  return input.startsWith(\"/\");\n}\nfunction withoutLeadingSlash(input = \"\") {\n  return (hasLeadingSlash(input) ? input.slice(1) : input) || \"/\";\n}\nfunction withLeadingSlash(input = \"\") {\n  return hasLeadingSlash(input) ? input : \"/\" + input;\n}\nfunction cleanDoubleSlashes(input = \"\") {\n  return input.split(\"://\").map(string_ => string_.replace(/\\/{2,}/g, \"/\")).join(\"://\");\n}\nfunction isNonEmptyURL(url) {\n  return url && url !== \"/\";\n}\nvar JOIN_LEADING_SLASH_RE = /^\\.?\\//;\nfunction joinURL(base, ...input) {\n  let url = base || \"\";\n  for (const segment of input.filter(url2 => isNonEmptyURL(url2))) {\n    if (url) {\n      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, \"\");\n      url = withTrailingSlash(url) + _segment;\n    } else {\n      url = segment;\n    }\n  }\n  return url;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-L45N5DM5.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-SE4J36LP.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-SE4J36LP.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiUrlFromPublishableKey: () => (/* binding */ apiUrlFromPublishableKey)\n/* harmony export */ });\n/* harmony import */ var _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-ZXFUQ6LY.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs\");\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n\n\n\n// src/apiUrlFromPublishableKey.ts\nvar apiUrlFromPublishableKey = publishableKey => {\n  var _a;\n  const frontendApi = (_a = (0,_chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.parsePublishableKey)(publishableKey)) == null ? void 0 : _a.frontendApi;\n  if (_chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__.LOCAL_ENV_SUFFIXES.some(suffix => frontendApi == null ? void 0 : frontendApi.endsWith(suffix))) {\n    return _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__.LOCAL_API_URL;\n  }\n  if (_chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__.STAGING_ENV_SUFFIXES.some(suffix => frontendApi == null ? void 0 : frontendApi.endsWith(suffix))) {\n    return _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__.STAGING_API_URL;\n  }\n  return _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__.PROD_API_URL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1TRTRKMzZMUC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ3FCO0FBT0M7O0FBR3RCO0FBQ0EsSUFBSU0sd0JBQXdCLEdBQUlDLGNBQWMsSUFBSztFQUNqRCxJQUFJQyxFQUFFO0VBQ04sTUFBTUMsV0FBVyxHQUFHLENBQUNELEVBQUUsR0FBR1Isd0VBQW1CLENBQUNPLGNBQWMsQ0FBQyxLQUFLLElBQUksR0FBRyxLQUFLLENBQUMsR0FBR0MsRUFBRSxDQUFDQyxXQUFXO0VBQ2hHLElBQUlQLG1FQUFrQixDQUFDUSxJQUFJLENBQUVDLE1BQU0sSUFBS0YsV0FBVyxJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsR0FBR0EsV0FBVyxDQUFDRyxRQUFRLENBQUNELE1BQU0sQ0FBQyxDQUFDLEVBQUU7SUFDcEcsT0FBT1YsOERBQWE7RUFDdEI7RUFDQSxJQUFJSSxxRUFBb0IsQ0FBQ0ssSUFBSSxDQUFFQyxNQUFNLElBQUtGLFdBQVcsSUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUdBLFdBQVcsQ0FBQ0csUUFBUSxDQUFDRCxNQUFNLENBQUMsQ0FBQyxFQUFFO0lBQ3RHLE9BQU9QLGdFQUFlO0VBQ3hCO0VBQ0EsT0FBT0QsNkRBQVk7QUFDckIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLVNFNEozNkxQLm1qcz8yNzg1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIHBhcnNlUHVibGlzaGFibGVLZXlcbn0gZnJvbSBcIi4vY2h1bmstWlhGVVE2TFkubWpzXCI7XG5pbXBvcnQge1xuICBMT0NBTF9BUElfVVJMLFxuICBMT0NBTF9FTlZfU1VGRklYRVMsXG4gIFBST0RfQVBJX1VSTCxcbiAgU1RBR0lOR19BUElfVVJMLFxuICBTVEFHSU5HX0VOVl9TVUZGSVhFU1xufSBmcm9tIFwiLi9jaHVuay1YMkZZUjVVNi5tanNcIjtcblxuLy8gc3JjL2FwaVVybEZyb21QdWJsaXNoYWJsZUtleS50c1xudmFyIGFwaVVybEZyb21QdWJsaXNoYWJsZUtleSA9IChwdWJsaXNoYWJsZUtleSkgPT4ge1xuICB2YXIgX2E7XG4gIGNvbnN0IGZyb250ZW5kQXBpID0gKF9hID0gcGFyc2VQdWJsaXNoYWJsZUtleShwdWJsaXNoYWJsZUtleSkpID09IG51bGwgPyB2b2lkIDAgOiBfYS5mcm9udGVuZEFwaTtcbiAgaWYgKExPQ0FMX0VOVl9TVUZGSVhFUy5zb21lKChzdWZmaXgpID0+IGZyb250ZW5kQXBpID09IG51bGwgPyB2b2lkIDAgOiBmcm9udGVuZEFwaS5lbmRzV2l0aChzdWZmaXgpKSkge1xuICAgIHJldHVybiBMT0NBTF9BUElfVVJMO1xuICB9XG4gIGlmIChTVEFHSU5HX0VOVl9TVUZGSVhFUy5zb21lKChzdWZmaXgpID0+IGZyb250ZW5kQXBpID09IG51bGwgPyB2b2lkIDAgOiBmcm9udGVuZEFwaS5lbmRzV2l0aChzdWZmaXgpKSkge1xuICAgIHJldHVybiBTVEFHSU5HX0FQSV9VUkw7XG4gIH1cbiAgcmV0dXJuIFBST0RfQVBJX1VSTDtcbn07XG5cbmV4cG9ydCB7XG4gIGFwaVVybEZyb21QdWJsaXNoYWJsZUtleVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVNFNEozNkxQLm1qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VQdWJsaXNoYWJsZUtleSIsIkxPQ0FMX0FQSV9VUkwiLCJMT0NBTF9FTlZfU1VGRklYRVMiLCJQUk9EX0FQSV9VUkwiLCJTVEFHSU5HX0FQSV9VUkwiLCJTVEFHSU5HX0VOVl9TVUZGSVhFUyIsImFwaVVybEZyb21QdWJsaXNoYWJsZUtleSIsInB1Ymxpc2hhYmxlS2V5IiwiX2EiLCJmcm9udGVuZEFwaSIsInNvbWUiLCJzdWZmaXgiLCJlbmRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-SE4J36LP.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicAtob: () => (/* binding */ isomorphicAtob)\n/* harmony export */ });\n// src/isomorphicAtob.ts\nvar isomorphicAtob = data => {\n  if (typeof atob !== \"undefined\" && typeof atob === \"function\") {\n    return atob(data);\n  } else if (typeof global !== \"undefined\" && global.Buffer) {\n    return new global.Buffer(data, \"base64\").toString();\n  }\n  return data;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1URVRHVEVJMi5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsSUFBSUEsY0FBYyxHQUFJQyxJQUFJLElBQUs7RUFDN0IsSUFBSSxPQUFPQyxJQUFJLEtBQUssV0FBVyxJQUFJLE9BQU9BLElBQUksS0FBSyxVQUFVLEVBQUU7SUFDN0QsT0FBT0EsSUFBSSxDQUFDRCxJQUFJLENBQUM7RUFDbkIsQ0FBQyxNQUFNLElBQUksT0FBT0UsTUFBTSxLQUFLLFdBQVcsSUFBSUEsTUFBTSxDQUFDQyxNQUFNLEVBQUU7SUFDekQsT0FBTyxJQUFJRCxNQUFNLENBQUNDLE1BQU0sQ0FBQ0gsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDSSxRQUFRLENBQUMsQ0FBQztFQUNyRDtFQUNBLE9BQU9KLElBQUk7QUFDYixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVEVUR1RFSTIubWpzP2Q3ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2lzb21vcnBoaWNBdG9iLnRzXG52YXIgaXNvbW9ycGhpY0F0b2IgPSAoZGF0YSkgPT4ge1xuICBpZiAodHlwZW9mIGF0b2IgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIGF0b2IgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJldHVybiBhdG9iKGRhdGEpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLkJ1ZmZlcikge1xuICAgIHJldHVybiBuZXcgZ2xvYmFsLkJ1ZmZlcihkYXRhLCBcImJhc2U2NFwiKS50b1N0cmluZygpO1xuICB9XG4gIHJldHVybiBkYXRhO1xufTtcblxuZXhwb3J0IHtcbiAgaXNvbW9ycGhpY0F0b2Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1URVRHVEVJMi5tanMubWFwIl0sIm5hbWVzIjpbImlzb21vcnBoaWNBdG9iIiwiZGF0YSIsImF0b2IiLCJnbG9iYWwiLCJCdWZmZXIiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleValueOrFn: () => (/* binding */ handleValueOrFn)\n/* harmony export */ });\n// src/handleValueOrFn.ts\nfunction handleValueOrFn(value, url, defaultValue) {\n  if (typeof value === \"function\") {\n    return value(url);\n  }\n  if (typeof value !== \"undefined\") {\n    return value;\n  }\n  if (typeof defaultValue !== \"undefined\") {\n    return defaultValue;\n  }\n  return void 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1UUldNSE9EVS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsU0FBU0EsZUFBZUEsQ0FBQ0MsS0FBSyxFQUFFQyxHQUFHLEVBQUVDLFlBQVksRUFBRTtFQUNqRCxJQUFJLE9BQU9GLEtBQUssS0FBSyxVQUFVLEVBQUU7SUFDL0IsT0FBT0EsS0FBSyxDQUFDQyxHQUFHLENBQUM7RUFDbkI7RUFDQSxJQUFJLE9BQU9ELEtBQUssS0FBSyxXQUFXLEVBQUU7SUFDaEMsT0FBT0EsS0FBSztFQUNkO0VBQ0EsSUFBSSxPQUFPRSxZQUFZLEtBQUssV0FBVyxFQUFFO0lBQ3ZDLE9BQU9BLFlBQVk7RUFDckI7RUFDQSxPQUFPLEtBQUssQ0FBQztBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVFJXTUhPRFUubWpzP2YxMDgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2hhbmRsZVZhbHVlT3JGbi50c1xuZnVuY3Rpb24gaGFuZGxlVmFsdWVPckZuKHZhbHVlLCB1cmwsIGRlZmF1bHRWYWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4gdmFsdWUodXJsKTtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmICh0eXBlb2YgZGVmYXVsdFZhbHVlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgfVxuICByZXR1cm4gdm9pZCAwO1xufVxuXG5leHBvcnQge1xuICBoYW5kbGVWYWx1ZU9yRm5cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1UUldNSE9EVS5tanMubWFwIl0sIm5hbWVzIjpbImhhbmRsZVZhbHVlT3JGbiIsInZhbHVlIiwidXJsIiwiZGVmYXVsdFZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __export: () => (/* binding */ __export),\n/* harmony export */   __privateAdd: () => (/* binding */ __privateAdd),\n/* harmony export */   __privateGet: () => (/* binding */ __privateGet),\n/* harmony export */   __privateMethod: () => (/* binding */ __privateMethod),\n/* harmony export */   __privateSet: () => (/* binding */ __privateSet),\n/* harmony export */   __reExport: () => (/* binding */ __reExport)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1VVlZDV1NWRi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsSUFBSUEsU0FBUyxHQUFHQyxNQUFNLENBQUNDLGNBQWM7QUFDckMsSUFBSUMsZ0JBQWdCLEdBQUdGLE1BQU0sQ0FBQ0csd0JBQXdCO0FBQ3RELElBQUlDLGlCQUFpQixHQUFHSixNQUFNLENBQUNLLG1CQUFtQjtBQUNsRCxJQUFJQyxZQUFZLEdBQUdOLE1BQU0sQ0FBQ08sU0FBUyxDQUFDQyxjQUFjO0FBQ2xELElBQUlDLFFBQVEsR0FBR0EsQ0FBQ0MsTUFBTSxFQUFFQyxHQUFHLEtBQUs7RUFDOUIsS0FBSyxJQUFJQyxJQUFJLElBQUlELEdBQUcsRUFDbEJaLFNBQVMsQ0FBQ1csTUFBTSxFQUFFRSxJQUFJLEVBQUU7SUFBRUMsR0FBRyxFQUFFRixHQUFHLENBQUNDLElBQUksQ0FBQztJQUFFRSxVQUFVLEVBQUU7RUFBSyxDQUFDLENBQUM7QUFDakUsQ0FBQztBQUNELElBQUlDLFdBQVcsR0FBR0EsQ0FBQ0MsRUFBRSxFQUFFQyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsSUFBSSxLQUFLO0VBQzVDLElBQUlGLElBQUksSUFBSSxPQUFPQSxJQUFJLEtBQUssUUFBUSxJQUFJLE9BQU9BLElBQUksS0FBSyxVQUFVLEVBQUU7SUFDbEUsS0FBSyxJQUFJRyxHQUFHLElBQUloQixpQkFBaUIsQ0FBQ2EsSUFBSSxDQUFDLEVBQ3JDLElBQUksQ0FBQ1gsWUFBWSxDQUFDZSxJQUFJLENBQUNMLEVBQUUsRUFBRUksR0FBRyxDQUFDLElBQUlBLEdBQUcsS0FBS0YsTUFBTSxFQUMvQ25CLFNBQVMsQ0FBQ2lCLEVBQUUsRUFBRUksR0FBRyxFQUFFO01BQUVQLEdBQUcsRUFBRUEsQ0FBQSxLQUFNSSxJQUFJLENBQUNHLEdBQUcsQ0FBQztNQUFFTixVQUFVLEVBQUUsRUFBRUssSUFBSSxHQUFHakIsZ0JBQWdCLENBQUNlLElBQUksRUFBRUcsR0FBRyxDQUFDLENBQUMsSUFBSUQsSUFBSSxDQUFDTDtJQUFXLENBQUMsQ0FBQztFQUN4SDtFQUNBLE9BQU9FLEVBQUU7QUFDWCxDQUFDO0FBQ0QsSUFBSU0sVUFBVSxHQUFHQSxDQUFDWixNQUFNLEVBQUVhLEdBQUcsRUFBRUMsWUFBWSxNQUFNVCxXQUFXLENBQUNMLE1BQU0sRUFBRWEsR0FBRyxFQUFFLFNBQVMsQ0FBQyxFQUFFQyxZQUFZLElBQUlULFdBQVcsQ0FBQ1MsWUFBWSxFQUFFRCxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDaEosSUFBSUUsYUFBYSxHQUFHQSxDQUFDQyxHQUFHLEVBQUVDLE1BQU0sRUFBRUMsR0FBRyxLQUFLO0VBQ3hDLElBQUksQ0FBQ0QsTUFBTSxDQUFDRSxHQUFHLENBQUNILEdBQUcsQ0FBQyxFQUNsQixNQUFNSSxTQUFTLENBQUMsU0FBUyxHQUFHRixHQUFHLENBQUM7QUFDcEMsQ0FBQztBQUNELElBQUlHLFlBQVksR0FBR0EsQ0FBQ0wsR0FBRyxFQUFFQyxNQUFNLEVBQUVLLE1BQU0sS0FBSztFQUMxQ1AsYUFBYSxDQUFDQyxHQUFHLEVBQUVDLE1BQU0sRUFBRSx5QkFBeUIsQ0FBQztFQUNyRCxPQUFPSyxNQUFNLEdBQUdBLE1BQU0sQ0FBQ1gsSUFBSSxDQUFDSyxHQUFHLENBQUMsR0FBR0MsTUFBTSxDQUFDZCxHQUFHLENBQUNhLEdBQUcsQ0FBQztBQUNwRCxDQUFDO0FBQ0QsSUFBSU8sWUFBWSxHQUFHQSxDQUFDUCxHQUFHLEVBQUVDLE1BQU0sRUFBRU8sS0FBSyxLQUFLO0VBQ3pDLElBQUlQLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDSCxHQUFHLENBQUMsRUFDakIsTUFBTUksU0FBUyxDQUFDLG1EQUFtRCxDQUFDO0VBQ3RFSCxNQUFNLFlBQVlRLE9BQU8sR0FBR1IsTUFBTSxDQUFDUyxHQUFHLENBQUNWLEdBQUcsQ0FBQyxHQUFHQyxNQUFNLENBQUNVLEdBQUcsQ0FBQ1gsR0FBRyxFQUFFUSxLQUFLLENBQUM7QUFDdEUsQ0FBQztBQUNELElBQUlJLFlBQVksR0FBR0EsQ0FBQ1osR0FBRyxFQUFFQyxNQUFNLEVBQUVPLEtBQUssRUFBRUssTUFBTSxLQUFLO0VBQ2pEZCxhQUFhLENBQUNDLEdBQUcsRUFBRUMsTUFBTSxFQUFFLHdCQUF3QixDQUFDO0VBQ3BEWSxNQUFNLEdBQUdBLE1BQU0sQ0FBQ2xCLElBQUksQ0FBQ0ssR0FBRyxFQUFFUSxLQUFLLENBQUMsR0FBR1AsTUFBTSxDQUFDVSxHQUFHLENBQUNYLEdBQUcsRUFBRVEsS0FBSyxDQUFDO0VBQ3pELE9BQU9BLEtBQUs7QUFDZCxDQUFDO0FBQ0QsSUFBSU0sZUFBZSxHQUFHQSxDQUFDZCxHQUFHLEVBQUVDLE1BQU0sRUFBRWMsTUFBTSxLQUFLO0VBQzdDaEIsYUFBYSxDQUFDQyxHQUFHLEVBQUVDLE1BQU0sRUFBRSx1QkFBdUIsQ0FBQztFQUNuRCxPQUFPYyxNQUFNO0FBQ2YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLVVWVkNXU1ZGLm1qcz81ZGMyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19nZXRPd25Qcm9wRGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgX19nZXRPd25Qcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBfX2hhc093blByb3AgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIF9fZXhwb3J0ID0gKHRhcmdldCwgYWxsKSA9PiB7XG4gIGZvciAodmFyIG5hbWUgaW4gYWxsKVxuICAgIF9fZGVmUHJvcCh0YXJnZXQsIG5hbWUsIHsgZ2V0OiBhbGxbbmFtZV0sIGVudW1lcmFibGU6IHRydWUgfSk7XG59O1xudmFyIF9fY29weVByb3BzID0gKHRvLCBmcm9tLCBleGNlcHQsIGRlc2MpID0+IHtcbiAgaWYgKGZyb20gJiYgdHlwZW9mIGZyb20gPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGZyb20gPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGZvciAobGV0IGtleSBvZiBfX2dldE93blByb3BOYW1lcyhmcm9tKSlcbiAgICAgIGlmICghX19oYXNPd25Qcm9wLmNhbGwodG8sIGtleSkgJiYga2V5ICE9PSBleGNlcHQpXG4gICAgICAgIF9fZGVmUHJvcCh0bywga2V5LCB7IGdldDogKCkgPT4gZnJvbVtrZXldLCBlbnVtZXJhYmxlOiAhKGRlc2MgPSBfX2dldE93blByb3BEZXNjKGZyb20sIGtleSkpIHx8IGRlc2MuZW51bWVyYWJsZSB9KTtcbiAgfVxuICByZXR1cm4gdG87XG59O1xudmFyIF9fcmVFeHBvcnQgPSAodGFyZ2V0LCBtb2QsIHNlY29uZFRhcmdldCkgPT4gKF9fY29weVByb3BzKHRhcmdldCwgbW9kLCBcImRlZmF1bHRcIiksIHNlY29uZFRhcmdldCAmJiBfX2NvcHlQcm9wcyhzZWNvbmRUYXJnZXQsIG1vZCwgXCJkZWZhdWx0XCIpKTtcbnZhciBfX2FjY2Vzc0NoZWNrID0gKG9iaiwgbWVtYmVyLCBtc2cpID0+IHtcbiAgaWYgKCFtZW1iZXIuaGFzKG9iaikpXG4gICAgdGhyb3cgVHlwZUVycm9yKFwiQ2Fubm90IFwiICsgbXNnKTtcbn07XG52YXIgX19wcml2YXRlR2V0ID0gKG9iaiwgbWVtYmVyLCBnZXR0ZXIpID0+IHtcbiAgX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgXCJyZWFkIGZyb20gcHJpdmF0ZSBmaWVsZFwiKTtcbiAgcmV0dXJuIGdldHRlciA/IGdldHRlci5jYWxsKG9iaikgOiBtZW1iZXIuZ2V0KG9iaik7XG59O1xudmFyIF9fcHJpdmF0ZUFkZCA9IChvYmosIG1lbWJlciwgdmFsdWUpID0+IHtcbiAgaWYgKG1lbWJlci5oYXMob2JqKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoXCJDYW5ub3QgYWRkIHRoZSBzYW1lIHByaXZhdGUgbWVtYmVyIG1vcmUgdGhhbiBvbmNlXCIpO1xuICBtZW1iZXIgaW5zdGFuY2VvZiBXZWFrU2V0ID8gbWVtYmVyLmFkZChvYmopIDogbWVtYmVyLnNldChvYmosIHZhbHVlKTtcbn07XG52YXIgX19wcml2YXRlU2V0ID0gKG9iaiwgbWVtYmVyLCB2YWx1ZSwgc2V0dGVyKSA9PiB7XG4gIF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwid3JpdGUgdG8gcHJpdmF0ZSBmaWVsZFwiKTtcbiAgc2V0dGVyID8gc2V0dGVyLmNhbGwob2JqLCB2YWx1ZSkgOiBtZW1iZXIuc2V0KG9iaiwgdmFsdWUpO1xuICByZXR1cm4gdmFsdWU7XG59O1xudmFyIF9fcHJpdmF0ZU1ldGhvZCA9IChvYmosIG1lbWJlciwgbWV0aG9kKSA9PiB7XG4gIF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwiYWNjZXNzIHByaXZhdGUgbWV0aG9kXCIpO1xuICByZXR1cm4gbWV0aG9kO1xufTtcblxuZXhwb3J0IHtcbiAgX19leHBvcnQsXG4gIF9fcmVFeHBvcnQsXG4gIF9fcHJpdmF0ZUdldCxcbiAgX19wcml2YXRlQWRkLFxuICBfX3ByaXZhdGVTZXQsXG4gIF9fcHJpdmF0ZU1ldGhvZFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVVWVkNXU1ZGLm1qcy5tYXAiXSwibmFtZXMiOlsiX19kZWZQcm9wIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2dldE93blByb3BEZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19nZXRPd25Qcm9wTmFtZXMiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiX19oYXNPd25Qcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJfX2V4cG9ydCIsInRhcmdldCIsImFsbCIsIm5hbWUiLCJnZXQiLCJlbnVtZXJhYmxlIiwiX19jb3B5UHJvcHMiLCJ0byIsImZyb20iLCJleGNlcHQiLCJkZXNjIiwia2V5IiwiY2FsbCIsIl9fcmVFeHBvcnQiLCJtb2QiLCJzZWNvbmRUYXJnZXQiLCJfX2FjY2Vzc0NoZWNrIiwib2JqIiwibWVtYmVyIiwibXNnIiwiaGFzIiwiVHlwZUVycm9yIiwiX19wcml2YXRlR2V0IiwiZ2V0dGVyIiwiX19wcml2YXRlQWRkIiwidmFsdWUiLCJXZWFrU2V0IiwiYWRkIiwic2V0IiwiX19wcml2YXRlU2V0Iiwic2V0dGVyIiwiX19wcml2YXRlTWV0aG9kIiwibWV0aG9kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CURRENT_DEV_INSTANCE_SUFFIXES: () => (/* binding */ CURRENT_DEV_INSTANCE_SUFFIXES),\n/* harmony export */   DEV_OR_STAGING_SUFFIXES: () => (/* binding */ DEV_OR_STAGING_SUFFIXES),\n/* harmony export */   LEGACY_DEV_INSTANCE_SUFFIXES: () => (/* binding */ LEGACY_DEV_INSTANCE_SUFFIXES),\n/* harmony export */   LOCAL_API_URL: () => (/* binding */ LOCAL_API_URL),\n/* harmony export */   LOCAL_ENV_SUFFIXES: () => (/* binding */ LOCAL_ENV_SUFFIXES),\n/* harmony export */   PROD_API_URL: () => (/* binding */ PROD_API_URL),\n/* harmony export */   STAGING_API_URL: () => (/* binding */ STAGING_API_URL),\n/* harmony export */   STAGING_ENV_SUFFIXES: () => (/* binding */ STAGING_ENV_SUFFIXES)\n/* harmony export */ });\n// src/constants.ts\nvar LEGACY_DEV_INSTANCE_SUFFIXES = [\".lcl.dev\", \".lclstage.dev\", \".lclclerk.com\"];\nvar CURRENT_DEV_INSTANCE_SUFFIXES = [\".accounts.dev\", \".accountsstage.dev\", \".accounts.lclclerk.com\"];\nvar DEV_OR_STAGING_SUFFIXES = [\".lcl.dev\", \".stg.dev\", \".lclstage.dev\", \".stgstage.dev\", \".dev.lclclerk.com\", \".stg.lclclerk.com\", \".accounts.lclclerk.com\", \"accountsstage.dev\", \"accounts.dev\"];\nvar LOCAL_ENV_SUFFIXES = [\".lcl.dev\", \"lclstage.dev\", \".lclclerk.com\", \".accounts.lclclerk.com\"];\nvar STAGING_ENV_SUFFIXES = [\".accountsstage.dev\"];\nvar LOCAL_API_URL = \"https://api.lclclerk.com\";\nvar STAGING_API_URL = \"https://api.clerkstage.dev\";\nvar PROD_API_URL = \"https://api.clerk.com\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1YMkZZUjVVNi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBLElBQUlBLDRCQUE0QixHQUFHLENBQUMsVUFBVSxFQUFFLGVBQWUsRUFBRSxlQUFlLENBQUM7QUFDakYsSUFBSUMsNkJBQTZCLEdBQUcsQ0FBQyxlQUFlLEVBQUUsb0JBQW9CLEVBQUUsd0JBQXdCLENBQUM7QUFDckcsSUFBSUMsdUJBQXVCLEdBQUcsQ0FDNUIsVUFBVSxFQUNWLFVBQVUsRUFDVixlQUFlLEVBQ2YsZUFBZSxFQUNmLG1CQUFtQixFQUNuQixtQkFBbUIsRUFDbkIsd0JBQXdCLEVBQ3hCLG1CQUFtQixFQUNuQixjQUFjLENBQ2Y7QUFDRCxJQUFJQyxrQkFBa0IsR0FBRyxDQUFDLFVBQVUsRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLHdCQUF3QixDQUFDO0FBQ2hHLElBQUlDLG9CQUFvQixHQUFHLENBQUMsb0JBQW9CLENBQUM7QUFDakQsSUFBSUMsYUFBYSxHQUFHLDBCQUEwQjtBQUM5QyxJQUFJQyxlQUFlLEdBQUcsNEJBQTRCO0FBQ2xELElBQUlDLFlBQVksR0FBRyx1QkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1YMkZZUjVVNi5tanM/ZjQ5NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29uc3RhbnRzLnRzXG52YXIgTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyA9IFtcIi5sY2wuZGV2XCIsIFwiLmxjbHN0YWdlLmRldlwiLCBcIi5sY2xjbGVyay5jb21cIl07XG52YXIgQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMgPSBbXCIuYWNjb3VudHMuZGV2XCIsIFwiLmFjY291bnRzc3RhZ2UuZGV2XCIsIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiXTtcbnZhciBERVZfT1JfU1RBR0lOR19TVUZGSVhFUyA9IFtcbiAgXCIubGNsLmRldlwiLFxuICBcIi5zdGcuZGV2XCIsXG4gIFwiLmxjbHN0YWdlLmRldlwiLFxuICBcIi5zdGdzdGFnZS5kZXZcIixcbiAgXCIuZGV2LmxjbGNsZXJrLmNvbVwiLFxuICBcIi5zdGcubGNsY2xlcmsuY29tXCIsXG4gIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiLFxuICBcImFjY291bnRzc3RhZ2UuZGV2XCIsXG4gIFwiYWNjb3VudHMuZGV2XCJcbl07XG52YXIgTE9DQUxfRU5WX1NVRkZJWEVTID0gW1wiLmxjbC5kZXZcIiwgXCJsY2xzdGFnZS5kZXZcIiwgXCIubGNsY2xlcmsuY29tXCIsIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiXTtcbnZhciBTVEFHSU5HX0VOVl9TVUZGSVhFUyA9IFtcIi5hY2NvdW50c3N0YWdlLmRldlwiXTtcbnZhciBMT0NBTF9BUElfVVJMID0gXCJodHRwczovL2FwaS5sY2xjbGVyay5jb21cIjtcbnZhciBTVEFHSU5HX0FQSV9VUkwgPSBcImh0dHBzOi8vYXBpLmNsZXJrc3RhZ2UuZGV2XCI7XG52YXIgUFJPRF9BUElfVVJMID0gXCJodHRwczovL2FwaS5jbGVyay5jb21cIjtcblxuZXhwb3J0IHtcbiAgTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyxcbiAgQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMsXG4gIERFVl9PUl9TVEFHSU5HX1NVRkZJWEVTLFxuICBMT0NBTF9FTlZfU1VGRklYRVMsXG4gIFNUQUdJTkdfRU5WX1NVRkZJWEVTLFxuICBMT0NBTF9BUElfVVJMLFxuICBTVEFHSU5HX0FQSV9VUkwsXG4gIFBST0RfQVBJX1VSTFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVgyRllSNVU2Lm1qcy5tYXAiXSwibmFtZXMiOlsiTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyIsIkNVUlJFTlRfREVWX0lOU1RBTkNFX1NVRkZJWEVTIiwiREVWX09SX1NUQUdJTkdfU1VGRklYRVMiLCJMT0NBTF9FTlZfU1VGRklYRVMiLCJTVEFHSU5HX0VOVl9TVUZGSVhFUyIsIkxPQ0FMX0FQSV9VUkwiLCJTVEFHSU5HX0FQSV9VUkwiLCJQUk9EX0FQSV9VUkwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPublishableKey: () => (/* binding */ buildPublishableKey),\n/* harmony export */   createDevOrStagingUrlCache: () => (/* binding */ createDevOrStagingUrlCache),\n/* harmony export */   isDevelopmentFromPublishableKey: () => (/* binding */ isDevelopmentFromPublishableKey),\n/* harmony export */   isDevelopmentFromSecretKey: () => (/* binding */ isDevelopmentFromSecretKey),\n/* harmony export */   isProductionFromPublishableKey: () => (/* binding */ isProductionFromPublishableKey),\n/* harmony export */   isProductionFromSecretKey: () => (/* binding */ isProductionFromSecretKey),\n/* harmony export */   isPublishableKey: () => (/* binding */ isPublishableKey),\n/* harmony export */   parsePublishableKey: () => (/* binding */ parsePublishableKey)\n/* harmony export */ });\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n\n\n\n\n// src/keys.ts\nvar PUBLISHABLE_KEY_LIVE_PREFIX = \"pk_live_\";\nvar PUBLISHABLE_KEY_TEST_PREFIX = \"pk_test_\";\nvar PUBLISHABLE_FRONTEND_API_DEV_REGEX = /^(([a-z]+)-){2}([0-9]{1,2})\\.clerk\\.accounts([a-z.]*)(dev|com)$/i;\nfunction buildPublishableKey(frontendApi) {\n  const isDevKey = PUBLISHABLE_FRONTEND_API_DEV_REGEX.test(frontendApi) || frontendApi.startsWith(\"clerk.\") && _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_2__.LEGACY_DEV_INSTANCE_SUFFIXES.some(s => frontendApi.endsWith(s));\n  const keyPrefix = isDevKey ? PUBLISHABLE_KEY_TEST_PREFIX : PUBLISHABLE_KEY_LIVE_PREFIX;\n  return `${keyPrefix}${(0,_chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_1__.isomorphicBtoa)(`${frontendApi}$`)}`;\n}\nfunction parsePublishableKey(key, options = {}) {\n  key = key || \"\";\n  if (!key || !isPublishableKey(key)) {\n    if (options.fatal) {\n      throw new Error(\"Publishable key not valid.\");\n    }\n    return null;\n  }\n  const instanceType = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) ? \"production\" : \"development\";\n  let frontendApi = (0,_chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)(key.split(\"_\")[2]);\n  frontendApi = frontendApi.slice(0, -1);\n  if (options.proxyUrl) {\n    frontendApi = options.proxyUrl;\n  } else if (instanceType !== \"development\" && options.domain) {\n    frontendApi = `clerk.${options.domain}`;\n  }\n  return {\n    instanceType,\n    frontendApi\n  };\n}\nfunction isPublishableKey(key) {\n  key = key || \"\";\n  const hasValidPrefix = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) || key.startsWith(PUBLISHABLE_KEY_TEST_PREFIX);\n  const hasValidFrontendApiPostfix = (0,_chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)(key.split(\"_\")[2] || \"\").endsWith(\"$\");\n  return hasValidPrefix && hasValidFrontendApiPostfix;\n}\nfunction createDevOrStagingUrlCache() {\n  const devOrStagingUrlCache = /* @__PURE__ */new Map();\n  return {\n    isDevOrStagingUrl: url => {\n      if (!url) {\n        return false;\n      }\n      const hostname = typeof url === \"string\" ? url : url.hostname;\n      let res = devOrStagingUrlCache.get(hostname);\n      if (res === void 0) {\n        res = _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_2__.DEV_OR_STAGING_SUFFIXES.some(s => hostname.endsWith(s));\n        devOrStagingUrlCache.set(hostname, res);\n      }\n      return res;\n    }\n  };\n}\nfunction isDevelopmentFromPublishableKey(apiKey) {\n  return apiKey.startsWith(\"test_\") || apiKey.startsWith(\"pk_test_\");\n}\nfunction isProductionFromPublishableKey(apiKey) {\n  return apiKey.startsWith(\"live_\") || apiKey.startsWith(\"pk_live_\");\n}\nfunction isDevelopmentFromSecretKey(apiKey) {\n  return apiKey.startsWith(\"test_\") || apiKey.startsWith(\"sk_test_\");\n}\nfunction isProductionFromSecretKey(apiKey) {\n  return apiKey.startsWith(\"live_\") || apiKey.startsWith(\"sk_live_\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1aWEZVUTZMWS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFDZ0I7QUFHQTtBQUljOztBQUc5QjtBQUNBLElBQUlJLDJCQUEyQixHQUFHLFVBQVU7QUFDNUMsSUFBSUMsMkJBQTJCLEdBQUcsVUFBVTtBQUM1QyxJQUFJQyxrQ0FBa0MsR0FBRyxrRUFBa0U7QUFDM0csU0FBU0MsbUJBQW1CQSxDQUFDQyxXQUFXLEVBQUU7RUFDeEMsTUFBTUMsUUFBUSxHQUFHSCxrQ0FBa0MsQ0FBQ0ksSUFBSSxDQUFDRixXQUFXLENBQUMsSUFBSUEsV0FBVyxDQUFDRyxVQUFVLENBQUMsUUFBUSxDQUFDLElBQUlSLDZFQUE0QixDQUFDUyxJQUFJLENBQUVDLENBQUMsSUFBS0wsV0FBVyxDQUFDTSxRQUFRLENBQUNELENBQUMsQ0FBQyxDQUFDO0VBQzlLLE1BQU1FLFNBQVMsR0FBR04sUUFBUSxHQUFHSiwyQkFBMkIsR0FBR0QsMkJBQTJCO0VBQ3RGLE9BQVEsR0FBRVcsU0FBVSxHQUFFZCxtRUFBYyxDQUFFLEdBQUVPLFdBQVksR0FBRSxDQUFFLEVBQUM7QUFDM0Q7QUFDQSxTQUFTUSxtQkFBbUJBLENBQUNDLEdBQUcsRUFBRUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxFQUFFO0VBQzlDRCxHQUFHLEdBQUdBLEdBQUcsSUFBSSxFQUFFO0VBQ2YsSUFBSSxDQUFDQSxHQUFHLElBQUksQ0FBQ0UsZ0JBQWdCLENBQUNGLEdBQUcsQ0FBQyxFQUFFO0lBQ2xDLElBQUlDLE9BQU8sQ0FBQ0UsS0FBSyxFQUFFO01BQ2pCLE1BQU0sSUFBSUMsS0FBSyxDQUFDLDRCQUE0QixDQUFDO0lBQy9DO0lBQ0EsT0FBTyxJQUFJO0VBQ2I7RUFDQSxNQUFNQyxZQUFZLEdBQUdMLEdBQUcsQ0FBQ04sVUFBVSxDQUFDUCwyQkFBMkIsQ0FBQyxHQUFHLFlBQVksR0FBRyxhQUFhO0VBQy9GLElBQUlJLFdBQVcsR0FBR1IsbUVBQWMsQ0FBQ2lCLEdBQUcsQ0FBQ00sS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ25EZixXQUFXLEdBQUdBLFdBQVcsQ0FBQ2dCLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7RUFDdEMsSUFBSU4sT0FBTyxDQUFDTyxRQUFRLEVBQUU7SUFDcEJqQixXQUFXLEdBQUdVLE9BQU8sQ0FBQ08sUUFBUTtFQUNoQyxDQUFDLE1BQU0sSUFBSUgsWUFBWSxLQUFLLGFBQWEsSUFBSUosT0FBTyxDQUFDUSxNQUFNLEVBQUU7SUFDM0RsQixXQUFXLEdBQUksU0FBUVUsT0FBTyxDQUFDUSxNQUFPLEVBQUM7RUFDekM7RUFDQSxPQUFPO0lBQ0xKLFlBQVk7SUFDWmQ7RUFDRixDQUFDO0FBQ0g7QUFDQSxTQUFTVyxnQkFBZ0JBLENBQUNGLEdBQUcsRUFBRTtFQUM3QkEsR0FBRyxHQUFHQSxHQUFHLElBQUksRUFBRTtFQUNmLE1BQU1VLGNBQWMsR0FBR1YsR0FBRyxDQUFDTixVQUFVLENBQUNQLDJCQUEyQixDQUFDLElBQUlhLEdBQUcsQ0FBQ04sVUFBVSxDQUFDTiwyQkFBMkIsQ0FBQztFQUNqSCxNQUFNdUIsMEJBQTBCLEdBQUc1QixtRUFBYyxDQUFDaUIsR0FBRyxDQUFDTSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUNULFFBQVEsQ0FBQyxHQUFHLENBQUM7RUFDeEYsT0FBT2EsY0FBYyxJQUFJQywwQkFBMEI7QUFDckQ7QUFDQSxTQUFTQywwQkFBMEJBLENBQUEsRUFBRztFQUNwQyxNQUFNQyxvQkFBb0IsR0FBRyxlQUFnQixJQUFJQyxHQUFHLENBQUMsQ0FBQztFQUN0RCxPQUFPO0lBQ0xDLGlCQUFpQixFQUFHQyxHQUFHLElBQUs7TUFDMUIsSUFBSSxDQUFDQSxHQUFHLEVBQUU7UUFDUixPQUFPLEtBQUs7TUFDZDtNQUNBLE1BQU1DLFFBQVEsR0FBRyxPQUFPRCxHQUFHLEtBQUssUUFBUSxHQUFHQSxHQUFHLEdBQUdBLEdBQUcsQ0FBQ0MsUUFBUTtNQUM3RCxJQUFJQyxHQUFHLEdBQUdMLG9CQUFvQixDQUFDTSxHQUFHLENBQUNGLFFBQVEsQ0FBQztNQUM1QyxJQUFJQyxHQUFHLEtBQUssS0FBSyxDQUFDLEVBQUU7UUFDbEJBLEdBQUcsR0FBR2pDLHdFQUF1QixDQUFDVSxJQUFJLENBQUVDLENBQUMsSUFBS3FCLFFBQVEsQ0FBQ3BCLFFBQVEsQ0FBQ0QsQ0FBQyxDQUFDLENBQUM7UUFDL0RpQixvQkFBb0IsQ0FBQ08sR0FBRyxDQUFDSCxRQUFRLEVBQUVDLEdBQUcsQ0FBQztNQUN6QztNQUNBLE9BQU9BLEdBQUc7SUFDWjtFQUNGLENBQUM7QUFDSDtBQUNBLFNBQVNHLCtCQUErQkEsQ0FBQ0MsTUFBTSxFQUFFO0VBQy9DLE9BQU9BLE1BQU0sQ0FBQzVCLFVBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSTRCLE1BQU0sQ0FBQzVCLFVBQVUsQ0FBQyxVQUFVLENBQUM7QUFDcEU7QUFDQSxTQUFTNkIsOEJBQThCQSxDQUFDRCxNQUFNLEVBQUU7RUFDOUMsT0FBT0EsTUFBTSxDQUFDNUIsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJNEIsTUFBTSxDQUFDNUIsVUFBVSxDQUFDLFVBQVUsQ0FBQztBQUNwRTtBQUNBLFNBQVM4QiwwQkFBMEJBLENBQUNGLE1BQU0sRUFBRTtFQUMxQyxPQUFPQSxNQUFNLENBQUM1QixVQUFVLENBQUMsT0FBTyxDQUFDLElBQUk0QixNQUFNLENBQUM1QixVQUFVLENBQUMsVUFBVSxDQUFDO0FBQ3BFO0FBQ0EsU0FBUytCLHlCQUF5QkEsQ0FBQ0gsTUFBTSxFQUFFO0VBQ3pDLE9BQU9BLE1BQU0sQ0FBQzVCLFVBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSTRCLE1BQU0sQ0FBQzVCLFVBQVUsQ0FBQyxVQUFVLENBQUM7QUFDcEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1aWEZVUTZMWS5tanM/NmEwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc29tb3JwaGljQXRvYlxufSBmcm9tIFwiLi9jaHVuay1URVRHVEVJMi5tanNcIjtcbmltcG9ydCB7XG4gIGlzb21vcnBoaWNCdG9hXG59IGZyb20gXCIuL2NodW5rLUtPSDdHVEpPLm1qc1wiO1xuaW1wb3J0IHtcbiAgREVWX09SX1NUQUdJTkdfU1VGRklYRVMsXG4gIExFR0FDWV9ERVZfSU5TVEFOQ0VfU1VGRklYRVNcbn0gZnJvbSBcIi4vY2h1bmstWDJGWVI1VTYubWpzXCI7XG5cbi8vIHNyYy9rZXlzLnRzXG52YXIgUFVCTElTSEFCTEVfS0VZX0xJVkVfUFJFRklYID0gXCJwa19saXZlX1wiO1xudmFyIFBVQkxJU0hBQkxFX0tFWV9URVNUX1BSRUZJWCA9IFwicGtfdGVzdF9cIjtcbnZhciBQVUJMSVNIQUJMRV9GUk9OVEVORF9BUElfREVWX1JFR0VYID0gL14oKFthLXpdKyktKXsyfShbMC05XXsxLDJ9KVxcLmNsZXJrXFwuYWNjb3VudHMoW2Etei5dKikoZGV2fGNvbSkkL2k7XG5mdW5jdGlvbiBidWlsZFB1Ymxpc2hhYmxlS2V5KGZyb250ZW5kQXBpKSB7XG4gIGNvbnN0IGlzRGV2S2V5ID0gUFVCTElTSEFCTEVfRlJPTlRFTkRfQVBJX0RFVl9SRUdFWC50ZXN0KGZyb250ZW5kQXBpKSB8fCBmcm9udGVuZEFwaS5zdGFydHNXaXRoKFwiY2xlcmsuXCIpICYmIExFR0FDWV9ERVZfSU5TVEFOQ0VfU1VGRklYRVMuc29tZSgocykgPT4gZnJvbnRlbmRBcGkuZW5kc1dpdGgocykpO1xuICBjb25zdCBrZXlQcmVmaXggPSBpc0RldktleSA/IFBVQkxJU0hBQkxFX0tFWV9URVNUX1BSRUZJWCA6IFBVQkxJU0hBQkxFX0tFWV9MSVZFX1BSRUZJWDtcbiAgcmV0dXJuIGAke2tleVByZWZpeH0ke2lzb21vcnBoaWNCdG9hKGAke2Zyb250ZW5kQXBpfSRgKX1gO1xufVxuZnVuY3Rpb24gcGFyc2VQdWJsaXNoYWJsZUtleShrZXksIG9wdGlvbnMgPSB7fSkge1xuICBrZXkgPSBrZXkgfHwgXCJcIjtcbiAgaWYgKCFrZXkgfHwgIWlzUHVibGlzaGFibGVLZXkoa2V5KSkge1xuICAgIGlmIChvcHRpb25zLmZhdGFsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQdWJsaXNoYWJsZSBrZXkgbm90IHZhbGlkLlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgaW5zdGFuY2VUeXBlID0ga2V5LnN0YXJ0c1dpdGgoUFVCTElTSEFCTEVfS0VZX0xJVkVfUFJFRklYKSA/IFwicHJvZHVjdGlvblwiIDogXCJkZXZlbG9wbWVudFwiO1xuICBsZXQgZnJvbnRlbmRBcGkgPSBpc29tb3JwaGljQXRvYihrZXkuc3BsaXQoXCJfXCIpWzJdKTtcbiAgZnJvbnRlbmRBcGkgPSBmcm9udGVuZEFwaS5zbGljZSgwLCAtMSk7XG4gIGlmIChvcHRpb25zLnByb3h5VXJsKSB7XG4gICAgZnJvbnRlbmRBcGkgPSBvcHRpb25zLnByb3h5VXJsO1xuICB9IGVsc2UgaWYgKGluc3RhbmNlVHlwZSAhPT0gXCJkZXZlbG9wbWVudFwiICYmIG9wdGlvbnMuZG9tYWluKSB7XG4gICAgZnJvbnRlbmRBcGkgPSBgY2xlcmsuJHtvcHRpb25zLmRvbWFpbn1gO1xuICB9XG4gIHJldHVybiB7XG4gICAgaW5zdGFuY2VUeXBlLFxuICAgIGZyb250ZW5kQXBpXG4gIH07XG59XG5mdW5jdGlvbiBpc1B1Ymxpc2hhYmxlS2V5KGtleSkge1xuICBrZXkgPSBrZXkgfHwgXCJcIjtcbiAgY29uc3QgaGFzVmFsaWRQcmVmaXggPSBrZXkuc3RhcnRzV2l0aChQVUJMSVNIQUJMRV9LRVlfTElWRV9QUkVGSVgpIHx8IGtleS5zdGFydHNXaXRoKFBVQkxJU0hBQkxFX0tFWV9URVNUX1BSRUZJWCk7XG4gIGNvbnN0IGhhc1ZhbGlkRnJvbnRlbmRBcGlQb3N0Zml4ID0gaXNvbW9ycGhpY0F0b2Ioa2V5LnNwbGl0KFwiX1wiKVsyXSB8fCBcIlwiKS5lbmRzV2l0aChcIiRcIik7XG4gIHJldHVybiBoYXNWYWxpZFByZWZpeCAmJiBoYXNWYWxpZEZyb250ZW5kQXBpUG9zdGZpeDtcbn1cbmZ1bmN0aW9uIGNyZWF0ZURldk9yU3RhZ2luZ1VybENhY2hlKCkge1xuICBjb25zdCBkZXZPclN0YWdpbmdVcmxDYWNoZSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gIHJldHVybiB7XG4gICAgaXNEZXZPclN0YWdpbmdVcmw6ICh1cmwpID0+IHtcbiAgICAgIGlmICghdXJsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGhvc3RuYW1lID0gdHlwZW9mIHVybCA9PT0gXCJzdHJpbmdcIiA/IHVybCA6IHVybC5ob3N0bmFtZTtcbiAgICAgIGxldCByZXMgPSBkZXZPclN0YWdpbmdVcmxDYWNoZS5nZXQoaG9zdG5hbWUpO1xuICAgICAgaWYgKHJlcyA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHJlcyA9IERFVl9PUl9TVEFHSU5HX1NVRkZJWEVTLnNvbWUoKHMpID0+IGhvc3RuYW1lLmVuZHNXaXRoKHMpKTtcbiAgICAgICAgZGV2T3JTdGFnaW5nVXJsQ2FjaGUuc2V0KGhvc3RuYW1lLCByZXMpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gIH07XG59XG5mdW5jdGlvbiBpc0RldmVsb3BtZW50RnJvbVB1Ymxpc2hhYmxlS2V5KGFwaUtleSkge1xuICByZXR1cm4gYXBpS2V5LnN0YXJ0c1dpdGgoXCJ0ZXN0X1wiKSB8fCBhcGlLZXkuc3RhcnRzV2l0aChcInBrX3Rlc3RfXCIpO1xufVxuZnVuY3Rpb24gaXNQcm9kdWN0aW9uRnJvbVB1Ymxpc2hhYmxlS2V5KGFwaUtleSkge1xuICByZXR1cm4gYXBpS2V5LnN0YXJ0c1dpdGgoXCJsaXZlX1wiKSB8fCBhcGlLZXkuc3RhcnRzV2l0aChcInBrX2xpdmVfXCIpO1xufVxuZnVuY3Rpb24gaXNEZXZlbG9wbWVudEZyb21TZWNyZXRLZXkoYXBpS2V5KSB7XG4gIHJldHVybiBhcGlLZXkuc3RhcnRzV2l0aChcInRlc3RfXCIpIHx8IGFwaUtleS5zdGFydHNXaXRoKFwic2tfdGVzdF9cIik7XG59XG5mdW5jdGlvbiBpc1Byb2R1Y3Rpb25Gcm9tU2VjcmV0S2V5KGFwaUtleSkge1xuICByZXR1cm4gYXBpS2V5LnN0YXJ0c1dpdGgoXCJsaXZlX1wiKSB8fCBhcGlLZXkuc3RhcnRzV2l0aChcInNrX2xpdmVfXCIpO1xufVxuXG5leHBvcnQge1xuICBidWlsZFB1Ymxpc2hhYmxlS2V5LFxuICBwYXJzZVB1Ymxpc2hhYmxlS2V5LFxuICBpc1B1Ymxpc2hhYmxlS2V5LFxuICBjcmVhdGVEZXZPclN0YWdpbmdVcmxDYWNoZSxcbiAgaXNEZXZlbG9wbWVudEZyb21QdWJsaXNoYWJsZUtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVB1Ymxpc2hhYmxlS2V5LFxuICBpc0RldmVsb3BtZW50RnJvbVNlY3JldEtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVNlY3JldEtleVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVpYRlVRNkxZLm1qcy5tYXAiXSwibmFtZXMiOlsiaXNvbW9ycGhpY0F0b2IiLCJpc29tb3JwaGljQnRvYSIsIkRFVl9PUl9TVEFHSU5HX1NVRkZJWEVTIiwiTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyIsIlBVQkxJU0hBQkxFX0tFWV9MSVZFX1BSRUZJWCIsIlBVQkxJU0hBQkxFX0tFWV9URVNUX1BSRUZJWCIsIlBVQkxJU0hBQkxFX0ZST05URU5EX0FQSV9ERVZfUkVHRVgiLCJidWlsZFB1Ymxpc2hhYmxlS2V5IiwiZnJvbnRlbmRBcGkiLCJpc0RldktleSIsInRlc3QiLCJzdGFydHNXaXRoIiwic29tZSIsInMiLCJlbmRzV2l0aCIsImtleVByZWZpeCIsInBhcnNlUHVibGlzaGFibGVLZXkiLCJrZXkiLCJvcHRpb25zIiwiaXNQdWJsaXNoYWJsZUtleSIsImZhdGFsIiwiRXJyb3IiLCJpbnN0YW5jZVR5cGUiLCJzcGxpdCIsInNsaWNlIiwicHJveHlVcmwiLCJkb21haW4iLCJoYXNWYWxpZFByZWZpeCIsImhhc1ZhbGlkRnJvbnRlbmRBcGlQb3N0Zml4IiwiY3JlYXRlRGV2T3JTdGFnaW5nVXJsQ2FjaGUiLCJkZXZPclN0YWdpbmdVcmxDYWNoZSIsIk1hcCIsImlzRGV2T3JTdGFnaW5nVXJsIiwidXJsIiwiaG9zdG5hbWUiLCJyZXMiLCJnZXQiLCJzZXQiLCJpc0RldmVsb3BtZW50RnJvbVB1Ymxpc2hhYmxlS2V5IiwiYXBpS2V5IiwiaXNQcm9kdWN0aW9uRnJvbVB1Ymxpc2hhYmxlS2V5IiwiaXNEZXZlbG9wbWVudEZyb21TZWNyZXRLZXkiLCJpc1Byb2R1Y3Rpb25Gcm9tU2VjcmV0S2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/deprecated.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/deprecated.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deprecated: () => (/* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_0__.deprecated),\n/* harmony export */   deprecatedObjectProperty: () => (/* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_0__.deprecatedObjectProperty),\n/* harmony export */   deprecatedProperty: () => (/* reexport safe */ _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_0__.deprecatedProperty)\n/* harmony export */ });\n/* harmony import */ var _chunk_IC4FGZI3_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-IC4FGZI3.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-IC4FGZI3.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9kZXByZWNhdGVkLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUdvQjtBQUVVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvZGVwcmVjYXRlZC5tanM/MTAzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBkZXByZWNhdGVkLFxuICBkZXByZWNhdGVkT2JqZWN0UHJvcGVydHksXG4gIGRlcHJlY2F0ZWRQcm9wZXJ0eVxufSBmcm9tIFwiLi9jaHVuay1JQzRGR1pJMy5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstVVZWQ1dTVkYubWpzXCI7XG5leHBvcnQge1xuICBkZXByZWNhdGVkLFxuICBkZXByZWNhdGVkT2JqZWN0UHJvcGVydHksXG4gIGRlcHJlY2F0ZWRQcm9wZXJ0eVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlcHJlY2F0ZWQubWpzLm1hcCJdLCJuYW1lcyI6WyJkZXByZWNhdGVkIiwiZGVwcmVjYXRlZE9iamVjdFByb3BlcnR5IiwiZGVwcmVjYXRlZFByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/deprecated.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/devBrowser.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/devBrowser.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEV_BROWSER_JWT_HEADER: () => (/* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_0__.DEV_BROWSER_JWT_HEADER),\n/* harmony export */   DEV_BROWSER_JWT_KEY: () => (/* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_0__.DEV_BROWSER_JWT_KEY),\n/* harmony export */   extractDevBrowserJWTFromURL: () => (/* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_0__.extractDevBrowserJWTFromURL),\n/* harmony export */   setDevBrowserJWTInURL: () => (/* reexport safe */ _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_0__.setDevBrowserJWTInURL)\n/* harmony export */ });\n/* harmony import */ var _chunk_K64INQ4C_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-K64INQ4C.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-K64INQ4C.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9kZXZCcm93c2VyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFJdUI7QUFFTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2RldkJyb3dzZXIubWpzPzhmYWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgREVWX0JST1dTRVJfSldUX0hFQURFUixcbiAgREVWX0JST1dTRVJfSldUX0tFWSxcbiAgZXh0cmFjdERldkJyb3dzZXJKV1RGcm9tVVJMLFxuICBzZXREZXZCcm93c2VySldUSW5VUkxcbn0gZnJvbSBcIi4vY2h1bmstSzY0SU5RNEMubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLVVWVkNXU1ZGLm1qc1wiO1xuZXhwb3J0IHtcbiAgREVWX0JST1dTRVJfSldUX0hFQURFUixcbiAgREVWX0JST1dTRVJfSldUX0tFWSxcbiAgZXh0cmFjdERldkJyb3dzZXJKV1RGcm9tVVJMLFxuICBzZXREZXZCcm93c2VySldUSW5VUkxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXZCcm93c2VyLm1qcy5tYXAiXSwibmFtZXMiOlsiREVWX0JST1dTRVJfSldUX0hFQURFUiIsIkRFVl9CUk9XU0VSX0pXVF9LRVkiLCJleHRyYWN0RGV2QnJvd3NlckpXVEZyb21VUkwiLCJzZXREZXZCcm93c2VySldUSW5VUkwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/devBrowser.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/error.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/error.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkAPIResponseError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkAPIResponseError),\n/* harmony export */   ClerkRuntimeError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkRuntimeError),\n/* harmony export */   EmailLinkError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.EmailLinkError),\n/* harmony export */   EmailLinkErrorCode: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.EmailLinkErrorCode),\n/* harmony export */   buildErrorThrower: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.buildErrorThrower),\n/* harmony export */   is4xxError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.is4xxError),\n/* harmony export */   isClerkAPIResponseError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isClerkAPIResponseError),\n/* harmony export */   isClerkRuntimeError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isClerkRuntimeError),\n/* harmony export */   isEmailLinkError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isEmailLinkError),\n/* harmony export */   isKnownError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isKnownError),\n/* harmony export */   isMetamaskError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isMetamaskError),\n/* harmony export */   isNetworkError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isNetworkError),\n/* harmony export */   isPasswordPwnedError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isPasswordPwnedError),\n/* harmony export */   isUnauthorizedError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isUnauthorizedError),\n/* harmony export */   isUserLockedError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.isUserLockedError),\n/* harmony export */   parseError: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.parseError),\n/* harmony export */   parseErrors: () => (/* reexport safe */ _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__.parseErrors)\n/* harmony export */ });\n/* harmony import */ var _chunk_46BSODPS_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-46BSODPS.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-46BSODPS.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9lcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCYTtBQUVpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2Vycm9yLm1qcz8zMWRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENsZXJrQVBJUmVzcG9uc2VFcnJvcixcbiAgQ2xlcmtSdW50aW1lRXJyb3IsXG4gIEVtYWlsTGlua0Vycm9yLFxuICBFbWFpbExpbmtFcnJvckNvZGUsXG4gIGJ1aWxkRXJyb3JUaHJvd2VyLFxuICBpczR4eEVycm9yLFxuICBpc0NsZXJrQVBJUmVzcG9uc2VFcnJvcixcbiAgaXNDbGVya1J1bnRpbWVFcnJvcixcbiAgaXNFbWFpbExpbmtFcnJvcixcbiAgaXNLbm93bkVycm9yLFxuICBpc01ldGFtYXNrRXJyb3IsXG4gIGlzTmV0d29ya0Vycm9yLFxuICBpc1Bhc3N3b3JkUHduZWRFcnJvcixcbiAgaXNVbmF1dGhvcml6ZWRFcnJvcixcbiAgaXNVc2VyTG9ja2VkRXJyb3IsXG4gIHBhcnNlRXJyb3IsXG4gIHBhcnNlRXJyb3JzXG59IGZyb20gXCIuL2NodW5rLTQ2QlNPRFBTLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1VVlZDV1NWRi5tanNcIjtcbmV4cG9ydCB7XG4gIENsZXJrQVBJUmVzcG9uc2VFcnJvcixcbiAgQ2xlcmtSdW50aW1lRXJyb3IsXG4gIEVtYWlsTGlua0Vycm9yLFxuICBFbWFpbExpbmtFcnJvckNvZGUsXG4gIGJ1aWxkRXJyb3JUaHJvd2VyLFxuICBpczR4eEVycm9yLFxuICBpc0NsZXJrQVBJUmVzcG9uc2VFcnJvcixcbiAgaXNDbGVya1J1bnRpbWVFcnJvcixcbiAgaXNFbWFpbExpbmtFcnJvcixcbiAgaXNLbm93bkVycm9yLFxuICBpc01ldGFtYXNrRXJyb3IsXG4gIGlzTmV0d29ya0Vycm9yLFxuICBpc1Bhc3N3b3JkUHduZWRFcnJvcixcbiAgaXNVbmF1dGhvcml6ZWRFcnJvcixcbiAgaXNVc2VyTG9ja2VkRXJyb3IsXG4gIHBhcnNlRXJyb3IsXG4gIHBhcnNlRXJyb3JzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IubWpzLm1hcCJdLCJuYW1lcyI6WyJDbGVya0FQSVJlc3BvbnNlRXJyb3IiLCJDbGVya1J1bnRpbWVFcnJvciIsIkVtYWlsTGlua0Vycm9yIiwiRW1haWxMaW5rRXJyb3JDb2RlIiwiYnVpbGRFcnJvclRocm93ZXIiLCJpczR4eEVycm9yIiwiaXNDbGVya0FQSVJlc3BvbnNlRXJyb3IiLCJpc0NsZXJrUnVudGltZUVycm9yIiwiaXNFbWFpbExpbmtFcnJvciIsImlzS25vd25FcnJvciIsImlzTWV0YW1hc2tFcnJvciIsImlzTmV0d29ya0Vycm9yIiwiaXNQYXNzd29yZFB3bmVkRXJyb3IiLCJpc1VuYXV0aG9yaXplZEVycm9yIiwiaXNVc2VyTG9ja2VkRXJyb3IiLCJwYXJzZUVycm9yIiwicGFyc2VFcnJvcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/error.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/handleValueOrFn.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/handleValueOrFn.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleValueOrFn: () => (/* reexport safe */ _chunk_TRWMHODU_mjs__WEBPACK_IMPORTED_MODULE_0__.handleValueOrFn)\n/* harmony export */ });\n/* harmony import */ var _chunk_TRWMHODU_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TRWMHODU.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9oYW5kbGVWYWx1ZU9yRm4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUNpQjtBQUVhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvaGFuZGxlVmFsdWVPckZuLm1qcz80NTk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGhhbmRsZVZhbHVlT3JGblxufSBmcm9tIFwiLi9jaHVuay1UUldNSE9EVS5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstVVZWQ1dTVkYubWpzXCI7XG5leHBvcnQge1xuICBoYW5kbGVWYWx1ZU9yRm5cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYW5kbGVWYWx1ZU9yRm4ubWpzLm1hcCJdLCJuYW1lcyI6WyJoYW5kbGVWYWx1ZU9yRm4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/handleValueOrFn.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/isomorphicAtob.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/isomorphicAtob.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicAtob: () => (/* reexport safe */ _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)\n/* harmony export */ });\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9pc29tb3JwaGljQXRvYi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ2dCO0FBRWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9pc29tb3JwaGljQXRvYi5tanM/NDcyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc29tb3JwaGljQXRvYlxufSBmcm9tIFwiLi9jaHVuay1URVRHVEVJMi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstVVZWQ1dTVkYubWpzXCI7XG5leHBvcnQge1xuICBpc29tb3JwaGljQXRvYlxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzb21vcnBoaWNBdG9iLm1qcy5tYXAiXSwibmFtZXMiOlsiaXNvbW9ycGhpY0F0b2IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/isomorphicAtob.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/keys.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/keys.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPublishableKey: () => (/* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.buildPublishableKey),\n/* harmony export */   createDevOrStagingUrlCache: () => (/* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.createDevOrStagingUrlCache),\n/* harmony export */   isDevelopmentFromPublishableKey: () => (/* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.isDevelopmentFromPublishableKey),\n/* harmony export */   isDevelopmentFromSecretKey: () => (/* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.isDevelopmentFromSecretKey),\n/* harmony export */   isProductionFromPublishableKey: () => (/* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.isProductionFromPublishableKey),\n/* harmony export */   isProductionFromSecretKey: () => (/* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.isProductionFromSecretKey),\n/* harmony export */   isPublishableKey: () => (/* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.isPublishableKey),\n/* harmony export */   parsePublishableKey: () => (/* reexport safe */ _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__.parsePublishableKey)\n/* harmony export */ });\n/* harmony import */ var _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-ZXFUQ6LY.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9rZXlzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBUXFCO0FBRVM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9rZXlzLm1qcz9kYTdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGJ1aWxkUHVibGlzaGFibGVLZXksXG4gIGNyZWF0ZURldk9yU3RhZ2luZ1VybENhY2hlLFxuICBpc0RldmVsb3BtZW50RnJvbVB1Ymxpc2hhYmxlS2V5LFxuICBpc0RldmVsb3BtZW50RnJvbVNlY3JldEtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVB1Ymxpc2hhYmxlS2V5LFxuICBpc1Byb2R1Y3Rpb25Gcm9tU2VjcmV0S2V5LFxuICBpc1B1Ymxpc2hhYmxlS2V5LFxuICBwYXJzZVB1Ymxpc2hhYmxlS2V5XG59IGZyb20gXCIuL2NodW5rLVpYRlVRNkxZLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1URVRHVEVJMi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstS09IN0dUSk8ubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLVgyRllSNVU2Lm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1VVlZDV1NWRi5tanNcIjtcbmV4cG9ydCB7XG4gIGJ1aWxkUHVibGlzaGFibGVLZXksXG4gIGNyZWF0ZURldk9yU3RhZ2luZ1VybENhY2hlLFxuICBpc0RldmVsb3BtZW50RnJvbVB1Ymxpc2hhYmxlS2V5LFxuICBpc0RldmVsb3BtZW50RnJvbVNlY3JldEtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVB1Ymxpc2hhYmxlS2V5LFxuICBpc1Byb2R1Y3Rpb25Gcm9tU2VjcmV0S2V5LFxuICBpc1B1Ymxpc2hhYmxlS2V5LFxuICBwYXJzZVB1Ymxpc2hhYmxlS2V5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9a2V5cy5tanMubWFwIl0sIm5hbWVzIjpbImJ1aWxkUHVibGlzaGFibGVLZXkiLCJjcmVhdGVEZXZPclN0YWdpbmdVcmxDYWNoZSIsImlzRGV2ZWxvcG1lbnRGcm9tUHVibGlzaGFibGVLZXkiLCJpc0RldmVsb3BtZW50RnJvbVNlY3JldEtleSIsImlzUHJvZHVjdGlvbkZyb21QdWJsaXNoYWJsZUtleSIsImlzUHJvZHVjdGlvbkZyb21TZWNyZXRLZXkiLCJpc1B1Ymxpc2hhYmxlS2V5IiwicGFyc2VQdWJsaXNoYWJsZUtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/keys.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/proxy.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/proxy.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHttpOrHttps: () => (/* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__.isHttpOrHttps),\n/* harmony export */   isProxyUrlRelative: () => (/* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__.isProxyUrlRelative),\n/* harmony export */   isValidProxyUrl: () => (/* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__.isValidProxyUrl),\n/* harmony export */   proxyUrlToAbsoluteURL: () => (/* reexport safe */ _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__.proxyUrlToAbsoluteURL)\n/* harmony export */ });\n/* harmony import */ var _chunk_6NDGN2IU_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-6NDGN2IU.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-6NDGN2IU.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9wcm94eS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBSXVCO0FBRU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9wcm94eS5tanM/MGE5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc0h0dHBPckh0dHBzLFxuICBpc1Byb3h5VXJsUmVsYXRpdmUsXG4gIGlzVmFsaWRQcm94eVVybCxcbiAgcHJveHlVcmxUb0Fic29sdXRlVVJMXG59IGZyb20gXCIuL2NodW5rLTZOREdOMklVLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1VVlZDV1NWRi5tanNcIjtcbmV4cG9ydCB7XG4gIGlzSHR0cE9ySHR0cHMsXG4gIGlzUHJveHlVcmxSZWxhdGl2ZSxcbiAgaXNWYWxpZFByb3h5VXJsLFxuICBwcm94eVVybFRvQWJzb2x1dGVVUkxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm94eS5tanMubWFwIl0sIm5hbWVzIjpbImlzSHR0cE9ySHR0cHMiLCJpc1Byb3h5VXJsUmVsYXRpdmUiLCJpc1ZhbGlkUHJveHlVcmwiLCJwcm94eVVybFRvQWJzb2x1dGVVUkwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/proxy.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/telemetry.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/telemetry.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TelemetryCollector: () => (/* binding */ TelemetryCollector),\n/* harmony export */   eventComponentMounted: () => (/* binding */ eventComponentMounted),\n/* harmony export */   eventMethodCalled: () => (/* binding */ eventMethodCalled)\n/* harmony export */ });\n/* harmony import */ var _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-E6T5KUVH.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-E6T5KUVH.mjs\");\n/* harmony import */ var _chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-ZXFUQ6LY.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-ZXFUQ6LY.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n\n\n// src/telemetry/collector.ts\nvar DEFAULT_CONFIG = {\n  samplingRate: 1,\n  maxBufferSize: 5,\n  // Production endpoint: https://clerk-telemetry.com\n  // Staging endpoint: https://staging.clerk-telemetry.com\n  // Local: http://localhost:8787\n  endpoint: \"https://clerk-telemetry.com\"\n};\nvar _config, _metadata, _buffer, _pendingFlush, _shouldRecord, shouldRecord_fn, _scheduleFlush, scheduleFlush_fn, _flush, flush_fn, _logEvent, logEvent_fn, _getSDKMetadata, getSDKMetadata_fn, _preparePayload, preparePayload_fn;\nvar TelemetryCollector = class {\n  constructor(options) {\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateAdd)(this, _shouldRecord);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateAdd)(this, _scheduleFlush);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateAdd)(this, _flush);\n    /**\n     * If running in debug mode, log the event and its payload to the console.\n     */\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateAdd)(this, _logEvent);\n    /**\n     * If in browser, attempt to lazily grab the SDK metadata from the Clerk singleton, otherwise fallback to the initially passed in values.\n     *\n     * This is necessary because the sdkMetadata can be set by the host SDK after the TelemetryCollector is instantiated.\n     */\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateAdd)(this, _getSDKMetadata);\n    /**\n     * Append relevant metadata from the Clerk singleton to the event payload.\n     */\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateAdd)(this, _preparePayload);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateAdd)(this, _config, void 0);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateAdd)(this, _metadata, {});\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateAdd)(this, _buffer, []);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateAdd)(this, _pendingFlush, void 0);\n    var _a, _b, _c, _d, _e, _f;\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateSet)(this, _config, {\n      maxBufferSize: (_a = options.maxBufferSize) != null ? _a : DEFAULT_CONFIG.maxBufferSize,\n      samplingRate: (_b = options.samplingRate) != null ? _b : DEFAULT_CONFIG.samplingRate,\n      disabled: (_c = options.disabled) != null ? _c : false,\n      debug: (_d = options.debug) != null ? _d : false,\n      endpoint: DEFAULT_CONFIG.endpoint\n    });\n    if (!options.clerkVersion && true) {\n      (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).clerkVersion = \"\";\n    } else {\n      (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).clerkVersion = (_e = options.clerkVersion) != null ? _e : \"\";\n    }\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).sdk = options.sdk;\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).sdkVersion = options.sdkVersion;\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).publishableKey = (_f = options.publishableKey) != null ? _f : \"\";\n    const parsedKey = (0,_chunk_ZXFUQ6LY_mjs__WEBPACK_IMPORTED_MODULE_1__.parsePublishableKey)(options.publishableKey);\n    if (parsedKey) {\n      (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).instanceType = parsedKey.instanceType;\n    }\n    if (options.secretKey) {\n      (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).secretKey = options.secretKey.substring(0, 16);\n    }\n  }\n  get isEnabled() {\n    var _a;\n    if ((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).instanceType !== \"development\") {\n      return false;\n    }\n    if ((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _config).disabled || typeof process !== \"undefined\" && (0,_chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_0__.isTruthy)(process.env.CLERK_TELEMETRY_DISABLED)) {\n      return false;\n    }\n    if (false) {}\n    return true;\n  }\n  get isDebug() {\n    return (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _config).debug || typeof process !== \"undefined\" && (0,_chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_0__.isTruthy)(process.env.CLERK_TELEMETRY_DEBUG);\n  }\n  record(event) {\n    const preparedPayload = (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateMethod)(this, _preparePayload, preparePayload_fn).call(this, event.event, event.payload);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateMethod)(this, _logEvent, logEvent_fn).call(this, preparedPayload.event, preparedPayload);\n    if (!(0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateMethod)(this, _shouldRecord, shouldRecord_fn).call(this, event.eventSamplingRate)) {\n      return;\n    }\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _buffer).push(preparedPayload);\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateMethod)(this, _scheduleFlush, scheduleFlush_fn).call(this);\n  }\n};\n_config = new WeakMap();\n_metadata = new WeakMap();\n_buffer = new WeakMap();\n_pendingFlush = new WeakMap();\n_shouldRecord = new WeakSet();\nshouldRecord_fn = function (eventSamplingRate) {\n  const randomSeed = Math.random();\n  const shouldBeSampled = randomSeed <= (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _config).samplingRate && (typeof eventSamplingRate === \"undefined\" || randomSeed <= eventSamplingRate);\n  return this.isEnabled && !this.isDebug && shouldBeSampled;\n};\n_scheduleFlush = new WeakSet();\nscheduleFlush_fn = function () {\n  if (true) {\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateMethod)(this, _flush, flush_fn).call(this);\n    return;\n  }\n  const isBufferFull = (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _buffer).length >= (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _config).maxBufferSize;\n  if (isBufferFull) {\n    if ((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _pendingFlush)) {\n      const cancel = typeof cancelIdleCallback !== \"undefined\" ? cancelIdleCallback : clearTimeout;\n      cancel((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _pendingFlush));\n    }\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateMethod)(this, _flush, flush_fn).call(this);\n    return;\n  }\n  if ((0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _pendingFlush)) return;\n  if (\"requestIdleCallback\" in window) {\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateSet)(this, _pendingFlush, requestIdleCallback(() => {\n      (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateMethod)(this, _flush, flush_fn).call(this);\n    }));\n  } else {\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateSet)(this, _pendingFlush, setTimeout(() => {\n      (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateMethod)(this, _flush, flush_fn).call(this);\n    }, 0));\n  }\n};\n_flush = new WeakSet();\nflush_fn = function () {\n  fetch(new URL(\"/v1/event\", (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _config).endpoint), {\n    method: \"POST\",\n    // TODO: We send an array here with that idea that we can eventually send multiple events.\n    body: JSON.stringify({\n      events: (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _buffer)\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).catch(() => void 0).then(() => {\n    (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateSet)(this, _buffer, []);\n  }).catch(() => void 0);\n};\n_logEvent = new WeakSet();\nlogEvent_fn = function (event, payload) {\n  if (!this.isDebug) {\n    return;\n  }\n  if (typeof console.groupCollapsed !== \"undefined\") {\n    console.groupCollapsed(\"[clerk/telemetry]\", event);\n    console.log(payload);\n    console.groupEnd();\n  } else {\n    console.log(\"[clerk/telemetry]\", event, payload);\n  }\n};\n_getSDKMetadata = new WeakSet();\ngetSDKMetadata_fn = function () {\n  let sdkMetadata = {\n    name: (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).sdk,\n    version: (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).sdkVersion\n  };\n  if (false) {}\n  return sdkMetadata;\n};\n_preparePayload = new WeakSet();\npreparePayload_fn = function (event, payload) {\n  var _a, _b;\n  const sdkMetadata = (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateMethod)(this, _getSDKMetadata, getSDKMetadata_fn).call(this);\n  return _objectSpread(_objectSpread(_objectSpread({\n    event,\n    cv: (_a = (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).clerkVersion) != null ? _a : \"\",\n    it: (_b = (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).instanceType) != null ? _b : \"\",\n    sdk: sdkMetadata.name,\n    sdkv: sdkMetadata.version\n  }, (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).publishableKey ? {\n    pk: (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).publishableKey\n  } : {}), (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).secretKey ? {\n    sk: (0,_chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_5__.__privateGet)(this, _metadata).secretKey\n  } : {}), {}, {\n    payload\n  });\n};\n\n// src/telemetry/events/component-mounted.ts\nvar EVENT_COMPONENT_MOUNTED = \"COMPONENT_MOUNTED\";\nvar EVENT_SAMPLING_RATE = 0.1;\nfunction eventComponentMounted(component, props) {\n  var _a, _b, _c;\n  return {\n    event: EVENT_COMPONENT_MOUNTED,\n    eventSamplingRate: EVENT_SAMPLING_RATE,\n    payload: {\n      component,\n      appearanceProp: Boolean(props == null ? void 0 : props.appearance),\n      baseTheme: Boolean((_a = props == null ? void 0 : props.appearance) == null ? void 0 : _a.baseTheme),\n      elements: Boolean((_b = props == null ? void 0 : props.appearance) == null ? void 0 : _b.elements),\n      variables: Boolean((_c = props == null ? void 0 : props.appearance) == null ? void 0 : _c.variables)\n    }\n  };\n}\n\n// src/telemetry/events/method-called.ts\nvar EVENT_METHOD_CALLED = \"METHOD_CALLED\";\nfunction eventMethodCalled(method, payload) {\n  return {\n    event: EVENT_METHOD_CALLED,\n    payload: _objectSpread({\n      method\n    }, payload)\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/telemetry.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/underscore.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/underscore.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelToSnake: () => (/* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_0__.camelToSnake),\n/* harmony export */   deepCamelToSnake: () => (/* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_0__.deepCamelToSnake),\n/* harmony export */   deepSnakeToCamel: () => (/* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_0__.deepSnakeToCamel),\n/* harmony export */   getNonUndefinedValues: () => (/* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_0__.getNonUndefinedValues),\n/* harmony export */   isIPV4Address: () => (/* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_0__.isIPV4Address),\n/* harmony export */   isTruthy: () => (/* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_0__.isTruthy),\n/* harmony export */   snakeToCamel: () => (/* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_0__.snakeToCamel),\n/* harmony export */   titleize: () => (/* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_0__.titleize),\n/* harmony export */   toSentence: () => (/* reexport safe */ _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_0__.toSentence)\n/* harmony export */ });\n/* harmony import */ var _chunk_E6T5KUVH_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-E6T5KUVH.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-E6T5KUVH.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC91bmRlcnNjb3JlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQVNZO0FBRWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdW5kZXJzY29yZS5tanM/MWNkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjYW1lbFRvU25ha2UsXG4gIGRlZXBDYW1lbFRvU25ha2UsXG4gIGRlZXBTbmFrZVRvQ2FtZWwsXG4gIGdldE5vblVuZGVmaW5lZFZhbHVlcyxcbiAgaXNJUFY0QWRkcmVzcyxcbiAgaXNUcnV0aHksXG4gIHNuYWtlVG9DYW1lbCxcbiAgdGl0bGVpemUsXG4gIHRvU2VudGVuY2Vcbn0gZnJvbSBcIi4vY2h1bmstRTZUNUtVVkgubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLVVWVkNXU1ZGLm1qc1wiO1xuZXhwb3J0IHtcbiAgY2FtZWxUb1NuYWtlLFxuICBkZWVwQ2FtZWxUb1NuYWtlLFxuICBkZWVwU25ha2VUb0NhbWVsLFxuICBnZXROb25VbmRlZmluZWRWYWx1ZXMsXG4gIGlzSVBWNEFkZHJlc3MsXG4gIGlzVHJ1dGh5LFxuICBzbmFrZVRvQ2FtZWwsXG4gIHRpdGxlaXplLFxuICB0b1NlbnRlbmNlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dW5kZXJzY29yZS5tanMubWFwIl0sIm5hbWVzIjpbImNhbWVsVG9TbmFrZSIsImRlZXBDYW1lbFRvU25ha2UiLCJkZWVwU25ha2VUb0NhbWVsIiwiZ2V0Tm9uVW5kZWZpbmVkVmFsdWVzIiwiaXNJUFY0QWRkcmVzcyIsImlzVHJ1dGh5Iiwic25ha2VUb0NhbWVsIiwidGl0bGVpemUiLCJ0b1NlbnRlbmNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/underscore.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/@clerk/shared/dist/url.mjs":
/*!*************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/url.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClerkPrefix: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.addClerkPrefix),\n/* harmony export */   cleanDoubleSlashes: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.cleanDoubleSlashes),\n/* harmony export */   getClerkJsMajorVersionOrTag: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.getClerkJsMajorVersionOrTag),\n/* harmony export */   getScriptUrl: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.getScriptUrl),\n/* harmony export */   hasLeadingSlash: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.hasLeadingSlash),\n/* harmony export */   hasTrailingSlash: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.hasTrailingSlash),\n/* harmony export */   isCurrentDevAccountPortalOrigin: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.isCurrentDevAccountPortalOrigin),\n/* harmony export */   isLegacyDevAccountPortalOrigin: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.isLegacyDevAccountPortalOrigin),\n/* harmony export */   isNonEmptyURL: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonEmptyURL),\n/* harmony export */   joinURL: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.joinURL),\n/* harmony export */   parseSearchParams: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.parseSearchParams),\n/* harmony export */   stripScheme: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.stripScheme),\n/* harmony export */   withLeadingSlash: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.withLeadingSlash),\n/* harmony export */   withTrailingSlash: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.withTrailingSlash),\n/* harmony export */   withoutLeadingSlash: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutLeadingSlash),\n/* harmony export */   withoutTrailingSlash: () => (/* reexport safe */ _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutTrailingSlash)\n/* harmony export */ });\n/* harmony import */ var _chunk_L45N5DM5_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-L45N5DM5.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-L45N5DM5.mjs\");\n/* harmony import */ var _chunk_X2FYR5U6_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-X2FYR5U6.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-X2FYR5U6.mjs\");\n/* harmony import */ var _chunk_UVVCWSVF_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-UVVCWSVF.mjs */ \"(middleware)/./node_modules/@clerk/shared/dist/chunk-UVVCWSVF.mjs\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC91cmwubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQnNCO0FBRVE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L3VybC5tanM/MzdiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBhZGRDbGVya1ByZWZpeCxcbiAgY2xlYW5Eb3VibGVTbGFzaGVzLFxuICBnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWcsXG4gIGdldFNjcmlwdFVybCxcbiAgaGFzTGVhZGluZ1NsYXNoLFxuICBoYXNUcmFpbGluZ1NsYXNoLFxuICBpc0N1cnJlbnREZXZBY2NvdW50UG9ydGFsT3JpZ2luLFxuICBpc0xlZ2FjeURldkFjY291bnRQb3J0YWxPcmlnaW4sXG4gIGlzTm9uRW1wdHlVUkwsXG4gIGpvaW5VUkwsXG4gIHBhcnNlU2VhcmNoUGFyYW1zLFxuICBzdHJpcFNjaGVtZSxcbiAgd2l0aExlYWRpbmdTbGFzaCxcbiAgd2l0aFRyYWlsaW5nU2xhc2gsXG4gIHdpdGhvdXRMZWFkaW5nU2xhc2gsXG4gIHdpdGhvdXRUcmFpbGluZ1NsYXNoXG59IGZyb20gXCIuL2NodW5rLUw0NU41RE01Lm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1YMkZZUjVVNi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstVVZWQ1dTVkYubWpzXCI7XG5leHBvcnQge1xuICBhZGRDbGVya1ByZWZpeCxcbiAgY2xlYW5Eb3VibGVTbGFzaGVzLFxuICBnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWcsXG4gIGdldFNjcmlwdFVybCxcbiAgaGFzTGVhZGluZ1NsYXNoLFxuICBoYXNUcmFpbGluZ1NsYXNoLFxuICBpc0N1cnJlbnREZXZBY2NvdW50UG9ydGFsT3JpZ2luLFxuICBpc0xlZ2FjeURldkFjY291bnRQb3J0YWxPcmlnaW4sXG4gIGlzTm9uRW1wdHlVUkwsXG4gIGpvaW5VUkwsXG4gIHBhcnNlU2VhcmNoUGFyYW1zLFxuICBzdHJpcFNjaGVtZSxcbiAgd2l0aExlYWRpbmdTbGFzaCxcbiAgd2l0aFRyYWlsaW5nU2xhc2gsXG4gIHdpdGhvdXRMZWFkaW5nU2xhc2gsXG4gIHdpdGhvdXRUcmFpbGluZ1NsYXNoXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJsLm1qcy5tYXAiXSwibmFtZXMiOlsiYWRkQ2xlcmtQcmVmaXgiLCJjbGVhbkRvdWJsZVNsYXNoZXMiLCJnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWciLCJnZXRTY3JpcHRVcmwiLCJoYXNMZWFkaW5nU2xhc2giLCJoYXNUcmFpbGluZ1NsYXNoIiwiaXNDdXJyZW50RGV2QWNjb3VudFBvcnRhbE9yaWdpbiIsImlzTGVnYWN5RGV2QWNjb3VudFBvcnRhbE9yaWdpbiIsImlzTm9uRW1wdHlVUkwiLCJqb2luVVJMIiwicGFyc2VTZWFyY2hQYXJhbXMiLCJzdHJpcFNjaGVtZSIsIndpdGhMZWFkaW5nU2xhc2giLCJ3aXRoVHJhaWxpbmdTbGFzaCIsIndpdGhvdXRMZWFkaW5nU2xhc2giLCJ3aXRob3V0VHJhaWxpbmdTbGFzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@clerk/shared/dist/url.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/tslib/tslib.es6.mjs":
/*!******************************************!*\
  !*** ./node_modules/tslib/tslib.es6.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __addDisposableResource: () => (/* binding */ __addDisposableResource),\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldIn: () => (/* binding */ __classPrivateFieldIn),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __disposeResources: () => (/* binding */ __disposeResources),\n/* harmony export */   __esDecorate: () => (/* binding */ __esDecorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __propKey: () => (/* binding */ __propKey),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __runInitializers: () => (/* binding */ __runInitializers),\n/* harmony export */   __setFunctionName: () => (/* binding */ __setFunctionName),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArray: () => (/* binding */ __spreadArray),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n}\nfunction __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n}\n;\nfunction __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n}\n;\nfunction __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n}\n;\nfunction __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", {\n    configurable: true,\n    value: prefix ? \"\".concat(prefix, \" \", name) : name\n  });\n}\n;\nfunction __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nfunction __generator(thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\nvar __createBinding = Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n};\nfunction __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n}\n\n/** @deprecated */\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n}\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n    i,\n    q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n}\nfunction __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) {\n    throw e;\n  }), verb(\"return\"), i[Symbol.iterator] = function () {\n    return this;\n  }, i;\n  function verb(n, f) {\n    i[n] = o[n] ? function (v) {\n      return (p = !p) ? {\n        value: __await(o[n](v)),\n        done: false\n      } : f ? f(v) : v;\n    } : f;\n  }\n}\nfunction __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n    i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n}\nfunction __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n  return cooked;\n}\n;\nvar __setModuleDefault = Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n};\nfunction __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\nfunction __importDefault(mod) {\n  return mod && mod.__esModule ? mod : {\n    default: mod\n  };\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || typeof receiver !== \"object\" && typeof receiver !== \"function\") throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\nfunction __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({\n      value: value,\n      dispose: dispose,\n      async: async\n    });\n  } else if (async) {\n    env.stack.push({\n      async: true\n    });\n  }\n  return value;\n}\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nfunction __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function (e) {\n          fail(e);\n          return next();\n        });\n      } catch (e) {\n        fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/tslib/tslib.es6.mjs\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/package.json":
/*!****************************************!*\
  !*** ./node_modules/next/package.json ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"name":"next","version":"14.2.3","description":"The React Framework","main":"./dist/server/next.js","license":"MIT","repository":"vercel/next.js","bugs":"https://github.com/vercel/next.js/issues","homepage":"https://nextjs.org","types":"index.d.ts","files":["dist","app.js","app.d.ts","babel.js","babel.d.ts","client.js","client.d.ts","compat","cache.js","cache.d.ts","config.js","config.d.ts","constants.js","constants.d.ts","document.js","document.d.ts","dynamic.js","dynamic.d.ts","error.js","error.d.ts","future","legacy","script.js","script.d.ts","server.js","server.d.ts","head.js","head.d.ts","image.js","image.d.ts","link.js","link.d.ts","router.js","router.d.ts","jest.js","jest.d.ts","amp.js","amp.d.ts","og.js","og.d.ts","index.d.ts","types/index.d.ts","types/global.d.ts","types/compiled.d.ts","image-types/global.d.ts","navigation-types/navigation.d.ts","navigation-types/compat/navigation.d.ts","font","navigation.js","navigation.d.ts","headers.js","headers.d.ts","navigation-types","web-vitals.js","web-vitals.d.ts","experimental/testmode/playwright.js","experimental/testmode/playwright.d.ts","experimental/testmode/playwright/msw.js","experimental/testmode/playwright/msw.d.ts","experimental/testmode/proxy.js","experimental/testmode/proxy.d.ts"],"bin":{"next":"./dist/bin/next"},"scripts":{"dev":"taskr","release":"taskr release","build":"pnpm release","prepublishOnly":"cd ../../ && turbo run build","types":"tsc --declaration --emitDeclarationOnly --stripInternal --declarationDir dist","typescript":"tsec --noEmit","ncc-compiled":"ncc cache clean && taskr ncc"},"taskr":{"requires":["./taskfile-webpack.js","./taskfile-ncc.js","./taskfile-swc.js","./taskfile-watch.js"]},"dependencies":{"@next/env":"14.2.3","@swc/helpers":"0.5.5","busboy":"1.6.0","caniuse-lite":"^1.0.30001579","graceful-fs":"^4.2.11","postcss":"8.4.31","styled-jsx":"5.1.1"},"peerDependencies":{"@opentelemetry/api":"^1.1.0","@playwright/test":"^1.41.2","react":"^18.2.0","react-dom":"^18.2.0","sass":"^1.3.0"},"peerDependenciesMeta":{"sass":{"optional":true},"@opentelemetry/api":{"optional":true},"@playwright/test":{"optional":true}},"devDependencies":{"@ampproject/toolbox-optimizer":"2.8.3","@babel/code-frame":"7.22.5","@babel/core":"7.22.5","@babel/eslint-parser":"7.22.5","@babel/generator":"7.22.5","@babel/plugin-proposal-class-properties":"7.18.6","@babel/plugin-proposal-export-namespace-from":"7.18.9","@babel/plugin-proposal-numeric-separator":"7.18.6","@babel/plugin-proposal-object-rest-spread":"7.20.7","@babel/plugin-syntax-bigint":"7.8.3","@babel/plugin-syntax-dynamic-import":"7.8.3","@babel/plugin-syntax-import-assertions":"7.22.5","@babel/plugin-syntax-jsx":"7.22.5","@babel/plugin-transform-modules-commonjs":"7.22.5","@babel/plugin-transform-runtime":"7.22.5","@babel/preset-env":"7.22.5","@babel/preset-react":"7.22.5","@babel/preset-typescript":"7.22.5","@babel/runtime":"7.22.5","@babel/traverse":"7.22.5","@babel/types":"7.22.5","@capsizecss/metrics":"2.2.0","@edge-runtime/cookies":"4.1.1","@edge-runtime/ponyfill":"2.4.2","@edge-runtime/primitives":"4.1.0","@hapi/accept":"5.0.2","@jest/transform":"29.5.0","@jest/types":"29.5.0","@mswjs/interceptors":"0.23.0","@napi-rs/triples":"1.2.0","@next/polyfill-module":"14.2.3","@next/polyfill-nomodule":"14.2.3","@next/react-refresh-utils":"14.2.3","@next/swc":"14.2.3","@opentelemetry/api":"1.6.0","@playwright/test":"1.41.2","@taskr/clear":"1.1.0","@taskr/esnext":"1.1.0","@types/amphtml-validator":"1.0.0","@types/babel__code-frame":"7.0.2","@types/babel__core":"7.1.12","@types/babel__generator":"7.6.2","@types/babel__template":"7.4.0","@types/babel__traverse":"7.11.0","@types/bytes":"3.1.1","@types/ci-info":"2.0.0","@types/compression":"0.0.36","@types/content-disposition":"0.5.4","@types/content-type":"1.1.3","@types/cookie":"0.3.3","@types/cross-spawn":"6.0.0","@types/debug":"4.1.5","@types/express-serve-static-core":"4.17.33","@types/fresh":"0.5.0","@types/glob":"7.1.1","@types/graceful-fs":"4.1.9","@types/jsonwebtoken":"9.0.0","@types/lodash":"4.14.198","@types/lodash.curry":"4.1.6","@types/lru-cache":"5.1.0","@types/path-to-regexp":"1.7.0","@types/picomatch":"2.3.3","@types/platform":"1.3.4","@types/react":"18.2.37","@types/react-dom":"18.2.15","@types/react-is":"17.0.3","@types/semver":"7.3.1","@types/send":"0.14.4","@types/shell-quote":"1.7.1","@types/tar":"6.1.5","@types/text-table":"0.2.1","@types/ua-parser-js":"0.7.36","@types/uuid":"8.3.1","@types/webpack-sources1":"npm:@types/webpack-sources@0.1.5","@types/ws":"8.2.0","@vercel/ncc":"0.34.0","@vercel/nft":"0.26.4","@vercel/turbopack-ecmascript-runtime":"https://gitpkg-fork.vercel.sh/vercel/turbo/crates/turbopack-ecmascript-runtime/js?turbopack-240417.2","acorn":"8.5.0","amphtml-validator":"1.0.35","anser":"1.4.9","arg":"4.1.0","assert":"2.0.0","async-retry":"1.2.3","async-sema":"3.0.0","babel-plugin-transform-define":"2.0.0","babel-plugin-transform-react-remove-prop-types":"0.4.24","browserify-zlib":"0.2.0","browserslist":"4.22.2","buffer":"5.6.0","bytes":"3.1.1","ci-info":"watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540","cli-select":"1.1.2","client-only":"0.0.1","commander":"12.0.0","comment-json":"3.0.3","compression":"1.7.4","conf":"5.0.0","constants-browserify":"1.0.0","content-disposition":"0.5.3","content-type":"1.0.4","cookie":"0.4.1","cross-spawn":"7.0.3","crypto-browserify":"3.12.0","css.escape":"1.5.1","cssnano-preset-default":"5.2.14","data-uri-to-buffer":"3.0.1","debug":"4.1.1","devalue":"2.0.1","domain-browser":"4.19.0","edge-runtime":"2.5.4","events":"3.3.0","find-up":"4.1.0","fresh":"0.5.2","get-orientation":"1.1.2","glob":"7.1.7","gzip-size":"5.1.1","http-proxy":"1.18.1","http-proxy-agent":"5.0.0","https-browserify":"1.0.0","https-proxy-agent":"5.0.1","icss-utils":"5.1.0","ignore-loader":"0.1.2","image-size":"1.0.0","is-docker":"2.0.0","is-wsl":"2.2.0","jest-worker":"27.5.1","json5":"2.2.3","jsonwebtoken":"9.0.0","loader-runner":"4.3.0","loader-utils2":"npm:loader-utils@2.0.0","loader-utils3":"npm:loader-utils@3.1.3","lodash.curry":"4.1.1","lru-cache":"5.1.1","mini-css-extract-plugin":"2.4.4","msw":"1.3.0","nanoid":"3.1.32","native-url":"0.3.4","neo-async":"2.6.1","node-html-parser":"5.3.3","ora":"4.0.4","os-browserify":"0.3.0","p-limit":"3.1.0","path-browserify":"1.0.1","path-to-regexp":"6.1.0","picomatch":"4.0.1","platform":"1.3.6","postcss-flexbugs-fixes":"5.0.2","postcss-modules-extract-imports":"3.0.0","postcss-modules-local-by-default":"4.0.4","postcss-modules-scope":"3.0.0","postcss-modules-values":"4.0.0","postcss-preset-env":"7.4.3","postcss-safe-parser":"6.0.0","postcss-scss":"4.0.3","postcss-value-parser":"4.2.0","process":"0.11.10","punycode":"2.1.1","querystring-es3":"0.2.1","raw-body":"2.4.1","react-is":"18.2.0","react-refresh":"0.12.0","regenerator-runtime":"0.13.4","sass-loader":"12.4.0","schema-utils2":"npm:schema-utils@2.7.1","schema-utils3":"npm:schema-utils@3.0.0","semver":"7.3.2","send":"0.17.1","server-only":"0.0.1","setimmediate":"1.0.5","shell-quote":"1.7.3","source-map":"0.6.1","source-map08":"npm:source-map@0.8.0-beta.0","stacktrace-parser":"0.1.10","stream-browserify":"3.0.0","stream-http":"3.1.1","strict-event-emitter":"0.5.0","string-hash":"1.1.3","string_decoder":"1.3.0","strip-ansi":"6.0.0","superstruct":"1.0.3","tar":"6.1.15","taskr":"1.1.0","terser":"5.27.0","terser-webpack-plugin":"5.3.9","text-table":"0.2.0","timers-browserify":"2.0.12","tty-browserify":"0.0.1","ua-parser-js":"1.0.35","unistore":"3.4.1","util":"0.12.4","uuid":"8.3.2","vm-browserify":"1.1.2","watchpack":"2.4.0","web-vitals":"3.0.0","webpack":"5.90.0","webpack-sources1":"npm:webpack-sources@1.4.3","webpack-sources3":"npm:webpack-sources@3.2.3","ws":"8.2.3","zod":"3.22.3"},"engines":{"node":">=18.17.0"},"optionalDependencies":{"@next/swc-darwin-arm64":"14.2.3","@next/swc-darwin-x64":"14.2.3","@next/swc-linux-arm64-gnu":"14.2.3","@next/swc-linux-arm64-musl":"14.2.3","@next/swc-linux-x64-gnu":"14.2.3","@next/swc-linux-x64-musl":"14.2.3","@next/swc-win32-arm64-msvc":"14.2.3","@next/swc-win32-ia32-msvc":"14.2.3","@next/swc-win32-x64-msvc":"14.2.3"}}');

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CTihomir%5CDesktop%5Cvachev%5CVachev-NextjsTest%5Cmiddleware.ts&page=%2Fmiddleware&rootDir=C%3A%5CUsers%5CTihomir%5CDesktop%5Cvachev%5CVachev-NextjsTest&matchers=&preferredRegion=&middlewareConfig=e30%3D!"));
/******/ (_ENTRIES = typeof _ENTRIES === "undefined" ? {} : _ENTRIES).middleware_middleware = __webpack_exports__;
/******/ }
]);